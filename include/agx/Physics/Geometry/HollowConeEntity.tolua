/*
Copyright 2007-2023. Algoryx Simulation AB.

All AGX source code, intellectual property, documentation, sample code,
tutorials, scene files and technical white papers, are copyrighted, proprietary
and confidential material of Algoryx Simulation AB. You may not download, read,
store, distribute, publish, copy or otherwise disseminate, use or expose this
material unless having a written signed agreement with Algoryx Simulation AB, or
having been advised so by Algoryx Simulation AB for a time limited evaluation,
or having purchased a valid commercial license from Algoryx Simulation AB.

Algoryx Simulation AB disclaims all responsibilities for loss or damage caused
from using this software, unless otherwise stated in written agreements with
Algoryx Simulation AB.
*/

//////////////////////////////////////////////////
// AUTOMATICALLY GENERATED ENTITY, DO NOT EDIT! //
//////////////////////////////////////////////////

$#define AGX_GENERATED_TOLUA_WRAPPER
$#include <agx/Physics/Geometry/HollowConeEntity.h>
$ifile "../../../../LuaPlugins/plugins/agx/tolua/agx/Math.tolua"

namespace agx
{
  namespace Physics
  {
    namespace Geometry
    {
      class HollowConePtr : public agx::Physics::Geometry::ShapePtr
      {
      public:

        HollowConePtr(agxData::EntityStorage *storage, size_t id);
        agx::Real getHeight();
        agx::Real getTopRadius();
        agx::Real getBottomRadius();
        agx::Real getThickness();


        void setHeight(agx::Real value);
        void setTopRadius(agx::Real value);
        void setBottomRadius(agx::Real value);
        void setThickness(agx::Real value);
      };


      class HollowConePtrVector {
        HollowConePtrVector();
        void push_back(HollowConePtr);
        void clear();
        HollowConePtr at( unsigned int ) const;
        HollowConePtr front() const;
        HollowConePtr back() const;
        unsigned int size() const;
        bool empty() const;
      };


      class HollowConePtrArray {
        HollowConePtrArray();
        HollowConePtr at( unsigned int ) const;
        HollowConePtr front() const;
        HollowConePtr back() const;
        unsigned int size() const;
        bool empty() const;
      };

    }
  }
}

