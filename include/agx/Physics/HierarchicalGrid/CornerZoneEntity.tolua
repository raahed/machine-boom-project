/*
Copyright 2007-2023. Algoryx Simulation AB.

All AGX source code, intellectual property, documentation, sample code,
tutorials, scene files and technical white papers, are copyrighted, proprietary
and confidential material of Algoryx Simulation AB. You may not download, read,
store, distribute, publish, copy or otherwise disseminate, use or expose this
material unless having a written signed agreement with Algoryx Simulation AB, or
having been advised so by Algoryx Simulation AB for a time limited evaluation,
or having purchased a valid commercial license from Algoryx Simulation AB.

Algoryx Simulation AB disclaims all responsibilities for loss or damage caused
from using this software, unless otherwise stated in written agreements with
Algoryx Simulation AB.
*/

//////////////////////////////////////////////////
// AUTOMATICALLY GENERATED ENTITY, DO NOT EDIT! //
//////////////////////////////////////////////////

$#define AGX_GENERATED_TOLUA_WRAPPER
$#include <agx/Physics/HierarchicalGrid/CornerZoneEntity.h>
$ifile "../../../../LuaPlugins/plugins/agx/tolua/agx/Math.tolua"

namespace agx
{
  namespace Physics
  {
    namespace HierarchicalGrid
    {
      class CornerZonePtr : public agxData::EntityPtr
      {
      public:

        CornerZonePtr(agxData::EntityStorage *storage, size_t id);
        agx::Vec3i getId();
        agx::Physics::HierarchicalGrid::ContactZonePtr getDiagonal1();
        agx::Physics::HierarchicalGrid::ContactZonePtr getDiagonal2();
        agxData::Array< agx::UInt32 > getParticleParticleContacts();
        agxData::Array< agx::UInt32 > getParticleGeometryContacts();
        agxData::Array< agx::UInt32 > getGeometryGeometryContacts();
        agx::Job* getJob();


        void setId(agx::Vec3i value);
        void setDiagonal1(agx::Physics::HierarchicalGrid::ContactZonePtr value);
        void setDiagonal2(agx::Physics::HierarchicalGrid::ContactZonePtr value);
        void setParticleParticleContacts(agxData::Array< agx::UInt32 > value);
        void setParticleGeometryContacts(agxData::Array< agx::UInt32 > value);
        void setGeometryGeometryContacts(agxData::Array< agx::UInt32 > value);
        void setJob(agx::Job* value);
      };


      class CornerZonePtrVector {
        CornerZonePtrVector();
        void push_back(CornerZonePtr);
        void clear();
        CornerZonePtr at( unsigned int ) const;
        CornerZonePtr front() const;
        CornerZonePtr back() const;
        unsigned int size() const;
        bool empty() const;
      };


      class CornerZonePtrArray {
        CornerZonePtrArray();
        CornerZonePtr at( unsigned int ) const;
        CornerZonePtr front() const;
        CornerZonePtr back() const;
        unsigned int size() const;
        bool empty() const;
      };

    }
  }
}

