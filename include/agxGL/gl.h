/**
 * Loader generated by glad 2.0.0-beta on Wed Jun  9 12:42:16 2021
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 615
 *
 * APIs:
 *  - gl:compatibility=4.6
 *
 * Options:
 *  - ALIAS = False
 *  - DEBUG = False
 *  - HEADER_ONLY = True
 *  - LOADER = False
 *  - MX = False
 *  - MX_GLOBAL = False
 *  - ON_DEMAND = False
 *
 * Commandline:
 *    --api='gl:compatibility=4.6' --extensions='GL_3DFX_multisample,GL_3DFX_tbuffer,GL_3DFX_texture_compression_FXT1,GL_AMD_blend_minmax_factor,GL_AMD_conservative_depth,GL_AMD_debug_output,GL_AMD_depth_clamp_separate,GL_AMD_draw_buffers_blend,GL_AMD_framebuffer_multisample_advanced,GL_AMD_framebuffer_sample_positions,GL_AMD_gcn_shader,GL_AMD_gpu_shader_half_float,GL_AMD_gpu_shader_int16,GL_AMD_gpu_shader_int64,GL_AMD_interleaved_elements,GL_AMD_multi_draw_indirect,GL_AMD_name_gen_delete,GL_AMD_occlusion_query_event,GL_AMD_performance_monitor,GL_AMD_pinned_memory,GL_AMD_query_buffer_object,GL_AMD_sample_positions,GL_AMD_seamless_cubemap_per_texture,GL_AMD_shader_atomic_counter_ops,GL_AMD_shader_ballot,GL_AMD_shader_explicit_vertex_parameter,GL_AMD_shader_gpu_shader_half_float_fetch,GL_AMD_shader_image_load_store_lod,GL_AMD_shader_stencil_export,GL_AMD_shader_trinary_minmax,GL_AMD_sparse_texture,GL_AMD_stencil_operation_extended,GL_AMD_texture_gather_bias_lod,GL_AMD_texture_texture4,GL_AMD_transform_feedback3_lines_triangles,GL_AMD_transform_feedback4,GL_AMD_vertex_shader_layer,GL_AMD_vertex_shader_tessellator,GL_AMD_vertex_shader_viewport_index,GL_APPLE_aux_depth_stencil,GL_APPLE_client_storage,GL_APPLE_element_array,GL_APPLE_fence,GL_APPLE_float_pixels,GL_APPLE_flush_buffer_range,GL_APPLE_object_purgeable,GL_APPLE_rgb_422,GL_APPLE_row_bytes,GL_APPLE_specular_vector,GL_APPLE_texture_range,GL_APPLE_transform_hint,GL_APPLE_vertex_array_object,GL_APPLE_vertex_array_range,GL_APPLE_vertex_program_evaluators,GL_APPLE_ycbcr_422,GL_ARB_ES2_compatibility,GL_ARB_ES3_1_compatibility,GL_ARB_ES3_2_compatibility,GL_ARB_ES3_compatibility,GL_ARB_arrays_of_arrays,GL_ARB_base_instance,GL_ARB_bindless_texture,GL_ARB_blend_func_extended,GL_ARB_buffer_storage,GL_ARB_cl_event,GL_ARB_clear_buffer_object,GL_ARB_clear_texture,GL_ARB_clip_control,GL_ARB_color_buffer_float,GL_ARB_compatibility,GL_ARB_compressed_texture_pixel_storage,GL_ARB_compute_shader,GL_ARB_compute_variable_group_size,GL_ARB_conditional_render_inverted,GL_ARB_conservative_depth,GL_ARB_copy_buffer,GL_ARB_copy_image,GL_ARB_cull_distance,GL_ARB_debug_output,GL_ARB_depth_buffer_float,GL_ARB_depth_clamp,GL_ARB_depth_texture,GL_ARB_derivative_control,GL_ARB_direct_state_access,GL_ARB_draw_buffers,GL_ARB_draw_buffers_blend,GL_ARB_draw_elements_base_vertex,GL_ARB_draw_indirect,GL_ARB_draw_instanced,GL_ARB_enhanced_layouts,GL_ARB_explicit_attrib_location,GL_ARB_explicit_uniform_location,GL_ARB_fragment_coord_conventions,GL_ARB_fragment_layer_viewport,GL_ARB_fragment_program,GL_ARB_fragment_program_shadow,GL_ARB_fragment_shader,GL_ARB_fragment_shader_interlock,GL_ARB_framebuffer_no_attachments,GL_ARB_framebuffer_object,GL_ARB_framebuffer_sRGB,GL_ARB_geometry_shader4,GL_ARB_get_program_binary,GL_ARB_get_texture_sub_image,GL_ARB_gl_spirv,GL_ARB_gpu_shader5,GL_ARB_gpu_shader_fp64,GL_ARB_gpu_shader_int64,GL_ARB_half_float_pixel,GL_ARB_half_float_vertex,GL_ARB_imaging,GL_ARB_indirect_parameters,GL_ARB_instanced_arrays,GL_ARB_internalformat_query,GL_ARB_internalformat_query2,GL_ARB_invalidate_subdata,GL_ARB_map_buffer_alignment,GL_ARB_map_buffer_range,GL_ARB_matrix_palette,GL_ARB_multi_bind,GL_ARB_multi_draw_indirect,GL_ARB_multisample,GL_ARB_multitexture,GL_ARB_occlusion_query,GL_ARB_occlusion_query2,GL_ARB_parallel_shader_compile,GL_ARB_pipeline_statistics_query,GL_ARB_pixel_buffer_object,GL_ARB_point_parameters,GL_ARB_point_sprite,GL_ARB_polygon_offset_clamp,GL_ARB_post_depth_coverage,GL_ARB_program_interface_query,GL_ARB_provoking_vertex,GL_ARB_query_buffer_object,GL_ARB_robust_buffer_access_behavior,GL_ARB_robustness,GL_ARB_robustness_isolation,GL_ARB_sample_locations,GL_ARB_sample_shading,GL_ARB_sampler_objects,GL_ARB_seamless_cube_map,GL_ARB_seamless_cubemap_per_texture,GL_ARB_separate_shader_objects,GL_ARB_shader_atomic_counter_ops,GL_ARB_shader_atomic_counters,GL_ARB_shader_ballot,GL_ARB_shader_bit_encoding,GL_ARB_shader_clock,GL_ARB_shader_draw_parameters,GL_ARB_shader_group_vote,GL_ARB_shader_image_load_store,GL_ARB_shader_image_size,GL_ARB_shader_objects,GL_ARB_shader_precision,GL_ARB_shader_stencil_export,GL_ARB_shader_storage_buffer_object,GL_ARB_shader_subroutine,GL_ARB_shader_texture_image_samples,GL_ARB_shader_texture_lod,GL_ARB_shader_viewport_layer_array,GL_ARB_shading_language_100,GL_ARB_shading_language_420pack,GL_ARB_shading_language_include,GL_ARB_shading_language_packing,GL_ARB_shadow,GL_ARB_shadow_ambient,GL_ARB_sparse_buffer,GL_ARB_sparse_texture,GL_ARB_sparse_texture2,GL_ARB_sparse_texture_clamp,GL_ARB_spirv_extensions,GL_ARB_stencil_texturing,GL_ARB_sync,GL_ARB_tessellation_shader,GL_ARB_texture_barrier,GL_ARB_texture_border_clamp,GL_ARB_texture_buffer_object,GL_ARB_texture_buffer_object_rgb32,GL_ARB_texture_buffer_range,GL_ARB_texture_compression,GL_ARB_texture_compression_bptc,GL_ARB_texture_compression_rgtc,GL_ARB_texture_cube_map,GL_ARB_texture_cube_map_array,GL_ARB_texture_env_add,GL_ARB_texture_env_combine,GL_ARB_texture_env_crossbar,GL_ARB_texture_env_dot3,GL_ARB_texture_filter_anisotropic,GL_ARB_texture_filter_minmax,GL_ARB_texture_float,GL_ARB_texture_gather,GL_ARB_texture_mirror_clamp_to_edge,GL_ARB_texture_mirrored_repeat,GL_ARB_texture_multisample,GL_ARB_texture_non_power_of_two,GL_ARB_texture_query_levels,GL_ARB_texture_query_lod,GL_ARB_texture_rectangle,GL_ARB_texture_rg,GL_ARB_texture_rgb10_a2ui,GL_ARB_texture_stencil8,GL_ARB_texture_storage,GL_ARB_texture_storage_multisample,GL_ARB_texture_swizzle,GL_ARB_texture_view,GL_ARB_timer_query,GL_ARB_transform_feedback2,GL_ARB_transform_feedback3,GL_ARB_transform_feedback_instanced,GL_ARB_transform_feedback_overflow_query,GL_ARB_transpose_matrix,GL_ARB_uniform_buffer_object,GL_ARB_vertex_array_bgra,GL_ARB_vertex_array_object,GL_ARB_vertex_attrib_64bit,GL_ARB_vertex_attrib_binding,GL_ARB_vertex_blend,GL_ARB_vertex_buffer_object,GL_ARB_vertex_program,GL_ARB_vertex_shader,GL_ARB_vertex_type_10f_11f_11f_rev,GL_ARB_vertex_type_2_10_10_10_rev,GL_ARB_viewport_array,GL_ARB_window_pos,GL_ATI_draw_buffers,GL_ATI_element_array,GL_ATI_envmap_bumpmap,GL_ATI_fragment_shader,GL_ATI_map_object_buffer,GL_ATI_meminfo,GL_ATI_pixel_format_float,GL_ATI_pn_triangles,GL_ATI_separate_stencil,GL_ATI_text_fragment_shader,GL_ATI_texture_env_combine3,GL_ATI_texture_float,GL_ATI_texture_mirror_once,GL_ATI_vertex_array_object,GL_ATI_vertex_attrib_array_object,GL_ATI_vertex_streams,GL_EXT_422_pixels,GL_EXT_EGL_image_storage,GL_EXT_EGL_sync,GL_EXT_abgr,GL_EXT_bgra,GL_EXT_bindable_uniform,GL_EXT_blend_color,GL_EXT_blend_equation_separate,GL_EXT_blend_func_separate,GL_EXT_blend_logic_op,GL_EXT_blend_minmax,GL_EXT_blend_subtract,GL_EXT_clip_volume_hint,GL_EXT_cmyka,GL_EXT_color_subtable,GL_EXT_compiled_vertex_array,GL_EXT_convolution,GL_EXT_coordinate_frame,GL_EXT_copy_texture,GL_EXT_cull_vertex,GL_EXT_debug_label,GL_EXT_debug_marker,GL_EXT_depth_bounds_test,GL_EXT_direct_state_access,GL_EXT_draw_buffers2,GL_EXT_draw_instanced,GL_EXT_draw_range_elements,GL_EXT_external_buffer,GL_EXT_fog_coord,GL_EXT_framebuffer_blit,GL_EXT_framebuffer_multisample,GL_EXT_framebuffer_multisample_blit_scaled,GL_EXT_framebuffer_object,GL_EXT_framebuffer_sRGB,GL_EXT_geometry_shader4,GL_EXT_gpu_program_parameters,GL_EXT_gpu_shader4,GL_EXT_histogram,GL_EXT_index_array_formats,GL_EXT_index_func,GL_EXT_index_material,GL_EXT_index_texture,GL_EXT_light_texture,GL_EXT_memory_object,GL_EXT_memory_object_fd,GL_EXT_memory_object_win32,GL_EXT_misc_attribute,GL_EXT_multi_draw_arrays,GL_EXT_multisample,GL_EXT_multiview_tessellation_geometry_shader,GL_EXT_multiview_texture_multisample,GL_EXT_multiview_timer_query,GL_EXT_packed_depth_stencil,GL_EXT_packed_float,GL_EXT_packed_pixels,GL_EXT_paletted_texture,GL_EXT_pixel_buffer_object,GL_EXT_pixel_transform,GL_EXT_pixel_transform_color_table,GL_EXT_point_parameters,GL_EXT_polygon_offset,GL_EXT_polygon_offset_clamp,GL_EXT_post_depth_coverage,GL_EXT_provoking_vertex,GL_EXT_raster_multisample,GL_EXT_rescale_normal,GL_EXT_secondary_color,GL_EXT_semaphore,GL_EXT_semaphore_fd,GL_EXT_semaphore_win32,GL_EXT_separate_shader_objects,GL_EXT_separate_specular_color,GL_EXT_shader_framebuffer_fetch,GL_EXT_shader_framebuffer_fetch_non_coherent,GL_EXT_shader_image_load_formatted,GL_EXT_shader_image_load_store,GL_EXT_shader_integer_mix,GL_EXT_shadow_funcs,GL_EXT_shared_texture_palette,GL_EXT_sparse_texture2,GL_EXT_stencil_clear_tag,GL_EXT_stencil_two_side,GL_EXT_stencil_wrap,GL_EXT_subtexture,GL_EXT_texture,GL_EXT_texture3D,GL_EXT_texture_array,GL_EXT_texture_buffer_object,GL_EXT_texture_compression_latc,GL_EXT_texture_compression_rgtc,GL_EXT_texture_compression_s3tc,GL_EXT_texture_cube_map,GL_EXT_texture_env_add,GL_EXT_texture_env_combine,GL_EXT_texture_env_dot3,GL_EXT_texture_filter_anisotropic,GL_EXT_texture_filter_minmax,GL_EXT_texture_integer,GL_EXT_texture_lod_bias,GL_EXT_texture_mirror_clamp,GL_EXT_texture_object,GL_EXT_texture_perturb_normal,GL_EXT_texture_sRGB,GL_EXT_texture_sRGB_R8,GL_EXT_texture_sRGB_RG8,GL_EXT_texture_sRGB_decode,GL_EXT_texture_shadow_lod,GL_EXT_texture_shared_exponent,GL_EXT_texture_snorm,GL_EXT_texture_swizzle,GL_EXT_timer_query,GL_EXT_transform_feedback,GL_EXT_vertex_array,GL_EXT_vertex_array_bgra,GL_EXT_vertex_attrib_64bit,GL_EXT_vertex_shader,GL_EXT_vertex_weighting,GL_EXT_win32_keyed_mutex,GL_EXT_window_rectangles,GL_EXT_x11_sync_object,GL_GREMEDY_frame_terminator,GL_GREMEDY_string_marker,GL_HP_convolution_border_modes,GL_HP_image_transform,GL_HP_occlusion_test,GL_HP_texture_lighting,GL_IBM_cull_vertex,GL_IBM_multimode_draw_arrays,GL_IBM_rasterpos_clip,GL_IBM_static_data,GL_IBM_texture_mirrored_repeat,GL_IBM_vertex_array_lists,GL_INGR_blend_func_separate,GL_INGR_color_clamp,GL_INGR_interlace_read,GL_INTEL_blackhole_render,GL_INTEL_conservative_rasterization,GL_INTEL_fragment_shader_ordering,GL_INTEL_framebuffer_CMAA,GL_INTEL_map_texture,GL_INTEL_parallel_arrays,GL_INTEL_performance_query,GL_KHR_blend_equation_advanced,GL_KHR_blend_equation_advanced_coherent,GL_KHR_context_flush_control,GL_KHR_debug,GL_KHR_no_error,GL_KHR_parallel_shader_compile,GL_KHR_robust_buffer_access_behavior,GL_KHR_robustness,GL_KHR_shader_subgroup,GL_KHR_texture_compression_astc_hdr,GL_KHR_texture_compression_astc_ldr,GL_KHR_texture_compression_astc_sliced_3d,GL_MESAX_texture_stack,GL_MESA_framebuffer_flip_x,GL_MESA_framebuffer_flip_y,GL_MESA_framebuffer_swap_xy,GL_MESA_pack_invert,GL_MESA_program_binary_formats,GL_MESA_resize_buffers,GL_MESA_shader_integer_functions,GL_MESA_tile_raster_order,GL_MESA_window_pos,GL_MESA_ycbcr_texture,GL_NVX_blend_equation_advanced_multi_draw_buffers,GL_NVX_conditional_render,GL_NVX_gpu_memory_info,GL_NVX_gpu_multicast2,GL_NVX_linked_gpu_multicast,GL_NVX_progress_fence,GL_NV_alpha_to_coverage_dither_control,GL_NV_bindless_multi_draw_indirect,GL_NV_bindless_multi_draw_indirect_count,GL_NV_bindless_texture,GL_NV_blend_equation_advanced,GL_NV_blend_equation_advanced_coherent,GL_NV_blend_minmax_factor,GL_NV_blend_square,GL_NV_clip_space_w_scaling,GL_NV_command_list,GL_NV_compute_program5,GL_NV_compute_shader_derivatives,GL_NV_conditional_render,GL_NV_conservative_raster,GL_NV_conservative_raster_dilate,GL_NV_conservative_raster_pre_snap,GL_NV_conservative_raster_pre_snap_triangles,GL_NV_conservative_raster_underestimation,GL_NV_copy_depth_to_color,GL_NV_copy_image,GL_NV_deep_texture3D,GL_NV_depth_buffer_float,GL_NV_depth_clamp,GL_NV_draw_texture,GL_NV_draw_vulkan_image,GL_NV_evaluators,GL_NV_explicit_multisample,GL_NV_fence,GL_NV_fill_rectangle,GL_NV_float_buffer,GL_NV_fog_distance,GL_NV_fragment_coverage_to_color,GL_NV_fragment_program,GL_NV_fragment_program2,GL_NV_fragment_program4,GL_NV_fragment_program_option,GL_NV_fragment_shader_barycentric,GL_NV_fragment_shader_interlock,GL_NV_framebuffer_mixed_samples,GL_NV_framebuffer_multisample_coverage,GL_NV_geometry_program4,GL_NV_geometry_shader4,GL_NV_geometry_shader_passthrough,GL_NV_gpu_multicast,GL_NV_gpu_program4,GL_NV_gpu_program5,GL_NV_gpu_program5_mem_extended,GL_NV_gpu_shader5,GL_NV_half_float,GL_NV_internalformat_sample_query,GL_NV_light_max_exponent,GL_NV_memory_attachment,GL_NV_memory_object_sparse,GL_NV_mesh_shader,GL_NV_multisample_coverage,GL_NV_multisample_filter_hint,GL_NV_occlusion_query,GL_NV_packed_depth_stencil,GL_NV_parameter_buffer_object,GL_NV_parameter_buffer_object2,GL_NV_path_rendering,GL_NV_path_rendering_shared_edge,GL_NV_pixel_data_range,GL_NV_point_sprite,GL_NV_present_video,GL_NV_primitive_restart,GL_NV_primitive_shading_rate,GL_NV_query_resource,GL_NV_query_resource_tag,GL_NV_register_combiners,GL_NV_register_combiners2,GL_NV_representative_fragment_test,GL_NV_robustness_video_memory_purge,GL_NV_sample_locations,GL_NV_sample_mask_override_coverage,GL_NV_scissor_exclusive,GL_NV_shader_atomic_counters,GL_NV_shader_atomic_float,GL_NV_shader_atomic_float64,GL_NV_shader_atomic_fp16_vector,GL_NV_shader_atomic_int64,GL_NV_shader_buffer_load,GL_NV_shader_buffer_store,GL_NV_shader_storage_buffer_object,GL_NV_shader_subgroup_partitioned,GL_NV_shader_texture_footprint,GL_NV_shader_thread_group,GL_NV_shader_thread_shuffle,GL_NV_shading_rate_image,GL_NV_stereo_view_rendering,GL_NV_tessellation_program5,GL_NV_texgen_emboss,GL_NV_texgen_reflection,GL_NV_texture_barrier,GL_NV_texture_compression_vtc,GL_NV_texture_env_combine4,GL_NV_texture_expand_normal,GL_NV_texture_multisample,GL_NV_texture_rectangle,GL_NV_texture_rectangle_compressed,GL_NV_texture_shader,GL_NV_texture_shader2,GL_NV_texture_shader3,GL_NV_timeline_semaphore,GL_NV_transform_feedback,GL_NV_transform_feedback2,GL_NV_uniform_buffer_unified_memory,GL_NV_vdpau_interop,GL_NV_vdpau_interop2,GL_NV_vertex_array_range,GL_NV_vertex_array_range2,GL_NV_vertex_attrib_integer_64bit,GL_NV_vertex_buffer_unified_memory,GL_NV_vertex_program,GL_NV_vertex_program1_1,GL_NV_vertex_program2,GL_NV_vertex_program2_option,GL_NV_vertex_program3,GL_NV_vertex_program4,GL_NV_video_capture,GL_NV_viewport_array2,GL_NV_viewport_swizzle,GL_OES_byte_coordinates,GL_OES_compressed_paletted_texture,GL_OES_fixed_point,GL_OES_query_matrix,GL_OES_read_format,GL_OES_single_precision,GL_OML_interlace,GL_OML_resample,GL_OML_subsample,GL_OVR_multiview,GL_OVR_multiview2,GL_PGI_misc_hints,GL_PGI_vertex_hints,GL_REND_screen_coordinates,GL_S3_s3tc,GL_SGIS_detail_texture,GL_SGIS_fog_function,GL_SGIS_generate_mipmap,GL_SGIS_multisample,GL_SGIS_pixel_texture,GL_SGIS_point_line_texgen,GL_SGIS_point_parameters,GL_SGIS_sharpen_texture,GL_SGIS_texture4D,GL_SGIS_texture_border_clamp,GL_SGIS_texture_color_mask,GL_SGIS_texture_edge_clamp,GL_SGIS_texture_filter4,GL_SGIS_texture_lod,GL_SGIS_texture_select,GL_SGIX_async,GL_SGIX_async_histogram,GL_SGIX_async_pixel,GL_SGIX_blend_alpha_minmax,GL_SGIX_calligraphic_fragment,GL_SGIX_clipmap,GL_SGIX_convolution_accuracy,GL_SGIX_depth_pass_instrument,GL_SGIX_depth_texture,GL_SGIX_flush_raster,GL_SGIX_fog_offset,GL_SGIX_fragment_lighting,GL_SGIX_framezoom,GL_SGIX_igloo_interface,GL_SGIX_instruments,GL_SGIX_interlace,GL_SGIX_ir_instrument1,GL_SGIX_list_priority,GL_SGIX_pixel_texture,GL_SGIX_pixel_tiles,GL_SGIX_polynomial_ffd,GL_SGIX_reference_plane,GL_SGIX_resample,GL_SGIX_scalebias_hint,GL_SGIX_shadow,GL_SGIX_shadow_ambient,GL_SGIX_sprite,GL_SGIX_subsample,GL_SGIX_tag_sample_buffer,GL_SGIX_texture_add_env,GL_SGIX_texture_coordinate_clamp,GL_SGIX_texture_lod_bias,GL_SGIX_texture_multi_buffer,GL_SGIX_texture_scale_bias,GL_SGIX_vertex_preclip,GL_SGIX_ycrcb,GL_SGIX_ycrcb_subsample,GL_SGIX_ycrcba,GL_SGI_color_matrix,GL_SGI_color_table,GL_SGI_texture_color_table,GL_SUNX_constant_data,GL_SUN_convolution_border_modes,GL_SUN_global_alpha,GL_SUN_mesh_array,GL_SUN_slice_accum,GL_SUN_triangle_list,GL_SUN_vertex,GL_WIN_phong_shading,GL_WIN_specular_fog' c --header-only
 *
 * Online:
 *    http://glad.sh/#api=gl%3Acompatibility%3D4.6&generator=c&options=HEADER_ONLY
 *
 */

#ifndef AGX_CUSTOM_GLAD_GL_H_
#define AGX_CUSTOM_GLAD_GL_H_

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
  #error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
  #error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
  #error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
  #error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define AGX_CUSTOM_GLAD_GL
#define AGX_CUSTOM_GLAD_OPTION_GL_HEADER_ONLY

#ifdef __cplusplus
extern "C" {
#endif

#ifndef AGX_CUSTOM_GLAD_PLATFORM_H_
#define AGX_CUSTOM_GLAD_PLATFORM_H_

#ifndef AGX_CUSTOM_GLAD_PLATFORM_WIN32
  #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
    #define AGX_CUSTOM_GLAD_PLATFORM_WIN32 1
  #else
    #define AGX_CUSTOM_GLAD_PLATFORM_WIN32 0
  #endif
#endif

#ifndef AGX_CUSTOM_GLAD_PLATFORM_APPLE
  #ifdef __APPLE__
    #define AGX_CUSTOM_GLAD_PLATFORM_APPLE 1
  #else
    #define AGX_CUSTOM_GLAD_PLATFORM_APPLE 0
  #endif
#endif

#ifndef AGX_CUSTOM_GLAD_PLATFORM_EMSCRIPTEN
  #ifdef __EMSCRIPTEN__
    #define AGX_CUSTOM_GLAD_PLATFORM_EMSCRIPTEN 1
  #else
    #define AGX_CUSTOM_GLAD_PLATFORM_EMSCRIPTEN 0
  #endif
#endif

#ifndef AGX_CUSTOM_GLAD_PLATFORM_UWP
  #if defined(_MSC_VER) && !defined(AGX_CUSTOM_GLAD_INTERNAL_HAVE_WINAPIFAMILY)
    #ifdef __has_include
      #if __has_include(<winapifamily.h>)
        #define AGX_CUSTOM_GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
      #endif
    #elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
      #define AGX_CUSTOM_GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
    #endif
  #endif

  #ifdef AGX_CUSTOM_GLAD_INTERNAL_HAVE_WINAPIFAMILY
    #include <winapifamily.h>
    #if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
      #define AGX_CUSTOM_GLAD_PLATFORM_UWP 1
    #endif
  #endif

  #ifndef AGX_CUSTOM_GLAD_PLATFORM_UWP
    #define AGX_CUSTOM_GLAD_PLATFORM_UWP 0
  #endif
#endif

#ifdef __GNUC__
  #define AGX_CUSTOM_GLAD_GNUC_EXTENSION __extension__
#else
  #define AGX_CUSTOM_GLAD_GNUC_EXTENSION
#endif

#ifndef AGX_CUSTOM_GLAD_API_CALL
  #if defined(AGX_CUSTOM_GLAD_API_CALL_EXPORT)
    #if AGX_CUSTOM_GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
      #if defined(AGX_CUSTOM_GLAD_API_CALL_EXPORT_BUILD)
        #if defined(__GNUC__)
          #define AGX_CUSTOM_GLAD_API_CALL __attribute__ ((dllexport)) extern
        #else
          #define AGX_CUSTOM_GLAD_API_CALL __declspec(dllexport) extern
        #endif
      #else
        #if defined(__GNUC__)
          #define AGX_CUSTOM_GLAD_API_CALL __attribute__ ((dllimport)) extern
        #else
          #define AGX_CUSTOM_GLAD_API_CALL __declspec(dllimport) extern
        #endif
      #endif
    #elif defined(__GNUC__) && defined(AGX_CUSTOM_GLAD_API_CALL_EXPORT_BUILD)
      #define AGX_CUSTOM_GLAD_API_CALL __attribute__ ((visibility ("default"))) extern
    #else
      #define AGX_CUSTOM_GLAD_API_CALL extern
    #endif
  #else
    #define AGX_CUSTOM_GLAD_API_CALL extern
  #endif
#endif

#ifdef APIENTRY
  #define AGX_CUSTOM_GLAD_API_PTR APIENTRY
#elif AGX_CUSTOM_GLAD_PLATFORM_WIN32
  #define AGX_CUSTOM_GLAD_API_PTR __stdcall
#else
  #define AGX_CUSTOM_GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI AGX_CUSTOM_GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY AGX_CUSTOM_GLAD_API_PTR
#endif

#define AGX_CUSTOM_GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define AGX_CUSTOM_GLAD_VERSION_MAJOR(version) (version / 10000)
#define AGX_CUSTOM_GLAD_VERSION_MINOR(version) (version % 10000)

#define AGX_CUSTOM_GLAD_GENERATOR_VERSION "2.0.0-beta"

typedef void (*AGX_CUSTOMGLADapiproc)(void);

typedef AGX_CUSTOMGLADapiproc (*AGX_CUSTOMGLADloadfunc)(const char *name);
typedef AGX_CUSTOMGLADapiproc (*AGX_CUSTOMGLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*AGX_CUSTOMGLADprecallback)(const char *name, AGX_CUSTOMGLADapiproc apiproc, int len_args, ...);
typedef void (*AGX_CUSTOMGLADpostcallback)(void *ret, const char *name, AGX_CUSTOMGLADapiproc apiproc, int len_args, ...);

#endif /* AGX_CUSTOM_GLAD_PLATFORM_H_ */

#define GL_1PASS_EXT 0x80A1
#define GL_1PASS_SGIS 0x80A1
#define GL_2D 0x0600
#define GL_2PASS_0_EXT 0x80A2
#define GL_2PASS_0_SGIS 0x80A2
#define GL_2PASS_1_EXT 0x80A3
#define GL_2PASS_1_SGIS 0x80A3
#define GL_2X_BIT_ATI 0x00000001
#define GL_2_BYTES 0x1407
#define GL_2_BYTES_NV 0x1407
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_3_BYTES 0x1408
#define GL_3_BYTES_NV 0x1408
#define GL_422_AVERAGE_EXT 0x80CE
#define GL_422_EXT 0x80CC
#define GL_422_REV_AVERAGE_EXT 0x80CF
#define GL_422_REV_EXT 0x80CD
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_4PASS_0_EXT 0x80A4
#define GL_4PASS_0_SGIS 0x80A4
#define GL_4PASS_1_EXT 0x80A5
#define GL_4PASS_1_SGIS 0x80A5
#define GL_4PASS_2_EXT 0x80A6
#define GL_4PASS_2_SGIS 0x80A6
#define GL_4PASS_3_EXT 0x80A7
#define GL_4PASS_3_SGIS 0x80A7
#define GL_4X_BIT_ATI 0x00000002
#define GL_4_BYTES 0x1409
#define GL_4_BYTES_NV 0x1409
#define GL_8X_BIT_ATI 0x00000004
#define GL_ABGR_EXT 0x8000
#define GL_ACCUM 0x0100
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#define GL_ADD 0x0104
#define GL_ADD_ATI 0x8963
#define GL_ADD_SIGNED 0x8574
#define GL_ADD_SIGNED_ARB 0x8574
#define GL_ADD_SIGNED_EXT 0x8574
#define GL_ADJACENT_PAIRS_NV 0x90AE
#define GL_AFFINE_2D_NV 0x9092
#define GL_AFFINE_3D_NV 0x9094
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#define GL_ALL_COMPLETED_NV 0x84F2
#define GL_ALL_PIXELS_AMD 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALL_STATIC_DATA_IBM 103060
#define GL_ALPHA 0x1906
#define GL_ALPHA12 0x803D
#define GL_ALPHA12_EXT 0x803D
#define GL_ALPHA16 0x803E
#define GL_ALPHA16F_ARB 0x881C
#define GL_ALPHA16I_EXT 0x8D8A
#define GL_ALPHA16UI_EXT 0x8D78
#define GL_ALPHA16_EXT 0x803E
#define GL_ALPHA16_SNORM 0x9018
#define GL_ALPHA32F_ARB 0x8816
#define GL_ALPHA32I_EXT 0x8D84
#define GL_ALPHA32UI_EXT 0x8D72
#define GL_ALPHA4 0x803B
#define GL_ALPHA4_EXT 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA8I_EXT 0x8D90
#define GL_ALPHA8UI_EXT 0x8D7E
#define GL_ALPHA8_EXT 0x803C
#define GL_ALPHA8_SNORM 0x9014
#define GL_ALPHA_BIAS 0x0D1D
#define GL_ALPHA_BITS 0x0D55
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#define GL_ALPHA_FLOAT16_ATI 0x881C
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#define GL_ALPHA_FLOAT32_ATI 0x8816
#define GL_ALPHA_INTEGER 0x8D97
#define GL_ALPHA_INTEGER_EXT 0x8D97
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#define GL_ALPHA_MAX_SGIX 0x8321
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#define GL_ALPHA_MIN_SGIX 0x8320
#define GL_ALPHA_REF_COMMAND_NV 0x000F
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_SNORM 0x9010
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV 0x934D
#define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV 0x934F
#define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV 0x934E
#define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV 0x92BF
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALWAYS 0x0207
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#define GL_AMBIENT 0x1200
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARC_TO_NV 0xFE
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_ARB 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#define GL_ASYNC_MARKER_SGIX 0x8329
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV 0x959E
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV 0x959F
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_MEMORY_OBJECT_NV 0x95A4
#define GL_ATTACHED_MEMORY_OFFSET_NV 0x95A5
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ATTENUATION_EXT 0x834D
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV 0x0009
#define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_AUTO_NORMAL 0x0D80
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_AUX_BUFFERS 0x0C00
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#define GL_AVERAGE_EXT 0x8335
#define GL_AVERAGE_HP 0x8160
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#define GL_BACK_RIGHT 0x0403
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#define GL_BEVEL_NV 0x90A6
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_EXT 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGRA_INTEGER_EXT 0x8D9B
#define GL_BGR_EXT 0x80E0
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGR_INTEGER_EXT 0x8D9A
#define GL_BIAS_BIT_ATI 0x00000008
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#define GL_BINORMAL_ARRAY_EXT 0x843A
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#define GL_BITMAP 0x1A00
#define GL_BITMAP_TOKEN 0x0704
#define GL_BLACKHOLE_RENDER_INTEL 0x83FC
#define GL_BLEND 0x0BE2
#define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
#define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_COLOR_COMMAND_NV 0x000B
#define GL_BLEND_COLOR_EXT 0x8005
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_DST_RGB_EXT 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#define GL_BLEND_EQUATION_EXT 0x8009
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#define GL_BLEND_OVERLAP_NV 0x9281
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE 0x1905
#define GL_BLUE_BIAS 0x0D1B
#define GL_BLUE_BITS 0x0D54
#define GL_BLUE_BIT_ATI 0x00000004
#define GL_BLUE_INTEGER 0x8D96
#define GL_BLUE_INTEGER_EXT 0x8D96
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#define GL_BLUE_NV 0x1905
#define GL_BLUE_SCALE 0x0D1A
#define GL_BOLD_BIT_NV 0x01
#define GL_BOOL 0x8B56
#define GL_BOOL_ARB 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC2_ARB 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC3_ARB 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BOOL_VEC4_ARB 0x8B59
#define GL_BOUNDING_BOX_NV 0x908D
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAPPED_ARB 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#define GL_BUFFER_OBJECT_EXT 0x9151
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_SIZE_ARB 0x8764
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_USAGE_ARB 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_BUMP_ENVMAP_ATI 0x877B
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#define GL_BUMP_TARGET_ATI 0x877C
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#define GL_BYTE 0x1400
#define GL_C3F_V3F 0x2A24
#define GL_C4F_N3F_V3F 0x2A26
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CCW 0x0901
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#define GL_CLAMP 0x2900
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#define GL_CLEAR 0x1500
#define GL_CLEAR_BUFFER 0x82B4
#define GL_CLEAR_TEXTURE 0x9365
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_DISTANCE_NV 0x8C7A
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
#define GL_CLOSE_PATH_NV 0x00
#define GL_CMYKA_EXT 0x800D
#define GL_CMYK_EXT 0x800C
#define GL_CND0_ATI 0x896B
#define GL_CND_ATI 0x896A
#define GL_COEFF 0x0A00
#define GL_COLOR 0x1800
#define GL_COLOR3_BIT_PGI 0x00010000
#define GL_COLOR4_BIT_PGI 0x00020000
#define GL_COLORBURN_KHR 0x929A
#define GL_COLORBURN_NV 0x929A
#define GL_COLORDODGE_KHR 0x9299
#define GL_COLORDODGE_NV 0x9299
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#define GL_COLOR_ARRAY 0x8076
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#define GL_COLOR_ARRAY_EXT 0x8076
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#define GL_COLOR_ARRAY_LIST_IBM 103072
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#define GL_COLOR_INDEX 0x1900
#define GL_COLOR_INDEX12_EXT 0x80E6
#define GL_COLOR_INDEX16_EXT 0x80E7
#define GL_COLOR_INDEX1_EXT 0x80E2
#define GL_COLOR_INDEX2_EXT 0x80E3
#define GL_COLOR_INDEX4_EXT 0x80E4
#define GL_COLOR_INDEX8_EXT 0x80E5
#define GL_COLOR_INDEXES 0x1603
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_MATERIAL 0x0B57
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATRIX 0x80B1
#define GL_COLOR_MATRIX_SGI 0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COLOR_SAMPLES_NV 0x8E20
#define GL_COLOR_SUM 0x8458
#define GL_COLOR_SUM_ARB 0x8458
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#define GL_COLOR_SUM_EXT 0x8458
#define GL_COLOR_TABLE 0x80D0
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#define GL_COLOR_TABLE_BIAS 0x80D7
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#define GL_COLOR_TABLE_FORMAT 0x80D8
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#define GL_COLOR_TABLE_SCALE 0x80D6
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#define GL_COLOR_TABLE_SGI 0x80D0
#define GL_COLOR_TABLE_WIDTH 0x80D9
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMBINE 0x8570
#define GL_COMBINE4_NV 0x8503
#define GL_COMBINER0_NV 0x8550
#define GL_COMBINER1_NV 0x8551
#define GL_COMBINER2_NV 0x8552
#define GL_COMBINER3_NV 0x8553
#define GL_COMBINER4_NV 0x8554
#define GL_COMBINER5_NV 0x8555
#define GL_COMBINER6_NV 0x8556
#define GL_COMBINER7_NV 0x8557
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#define GL_COMBINER_BIAS_NV 0x8549
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#define GL_COMBINER_INPUT_NV 0x8542
#define GL_COMBINER_MAPPING_NV 0x8543
#define GL_COMBINER_MUX_SUM_NV 0x8547
#define GL_COMBINER_SCALE_NV 0x8548
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#define GL_COMBINE_ALPHA 0x8572
#define GL_COMBINE_ALPHA_ARB 0x8572
#define GL_COMBINE_ALPHA_EXT 0x8572
#define GL_COMBINE_ARB 0x8570
#define GL_COMBINE_EXT 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_RGB_ARB 0x8571
#define GL_COMBINE_RGB_EXT 0x8571
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPLETION_STATUS_ARB 0x91B1
#define GL_COMPLETION_STATUS_KHR 0x91B1
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#define GL_COMPRESSED_RGB_ARB 0x84ED
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#define GL_COMPUTE_PROGRAM_NV 0x90FB
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_COMP_BIT_ATI 0x00000002
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONFORMANT_NV 0x9374
#define GL_CONIC_CURVE_TO_NV 0x1A
#define GL_CONJOINT_NV 0x9284
#define GL_CONSERVATIVE_RASTERIZATION_INTEL 0x83FE
#define GL_CONSERVATIVE_RASTERIZATION_NV 0x9346
#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV 0x937B
#define GL_CONSERVATIVE_RASTER_DILATE_NV 0x9379
#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV 0x937A
#define GL_CONSERVATIVE_RASTER_MODE_NV 0x954D
#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV 0x954E
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV 0x9550
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV 0x954F
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#define GL_CONSTANT 0x8576
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_ALPHA_EXT 0x8003
#define GL_CONSTANT_ARB 0x8576
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_CONSTANT_BORDER 0x8151
#define GL_CONSTANT_BORDER_HP 0x8151
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONSTANT_COLOR0_NV 0x852A
#define GL_CONSTANT_COLOR1_NV 0x852B
#define GL_CONSTANT_COLOR_EXT 0x8001
#define GL_CONSTANT_EXT 0x8576
#define GL_CONSTANT_NV 0x8576
#define GL_CONST_EYE_NV 0x86E5
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#define GL_CONTINUOUS_AMD 0x9007
#define GL_CONTRAST_NV 0x92A1
#define GL_CONVEX_HULL_NV 0x908B
#define GL_CONVOLUTION_1D 0x8010
#define GL_CONVOLUTION_1D_EXT 0x8010
#define GL_CONVOLUTION_2D 0x8011
#define GL_CONVOLUTION_2D_EXT 0x8011
#define GL_CONVOLUTION_BORDER_COLOR 0x8154
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#define GL_CONVOLUTION_FORMAT 0x8017
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#define GL_CONVOLUTION_HEIGHT 0x8019
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#define GL_CONVOLUTION_WIDTH 0x8018
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#define GL_CON_0_ATI 0x8941
#define GL_CON_10_ATI 0x894B
#define GL_CON_11_ATI 0x894C
#define GL_CON_12_ATI 0x894D
#define GL_CON_13_ATI 0x894E
#define GL_CON_14_ATI 0x894F
#define GL_CON_15_ATI 0x8950
#define GL_CON_16_ATI 0x8951
#define GL_CON_17_ATI 0x8952
#define GL_CON_18_ATI 0x8953
#define GL_CON_19_ATI 0x8954
#define GL_CON_1_ATI 0x8942
#define GL_CON_20_ATI 0x8955
#define GL_CON_21_ATI 0x8956
#define GL_CON_22_ATI 0x8957
#define GL_CON_23_ATI 0x8958
#define GL_CON_24_ATI 0x8959
#define GL_CON_25_ATI 0x895A
#define GL_CON_26_ATI 0x895B
#define GL_CON_27_ATI 0x895C
#define GL_CON_28_ATI 0x895D
#define GL_CON_29_ATI 0x895E
#define GL_CON_2_ATI 0x8943
#define GL_CON_30_ATI 0x895F
#define GL_CON_31_ATI 0x8960
#define GL_CON_3_ATI 0x8944
#define GL_CON_4_ATI 0x8945
#define GL_CON_5_ATI 0x8946
#define GL_CON_6_ATI 0x8947
#define GL_CON_7_ATI 0x8948
#define GL_CON_8_ATI 0x8949
#define GL_CON_9_ATI 0x894A
#define GL_COORD_REPLACE 0x8862
#define GL_COORD_REPLACE_ARB 0x8862
#define GL_COORD_REPLACE_NV 0x8862
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_COUNTER_RANGE_AMD 0x8BC1
#define GL_COUNTER_TYPE_AMD 0x8BC0
#define GL_COUNT_DOWN_NV 0x9089
#define GL_COUNT_UP_NV 0x9088
#define GL_COVERAGE_MODULATION_NV 0x9332
#define GL_COVERAGE_MODULATION_TABLE_NV 0x9331
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
#define GL_CUBIC_CURVE_TO_NV 0x0C
#define GL_CUBIC_EXT 0x8334
#define GL_CUBIC_HP 0x815F
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CULL_FRAGMENT_NV 0x86E7
#define GL_CULL_MODES_NV 0x86E0
#define GL_CULL_VERTEX_EXT 0x81AA
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#define GL_CULL_VERTEX_IBM 103050
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#define GL_CURRENT_ATTRIB_NV 0x8626
#define GL_CURRENT_BINORMAL_EXT 0x843C
#define GL_CURRENT_BIT 0x00000001
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_MATRIX_ARB 0x8641
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#define GL_CURRENT_MATRIX_NV 0x8641
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_QUERY_ARB 0x8865
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#define GL_CURRENT_TANGENT_EXT 0x843B
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_TIME_NV 0x8E28
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#define GL_CURRENT_VERTEX_EXT 0x87E2
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#define GL_CW 0x0900
#define GL_D3D12_FENCE_VALUE_EXT 0x9595
#define GL_DARKEN_KHR 0x9297
#define GL_DARKEN_NV 0x9297
#define GL_DATA_BUFFER_AMD 0x9151
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DECAL 0x2101
#define GL_DECODE_EXT 0x8A49
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DECR_WRAP_EXT 0x8508
#define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#define GL_DEPTH_BIAS 0x0D1F
#define GL_DEPTH_BITS 0x0D56
#define GL_DEPTH_BOUNDS_EXT 0x8891
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#define GL_DEPTH_CLAMP_NV 0x864F
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_DEPTH_SAMPLES_NV 0x932D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_EXT 0x84F9
#define GL_DEPTH_STENCIL_NV 0x84F9
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DETACHED_BUFFERS_NV 0x95AB
#define GL_DETACHED_MEMORY_INCARNATION_NV 0x95A9
#define GL_DETACHED_TEXTURES_NV 0x95AA
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#define GL_DEVICE_LUID_EXT 0x9599
#define GL_DEVICE_NODE_MASK_EXT 0x959A
#define GL_DEVICE_UUID_EXT 0x9597
#define GL_DIFFERENCE_KHR 0x929E
#define GL_DIFFERENCE_NV 0x929E
#define GL_DIFFUSE 0x1201
#define GL_DISCARD_ATI 0x8763
#define GL_DISCARD_NV 0x8530
#define GL_DISCRETE_AMD 0x9006
#define GL_DISJOINT_NV 0x9283
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DISPLAY_LIST 0x82E7
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#define GL_DITHER 0x0BD0
#define GL_DOMAIN 0x0A02
#define GL_DONT_CARE 0x1100
#define GL_DOT2_ADD_ATI 0x896C
#define GL_DOT3_ATI 0x8966
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_DOT3_RGBA_ARB 0x86AF
#define GL_DOT3_RGBA_EXT 0x8741
#define GL_DOT3_RGB_ARB 0x86AE
#define GL_DOT3_RGB_EXT 0x8740
#define GL_DOT4_ATI 0x8967
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#define GL_DOT_PRODUCT_NV 0x86EC
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2_EXT 0x8F46
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3_EXT 0x8F47
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4_EXT 0x8F48
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#define GL_DRAW_ARRAYS_COMMAND_NV 0x0003
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV 0x0005
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER0_ARB 0x8825
#define GL_DRAW_BUFFER0_ATI 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER10_ARB 0x882F
#define GL_DRAW_BUFFER10_ATI 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER11_ARB 0x8830
#define GL_DRAW_BUFFER11_ATI 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER12_ARB 0x8831
#define GL_DRAW_BUFFER12_ATI 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER13_ARB 0x8832
#define GL_DRAW_BUFFER13_ATI 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER14_ARB 0x8833
#define GL_DRAW_BUFFER14_ATI 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER15_ARB 0x8834
#define GL_DRAW_BUFFER15_ATI 0x8834
#define GL_DRAW_BUFFER1_ARB 0x8826
#define GL_DRAW_BUFFER1_ATI 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER2_ARB 0x8827
#define GL_DRAW_BUFFER2_ATI 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER3_ARB 0x8828
#define GL_DRAW_BUFFER3_ATI 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER4_ARB 0x8829
#define GL_DRAW_BUFFER4_ATI 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER5_ARB 0x882A
#define GL_DRAW_BUFFER5_ATI 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER6_ARB 0x882B
#define GL_DRAW_BUFFER6_ATI 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER7_ARB 0x882C
#define GL_DRAW_BUFFER7_ATI 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER8_ARB 0x882D
#define GL_DRAW_BUFFER8_ATI 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER9_ARB 0x882E
#define GL_DRAW_BUFFER9_ATI 0x882E
#define GL_DRAW_ELEMENTS_COMMAND_NV 0x0002
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_DRIVER_UUID_EXT 0x9598
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#define GL_DSDT8_MAG8_NV 0x870A
#define GL_DSDT8_NV 0x8709
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#define GL_DSDT_MAG_NV 0x86F6
#define GL_DSDT_MAG_VIB_NV 0x86F7
#define GL_DSDT_NV 0x86F5
#define GL_DST_ALPHA 0x0304
#define GL_DST_ATOP_NV 0x928F
#define GL_DST_COLOR 0x0306
#define GL_DST_IN_NV 0x928B
#define GL_DST_NV 0x9287
#define GL_DST_OUT_NV 0x928D
#define GL_DST_OVER_NV 0x9289
#define GL_DS_BIAS_NV 0x8716
#define GL_DS_SCALE_NV 0x8710
#define GL_DT_BIAS_NV 0x8717
#define GL_DT_SCALE_NV 0x8711
#define GL_DU8DV8_ATI 0x877A
#define GL_DUAL_ALPHA12_SGIS 0x8112
#define GL_DUAL_ALPHA16_SGIS 0x8113
#define GL_DUAL_ALPHA4_SGIS 0x8110
#define GL_DUAL_ALPHA8_SGIS 0x8111
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#define GL_DUDV_ATI 0x8779
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#define GL_DYNAMIC_ATI 0x8761
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_COPY_ARB 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_READ_ARB 0x88E9
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#define GL_EDGE_FLAG 0x0B43
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#define GL_EIGHTH_BIT_ATI 0x00000020
#define GL_ELEMENT_ADDRESS_COMMAND_NV 0x0008
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#define GL_ELEMENT_ARRAY_ATI 0x8768
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#define GL_EMBOSS_CONSTANT_NV 0x855E
#define GL_EMBOSS_LIGHT_NV 0x855D
#define GL_EMBOSS_MAP_NV 0x855F
#define GL_EMISSION 0x1600
#define GL_ENABLE_BIT 0x00002000
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EVAL_2D_NV 0x86C0
#define GL_EVAL_BIT 0x00010000
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#define GL_EXCLUSION_KHR 0x92A0
#define GL_EXCLUSION_NV 0x92A0
#define GL_EXCLUSIVE_EXT 0x8F11
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_EXPAND_NEGATE_NV 0x8539
#define GL_EXPAND_NORMAL_NV 0x8538
#define GL_EXTENSIONS 0x1F03
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#define GL_EYE_LINEAR 0x2400
#define GL_EYE_LINEAR_NV 0x2400
#define GL_EYE_LINE_SGIS 0x81F6
#define GL_EYE_PLANE 0x2502
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#define GL_EYE_POINT_SGIS 0x81F4
#define GL_EYE_RADIAL_NV 0x855B
#define GL_E_TIMES_F_NV 0x8531
#define GL_FACTOR_MAX_AMD 0x901D
#define GL_FACTOR_MIN_AMD 0x901C
#define GL_FAILURE_NV 0x9030
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FEEDBACK 0x1C01
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_FENCE_APPLE 0x8A0B
#define GL_FENCE_CONDITION_NV 0x84F4
#define GL_FENCE_STATUS_NV 0x84F3
#define GL_FIELDS_NV 0x8E27
#define GL_FIELD_LOWER_NV 0x9023
#define GL_FIELD_UPPER_NV 0x9022
#define GL_FILE_NAME_NV 0x9074
#define GL_FILL 0x1B02
#define GL_FILL_RECTANGLE_NV 0x933C
#define GL_FILTER 0x829A
#define GL_FILTER4_SGIS 0x8146
#define GL_FIRST_TO_REST_NV 0x90AF
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#define GL_FIXED 0x140C
#define GL_FIXED_OES 0x140C
#define GL_FIXED_ONLY 0x891D
#define GL_FIXED_ONLY_ARB 0x891D
#define GL_FLAT 0x1D00
#define GL_FLOAT 0x1406
#define GL_FLOAT16_MAT2_AMD 0x91C5
#define GL_FLOAT16_MAT2x3_AMD 0x91C8
#define GL_FLOAT16_MAT2x4_AMD 0x91C9
#define GL_FLOAT16_MAT3_AMD 0x91C6
#define GL_FLOAT16_MAT3x2_AMD 0x91CA
#define GL_FLOAT16_MAT3x4_AMD 0x91CB
#define GL_FLOAT16_MAT4_AMD 0x91C7
#define GL_FLOAT16_MAT4x2_AMD 0x91CC
#define GL_FLOAT16_MAT4x3_AMD 0x91CD
#define GL_FLOAT16_NV 0x8FF8
#define GL_FLOAT16_VEC2_NV 0x8FF9
#define GL_FLOAT16_VEC3_NV 0x8FFA
#define GL_FLOAT16_VEC4_NV 0x8FFB
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2_ARB 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3_ARB 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4_ARB 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_R16_NV 0x8884
#define GL_FLOAT_R32_NV 0x8885
#define GL_FLOAT_RG16_NV 0x8886
#define GL_FLOAT_RG32_NV 0x8887
#define GL_FLOAT_RGB16_NV 0x8888
#define GL_FLOAT_RGB32_NV 0x8889
#define GL_FLOAT_RGBA16_NV 0x888A
#define GL_FLOAT_RGBA32_NV 0x888B
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#define GL_FLOAT_RGBA_NV 0x8883
#define GL_FLOAT_RGB_NV 0x8882
#define GL_FLOAT_RG_NV 0x8881
#define GL_FLOAT_R_NV 0x8880
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC2_ARB 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC3_ARB 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FLOAT_VEC4_ARB 0x8B52
#define GL_FOG 0x0B60
#define GL_FOG_BIT 0x00000080
#define GL_FOG_COLOR 0x0B66
#define GL_FOG_COORD 0x8451
#define GL_FOG_COORDINATE 0x8451
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#define GL_FOG_COORDINATE_EXT 0x8451
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#define GL_FOG_END 0x0B64
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#define GL_FOG_FUNC_SGIS 0x812A
#define GL_FOG_HINT 0x0C54
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_MODE 0x0B65
#define GL_FOG_OFFSET_SGIX 0x8198
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
#define GL_FOG_START 0x0B63
#define GL_FONT_ASCENDER_BIT_NV 0x00200000
#define GL_FONT_DESCENDER_BIT_NV 0x00400000
#define GL_FONT_GLYPHS_AVAILABLE_NV 0x9368
#define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
#define GL_FONT_HEIGHT_BIT_NV 0x00800000
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV 0x20000000
#define GL_FONT_TARGET_UNAVAILABLE_NV 0x9369
#define GL_FONT_UNAVAILABLE_NV 0x936A
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#define GL_FONT_UNINTELLIGIBLE_NV 0x936B
#define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
#define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
#define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_COLOR_EXT 0x834C
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#define GL_FRAGMENT_COVERAGE_COLOR_NV 0x92DE
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV 0x92DD
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#define GL_FRAGMENT_INPUT_NV 0x936D
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#define GL_FRAGMENT_SHADER_ATI 0x8920
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_EXT 0x8D40
#define GL_FRAMEBUFFER_FLIP_X_MESA 0x8BBC
#define GL_FRAMEBUFFER_FLIP_Y_MESA 0x8BBB
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR 0x9633
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#define GL_FRAMEBUFFER_SWAP_XY_MESA 0x8BBD
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#define GL_FRAMEZOOM_SGIX 0x818B
#define GL_FRAME_NV 0x8E26
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_FACE_COMMAND_NV 0x0012
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_FULL_RANGE_EXT 0x87E1
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#define GL_FULL_SUPPORT 0x82B7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_ADD_EXT 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_SUBTRACT_EXT 0x800A
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#define GL_GEQUAL 0x0206
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#define GL_GPU_ADDRESS_NV 0x8F34
#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_BIAS 0x0D19
#define GL_GREEN_BITS 0x0D53
#define GL_GREEN_BIT_ATI 0x00000002
#define GL_GREEN_INTEGER 0x8D95
#define GL_GREEN_INTEGER_EXT 0x8D95
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#define GL_GREEN_NV 0x1904
#define GL_GREEN_SCALE 0x0D18
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#define GL_HALF_APPLE 0x140B
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#define GL_HALF_BIT_ATI 0x00000008
#define GL_HALF_FLOAT 0x140B
#define GL_HALF_FLOAT_ARB 0x140B
#define GL_HALF_FLOAT_NV 0x140B
#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT 0x958B
#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT 0x958C
#define GL_HANDLE_TYPE_D3D12_FENCE_EXT 0x9594
#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT 0x958A
#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT 0x9589
#define GL_HANDLE_TYPE_OPAQUE_FD_EXT 0x9586
#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT 0x9587
#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT 0x9588
#define GL_HARDLIGHT_KHR 0x929B
#define GL_HARDLIGHT_NV 0x929B
#define GL_HARDMIX_NV 0x92A9
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_HILO16_NV 0x86F8
#define GL_HILO8_NV 0x885E
#define GL_HILO_NV 0x86F4
#define GL_HINT_BIT 0x00008000
#define GL_HISTOGRAM 0x8024
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#define GL_HISTOGRAM_EXT 0x8024
#define GL_HISTOGRAM_FORMAT 0x8027
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#define GL_HISTOGRAM_RED_SIZE 0x8028
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#define GL_HISTOGRAM_SINK 0x802D
#define GL_HISTOGRAM_SINK_EXT 0x802D
#define GL_HISTOGRAM_WIDTH 0x8026
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#define GL_HI_BIAS_NV 0x8714
#define GL_HI_SCALE_NV 0x870E
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#define GL_HSL_COLOR_KHR 0x92AF
#define GL_HSL_COLOR_NV 0x92AF
#define GL_HSL_HUE_KHR 0x92AD
#define GL_HSL_HUE_NV 0x92AD
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#define GL_HSL_LUMINOSITY_NV 0x92B0
#define GL_HSL_SATURATION_KHR 0x92AE
#define GL_HSL_SATURATION_NV 0x92AE
#define GL_IDENTITY_NV 0x862A
#define GL_IGNORE_BORDER_HP 0x8150
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#define GL_IMAGE_1D_EXT 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#define GL_IMAGE_2D_EXT 0x904D
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_2D_RECT_EXT 0x904F
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_3D_EXT 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_BUFFER_EXT 0x9051
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_EXT 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#define GL_IMAGE_SCALE_X_HP 0x8155
#define GL_IMAGE_SCALE_Y_HP 0x8156
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#define GL_INCLUSIVE_EXT 0x8F10
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INCR_WRAP_EXT 0x8507
#define GL_INDEX 0x8222
#define GL_INDEX_ARRAY 0x8077
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#define GL_INDEX_ARRAY_EXT 0x8077
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#define GL_INDEX_ARRAY_LIST_IBM 103073
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#define GL_INDEX_BITS 0x0D51
#define GL_INDEX_BIT_PGI 0x00080000
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_INDEX_MATERIAL_EXT 0x81B8
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#define GL_INDEX_MODE 0x0C30
#define GL_INDEX_OFFSET 0x0D13
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_TEST_EXT 0x81B5
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#define GL_INDEX_TEST_REF_EXT 0x81B7
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#define GL_INT 0x1404
#define GL_INT16_NV 0x8FE4
#define GL_INT16_VEC2_NV 0x8FE5
#define GL_INT16_VEC3_NV 0x8FE6
#define GL_INT16_VEC4_NV 0x8FE7
#define GL_INT64_ARB 0x140E
#define GL_INT64_NV 0x140E
#define GL_INT64_VEC2_ARB 0x8FE9
#define GL_INT64_VEC2_NV 0x8FE9
#define GL_INT64_VEC3_ARB 0x8FEA
#define GL_INT64_VEC3_NV 0x8FEA
#define GL_INT64_VEC4_ARB 0x8FEB
#define GL_INT64_VEC4_NV 0x8FEB
#define GL_INT8_NV 0x8FE0
#define GL_INT8_VEC2_NV 0x8FE1
#define GL_INT8_VEC3_NV 0x8FE2
#define GL_INT8_VEC4_NV 0x8FE3
#define GL_INTENSITY 0x8049
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY12_EXT 0x804C
#define GL_INTENSITY16 0x804D
#define GL_INTENSITY16F_ARB 0x881D
#define GL_INTENSITY16I_EXT 0x8D8B
#define GL_INTENSITY16UI_EXT 0x8D79
#define GL_INTENSITY16_EXT 0x804D
#define GL_INTENSITY16_SNORM 0x901B
#define GL_INTENSITY32F_ARB 0x8817
#define GL_INTENSITY32I_EXT 0x8D85
#define GL_INTENSITY32UI_EXT 0x8D73
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY4_EXT 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY8I_EXT 0x8D91
#define GL_INTENSITY8UI_EXT 0x8D7F
#define GL_INTENSITY8_EXT 0x804B
#define GL_INTENSITY8_SNORM 0x9017
#define GL_INTENSITY_EXT 0x8049
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#define GL_INTENSITY_SNORM 0x9013
#define GL_INTERLACE_OML 0x8980
#define GL_INTERLACE_READ_INGR 0x8568
#define GL_INTERLACE_READ_OML 0x8981
#define GL_INTERLACE_SGIX 0x8094
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERPOLATE 0x8575
#define GL_INTERPOLATE_ARB 0x8575
#define GL_INTERPOLATE_EXT 0x8575
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#define GL_INT_IMAGE_1D_EXT 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#define GL_INT_IMAGE_2D_EXT 0x9058
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_3D_EXT 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC2_ARB 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC3_ARB 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INT_VEC4_ARB 0x8B55
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#define GL_INVARIANT_EXT 0x87C2
#define GL_INVARIANT_VALUE_EXT 0x87EA
#define GL_INVERSE_NV 0x862B
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#define GL_INVERT 0x150A
#define GL_INVERTED_SCREEN_W_REND 0x8491
#define GL_INVERT_OVG_NV 0x92B4
#define GL_INVERT_RGB_NV 0x92A3
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ITALIC_BIT_NV 0x02
#define GL_IUI_N3F_V2F_EXT 0x81AF
#define GL_IUI_N3F_V3F_EXT 0x81B0
#define GL_IUI_V2F_EXT 0x81AD
#define GL_IUI_V3F_EXT 0x81AE
#define GL_KEEP 0x1E00
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#define GL_LARGE_CW_ARC_TO_NV 0x18
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#define GL_LAYER_NV 0x8DAA
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LAYOUT_COLOR_ATTACHMENT_EXT 0x958E
#define GL_LAYOUT_DEFAULT_INTEL 0
#define GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT 0x9531
#define GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT 0x9530
#define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT 0x958F
#define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT 0x9590
#define GL_LAYOUT_GENERAL_EXT 0x958D
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
#define GL_LAYOUT_LINEAR_INTEL 1
#define GL_LAYOUT_SHADER_READ_ONLY_EXT 0x9591
#define GL_LAYOUT_TRANSFER_DST_EXT 0x9593
#define GL_LAYOUT_TRANSFER_SRC_EXT 0x9592
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LERP_ATI 0x8969
#define GL_LESS 0x0201
#define GL_LGPU_SEPARATE_STORAGE_BIT_NVX 0x0800
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_LIGHTEN_KHR 0x9298
#define GL_LIGHTEN_NV 0x9298
#define GL_LIGHTING 0x0B50
#define GL_LIGHTING_BIT 0x00000040
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEARBURN_NV 0x92A5
#define GL_LINEARDODGE_NV 0x92A4
#define GL_LINEARLIGHT_NV 0x92A7
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#define GL_LINEAR_DETAIL_SGIS 0x8097
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#define GL_LINEAR_TILING_EXT 0x9585
#define GL_LINES 0x0001
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINES_ADJACENCY_EXT 0x000A
#define GL_LINE_BIT 0x00000004
#define GL_LINE_LOOP 0x0002
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LINE_STRIP 0x0003
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#define GL_LINE_TOKEN 0x0702
#define GL_LINE_TO_NV 0x04
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_COMMAND_NV 0x000D
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINK_STATUS 0x8B82
#define GL_LIST_BASE 0x0B32
#define GL_LIST_BIT 0x00020000
#define GL_LIST_INDEX 0x0B33
#define GL_LIST_MODE 0x0B30
#define GL_LIST_PRIORITY_SGIX 0x8182
#define GL_LOAD 0x0101
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#define GL_LOCAL_EXT 0x87C4
#define GL_LOCATION 0x930E
#define GL_LOCATION_COMPONENT 0x934A
#define GL_LOCATION_INDEX 0x930F
#define GL_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_LO_BIAS_NV 0x8715
#define GL_LO_SCALE_NV 0x870F
#define GL_LUID_SIZE_EXT 8
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#define GL_LUMINANCE12_EXT 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE16I_EXT 0x8D8C
#define GL_LUMINANCE16UI_EXT 0x8D7A
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#define GL_LUMINANCE16_EXT 0x8042
#define GL_LUMINANCE16_SNORM 0x9019
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE32I_EXT 0x8D86
#define GL_LUMINANCE32UI_EXT 0x8D74
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#define GL_LUMINANCE4_EXT 0x803F
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE8I_EXT 0x8D92
#define GL_LUMINANCE8UI_EXT 0x8D80
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#define GL_LUMINANCE8_EXT 0x8040
#define GL_LUMINANCE8_SNORM 0x9015
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#define GL_LUMINANCE_SNORM 0x9011
#define GL_MAD_ATI 0x8968
#define GL_MAGNITUDE_BIAS_NV 0x8718
#define GL_MAGNITUDE_SCALE_NV 0x8712
#define GL_MAJOR_VERSION 0x821B
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAP1_BINORMAL_EXT 0x8446
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TANGENT_EXT 0x8444
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
#define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
#define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
#define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
#define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
#define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
#define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
#define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
#define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
#define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
#define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
#define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
#define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
#define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
#define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
#define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
#define GL_MAP2_BINORMAL_EXT 0x8447
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TANGENT_EXT 0x8445
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
#define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
#define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
#define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
#define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
#define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
#define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
#define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
#define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
#define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
#define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
#define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
#define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
#define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
#define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
#define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_STENCIL 0x0D11
#define GL_MAP_TESSELLATION_NV 0x86C2
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#define GL_MATRIX0_ARB 0x88C0
#define GL_MATRIX0_NV 0x8630
#define GL_MATRIX10_ARB 0x88CA
#define GL_MATRIX11_ARB 0x88CB
#define GL_MATRIX12_ARB 0x88CC
#define GL_MATRIX13_ARB 0x88CD
#define GL_MATRIX14_ARB 0x88CE
#define GL_MATRIX15_ARB 0x88CF
#define GL_MATRIX16_ARB 0x88D0
#define GL_MATRIX17_ARB 0x88D1
#define GL_MATRIX18_ARB 0x88D2
#define GL_MATRIX19_ARB 0x88D3
#define GL_MATRIX1_ARB 0x88C1
#define GL_MATRIX1_NV 0x8631
#define GL_MATRIX20_ARB 0x88D4
#define GL_MATRIX21_ARB 0x88D5
#define GL_MATRIX22_ARB 0x88D6
#define GL_MATRIX23_ARB 0x88D7
#define GL_MATRIX24_ARB 0x88D8
#define GL_MATRIX25_ARB 0x88D9
#define GL_MATRIX26_ARB 0x88DA
#define GL_MATRIX27_ARB 0x88DB
#define GL_MATRIX28_ARB 0x88DC
#define GL_MATRIX29_ARB 0x88DD
#define GL_MATRIX2_ARB 0x88C2
#define GL_MATRIX2_NV 0x8632
#define GL_MATRIX30_ARB 0x88DE
#define GL_MATRIX31_ARB 0x88DF
#define GL_MATRIX3_ARB 0x88C3
#define GL_MATRIX3_NV 0x8633
#define GL_MATRIX4_ARB 0x88C4
#define GL_MATRIX4_NV 0x8634
#define GL_MATRIX5_ARB 0x88C5
#define GL_MATRIX5_NV 0x8635
#define GL_MATRIX6_ARB 0x88C6
#define GL_MATRIX6_NV 0x8636
#define GL_MATRIX7_ARB 0x88C7
#define GL_MATRIX7_NV 0x8637
#define GL_MATRIX8_ARB 0x88C8
#define GL_MATRIX9_ARB 0x88C9
#define GL_MATRIX_EXT 0x87C0
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#define GL_MATRIX_MODE 0x0BA0
#define GL_MATRIX_PALETTE_ARB 0x8840
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV 0x955F
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD 0x91B3
#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD 0x91B4
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV 0x8E67
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV 0x8E6F
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD 0x91B5
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DETACHED_BUFFERS_NV 0x95AD
#define GL_MAX_DETACHED_TEXTURES_NV 0x95AC
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV 0x953D
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_EXT 0x8008
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_LGPU_GPUS_NVX 0x92BA
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#define GL_MAX_MESH_ATOMIC_COUNTERS_NV 0x8E65
#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV 0x8E64
#define GL_MAX_MESH_IMAGE_UNIFORMS_NV 0x8E62
#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV 0x9539
#define GL_MAX_MESH_OUTPUT_VERTICES_NV 0x9538
#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV 0x8E66
#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV 0x8E61
#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV 0x9536
#define GL_MAX_MESH_UNIFORM_BLOCKS_NV 0x8E60
#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV 0x8E63
#define GL_MAX_MESH_VIEWS_NV 0x9557
#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV 0x95A2
#define GL_MAX_MESH_WORK_GROUP_SIZE_NV 0x953B
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLES_EXT 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
#define GL_MAX_SHADER_COMPILER_THREADS_KHR 0x91B0
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHININESS_NV 0x8504
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_MAX_TASK_ATOMIC_COUNTERS_NV 0x8E6D
#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV 0x8E6C
#define GL_MAX_TASK_IMAGE_UNIFORMS_NV 0x8E6A
#define GL_MAX_TASK_OUTPUT_COUNT_NV 0x953A
#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV 0x8E6E
#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV 0x8E69
#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV 0x9537
#define GL_MAX_TASK_UNIFORM_BLOCKS_NV 0x8E68
#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV 0x8E6B
#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV 0x95A3
#define GL_MAX_TASK_WORK_GROUP_SIZE_NV 0x953C
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#define GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV 0x95B6
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_VIEWS_OVR 0x9631
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_WINDOW_RECTANGLES_EXT 0x8F14
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV 0x95A6
#define GL_MEMORY_ATTACHABLE_NV 0x95A8
#define GL_MEMORY_ATTACHABLE_SIZE_NV 0x95A7
#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV 0x9543
#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV 0x92DF
#define GL_MESH_OUTPUT_TYPE_NV 0x957B
#define GL_MESH_PRIMITIVES_OUT_NV 0x957A
#define GL_MESH_SHADER_BIT_NV 0x00000040
#define GL_MESH_SHADER_NV 0x9559
#define GL_MESH_SUBROUTINE_NV 0x957C
#define GL_MESH_SUBROUTINE_UNIFORM_NV 0x957E
#define GL_MESH_VERTICES_OUT_NV 0x9579
#define GL_MESH_WORK_GROUP_SIZE_NV 0x953E
#define GL_MIN 0x8007
#define GL_MINMAX 0x802E
#define GL_MINMAX_EXT 0x802E
#define GL_MINMAX_FORMAT 0x802F
#define GL_MINMAX_FORMAT_EXT 0x802F
#define GL_MINMAX_SINK 0x8030
#define GL_MINMAX_SINK_EXT 0x8030
#define GL_MINOR_VERSION 0x821C
#define GL_MINUS_CLAMPED_NV 0x92B3
#define GL_MINUS_NV 0x929F
#define GL_MIN_EXT 0x8007
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#define GL_MIN_LOD_WARNING_AMD 0x919C
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#define GL_MIPMAP 0x8293
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MIRRORED_REPEAT_ARB 0x8370
#define GL_MIRRORED_REPEAT_IBM 0x8370
#define GL_MIRROR_CLAMP_ATI 0x8742
#define GL_MIRROR_CLAMP_EXT 0x8742
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#define GL_MITER_REVERT_NV 0x90A7
#define GL_MITER_TRUNCATE_NV 0x90A8
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
#define GL_MODELVIEW 0x1700
#define GL_MODELVIEW0_ARB 0x1700
#define GL_MODELVIEW0_EXT 0x1700
#define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
#define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
#define GL_MODELVIEW10_ARB 0x872A
#define GL_MODELVIEW11_ARB 0x872B
#define GL_MODELVIEW12_ARB 0x872C
#define GL_MODELVIEW13_ARB 0x872D
#define GL_MODELVIEW14_ARB 0x872E
#define GL_MODELVIEW15_ARB 0x872F
#define GL_MODELVIEW16_ARB 0x8730
#define GL_MODELVIEW17_ARB 0x8731
#define GL_MODELVIEW18_ARB 0x8732
#define GL_MODELVIEW19_ARB 0x8733
#define GL_MODELVIEW1_ARB 0x850A
#define GL_MODELVIEW1_EXT 0x850A
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#define GL_MODELVIEW20_ARB 0x8734
#define GL_MODELVIEW21_ARB 0x8735
#define GL_MODELVIEW22_ARB 0x8736
#define GL_MODELVIEW23_ARB 0x8737
#define GL_MODELVIEW24_ARB 0x8738
#define GL_MODELVIEW25_ARB 0x8739
#define GL_MODELVIEW26_ARB 0x873A
#define GL_MODELVIEW27_ARB 0x873B
#define GL_MODELVIEW28_ARB 0x873C
#define GL_MODELVIEW29_ARB 0x873D
#define GL_MODELVIEW2_ARB 0x8722
#define GL_MODELVIEW30_ARB 0x873E
#define GL_MODELVIEW31_ARB 0x873F
#define GL_MODELVIEW3_ARB 0x8723
#define GL_MODELVIEW4_ARB 0x8724
#define GL_MODELVIEW5_ARB 0x8725
#define GL_MODELVIEW6_ARB 0x8726
#define GL_MODELVIEW7_ARB 0x8727
#define GL_MODELVIEW8_ARB 0x8728
#define GL_MODELVIEW9_ARB 0x8729
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_MODULATE 0x2100
#define GL_MODULATE_ADD_ATI 0x8744
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#define GL_MOVE_TO_NV 0x02
#define GL_MOVE_TO_RESETS_NV 0x90B5
#define GL_MOV_ATI 0x8961
#define GL_MULT 0x0103
#define GL_MULTICAST_GPUS_NV 0x92BA
#define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9549
#define GL_MULTIPLY_KHR 0x9294
#define GL_MULTIPLY_NV 0x9294
#define GL_MULTISAMPLE 0x809D
#define GL_MULTISAMPLES_NV 0x9371
#define GL_MULTISAMPLE_3DFX 0x86B2
#define GL_MULTISAMPLE_ARB 0x809D
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#define GL_MULTISAMPLE_EXT 0x809D
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#define GL_MULTISAMPLE_SGIS 0x809D
#define GL_MUL_ATI 0x8964
#define GL_MVP_MATRIX_EXT 0x87E3
#define GL_N3F_V3F 0x2A25
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#define GL_NAME_LENGTH 0x92F9
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_NAND 0x150E
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#define GL_NEAREST 0x2600
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEGATE_BIT_ATI 0x00000004
#define GL_NEGATIVE_ONE_EXT 0x87DF
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_NEGATIVE_W_EXT 0x87DC
#define GL_NEGATIVE_X_EXT 0x87D9
#define GL_NEGATIVE_Y_EXT 0x87DA
#define GL_NEGATIVE_Z_EXT 0x87DB
#define GL_NEVER 0x0200
#define GL_NEXT_BUFFER_NV -2
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOP_COMMAND_NV 0x0001
#define GL_NOR 0x1508
#define GL_NORMALIZE 0x0BA1
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#define GL_NORMAL_ARRAY 0x8075
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#define GL_NORMAL_ARRAY_EXT 0x8075
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#define GL_NORMAL_BIT_PGI 0x08000000
#define GL_NORMAL_MAP 0x8511
#define GL_NORMAL_MAP_ARB 0x8511
#define GL_NORMAL_MAP_EXT 0x8511
#define GL_NORMAL_MAP_NV 0x8511
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_NUM_DEVICE_UUIDS_EXT 0x9596
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#define GL_NUM_PASSES_ATI 0x8970
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B6
#define GL_NUM_TILING_TYPES_EXT 0x9582
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#define GL_NUM_WINDOW_RECTANGLES_EXT 0x8F15
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#define GL_OBJECT_LINEAR 0x2401
#define GL_OBJECT_LINEAR_NV 0x2401
#define GL_OBJECT_LINE_SGIS 0x81F7
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#define GL_OBJECT_PLANE 0x2501
#define GL_OBJECT_POINT_SGIS 0x81F5
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#define GL_OBJECT_TYPE 0x9112
#define GL_OBJECT_TYPE_ARB 0x8B4E
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
#define GL_OCCLUSION_TEST_HP 0x8165
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
#define GL_OFFSET 0x92FC
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#define GL_ONE 1
#define GL_ONE_EXT 0x87DE
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND0_ALPHA_ARB 0x8598
#define GL_OPERAND0_ALPHA_EXT 0x8598
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND0_RGB_ARB 0x8590
#define GL_OPERAND0_RGB_EXT 0x8590
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND1_ALPHA_ARB 0x8599
#define GL_OPERAND1_ALPHA_EXT 0x8599
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND1_RGB_ARB 0x8591
#define GL_OPERAND1_RGB_EXT 0x8591
#define GL_OPERAND2_ALPHA 0x859A
#define GL_OPERAND2_ALPHA_ARB 0x859A
#define GL_OPERAND2_ALPHA_EXT 0x859A
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND2_RGB_ARB 0x8592
#define GL_OPERAND2_RGB_EXT 0x8592
#define GL_OPERAND3_ALPHA_NV 0x859B
#define GL_OPERAND3_RGB_NV 0x8593
#define GL_OPTIMAL_TILING_EXT 0x9584
#define GL_OP_ADD_EXT 0x8787
#define GL_OP_CLAMP_EXT 0x878E
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#define GL_OP_DOT3_EXT 0x8784
#define GL_OP_DOT4_EXT 0x8785
#define GL_OP_EXP_BASE_2_EXT 0x8791
#define GL_OP_FLOOR_EXT 0x878F
#define GL_OP_FRAC_EXT 0x8789
#define GL_OP_INDEX_EXT 0x8782
#define GL_OP_LOG_BASE_2_EXT 0x8792
#define GL_OP_MADD_EXT 0x8788
#define GL_OP_MAX_EXT 0x878A
#define GL_OP_MIN_EXT 0x878B
#define GL_OP_MOV_EXT 0x8799
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#define GL_OP_MUL_EXT 0x8786
#define GL_OP_NEGATE_EXT 0x8783
#define GL_OP_POWER_EXT 0x8793
#define GL_OP_RECIP_EXT 0x8794
#define GL_OP_RECIP_SQRT_EXT 0x8795
#define GL_OP_ROUND_EXT 0x8790
#define GL_OP_SET_GE_EXT 0x878C
#define GL_OP_SET_LT_EXT 0x878D
#define GL_OP_SUB_EXT 0x8796
#define GL_OR 0x1507
#define GL_ORDER 0x0A01
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUTPUT_COLOR0_EXT 0x879B
#define GL_OUTPUT_COLOR1_EXT 0x879C
#define GL_OUTPUT_FOG_EXT 0x87BD
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#define GL_OUTPUT_VERTEX_EXT 0x879A
#define GL_OUT_OF_MEMORY 0x0505
#define GL_OVERLAY_KHR 0x9296
#define GL_OVERLAY_NV 0x9296
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_CMYK_HINT_EXT 0x800E
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#define GL_PACK_INVERT_MESA 0x8758
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_RESAMPLE_OML 0x8984
#define GL_PACK_RESAMPLE_SGIX 0x842E
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#define GL_PALETTE4_RGB8_OES 0x8B90
#define GL_PALETTE4_RGBA4_OES 0x8B93
#define GL_PALETTE4_RGBA8_OES 0x8B91
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
#define GL_PALETTE8_RGB8_OES 0x8B95
#define GL_PALETTE8_RGBA4_OES 0x8B98
#define GL_PALETTE8_RGBA8_OES 0x8B96
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
#define GL_PARTIAL_SUCCESS_NV 0x902E
#define GL_PASS_THROUGH_NV 0x86E6
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_PATCHES 0x000E
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#define GL_PATH_COORD_COUNT_NV 0x909E
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#define GL_PATH_DASH_CAPS_NV 0x907B
#define GL_PATH_DASH_OFFSET_NV 0x907E
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#define GL_PATH_END_CAPS_NV 0x9076
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#define GL_PATH_FILL_MASK_NV 0x9081
#define GL_PATH_FILL_MODE_NV 0x9080
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#define GL_PATH_FORMAT_PS_NV 0x9071
#define GL_PATH_FORMAT_SVG_NV 0x9070
#define GL_PATH_GEN_COEFF_NV 0x90B1
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#define GL_PATH_GEN_MODE_NV 0x90B0
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#define GL_PATH_JOIN_STYLE_NV 0x9079
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
#define GL_PATH_MITER_LIMIT_NV 0x907A
#define GL_PATH_MODELVIEW_MATRIX_NV 0x0BA6
#define GL_PATH_MODELVIEW_NV 0x1700
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV 0x0BA3
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#define GL_PATH_PROJECTION_MATRIX_NV 0x0BA7
#define GL_PATH_PROJECTION_NV 0x1701
#define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#define GL_PATH_STENCIL_REF_NV 0x90B8
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#define GL_PATH_STROKE_MASK_NV 0x9084
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
#define GL_PERCENTAGE_AMD 0x8BC3
#define GL_PERFMON_RESULT_AMD 0x8BC6
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
#define GL_PERFQUERY_FLUSH_INTEL 0x83FA
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#define GL_PERFQUERY_WAIT_INTEL 0x83FB
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_PERTURB_EXT 0x85AE
#define GL_PER_GPU_STORAGE_BIT_NV 0x0800
#define GL_PER_GPU_STORAGE_NV 0x9548
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#define GL_PHONG_HINT_WIN 0x80EB
#define GL_PHONG_WIN 0x80EA
#define GL_PINLIGHT_NV 0x92A8
#define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD 0x91AE
#define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD 0x91AF
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#define GL_PIXEL_COUNT_NV 0x8866
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#define GL_PLUS_CLAMPED_NV 0x92B1
#define GL_PLUS_DARKER_NV 0x9292
#define GL_PLUS_NV 0x9291
#define GL_PN_TRIANGLES_ATI 0x87F0
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_BIT 0x00000002
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_SIZE_MAX_ARB 0x8127
#define GL_POINT_SIZE_MAX_EXT 0x8127
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MIN_ARB 0x8126
#define GL_POINT_SIZE_MIN_EXT 0x8126
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_POINT_SPRITE 0x8861
#define GL_POINT_SPRITE_ARB 0x8861
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POINT_SPRITE_NV 0x8861
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#define GL_POINT_TOKEN 0x0701
#define GL_POLYGON 0x0009
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_POLYGON_OFFSET_CLAMP_EXT 0x8E1B
#define GL_POLYGON_OFFSET_COMMAND_NV 0x000E
#define GL_POLYGON_OFFSET_EXT 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_POLYGON_TOKEN 0x0703
#define GL_POSITION 0x1203
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#define GL_PRESENT_DURATION_NV 0x8E2B
#define GL_PRESENT_TIME_NV 0x8E2A
#define GL_PRESERVE_ATI 0x8762
#define GL_PREVIOUS 0x8578
#define GL_PREVIOUS_ARB 0x8578
#define GL_PREVIOUS_EXT 0x8578
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#define GL_PRIMARY_COLOR 0x8577
#define GL_PRIMARY_COLOR_ARB 0x8577
#define GL_PRIMARY_COLOR_EXT 0x8577
#define GL_PRIMARY_COLOR_NV 0x852C
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
#define GL_PRIMITIVE_BOUNDING_BOX_ARB 0x92BE
#define GL_PRIMITIVE_ID_NV 0x8C7C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#define GL_PRIMITIVE_RESTART_NV 0x8558
#define GL_PROGRAM 0x82E2
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_FORMAT_MESA 0x875F
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINDING_ARB 0x8677
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#define GL_PROGRAM_ERROR_POSITION_NV 0x864B
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#define GL_PROGRAM_FORMAT_ARB 0x8876
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#define GL_PROGRAM_LENGTH_ARB 0x8627
#define GL_PROGRAM_LENGTH_NV 0x8627
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#define GL_PROGRAM_OBJECT_EXT 0x8B40
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#define GL_PROGRAM_PARAMETER_NV 0x8644
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#define GL_PROGRAM_RESIDENT_NV 0x8647
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROGRAM_STRING_ARB 0x8628
#define GL_PROGRAM_STRING_NV 0x8628
#define GL_PROGRAM_TARGET_NV 0x8646
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_PROJECTION 0x1701
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#define GL_PROXY_COLOR_TABLE 0x80D3
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#define GL_PROXY_HISTOGRAM 0x8025
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#define GL_PURGEABLE_APPLE 0x8A1D
#define GL_PURGED_CONTEXT_RESET_NV 0x92BB
#define GL_Q 0x2003
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#define GL_QUAD_ALPHA4_SGIS 0x811E
#define GL_QUAD_ALPHA8_SGIS 0x811F
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#define GL_QUAD_MESH_SUN 0x8614
#define GL_QUAD_STRIP 0x0008
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#define GL_QUARTER_BIT_ATI 0x00000010
#define GL_QUERY 0x82E3
#define GL_QUERY_ALL_EVENT_BITS_AMD 0xFFFFFFFF
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_AMD 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_NO_WAIT_NV 0x8E14
#define GL_QUERY_OBJECT_AMD 0x9153
#define GL_QUERY_OBJECT_EXT 0x9153
#define GL_QUERY_RESOURCE_BUFFEROBJECT_NV 0x9547
#define GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV 0x9542
#define GL_QUERY_RESOURCE_RENDERBUFFER_NV 0x9546
#define GL_QUERY_RESOURCE_SYS_RESERVED_NV 0x9544
#define GL_QUERY_RESOURCE_TEXTURE_NV 0x9545
#define GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV 0x9540
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_ARB 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
#define GL_QUERY_TARGET 0x82EA
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_WAIT_NV 0x8E13
#define GL_R 0x2002
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#define GL_R1UI_V3F_SUN 0x85C4
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
#define GL_RASTER_SAMPLES_EXT 0x9328
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#define GL_READ_ONLY 0x88B8
#define GL_READ_ONLY_ARB 0x88B8
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#define GL_READ_WRITE 0x88BA
#define GL_READ_WRITE_ARB 0x88BA
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#define GL_RECT_NV 0xF6
#define GL_RED 0x1903
#define GL_REDUCE 0x8016
#define GL_REDUCE_EXT 0x8016
#define GL_RED_BIAS 0x0D15
#define GL_RED_BITS 0x0D52
#define GL_RED_BIT_ATI 0x00000001
#define GL_RED_INTEGER 0x8D94
#define GL_RED_INTEGER_EXT 0x8D94
#define GL_RED_MAX_CLAMP_INGR 0x8564
#define GL_RED_MIN_CLAMP_INGR 0x8560
#define GL_RED_NV 0x1903
#define GL_RED_SCALE 0x0D14
#define GL_RED_SNORM 0x8F90
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_MESH_SHADER_NV 0x95A0
#define GL_REFERENCED_BY_TASK_SHADER_NV 0x95A1
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#define GL_REFERENCE_PLANE_SGIX 0x817D
#define GL_REFLECTION_MAP 0x8512
#define GL_REFLECTION_MAP_ARB 0x8512
#define GL_REFLECTION_MAP_EXT 0x8512
#define GL_REFLECTION_MAP_NV 0x8512
#define GL_REGISTER_COMBINERS_NV 0x8522
#define GL_REG_0_ATI 0x8921
#define GL_REG_10_ATI 0x892B
#define GL_REG_11_ATI 0x892C
#define GL_REG_12_ATI 0x892D
#define GL_REG_13_ATI 0x892E
#define GL_REG_14_ATI 0x892F
#define GL_REG_15_ATI 0x8930
#define GL_REG_16_ATI 0x8931
#define GL_REG_17_ATI 0x8932
#define GL_REG_18_ATI 0x8933
#define GL_REG_19_ATI 0x8934
#define GL_REG_1_ATI 0x8922
#define GL_REG_20_ATI 0x8935
#define GL_REG_21_ATI 0x8936
#define GL_REG_22_ATI 0x8937
#define GL_REG_23_ATI 0x8938
#define GL_REG_24_ATI 0x8939
#define GL_REG_25_ATI 0x893A
#define GL_REG_26_ATI 0x893B
#define GL_REG_27_ATI 0x893C
#define GL_REG_28_ATI 0x893D
#define GL_REG_29_ATI 0x893E
#define GL_REG_2_ATI 0x8923
#define GL_REG_30_ATI 0x893F
#define GL_REG_31_ATI 0x8940
#define GL_REG_3_ATI 0x8924
#define GL_REG_4_ATI 0x8925
#define GL_REG_5_ATI 0x8926
#define GL_REG_6_ATI 0x8927
#define GL_REG_7_ATI 0x8928
#define GL_REG_8_ATI 0x8929
#define GL_REG_9_ATI 0x892A
#define GL_RELATIVE_ARC_TO_NV 0xFF
#define GL_RELATIVE_CONIC_CURVE_TO_NV 0x1B
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#define GL_RELATIVE_LINE_TO_NV 0x05
#define GL_RELATIVE_MOVE_TO_NV 0x03
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#define GL_RELATIVE_RECT_NV 0xF7
#define GL_RELATIVE_ROUNDED_RECT2_NV 0xEB
#define GL_RELATIVE_ROUNDED_RECT4_NV 0xED
#define GL_RELATIVE_ROUNDED_RECT8_NV 0xEF
#define GL_RELATIVE_ROUNDED_RECT_NV 0xE9
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#define GL_RELEASED_APPLE 0x8A19
#define GL_RENDER 0x1C00
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#define GL_RENDERBUFFER_EXT 0x8D41
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD 0x91B2
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#define GL_RENDERER 0x1F01
#define GL_RENDER_GPU_MASK_NV 0x9558
#define GL_RENDER_MODE 0x0C40
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#define GL_REPLACE_EXT 0x8062
#define GL_REPLACE_MIDDLE_SUN 0x0002
#define GL_REPLACE_OLDEST_SUN 0x0003
#define GL_REPLACE_VALUE_AMD 0x874B
#define GL_REPLICATE_BORDER 0x8153
#define GL_REPLICATE_BORDER_HP 0x8153
#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV 0x937F
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#define GL_RESAMPLE_REPLICATE_SGIX 0x8433
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x8434
#define GL_RESCALE_NORMAL 0x803A
#define GL_RESCALE_NORMAL_EXT 0x803A
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_RESTART_PATH_NV 0xF0
#define GL_RESTART_SUN 0x0001
#define GL_RETAINED_APPLE 0x8A1B
#define GL_RETURN 0x0102
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB10_A2_EXT 0x8059
#define GL_RGB10_EXT 0x8052
#define GL_RGB12 0x8053
#define GL_RGB12_EXT 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16F_ARB 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16I_EXT 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16UI_EXT 0x8D77
#define GL_RGB16_EXT 0x8054
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB2_EXT 0x804E
#define GL_RGB32F 0x8815
#define GL_RGB32F_ARB 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32I_EXT 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB32UI_EXT 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB4_EXT 0x804F
#define GL_RGB4_S3TC 0x83A1
#define GL_RGB5 0x8050
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB5_A1_EXT 0x8057
#define GL_RGB5_EXT 0x8050
#define GL_RGB8 0x8051
#define GL_RGB8I 0x8D8F
#define GL_RGB8I_EXT 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8UI_EXT 0x8D7D
#define GL_RGB8_EXT 0x8051
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGB9_E5_EXT 0x8C3D
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA12_EXT 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16F_ARB 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16I_EXT 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16UI_EXT 0x8D76
#define GL_RGBA16_EXT 0x805B
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA2_EXT 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32F_ARB 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32I_EXT 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA32UI_EXT 0x8D70
#define GL_RGBA4 0x8056
#define GL_RGBA4_DXT5_S3TC 0x83A5
#define GL_RGBA4_EXT 0x8056
#define GL_RGBA4_S3TC 0x83A3
#define GL_RGBA8 0x8058
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8I_EXT 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8UI_EXT 0x8D7C
#define GL_RGBA8_EXT 0x8058
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_DXT5_S3TC 0x83A4
#define GL_RGBA_FLOAT16_APPLE 0x881A
#define GL_RGBA_FLOAT16_ATI 0x881A
#define GL_RGBA_FLOAT32_APPLE 0x8814
#define GL_RGBA_FLOAT32_ATI 0x8814
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGBA_INTEGER_EXT 0x8D99
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#define GL_RGBA_MODE 0x0C31
#define GL_RGBA_S3TC 0x83A2
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#define GL_RGBA_SNORM 0x8F93
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#define GL_RGB_422_APPLE 0x8A1F
#define GL_RGB_FLOAT16_APPLE 0x881B
#define GL_RGB_FLOAT16_ATI 0x881B
#define GL_RGB_FLOAT32_APPLE 0x8815
#define GL_RGB_FLOAT32_ATI 0x8815
#define GL_RGB_INTEGER 0x8D98
#define GL_RGB_INTEGER_EXT 0x8D98
#define GL_RGB_RAW_422_APPLE 0x8A51
#define GL_RGB_S3TC 0x83A0
#define GL_RGB_SCALE 0x8573
#define GL_RGB_SCALE_ARB 0x8573
#define GL_RGB_SCALE_EXT 0x8573
#define GL_RGB_SNORM 0x8F92
#define GL_RG_INTEGER 0x8228
#define GL_RG_SNORM 0x8F91
#define GL_RIGHT 0x0407
#define GL_ROUNDED_RECT2_NV 0xEA
#define GL_ROUNDED_RECT4_NV 0xEC
#define GL_ROUNDED_RECT8_NV 0xEE
#define GL_ROUNDED_RECT_NV 0xE8
#define GL_ROUND_NV 0x90A4
#define GL_S 0x2000
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARB 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARB 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_3D_ARB 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_BUFFER_AMD 0x9001
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_ARB 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#define GL_SAMPLER_OBJECT_AMD 0x9155
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_3DFX 0x86B4
#define GL_SAMPLES_ARB 0x80A9
#define GL_SAMPLES_EXT 0x80A9
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLES_PASSED_ARB 0x8914
#define GL_SAMPLES_SGIS 0x80A9
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#define GL_SAMPLE_LOCATION_ARB 0x8E50
#define GL_SAMPLE_LOCATION_NV 0x8E50
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_EXT 0x80A0
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#define GL_SAMPLE_MASK_NV 0x8E51
#define GL_SAMPLE_MASK_SGIS 0x80A0
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_POSITION_NV 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SAMPLE_SHADING_ARB 0x8C36
#define GL_SATURATE_BIT_ATI 0x00000040
#define GL_SCALAR_EXT 0x87BE
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#define GL_SCALE_BY_FOUR_NV 0x853F
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#define GL_SCALE_BY_TWO_NV 0x853E
#define GL_SCISSOR_BIT 0x00080000
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_BOX_EXCLUSIVE_NV 0x9556
#define GL_SCISSOR_COMMAND_NV 0x0011
#define GL_SCISSOR_TEST 0x0C11
#define GL_SCISSOR_TEST_EXCLUSIVE_NV 0x9555
#define GL_SCREEN_COORDINATES_REND 0x8490
#define GL_SCREEN_KHR 0x9295
#define GL_SCREEN_NV 0x9295
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#define GL_SECONDARY_COLOR_NV 0x852D
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#define GL_SELECT 0x1C02
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_SEMAPHORE_TYPE_BINARY_NV 0x95B4
#define GL_SEMAPHORE_TYPE_NV 0x95B3
#define GL_SEMAPHORE_TYPE_TIMELINE_NV 0x95B5
#define GL_SEPARABLE_2D 0x8012
#define GL_SEPARABLE_2D_EXT 0x8012
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#define GL_SET 0x150F
#define GL_SET_AMD 0x874A
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB 0x9551
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_CONSISTENT_NV 0x86DD
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#define GL_SHADER_OBJECT_ARB 0x8B48
#define GL_SHADER_OBJECT_EXT 0x8B48
#define GL_SHADER_OPERATION_NV 0x86DF
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADE_MODEL 0x0B54
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV 0x956F
#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV 0x9566
#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV 0x9567
#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV 0x9568
#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV 0x9569
#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV 0x956A
#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV 0x956B
#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV 0x9565
#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV 0x956C
#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV 0x956D
#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV 0x956E
#define GL_SHADING_RATE_IMAGE_BINDING_NV 0x955B
#define GL_SHADING_RATE_IMAGE_NV 0x9563
#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV 0x955E
#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV 0x955D
#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV 0x955C
#define GL_SHADING_RATE_NO_INVOCATIONS_NV 0x9564
#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV 0x95AE
#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV 0x95AF
#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV 0x95B0
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#define GL_SHARED_EDGE_NV 0xC0
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#define GL_SHININESS 0x1601
#define GL_SHORT 0x1402
#define GL_SIGNALED 0x9119
#define GL_SIGNED_ALPHA8_NV 0x8706
#define GL_SIGNED_ALPHA_NV 0x8705
#define GL_SIGNED_HILO16_NV 0x86FA
#define GL_SIGNED_HILO8_NV 0x885F
#define GL_SIGNED_HILO_NV 0x86F9
#define GL_SIGNED_IDENTITY_NV 0x853C
#define GL_SIGNED_INTENSITY8_NV 0x8708
#define GL_SIGNED_INTENSITY_NV 0x8707
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#define GL_SIGNED_LUMINANCE_NV 0x8701
#define GL_SIGNED_NEGATE_NV 0x853D
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SIGNED_RGB8_NV 0x86FF
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#define GL_SIGNED_RGBA8_NV 0x86FC
#define GL_SIGNED_RGBA_NV 0x86FB
#define GL_SIGNED_RGB_NV 0x86FE
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SINGLE_COLOR 0x81F9
#define GL_SINGLE_COLOR_EXT 0x81F9
#define GL_SKIP_COMPONENTS1_NV -6
#define GL_SKIP_COMPONENTS2_NV -5
#define GL_SKIP_COMPONENTS3_NV -4
#define GL_SKIP_COMPONENTS4_NV -3
#define GL_SKIP_DECODE_EXT 0x8A4A
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#define GL_SLICE_ACCUM_SUN 0x85CC
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#define GL_SLUMINANCE8_EXT 0x8C47
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#define GL_SLUMINANCE_EXT 0x8C46
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#define GL_SMALL_CW_ARC_TO_NV 0x14
#define GL_SMOOTH 0x1D01
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#define GL_SM_COUNT_NV 0x933B
#define GL_SOFTLIGHT_KHR 0x929C
#define GL_SOFTLIGHT_NV 0x929C
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE0_ALPHA_ARB 0x8588
#define GL_SOURCE0_ALPHA_EXT 0x8588
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE0_RGB_ARB 0x8580
#define GL_SOURCE0_RGB_EXT 0x8580
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE1_ALPHA_ARB 0x8589
#define GL_SOURCE1_ALPHA_EXT 0x8589
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE1_RGB_ARB 0x8581
#define GL_SOURCE1_RGB_EXT 0x8581
#define GL_SOURCE2_ALPHA 0x858A
#define GL_SOURCE2_ALPHA_ARB 0x858A
#define GL_SOURCE2_ALPHA_EXT 0x858A
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE2_RGB_ARB 0x8582
#define GL_SOURCE2_RGB_EXT 0x8582
#define GL_SOURCE3_ALPHA_NV 0x858B
#define GL_SOURCE3_RGB_NV 0x8583
#define GL_SPARE0_NV 0x852E
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#define GL_SPARE1_NV 0x852F
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
#define GL_SPARSE_STORAGE_BIT_ARB 0x0400
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
#define GL_SPECULAR 0x1202
#define GL_SPHERE_MAP 0x2402
#define GL_SPIR_V_BINARY 0x9552
#define GL_SPIR_V_BINARY_ARB 0x9552
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_SPOT_CUTOFF 0x1206
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPRITE_AXIAL_SGIX 0x814C
#define GL_SPRITE_AXIS_SGIX 0x814A
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#define GL_SPRITE_MODE_SGIX 0x8149
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#define GL_SPRITE_SGIX 0x8148
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#define GL_SQUARE_NV 0x90A3
#define GL_SR8_EXT 0x8FBD
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_ALPHA 0x858A
#define GL_SRC2_RGB 0x8582
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_ATOP_NV 0x928E
#define GL_SRC_COLOR 0x0300
#define GL_SRC_IN_NV 0x928A
#define GL_SRC_NV 0x9286
#define GL_SRC_OUT_NV 0x928C
#define GL_SRC_OVER_NV 0x9288
#define GL_SRG8_EXT 0x8FBE
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#define GL_SRGB8_EXT 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_ALPHA_EXT 0x8C42
#define GL_SRGB_DECODE_ARB 0x8299
#define GL_SRGB_EXT 0x8C40
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STANDARD_FONT_FORMAT_NV 0x936C
#define GL_STANDARD_FONT_NAME_NV 0x9072
#define GL_STATIC_ATI 0x8760
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_COPY_ARB 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_DRAW_ARB 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_READ_ARB 0x88E5
#define GL_STATIC_VERTEX_ARRAY_IBM 103061
#define GL_STENCIL 0x1802
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BITS 0x0D57
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX16_EXT 0x8D49
#define GL_STENCIL_INDEX1_EXT 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX4_EXT 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX8_EXT 0x8D48
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_REF_COMMAND_NV 0x000C
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_STENCIL_SAMPLES_NV 0x932E
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STORAGE_CACHED_APPLE 0x85BE
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#define GL_STORAGE_SHARED_APPLE 0x85BF
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_COPY_ARB 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_DRAW_ARB 0x88E0
#define GL_STREAM_RASTERIZATION_AMD 0x91A0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_READ_ARB 0x88E1
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR 0x00000004
#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR 0x00000008
#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR 0x00000001
#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR 0x00000040
#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV 0x00000100
#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR 0x00000080
#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR 0x00000010
#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR 0x00000020
#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR 0x00000002
#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR 0x9535
#define GL_SUBGROUP_SIZE_KHR 0x9532
#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR 0x9534
#define GL_SUBGROUP_SUPPORTED_STAGES_KHR 0x9533
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#define GL_SUBTRACT 0x84E7
#define GL_SUBTRACT_ARB 0x84E7
#define GL_SUB_ATI 0x8965
#define GL_SUCCESS_NV 0x902F
#define GL_SUPERSAMPLE_SCALE_X_NV 0x9372
#define GL_SUPERSAMPLE_SCALE_Y_NV 0x9373
#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B7
#define GL_SURFACE_MAPPED_NV 0x8700
#define GL_SURFACE_REGISTERED_NV 0x86FD
#define GL_SURFACE_STATE_NV 0x86EB
#define GL_SWIZZLE_STQ_ATI 0x8977
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#define GL_SWIZZLE_STRQ_ATI 0x897A
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#define GL_SWIZZLE_STR_ATI 0x8976
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#define GL_SYNC_CL_EVENT_ARB 0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#define GL_T 0x2001
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#define GL_T2F_IUI_V2F_EXT 0x81B1
#define GL_T2F_IUI_V3F_EXT 0x81B2
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_V3F 0x2A27
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_T4F_V4F 0x2A28
#define GL_TABLE_TOO_LARGE 0x8031
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#define GL_TANGENT_ARRAY_EXT 0x8439
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#define GL_TASK_SHADER_BIT_NV 0x00000080
#define GL_TASK_SHADER_NV 0x955A
#define GL_TASK_SUBROUTINE_NV 0x957D
#define GL_TASK_SUBROUTINE_UNIFORM_NV 0x957F
#define GL_TASK_WORK_GROUP_SIZE_NV 0x953F
#define GL_TERMINATE_SEQUENCE_COMMAND_NV 0x0000
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#define GL_TESSELLATION_MODE_AMD 0x9004
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE0_ARB 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE10_ARB 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE11_ARB 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE12_ARB 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE13_ARB 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE14_ARB 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE15_ARB 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE16_ARB 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE17_ARB 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE18_ARB 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE19_ARB 0x84D3
#define GL_TEXTURE1_ARB 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE20_ARB 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE21_ARB 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE22_ARB 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE23_ARB 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE24_ARB 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE25_ARB 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE26_ARB 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE27_ARB 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE28_ARB 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE29_ARB 0x84DD
#define GL_TEXTURE2_ARB 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE30_ARB 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE31_ARB 0x84DF
#define GL_TEXTURE3_ARB 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE4_ARB 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE5_ARB 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE6_ARB 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE7_ARB 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE8_ARB 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE9_ARB 0x84C9
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#define GL_TEXTURE_3D_EXT 0x806F
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#define GL_TEXTURE_4D_SGIS 0x8134
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#define GL_TEXTURE_BIT 0x00040000
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#define GL_TEXTURE_COORD_NV 0x8C79
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_EXT 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#define GL_TEXTURE_ENV 0x2300
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#define GL_TEXTURE_LIGHT_EXT 0x8350
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#define GL_TEXTURE_REDUCTION_MODE_ARB 0x9366
#define GL_TEXTURE_REDUCTION_MODE_EXT 0x9366
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHADER_NV 0x86DE
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#define GL_TEXTURE_TARGET 0x1006
#define GL_TEXTURE_TILING_EXT 0x9580
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#define GL_TEXTURE_VIEW 0x82B5
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#define GL_TILE_RASTER_ORDER_FIXED_MESA 0x8BB8
#define GL_TILE_RASTER_ORDER_INCREASING_X_MESA 0x8BB9
#define GL_TILE_RASTER_ORDER_INCREASING_Y_MESA 0x8BBA
#define GL_TILING_TYPES_EXT 0x9583
#define GL_TIMELINE_SEMAPHORE_VALUE_NV 0x9595
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIME_ELAPSED_EXT 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRACK_MATRIX_NV 0x8648
#define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
#define GL_TRANSFORM_BIT 0x00001000
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#define GL_TRANSLATE_2D_NV 0x9090
#define GL_TRANSLATE_3D_NV 0x9091
#define GL_TRANSLATE_X_NV 0x908E
#define GL_TRANSLATE_Y_NV 0x908F
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#define GL_TRANSPOSE_NV 0x862C
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_LIST_SUN 0x81D7
#define GL_TRIANGLE_MESH_SUN 0x8615
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#define GL_TRIANGULAR_NV 0x90A5
#define GL_TRUE 1
#define GL_TYPE 0x92FA
#define GL_UNCORRELATED_NV 0x9282
#define GL_UNDEFINED_APPLE 0x8A1C
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ADDRESS_COMMAND_NV 0x000A
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV 0x959C
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV 0x959D
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_ADDRESS_NV 0x936F
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#define GL_UNIFORM_BUFFER_LENGTH_NV 0x9370
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_UNIFIED_NV 0x936E
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_RESAMPLE_OML 0x8985
#define GL_UNPACK_RESAMPLE_SGIX 0x842F
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT16_NV 0x8FF0
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#define GL_UNSIGNED_INT64_ARB 0x140F
#define GL_UNSIGNED_INT64_NV 0x140F
#define GL_UNSIGNED_INT64_VEC2_ARB 0x8FF5
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#define GL_UNSIGNED_INT64_VEC3_ARB 0x8FF6
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#define GL_UNSIGNED_INT64_VEC4_ARB 0x8FF7
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#define GL_UNSIGNED_INT8_NV 0x8FEC
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#define GL_UNSIGNED_INVERT_NV 0x8537
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#define GL_UPLOAD_GPU_MASK_NVX 0x954A
#define GL_UPPER_LEFT 0x8CA2
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#define GL_UTF16_NV 0x909B
#define GL_UTF8_NV 0x909A
#define GL_UUID_SIZE_EXT 16
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VARIABLE_A_NV 0x8523
#define GL_VARIABLE_B_NV 0x8524
#define GL_VARIABLE_C_NV 0x8525
#define GL_VARIABLE_D_NV 0x8526
#define GL_VARIABLE_E_NV 0x8527
#define GL_VARIABLE_F_NV 0x8528
#define GL_VARIABLE_G_NV 0x8529
#define GL_VARIANT_ARRAY_EXT 0x87E8
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#define GL_VARIANT_EXT 0x87C1
#define GL_VARIANT_VALUE_EXT 0x87E4
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#define GL_VECTOR_EXT 0x87BF
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX23_BIT_PGI 0x00000004
#define GL_VERTEX4_BIT_PGI 0x00000008
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#define GL_VERTEX_ARRAY_EXT 0x8074
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
#define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
#define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
#define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
#define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
#define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
#define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
#define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
#define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
#define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
#define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
#define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
#define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
#define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
#define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
#define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_BLEND_ARB 0x86A7
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
#define GL_VERTEX_ID_NV 0x8C7B
#define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#define GL_VERTEX_PROGRAM_ARB 0x8620
#define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
#define GL_VERTEX_PROGRAM_NV 0x8620
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_ARB 0x8B31
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SHADER_EXT 0x8780
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#define GL_VERTEX_SOURCE_ATI 0x8774
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#define GL_VERTEX_STREAM0_ATI 0x876C
#define GL_VERTEX_STREAM1_ATI 0x876D
#define GL_VERTEX_STREAM2_ATI 0x876E
#define GL_VERTEX_STREAM3_ATI 0x876F
#define GL_VERTEX_STREAM4_ATI 0x8770
#define GL_VERTEX_STREAM5_ATI 0x8771
#define GL_VERTEX_STREAM6_ATI 0x8772
#define GL_VERTEX_STREAM7_ATI 0x8773
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#define GL_VERTICAL_LINE_TO_NV 0x08
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_VERTICES_SUBMITTED_ARB 0x82EE
#define GL_VIBRANCE_BIAS_NV 0x8719
#define GL_VIBRANCE_SCALE_NV 0x8713
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#define GL_VIDEO_BUFFER_NV 0x9020
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BIT 0x00000800
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_COMMAND_NV 0x0010
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_POSITION_W_SCALE_NV 0x937C
#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV 0x937D
#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV 0x937E
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV 0x9357
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV 0x9351
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV 0x9353
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV 0x9355
#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV 0x9356
#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV 0x9350
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV 0x9352
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV 0x9354
#define GL_VIEWPORT_SWIZZLE_W_NV 0x935B
#define GL_VIEWPORT_SWIZZLE_X_NV 0x9358
#define GL_VIEWPORT_SWIZZLE_Y_NV 0x9359
#define GL_VIEWPORT_SWIZZLE_Z_NV 0x935A
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_ASTC_10x10_RGBA 0x9393
#define GL_VIEW_CLASS_ASTC_10x5_RGBA 0x9390
#define GL_VIEW_CLASS_ASTC_10x6_RGBA 0x9391
#define GL_VIEW_CLASS_ASTC_10x8_RGBA 0x9392
#define GL_VIEW_CLASS_ASTC_12x10_RGBA 0x9394
#define GL_VIEW_CLASS_ASTC_12x12_RGBA 0x9395
#define GL_VIEW_CLASS_ASTC_4x4_RGBA 0x9388
#define GL_VIEW_CLASS_ASTC_5x4_RGBA 0x9389
#define GL_VIEW_CLASS_ASTC_5x5_RGBA 0x938A
#define GL_VIEW_CLASS_ASTC_6x5_RGBA 0x938B
#define GL_VIEW_CLASS_ASTC_6x6_RGBA 0x938C
#define GL_VIEW_CLASS_ASTC_8x5_RGBA 0x938D
#define GL_VIEW_CLASS_ASTC_8x6_RGBA 0x938E
#define GL_VIEW_CLASS_ASTC_8x8_RGBA 0x938F
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_EAC_R11 0x9383
#define GL_VIEW_CLASS_EAC_RG11 0x9384
#define GL_VIEW_CLASS_ETC2_EAC_RGBA 0x9387
#define GL_VIEW_CLASS_ETC2_RGB 0x9385
#define GL_VIEW_CLASS_ETC2_RGBA 0x9386
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#define GL_VIVIDLIGHT_NV 0x92A6
#define GL_VOLATILE_APPLE 0x8A1A
#define GL_WAIT_FAILED 0x911D
#define GL_WARPS_PER_SM_NV 0x933A
#define GL_WARP_SIZE_NV 0x9339
#define GL_WEIGHTED_AVERAGE_ARB 0x9367
#define GL_WEIGHTED_AVERAGE_EXT 0x9367
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#define GL_WINDOW_RECTANGLE_EXT 0x8F12
#define GL_WINDOW_RECTANGLE_MODE_EXT 0x8F13
#define GL_WRAP_BORDER_SUN 0x81D4
#define GL_WRITE_DISCARD_NV 0x88BE
#define GL_WRITE_ONLY 0x88B9
#define GL_WRITE_ONLY_ARB 0x88B9
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#define GL_W_EXT 0x87D8
#define GL_XOR 0x1506
#define GL_XOR_NV 0x1506
#define GL_X_EXT 0x87D5
#define GL_YCBAYCR8A_4224_NV 0x9032
#define GL_YCBCR_422_APPLE 0x85B9
#define GL_YCBCR_MESA 0x8757
#define GL_YCBYCR8_422_NV 0x9031
#define GL_YCRCBA_SGIX 0x8319
#define GL_YCRCB_422_SGIX 0x81BB
#define GL_YCRCB_444_SGIX 0x81BC
#define GL_YCRCB_SGIX 0x8318
#define GL_Y_EXT 0x87D6
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#define GL_ZERO 0
#define GL_ZERO_EXT 0x87DD
#define GL_ZERO_TO_ONE 0x935F
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_Z_EXT 0x87D7


#ifndef __khrplatform_h_
#define __khrplatform_h_

/*
** Copyright (c) 2008-2018 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

/* Khronos platform-specific types and definitions.
 *
 * The master copy of khrplatform.h is maintained in the Khronos EGL
 * Registry repository at https://github.com/KhronosGroup/EGL-Registry
 * The last semantic modification to khrplatform.h was at commit ID:
 *      67a3e0864c2d75ea5287b9f3d2eb74a745936692
 *
 * Adopters may modify this file to suit their platform. Adopters are
 * encouraged to submit platform specific modifications to the Khronos
 * group so that they can be included in future versions of this file.
 * Please submit changes by filing pull requests or issues on
 * the EGL Registry repository linked above.
 *
 *
 * See the Implementer's Guidelines for information about where this file
 * should be located on your system and for more details of its use:
 *    http://www.khronos.org/registry/implementers_guide.pdf
 *
 * This file should be included as
 *        #include <KHR/khrplatform.h>
 * by Khronos client API header files that use its types and defines.
 *
 * The types in khrplatform.h should only be used to define API-specific types.
 *
 * Types defined in khrplatform.h:
 *    khronos_int8_t              signed   8  bit
 *    khronos_uint8_t             unsigned 8  bit
 *    khronos_int16_t             signed   16 bit
 *    khronos_uint16_t            unsigned 16 bit
 *    khronos_int32_t             signed   32 bit
 *    khronos_uint32_t            unsigned 32 bit
 *    khronos_int64_t             signed   64 bit
 *    khronos_uint64_t            unsigned 64 bit
 *    khronos_intptr_t            signed   same number of bits as a pointer
 *    khronos_uintptr_t           unsigned same number of bits as a pointer
 *    khronos_ssize_t             signed   size
 *    khronos_usize_t             unsigned size
 *    khronos_float_t             signed   32 bit floating point
 *    khronos_time_ns_t           unsigned 64 bit time in nanoseconds
 *    khronos_utime_nanoseconds_t unsigned time interval or absolute time in
 *                                         nanoseconds
 *    khronos_stime_nanoseconds_t signed time interval in nanoseconds
 *    khronos_boolean_enum_t      enumerated boolean type. This should
 *      only be used as a base type when a client API's boolean type is
 *      an enum. Client APIs which use an integer or other type for
 *      booleans cannot use this as the base type for their boolean.
 *
 * Tokens defined in khrplatform.h:
 *
 *    KHRONOS_FALSE, KHRONOS_TRUE Enumerated boolean false/true values.
 *
 *    KHRONOS_SUPPORT_INT64 is 1 if 64 bit integers are supported; otherwise 0.
 *    KHRONOS_SUPPORT_FLOAT is 1 if floats are supported; otherwise 0.
 *
 * Calling convention macros defined in this file:
 *    KHRONOS_APICALL
 *    KHRONOS_GLAD_API_PTR
 *    KHRONOS_APIATTRIBUTES
 *
 * These may be used in function prototypes as:
 *
 *      KHRONOS_APICALL void KHRONOS_GLAD_API_PTR funcname(
 *                                  int arg1,
 *                                  int arg2) KHRONOS_APIATTRIBUTES;
 */

#if defined(__SCITECH_SNAP__) && !defined(KHRONOS_STATIC)
#   define KHRONOS_STATIC 1
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APICALL
 *-------------------------------------------------------------------------
 * This precedes the return type of the function in the function prototype.
 */
#if defined(KHRONOS_STATIC)
    /* If the preprocessor constant KHRONOS_STATIC is defined, make the
     * header compatible with static linking. */
#   define KHRONOS_APICALL
#elif defined(_WIN32)
#   define KHRONOS_APICALL __declspec(dllimport)
#elif defined (__SYMBIAN32__)
#   define KHRONOS_APICALL IMPORT_C
#elif defined(__ANDROID__)
#   define KHRONOS_APICALL __attribute__((visibility("default")))
#else
#   define KHRONOS_APICALL
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_GLAD_API_PTR
 *-------------------------------------------------------------------------
 * This follows the return type of the function  and precedes the function
 * name in the function prototype.
 */
#if defined(_WIN32) && !defined(_WIN32_WCE) && !defined(__SCITECH_SNAP__)
    /* Win32 but not WinCE */
#   define KHRONOS_GLAD_API_PTR __stdcall
#else
#   define KHRONOS_GLAD_API_PTR
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIATTRIBUTES
 *-------------------------------------------------------------------------
 * This follows the closing parenthesis of the function prototype arguments.
 */
#if defined (__ARMCC_2__)
#define KHRONOS_APIATTRIBUTES __softfp
#else
#define KHRONOS_APIATTRIBUTES
#endif

/*-------------------------------------------------------------------------
 * basic type definitions
 *-----------------------------------------------------------------------*/
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || defined(__GNUC__) || defined(__SCO__) || defined(__USLC__)


/*
 * Using <stdint.h>
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(__VMS ) || defined(__sgi)

/*
 * Using <inttypes.h>
 */
#include <inttypes.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(_WIN32) && !defined(__SCITECH_SNAP__)

/*
 * Win32
 */
typedef __int32                 khronos_int32_t;
typedef unsigned __int32        khronos_uint32_t;
typedef __int64                 khronos_int64_t;
typedef unsigned __int64        khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(__sun__) || defined(__digital__)

/*
 * Sun or Digital
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#if defined(__arch64__) || defined(_LP64)
typedef long int                khronos_int64_t;
typedef unsigned long int       khronos_uint64_t;
#else
typedef long long int           khronos_int64_t;
typedef unsigned long long int  khronos_uint64_t;
#endif /* __arch64__ */
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif 0

/*
 * Hypothetical platform with no float or int64 support
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#define KHRONOS_SUPPORT_INT64   0
#define KHRONOS_SUPPORT_FLOAT   0

#else

/*
 * Generic fallback
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#endif


/*
 * Types that are (so far) the same on all platforms
 */
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;

/*
 * Types that differ between LLP64 and LP64 architectures - in LLP64,
 * pointers are 64 bits, but 'long' is still 32 bits. Win64 appears
 * to be the only LLP64 architecture in current use.
 */
#ifdef _WIN64
typedef signed   long long int khronos_intptr_t;
typedef unsigned long long int khronos_uintptr_t;
typedef signed   long long int khronos_ssize_t;
typedef unsigned long long int khronos_usize_t;
#else
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
#endif

#if KHRONOS_SUPPORT_FLOAT
/*
 * Float type
 */
typedef          float         khronos_float_t;
#endif

#if KHRONOS_SUPPORT_INT64
/* Time types
 *
 * These types can be used to represent a time interval in nanoseconds or
 * an absolute Unadjusted System Time.  Unadjusted System Time is the number
 * of nanoseconds since some arbitrary system event (e.g. since the last
 * time the system booted).  The Unadjusted System Time is an unsigned
 * 64 bit value that wraps back to 0 every 584 years.  Time intervals
 * may be either signed or unsigned.
 */
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
#endif

/*
 * Dummy value used to pad enum types to 32 bits.
 */
#ifndef KHRONOS_MAX_ENUM
#define KHRONOS_MAX_ENUM 0x7FFFFFFF
#endif

/*
 * Enumerated boolean type
 *
 * Values other than zero should be considered to be true.  Therefore
 * comparisons should not be made against KHRONOS_TRUE.
 */
typedef enum {
    KHRONOS_FALSE = 0,
    KHRONOS_TRUE  = 1,
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM
} khronos_boolean_enum_t;

#endif /* __khrplatform_h_ */

typedef unsigned int GLenum;

typedef unsigned char GLboolean;

typedef unsigned int GLbitfield;

typedef void GLvoid;

typedef khronos_int8_t GLbyte;

typedef khronos_uint8_t GLubyte;

typedef khronos_int16_t GLshort;

typedef khronos_uint16_t GLushort;

typedef int GLint;

typedef unsigned int GLuint;

typedef khronos_int32_t GLclampx;

typedef int GLsizei;

typedef khronos_float_t GLfloat;

typedef khronos_float_t GLclampf;

typedef double GLdouble;

typedef double GLclampd;

typedef void *GLeglClientBufferEXT;

typedef void *GLeglImageOES;

typedef char GLchar;

typedef char GLcharARB;

#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif

typedef khronos_uint16_t GLhalf;

typedef khronos_uint16_t GLhalfARB;

typedef khronos_int32_t GLfixed;

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif

typedef khronos_int64_t GLint64;

typedef khronos_int64_t GLint64EXT;

typedef khronos_uint64_t GLuint64;

typedef khronos_uint64_t GLuint64EXT;

typedef struct __GLsync *GLsync;

struct _cl_context;

struct _cl_event;

typedef void (AGX_CUSTOM_GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (AGX_CUSTOM_GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (AGX_CUSTOM_GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (AGX_CUSTOM_GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);

typedef unsigned short GLhalfNV;

typedef GLintptr GLvdpauSurfaceNV;

typedef void (AGX_CUSTOM_GLAD_API_PTR *GLVULKANPROCNV)(void);



#define GL_VERSION_1_0 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_0;
#define GL_VERSION_1_1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_1;
#define GL_VERSION_1_2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_2;
#define GL_VERSION_1_3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_3;
#define GL_VERSION_1_4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_4;
#define GL_VERSION_1_5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_1_5;
#define GL_VERSION_2_0 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_2_0;
#define GL_VERSION_2_1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_2_1;
#define GL_VERSION_3_0 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_3_0;
#define GL_VERSION_3_1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_3_1;
#define GL_VERSION_3_2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_3_2;
#define GL_VERSION_3_3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_3_3;
#define GL_VERSION_4_0 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_0;
#define GL_VERSION_4_1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_1;
#define GL_VERSION_4_2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_2;
#define GL_VERSION_4_3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_3;
#define GL_VERSION_4_4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_4;
#define GL_VERSION_4_5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_5;
#define GL_VERSION_4_6 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_VERSION_4_6;
#define GL_3DFX_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_3DFX_multisample;
#define GL_3DFX_tbuffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_3DFX_tbuffer;
#define GL_3DFX_texture_compression_FXT1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_3DFX_texture_compression_FXT1;
#define GL_AMD_blend_minmax_factor 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_blend_minmax_factor;
#define GL_AMD_conservative_depth 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_conservative_depth;
#define GL_AMD_debug_output 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_debug_output;
#define GL_AMD_depth_clamp_separate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_depth_clamp_separate;
#define GL_AMD_draw_buffers_blend 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_draw_buffers_blend;
#define GL_AMD_framebuffer_multisample_advanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_framebuffer_multisample_advanced;
#define GL_AMD_framebuffer_sample_positions 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_framebuffer_sample_positions;
#define GL_AMD_gcn_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_gcn_shader;
#define GL_AMD_gpu_shader_half_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_half_float;
#define GL_AMD_gpu_shader_int16 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int16;
#define GL_AMD_gpu_shader_int64 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int64;
#define GL_AMD_interleaved_elements 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_interleaved_elements;
#define GL_AMD_multi_draw_indirect 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_multi_draw_indirect;
#define GL_AMD_name_gen_delete 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_name_gen_delete;
#define GL_AMD_occlusion_query_event 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_occlusion_query_event;
#define GL_AMD_performance_monitor 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_performance_monitor;
#define GL_AMD_pinned_memory 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_pinned_memory;
#define GL_AMD_query_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_query_buffer_object;
#define GL_AMD_sample_positions 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_sample_positions;
#define GL_AMD_seamless_cubemap_per_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_seamless_cubemap_per_texture;
#define GL_AMD_shader_atomic_counter_ops 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_atomic_counter_ops;
#define GL_AMD_shader_ballot 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_ballot;
#define GL_AMD_shader_explicit_vertex_parameter 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_explicit_vertex_parameter;
#define GL_AMD_shader_gpu_shader_half_float_fetch 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_gpu_shader_half_float_fetch;
#define GL_AMD_shader_image_load_store_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_image_load_store_lod;
#define GL_AMD_shader_stencil_export 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_stencil_export;
#define GL_AMD_shader_trinary_minmax 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_shader_trinary_minmax;
#define GL_AMD_sparse_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_sparse_texture;
#define GL_AMD_stencil_operation_extended 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_stencil_operation_extended;
#define GL_AMD_texture_gather_bias_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_texture_gather_bias_lod;
#define GL_AMD_texture_texture4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_texture_texture4;
#define GL_AMD_transform_feedback3_lines_triangles 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_transform_feedback3_lines_triangles;
#define GL_AMD_transform_feedback4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_transform_feedback4;
#define GL_AMD_vertex_shader_layer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_layer;
#define GL_AMD_vertex_shader_tessellator 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_tessellator;
#define GL_AMD_vertex_shader_viewport_index 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_viewport_index;
#define GL_APPLE_aux_depth_stencil 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_aux_depth_stencil;
#define GL_APPLE_client_storage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_client_storage;
#define GL_APPLE_element_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_element_array;
#define GL_APPLE_fence 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_fence;
#define GL_APPLE_float_pixels 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_float_pixels;
#define GL_APPLE_flush_buffer_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_flush_buffer_range;
#define GL_APPLE_object_purgeable 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_object_purgeable;
#define GL_APPLE_rgb_422 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_rgb_422;
#define GL_APPLE_row_bytes 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_row_bytes;
#define GL_APPLE_specular_vector 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_specular_vector;
#define GL_APPLE_texture_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_texture_range;
#define GL_APPLE_transform_hint 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_transform_hint;
#define GL_APPLE_vertex_array_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_object;
#define GL_APPLE_vertex_array_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_range;
#define GL_APPLE_vertex_program_evaluators 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_vertex_program_evaluators;
#define GL_APPLE_ycbcr_422 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_APPLE_ycbcr_422;
#define GL_ARB_ES2_compatibility 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_ES2_compatibility;
#define GL_ARB_ES3_1_compatibility 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_ES3_1_compatibility;
#define GL_ARB_ES3_2_compatibility 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_ES3_2_compatibility;
#define GL_ARB_ES3_compatibility 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_ES3_compatibility;
#define GL_ARB_arrays_of_arrays 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_arrays_of_arrays;
#define GL_ARB_base_instance 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_base_instance;
#define GL_ARB_bindless_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_bindless_texture;
#define GL_ARB_blend_func_extended 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_blend_func_extended;
#define GL_ARB_buffer_storage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_buffer_storage;
#define GL_ARB_cl_event 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_cl_event;
#define GL_ARB_clear_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_clear_buffer_object;
#define GL_ARB_clear_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_clear_texture;
#define GL_ARB_clip_control 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_clip_control;
#define GL_ARB_color_buffer_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_color_buffer_float;
#define GL_ARB_compatibility 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_compatibility;
#define GL_ARB_compressed_texture_pixel_storage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_compressed_texture_pixel_storage;
#define GL_ARB_compute_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_compute_shader;
#define GL_ARB_compute_variable_group_size 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_compute_variable_group_size;
#define GL_ARB_conditional_render_inverted 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_conditional_render_inverted;
#define GL_ARB_conservative_depth 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_conservative_depth;
#define GL_ARB_copy_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_copy_buffer;
#define GL_ARB_copy_image 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_copy_image;
#define GL_ARB_cull_distance 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_cull_distance;
#define GL_ARB_debug_output 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_debug_output;
#define GL_ARB_depth_buffer_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_depth_buffer_float;
#define GL_ARB_depth_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_depth_clamp;
#define GL_ARB_depth_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_depth_texture;
#define GL_ARB_derivative_control 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_derivative_control;
#define GL_ARB_direct_state_access 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_direct_state_access;
#define GL_ARB_draw_buffers 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_draw_buffers;
#define GL_ARB_draw_buffers_blend 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_draw_buffers_blend;
#define GL_ARB_draw_elements_base_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_draw_elements_base_vertex;
#define GL_ARB_draw_indirect 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_draw_indirect;
#define GL_ARB_draw_instanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_draw_instanced;
#define GL_ARB_enhanced_layouts 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_enhanced_layouts;
#define GL_ARB_explicit_attrib_location 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_explicit_attrib_location;
#define GL_ARB_explicit_uniform_location 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_explicit_uniform_location;
#define GL_ARB_fragment_coord_conventions 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_coord_conventions;
#define GL_ARB_fragment_layer_viewport 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_layer_viewport;
#define GL_ARB_fragment_program 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_program;
#define GL_ARB_fragment_program_shadow 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_program_shadow;
#define GL_ARB_fragment_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_shader;
#define GL_ARB_fragment_shader_interlock 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_fragment_shader_interlock;
#define GL_ARB_framebuffer_no_attachments 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_no_attachments;
#define GL_ARB_framebuffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_object;
#define GL_ARB_framebuffer_sRGB 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_sRGB;
#define GL_ARB_geometry_shader4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_geometry_shader4;
#define GL_ARB_get_program_binary 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_get_program_binary;
#define GL_ARB_get_texture_sub_image 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_get_texture_sub_image;
#define GL_ARB_gl_spirv 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_gl_spirv;
#define GL_ARB_gpu_shader5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader5;
#define GL_ARB_gpu_shader_fp64 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_fp64;
#define GL_ARB_gpu_shader_int64 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_int64;
#define GL_ARB_half_float_pixel 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_half_float_pixel;
#define GL_ARB_half_float_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_half_float_vertex;
#define GL_ARB_imaging 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_imaging;
#define GL_ARB_indirect_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_indirect_parameters;
#define GL_ARB_instanced_arrays 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_instanced_arrays;
#define GL_ARB_internalformat_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_internalformat_query;
#define GL_ARB_internalformat_query2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_internalformat_query2;
#define GL_ARB_invalidate_subdata 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_invalidate_subdata;
#define GL_ARB_map_buffer_alignment 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_map_buffer_alignment;
#define GL_ARB_map_buffer_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_map_buffer_range;
#define GL_ARB_matrix_palette 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_matrix_palette;
#define GL_ARB_multi_bind 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_multi_bind;
#define GL_ARB_multi_draw_indirect 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_multi_draw_indirect;
#define GL_ARB_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_multisample;
#define GL_ARB_multitexture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_multitexture;
#define GL_ARB_occlusion_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_occlusion_query;
#define GL_ARB_occlusion_query2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_occlusion_query2;
#define GL_ARB_parallel_shader_compile 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_parallel_shader_compile;
#define GL_ARB_pipeline_statistics_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_pipeline_statistics_query;
#define GL_ARB_pixel_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_pixel_buffer_object;
#define GL_ARB_point_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_point_parameters;
#define GL_ARB_point_sprite 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_point_sprite;
#define GL_ARB_polygon_offset_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_polygon_offset_clamp;
#define GL_ARB_post_depth_coverage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_post_depth_coverage;
#define GL_ARB_program_interface_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_program_interface_query;
#define GL_ARB_provoking_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_provoking_vertex;
#define GL_ARB_query_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_query_buffer_object;
#define GL_ARB_robust_buffer_access_behavior 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_robust_buffer_access_behavior;
#define GL_ARB_robustness 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_robustness;
#define GL_ARB_robustness_isolation 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_robustness_isolation;
#define GL_ARB_sample_locations 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sample_locations;
#define GL_ARB_sample_shading 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sample_shading;
#define GL_ARB_sampler_objects 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sampler_objects;
#define GL_ARB_seamless_cube_map 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_seamless_cube_map;
#define GL_ARB_seamless_cubemap_per_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_seamless_cubemap_per_texture;
#define GL_ARB_separate_shader_objects 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_separate_shader_objects;
#define GL_ARB_shader_atomic_counter_ops 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counter_ops;
#define GL_ARB_shader_atomic_counters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counters;
#define GL_ARB_shader_ballot 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_ballot;
#define GL_ARB_shader_bit_encoding 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_bit_encoding;
#define GL_ARB_shader_clock 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_clock;
#define GL_ARB_shader_draw_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_draw_parameters;
#define GL_ARB_shader_group_vote 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_group_vote;
#define GL_ARB_shader_image_load_store 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_image_load_store;
#define GL_ARB_shader_image_size 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_image_size;
#define GL_ARB_shader_objects 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_objects;
#define GL_ARB_shader_precision 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_precision;
#define GL_ARB_shader_stencil_export 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_stencil_export;
#define GL_ARB_shader_storage_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_storage_buffer_object;
#define GL_ARB_shader_subroutine 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_subroutine;
#define GL_ARB_shader_texture_image_samples 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_texture_image_samples;
#define GL_ARB_shader_texture_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_texture_lod;
#define GL_ARB_shader_viewport_layer_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shader_viewport_layer_array;
#define GL_ARB_shading_language_100 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shading_language_100;
#define GL_ARB_shading_language_420pack 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shading_language_420pack;
#define GL_ARB_shading_language_include 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shading_language_include;
#define GL_ARB_shading_language_packing 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shading_language_packing;
#define GL_ARB_shadow 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shadow;
#define GL_ARB_shadow_ambient 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_shadow_ambient;
#define GL_ARB_sparse_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sparse_buffer;
#define GL_ARB_sparse_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture;
#define GL_ARB_sparse_texture2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture2;
#define GL_ARB_sparse_texture_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture_clamp;
#define GL_ARB_spirv_extensions 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_spirv_extensions;
#define GL_ARB_stencil_texturing 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_stencil_texturing;
#define GL_ARB_sync 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_sync;
#define GL_ARB_tessellation_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_tessellation_shader;
#define GL_ARB_texture_barrier 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_barrier;
#define GL_ARB_texture_border_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_border_clamp;
#define GL_ARB_texture_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object;
#define GL_ARB_texture_buffer_object_rgb32 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object_rgb32;
#define GL_ARB_texture_buffer_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_range;
#define GL_ARB_texture_compression 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_compression;
#define GL_ARB_texture_compression_bptc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_compression_bptc;
#define GL_ARB_texture_compression_rgtc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_compression_rgtc;
#define GL_ARB_texture_cube_map 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map;
#define GL_ARB_texture_cube_map_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map_array;
#define GL_ARB_texture_env_add 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_env_add;
#define GL_ARB_texture_env_combine 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_env_combine;
#define GL_ARB_texture_env_crossbar 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_env_crossbar;
#define GL_ARB_texture_env_dot3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_env_dot3;
#define GL_ARB_texture_filter_anisotropic 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_filter_anisotropic;
#define GL_ARB_texture_filter_minmax 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_filter_minmax;
#define GL_ARB_texture_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_float;
#define GL_ARB_texture_gather 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_gather;
#define GL_ARB_texture_mirror_clamp_to_edge 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_mirror_clamp_to_edge;
#define GL_ARB_texture_mirrored_repeat 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_mirrored_repeat;
#define GL_ARB_texture_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_multisample;
#define GL_ARB_texture_non_power_of_two 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_non_power_of_two;
#define GL_ARB_texture_query_levels 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_query_levels;
#define GL_ARB_texture_query_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_query_lod;
#define GL_ARB_texture_rectangle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_rectangle;
#define GL_ARB_texture_rg 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_rg;
#define GL_ARB_texture_rgb10_a2ui 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_rgb10_a2ui;
#define GL_ARB_texture_stencil8 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_stencil8;
#define GL_ARB_texture_storage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_storage;
#define GL_ARB_texture_storage_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_storage_multisample;
#define GL_ARB_texture_swizzle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_swizzle;
#define GL_ARB_texture_view 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_texture_view;
#define GL_ARB_timer_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_timer_query;
#define GL_ARB_transform_feedback2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback2;
#define GL_ARB_transform_feedback3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback3;
#define GL_ARB_transform_feedback_instanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_instanced;
#define GL_ARB_transform_feedback_overflow_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_overflow_query;
#define GL_ARB_transpose_matrix 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_transpose_matrix;
#define GL_ARB_uniform_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_uniform_buffer_object;
#define GL_ARB_vertex_array_bgra 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_array_bgra;
#define GL_ARB_vertex_array_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_array_object;
#define GL_ARB_vertex_attrib_64bit 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_64bit;
#define GL_ARB_vertex_attrib_binding 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_binding;
#define GL_ARB_vertex_blend 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_blend;
#define GL_ARB_vertex_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_buffer_object;
#define GL_ARB_vertex_program 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_program;
#define GL_ARB_vertex_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_shader;
#define GL_ARB_vertex_type_10f_11f_11f_rev 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_type_10f_11f_11f_rev;
#define GL_ARB_vertex_type_2_10_10_10_rev 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_vertex_type_2_10_10_10_rev;
#define GL_ARB_viewport_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_viewport_array;
#define GL_ARB_window_pos 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ARB_window_pos;
#define GL_ATI_draw_buffers 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_draw_buffers;
#define GL_ATI_element_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_element_array;
#define GL_ATI_envmap_bumpmap 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_envmap_bumpmap;
#define GL_ATI_fragment_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_fragment_shader;
#define GL_ATI_map_object_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_map_object_buffer;
#define GL_ATI_meminfo 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_meminfo;
#define GL_ATI_pixel_format_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_pixel_format_float;
#define GL_ATI_pn_triangles 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_pn_triangles;
#define GL_ATI_separate_stencil 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_separate_stencil;
#define GL_ATI_text_fragment_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_text_fragment_shader;
#define GL_ATI_texture_env_combine3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_texture_env_combine3;
#define GL_ATI_texture_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_texture_float;
#define GL_ATI_texture_mirror_once 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_texture_mirror_once;
#define GL_ATI_vertex_array_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_vertex_array_object;
#define GL_ATI_vertex_attrib_array_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_vertex_attrib_array_object;
#define GL_ATI_vertex_streams 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_ATI_vertex_streams;
#define GL_EXT_422_pixels 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_422_pixels;
#define GL_EXT_EGL_image_storage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_EGL_image_storage;
#define GL_EXT_EGL_sync 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_EGL_sync;
#define GL_EXT_abgr 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_abgr;
#define GL_EXT_bgra 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_bgra;
#define GL_EXT_bindable_uniform 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_bindable_uniform;
#define GL_EXT_blend_color 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_color;
#define GL_EXT_blend_equation_separate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_equation_separate;
#define GL_EXT_blend_func_separate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_func_separate;
#define GL_EXT_blend_logic_op 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_logic_op;
#define GL_EXT_blend_minmax 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_minmax;
#define GL_EXT_blend_subtract 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_blend_subtract;
#define GL_EXT_clip_volume_hint 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_clip_volume_hint;
#define GL_EXT_cmyka 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_cmyka;
#define GL_EXT_color_subtable 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_color_subtable;
#define GL_EXT_compiled_vertex_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_compiled_vertex_array;
#define GL_EXT_convolution 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_convolution;
#define GL_EXT_coordinate_frame 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_coordinate_frame;
#define GL_EXT_copy_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_copy_texture;
#define GL_EXT_cull_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_cull_vertex;
#define GL_EXT_debug_label 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_debug_label;
#define GL_EXT_debug_marker 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_debug_marker;
#define GL_EXT_depth_bounds_test 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_depth_bounds_test;
#define GL_EXT_direct_state_access 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_direct_state_access;
#define GL_EXT_draw_buffers2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_draw_buffers2;
#define GL_EXT_draw_instanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_draw_instanced;
#define GL_EXT_draw_range_elements 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_draw_range_elements;
#define GL_EXT_external_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_external_buffer;
#define GL_EXT_fog_coord 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_fog_coord;
#define GL_EXT_framebuffer_blit 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_blit;
#define GL_EXT_framebuffer_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample;
#define GL_EXT_framebuffer_multisample_blit_scaled 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample_blit_scaled;
#define GL_EXT_framebuffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_object;
#define GL_EXT_framebuffer_sRGB 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_sRGB;
#define GL_EXT_geometry_shader4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_geometry_shader4;
#define GL_EXT_gpu_program_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_gpu_program_parameters;
#define GL_EXT_gpu_shader4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_gpu_shader4;
#define GL_EXT_histogram 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_histogram;
#define GL_EXT_index_array_formats 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_index_array_formats;
#define GL_EXT_index_func 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_index_func;
#define GL_EXT_index_material 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_index_material;
#define GL_EXT_index_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_index_texture;
#define GL_EXT_light_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_light_texture;
#define GL_EXT_memory_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_memory_object;
#define GL_EXT_memory_object_fd 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_memory_object_fd;
#define GL_EXT_memory_object_win32 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_memory_object_win32;
#define GL_EXT_misc_attribute 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_misc_attribute;
#define GL_EXT_multi_draw_arrays 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_multi_draw_arrays;
#define GL_EXT_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_multisample;
#define GL_EXT_multiview_tessellation_geometry_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_multiview_tessellation_geometry_shader;
#define GL_EXT_multiview_texture_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_multiview_texture_multisample;
#define GL_EXT_multiview_timer_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_multiview_timer_query;
#define GL_EXT_packed_depth_stencil 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_packed_depth_stencil;
#define GL_EXT_packed_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_packed_float;
#define GL_EXT_packed_pixels 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_packed_pixels;
#define GL_EXT_paletted_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_paletted_texture;
#define GL_EXT_pixel_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_pixel_buffer_object;
#define GL_EXT_pixel_transform 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_pixel_transform;
#define GL_EXT_pixel_transform_color_table 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_pixel_transform_color_table;
#define GL_EXT_point_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_point_parameters;
#define GL_EXT_polygon_offset 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_polygon_offset;
#define GL_EXT_polygon_offset_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_polygon_offset_clamp;
#define GL_EXT_post_depth_coverage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_post_depth_coverage;
#define GL_EXT_provoking_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_provoking_vertex;
#define GL_EXT_raster_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_raster_multisample;
#define GL_EXT_rescale_normal 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_rescale_normal;
#define GL_EXT_secondary_color 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_secondary_color;
#define GL_EXT_semaphore 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_semaphore;
#define GL_EXT_semaphore_fd 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_semaphore_fd;
#define GL_EXT_semaphore_win32 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_semaphore_win32;
#define GL_EXT_separate_shader_objects 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_separate_shader_objects;
#define GL_EXT_separate_specular_color 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_separate_specular_color;
#define GL_EXT_shader_framebuffer_fetch 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch;
#define GL_EXT_shader_framebuffer_fetch_non_coherent 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent;
#define GL_EXT_shader_image_load_formatted 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_formatted;
#define GL_EXT_shader_image_load_store 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_store;
#define GL_EXT_shader_integer_mix 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shader_integer_mix;
#define GL_EXT_shadow_funcs 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shadow_funcs;
#define GL_EXT_shared_texture_palette 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_shared_texture_palette;
#define GL_EXT_sparse_texture2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_sparse_texture2;
#define GL_EXT_stencil_clear_tag 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_stencil_clear_tag;
#define GL_EXT_stencil_two_side 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_stencil_two_side;
#define GL_EXT_stencil_wrap 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_stencil_wrap;
#define GL_EXT_subtexture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_subtexture;
#define GL_EXT_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture;
#define GL_EXT_texture3D 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture3D;
#define GL_EXT_texture_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_array;
#define GL_EXT_texture_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_buffer_object;
#define GL_EXT_texture_compression_latc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_latc;
#define GL_EXT_texture_compression_rgtc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_rgtc;
#define GL_EXT_texture_compression_s3tc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_s3tc;
#define GL_EXT_texture_cube_map 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_cube_map;
#define GL_EXT_texture_env_add 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_env_add;
#define GL_EXT_texture_env_combine 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_env_combine;
#define GL_EXT_texture_env_dot3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_env_dot3;
#define GL_EXT_texture_filter_anisotropic 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_filter_anisotropic;
#define GL_EXT_texture_filter_minmax 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_filter_minmax;
#define GL_EXT_texture_integer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_integer;
#define GL_EXT_texture_lod_bias 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_lod_bias;
#define GL_EXT_texture_mirror_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_mirror_clamp;
#define GL_EXT_texture_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_object;
#define GL_EXT_texture_perturb_normal 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_perturb_normal;
#define GL_EXT_texture_sRGB 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB;
#define GL_EXT_texture_sRGB_R8 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_R8;
#define GL_EXT_texture_sRGB_RG8 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_RG8;
#define GL_EXT_texture_sRGB_decode 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_decode;
#define GL_EXT_texture_shadow_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_shadow_lod;
#define GL_EXT_texture_shared_exponent 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_shared_exponent;
#define GL_EXT_texture_snorm 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_snorm;
#define GL_EXT_texture_swizzle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_texture_swizzle;
#define GL_EXT_timer_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_timer_query;
#define GL_EXT_transform_feedback 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_transform_feedback;
#define GL_EXT_vertex_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_vertex_array;
#define GL_EXT_vertex_array_bgra 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_vertex_array_bgra;
#define GL_EXT_vertex_attrib_64bit 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_vertex_attrib_64bit;
#define GL_EXT_vertex_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_vertex_shader;
#define GL_EXT_vertex_weighting 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_vertex_weighting;
#define GL_EXT_win32_keyed_mutex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_win32_keyed_mutex;
#define GL_EXT_window_rectangles 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_window_rectangles;
#define GL_EXT_x11_sync_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_EXT_x11_sync_object;
#define GL_GREMEDY_frame_terminator 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_GREMEDY_frame_terminator;
#define GL_GREMEDY_string_marker 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_GREMEDY_string_marker;
#define GL_HP_convolution_border_modes 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_HP_convolution_border_modes;
#define GL_HP_image_transform 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_HP_image_transform;
#define GL_HP_occlusion_test 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_HP_occlusion_test;
#define GL_HP_texture_lighting 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_HP_texture_lighting;
#define GL_IBM_cull_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_cull_vertex;
#define GL_IBM_multimode_draw_arrays 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_multimode_draw_arrays;
#define GL_IBM_rasterpos_clip 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_rasterpos_clip;
#define GL_IBM_static_data 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_static_data;
#define GL_IBM_texture_mirrored_repeat 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_texture_mirrored_repeat;
#define GL_IBM_vertex_array_lists 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_IBM_vertex_array_lists;
#define GL_INGR_blend_func_separate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INGR_blend_func_separate;
#define GL_INGR_color_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INGR_color_clamp;
#define GL_INGR_interlace_read 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INGR_interlace_read;
#define GL_INTEL_blackhole_render 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_blackhole_render;
#define GL_INTEL_conservative_rasterization 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_conservative_rasterization;
#define GL_INTEL_fragment_shader_ordering 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_fragment_shader_ordering;
#define GL_INTEL_framebuffer_CMAA 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_framebuffer_CMAA;
#define GL_INTEL_map_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_map_texture;
#define GL_INTEL_parallel_arrays 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_parallel_arrays;
#define GL_INTEL_performance_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_INTEL_performance_query;
#define GL_KHR_blend_equation_advanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced;
#define GL_KHR_blend_equation_advanced_coherent 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced_coherent;
#define GL_KHR_context_flush_control 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_context_flush_control;
#define GL_KHR_debug 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_debug;
#define GL_KHR_no_error 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_no_error;
#define GL_KHR_parallel_shader_compile 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_parallel_shader_compile;
#define GL_KHR_robust_buffer_access_behavior 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_robust_buffer_access_behavior;
#define GL_KHR_robustness 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_robustness;
#define GL_KHR_shader_subgroup 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_shader_subgroup;
#define GL_KHR_texture_compression_astc_hdr 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_hdr;
#define GL_KHR_texture_compression_astc_ldr 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_ldr;
#define GL_KHR_texture_compression_astc_sliced_3d 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_sliced_3d;
#define GL_MESAX_texture_stack 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESAX_texture_stack;
#define GL_MESA_framebuffer_flip_x 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_x;
#define GL_MESA_framebuffer_flip_y 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_y;
#define GL_MESA_framebuffer_swap_xy 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_swap_xy;
#define GL_MESA_pack_invert 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_pack_invert;
#define GL_MESA_program_binary_formats 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_program_binary_formats;
#define GL_MESA_resize_buffers 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_resize_buffers;
#define GL_MESA_shader_integer_functions 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_shader_integer_functions;
#define GL_MESA_tile_raster_order 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_tile_raster_order;
#define GL_MESA_window_pos 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_window_pos;
#define GL_MESA_ycbcr_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_MESA_ycbcr_texture;
#define GL_NVX_blend_equation_advanced_multi_draw_buffers 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_blend_equation_advanced_multi_draw_buffers;
#define GL_NVX_conditional_render 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_conditional_render;
#define GL_NVX_gpu_memory_info 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_gpu_memory_info;
#define GL_NVX_gpu_multicast2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_gpu_multicast2;
#define GL_NVX_linked_gpu_multicast 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_linked_gpu_multicast;
#define GL_NVX_progress_fence 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NVX_progress_fence;
#define GL_NV_alpha_to_coverage_dither_control 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_alpha_to_coverage_dither_control;
#define GL_NV_bindless_multi_draw_indirect 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect;
#define GL_NV_bindless_multi_draw_indirect_count 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect_count;
#define GL_NV_bindless_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_bindless_texture;
#define GL_NV_blend_equation_advanced 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced;
#define GL_NV_blend_equation_advanced_coherent 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced_coherent;
#define GL_NV_blend_minmax_factor 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_blend_minmax_factor;
#define GL_NV_blend_square 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_blend_square;
#define GL_NV_clip_space_w_scaling 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_clip_space_w_scaling;
#define GL_NV_command_list 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_command_list;
#define GL_NV_compute_program5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_compute_program5;
#define GL_NV_compute_shader_derivatives 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_compute_shader_derivatives;
#define GL_NV_conditional_render 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conditional_render;
#define GL_NV_conservative_raster 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conservative_raster;
#define GL_NV_conservative_raster_dilate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_dilate;
#define GL_NV_conservative_raster_pre_snap 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap;
#define GL_NV_conservative_raster_pre_snap_triangles 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap_triangles;
#define GL_NV_conservative_raster_underestimation 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_underestimation;
#define GL_NV_copy_depth_to_color 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_copy_depth_to_color;
#define GL_NV_copy_image 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_copy_image;
#define GL_NV_deep_texture3D 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_deep_texture3D;
#define GL_NV_depth_buffer_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_depth_buffer_float;
#define GL_NV_depth_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_depth_clamp;
#define GL_NV_draw_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_draw_texture;
#define GL_NV_draw_vulkan_image 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_draw_vulkan_image;
#define GL_NV_evaluators 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_evaluators;
#define GL_NV_explicit_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_explicit_multisample;
#define GL_NV_fence 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fence;
#define GL_NV_fill_rectangle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fill_rectangle;
#define GL_NV_float_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_float_buffer;
#define GL_NV_fog_distance 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fog_distance;
#define GL_NV_fragment_coverage_to_color 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_coverage_to_color;
#define GL_NV_fragment_program 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_program;
#define GL_NV_fragment_program2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_program2;
#define GL_NV_fragment_program4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_program4;
#define GL_NV_fragment_program_option 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_program_option;
#define GL_NV_fragment_shader_barycentric 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_shader_barycentric;
#define GL_NV_fragment_shader_interlock 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_fragment_shader_interlock;
#define GL_NV_framebuffer_mixed_samples 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_framebuffer_mixed_samples;
#define GL_NV_framebuffer_multisample_coverage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_framebuffer_multisample_coverage;
#define GL_NV_geometry_program4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_geometry_program4;
#define GL_NV_geometry_shader4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_geometry_shader4;
#define GL_NV_geometry_shader_passthrough 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_geometry_shader_passthrough;
#define GL_NV_gpu_multicast 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_gpu_multicast;
#define GL_NV_gpu_program4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_gpu_program4;
#define GL_NV_gpu_program5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_gpu_program5;
#define GL_NV_gpu_program5_mem_extended 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_gpu_program5_mem_extended;
#define GL_NV_gpu_shader5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_gpu_shader5;
#define GL_NV_half_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_half_float;
#define GL_NV_internalformat_sample_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_internalformat_sample_query;
#define GL_NV_light_max_exponent 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_light_max_exponent;
#define GL_NV_memory_attachment 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_memory_attachment;
#define GL_NV_memory_object_sparse 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_memory_object_sparse;
#define GL_NV_mesh_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_mesh_shader;
#define GL_NV_multisample_coverage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_multisample_coverage;
#define GL_NV_multisample_filter_hint 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_multisample_filter_hint;
#define GL_NV_occlusion_query 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_occlusion_query;
#define GL_NV_packed_depth_stencil 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_packed_depth_stencil;
#define GL_NV_parameter_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object;
#define GL_NV_parameter_buffer_object2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object2;
#define GL_NV_path_rendering 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_path_rendering;
#define GL_NV_path_rendering_shared_edge 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_path_rendering_shared_edge;
#define GL_NV_pixel_data_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_pixel_data_range;
#define GL_NV_point_sprite 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_point_sprite;
#define GL_NV_present_video 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_present_video;
#define GL_NV_primitive_restart 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_primitive_restart;
#define GL_NV_primitive_shading_rate 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_primitive_shading_rate;
#define GL_NV_query_resource 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_query_resource;
#define GL_NV_query_resource_tag 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_query_resource_tag;
#define GL_NV_register_combiners 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_register_combiners;
#define GL_NV_register_combiners2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_register_combiners2;
#define GL_NV_representative_fragment_test 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_representative_fragment_test;
#define GL_NV_robustness_video_memory_purge 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_robustness_video_memory_purge;
#define GL_NV_sample_locations 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_sample_locations;
#define GL_NV_sample_mask_override_coverage 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_sample_mask_override_coverage;
#define GL_NV_scissor_exclusive 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_scissor_exclusive;
#define GL_NV_shader_atomic_counters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_counters;
#define GL_NV_shader_atomic_float 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float;
#define GL_NV_shader_atomic_float64 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float64;
#define GL_NV_shader_atomic_fp16_vector 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_fp16_vector;
#define GL_NV_shader_atomic_int64 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_int64;
#define GL_NV_shader_buffer_load 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_buffer_load;
#define GL_NV_shader_buffer_store 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_buffer_store;
#define GL_NV_shader_storage_buffer_object 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_storage_buffer_object;
#define GL_NV_shader_subgroup_partitioned 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_subgroup_partitioned;
#define GL_NV_shader_texture_footprint 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_texture_footprint;
#define GL_NV_shader_thread_group 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_thread_group;
#define GL_NV_shader_thread_shuffle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shader_thread_shuffle;
#define GL_NV_shading_rate_image 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_shading_rate_image;
#define GL_NV_stereo_view_rendering 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_stereo_view_rendering;
#define GL_NV_tessellation_program5 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_tessellation_program5;
#define GL_NV_texgen_emboss 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texgen_emboss;
#define GL_NV_texgen_reflection 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texgen_reflection;
#define GL_NV_texture_barrier 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_barrier;
#define GL_NV_texture_compression_vtc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_compression_vtc;
#define GL_NV_texture_env_combine4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_env_combine4;
#define GL_NV_texture_expand_normal 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_expand_normal;
#define GL_NV_texture_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_multisample;
#define GL_NV_texture_rectangle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_rectangle;
#define GL_NV_texture_rectangle_compressed 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_rectangle_compressed;
#define GL_NV_texture_shader 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_shader;
#define GL_NV_texture_shader2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_shader2;
#define GL_NV_texture_shader3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_texture_shader3;
#define GL_NV_timeline_semaphore 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_timeline_semaphore;
#define GL_NV_transform_feedback 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_transform_feedback;
#define GL_NV_transform_feedback2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_transform_feedback2;
#define GL_NV_uniform_buffer_unified_memory 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_uniform_buffer_unified_memory;
#define GL_NV_vdpau_interop 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vdpau_interop;
#define GL_NV_vdpau_interop2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vdpau_interop2;
#define GL_NV_vertex_array_range 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_array_range;
#define GL_NV_vertex_array_range2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_array_range2;
#define GL_NV_vertex_attrib_integer_64bit 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_attrib_integer_64bit;
#define GL_NV_vertex_buffer_unified_memory 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_buffer_unified_memory;
#define GL_NV_vertex_program 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program;
#define GL_NV_vertex_program1_1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program1_1;
#define GL_NV_vertex_program2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program2;
#define GL_NV_vertex_program2_option 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program2_option;
#define GL_NV_vertex_program3 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program3;
#define GL_NV_vertex_program4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_vertex_program4;
#define GL_NV_video_capture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_video_capture;
#define GL_NV_viewport_array2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_viewport_array2;
#define GL_NV_viewport_swizzle 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_NV_viewport_swizzle;
#define GL_OES_byte_coordinates 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_byte_coordinates;
#define GL_OES_compressed_paletted_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_compressed_paletted_texture;
#define GL_OES_fixed_point 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_fixed_point;
#define GL_OES_query_matrix 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_query_matrix;
#define GL_OES_read_format 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_read_format;
#define GL_OES_single_precision 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OES_single_precision;
#define GL_OML_interlace 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OML_interlace;
#define GL_OML_resample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OML_resample;
#define GL_OML_subsample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OML_subsample;
#define GL_OVR_multiview 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OVR_multiview;
#define GL_OVR_multiview2 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_OVR_multiview2;
#define GL_PGI_misc_hints 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_PGI_misc_hints;
#define GL_PGI_vertex_hints 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_PGI_vertex_hints;
#define GL_REND_screen_coordinates 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_REND_screen_coordinates;
#define GL_S3_s3tc 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_S3_s3tc;
#define GL_SGIS_detail_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_detail_texture;
#define GL_SGIS_fog_function 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_fog_function;
#define GL_SGIS_generate_mipmap 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_generate_mipmap;
#define GL_SGIS_multisample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_multisample;
#define GL_SGIS_pixel_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_pixel_texture;
#define GL_SGIS_point_line_texgen 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_point_line_texgen;
#define GL_SGIS_point_parameters 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_point_parameters;
#define GL_SGIS_sharpen_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_sharpen_texture;
#define GL_SGIS_texture4D 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture4D;
#define GL_SGIS_texture_border_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_border_clamp;
#define GL_SGIS_texture_color_mask 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_color_mask;
#define GL_SGIS_texture_edge_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_edge_clamp;
#define GL_SGIS_texture_filter4 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_filter4;
#define GL_SGIS_texture_lod 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_lod;
#define GL_SGIS_texture_select 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIS_texture_select;
#define GL_SGIX_async 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_async;
#define GL_SGIX_async_histogram 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_async_histogram;
#define GL_SGIX_async_pixel 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_async_pixel;
#define GL_SGIX_blend_alpha_minmax 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_blend_alpha_minmax;
#define GL_SGIX_calligraphic_fragment 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_calligraphic_fragment;
#define GL_SGIX_clipmap 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_clipmap;
#define GL_SGIX_convolution_accuracy 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_convolution_accuracy;
#define GL_SGIX_depth_pass_instrument 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_depth_pass_instrument;
#define GL_SGIX_depth_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_depth_texture;
#define GL_SGIX_flush_raster 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_flush_raster;
#define GL_SGIX_fog_offset 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_fog_offset;
#define GL_SGIX_fragment_lighting 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_fragment_lighting;
#define GL_SGIX_framezoom 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_framezoom;
#define GL_SGIX_igloo_interface 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_igloo_interface;
#define GL_SGIX_instruments 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_instruments;
#define GL_SGIX_interlace 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_interlace;
#define GL_SGIX_ir_instrument1 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_ir_instrument1;
#define GL_SGIX_list_priority 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_list_priority;
#define GL_SGIX_pixel_texture 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_pixel_texture;
#define GL_SGIX_pixel_tiles 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_pixel_tiles;
#define GL_SGIX_polynomial_ffd 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_polynomial_ffd;
#define GL_SGIX_reference_plane 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_reference_plane;
#define GL_SGIX_resample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_resample;
#define GL_SGIX_scalebias_hint 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_scalebias_hint;
#define GL_SGIX_shadow 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_shadow;
#define GL_SGIX_shadow_ambient 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_shadow_ambient;
#define GL_SGIX_sprite 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_sprite;
#define GL_SGIX_subsample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_subsample;
#define GL_SGIX_tag_sample_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_tag_sample_buffer;
#define GL_SGIX_texture_add_env 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_texture_add_env;
#define GL_SGIX_texture_coordinate_clamp 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_texture_coordinate_clamp;
#define GL_SGIX_texture_lod_bias 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_texture_lod_bias;
#define GL_SGIX_texture_multi_buffer 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_texture_multi_buffer;
#define GL_SGIX_texture_scale_bias 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_texture_scale_bias;
#define GL_SGIX_vertex_preclip 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_vertex_preclip;
#define GL_SGIX_ycrcb 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_ycrcb;
#define GL_SGIX_ycrcb_subsample 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_ycrcb_subsample;
#define GL_SGIX_ycrcba 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGIX_ycrcba;
#define GL_SGI_color_matrix 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGI_color_matrix;
#define GL_SGI_color_table 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGI_color_table;
#define GL_SGI_texture_color_table 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SGI_texture_color_table;
#define GL_SUNX_constant_data 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUNX_constant_data;
#define GL_SUN_convolution_border_modes 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_convolution_border_modes;
#define GL_SUN_global_alpha 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_global_alpha;
#define GL_SUN_mesh_array 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_mesh_array;
#define GL_SUN_slice_accum 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_slice_accum;
#define GL_SUN_triangle_list 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_triangle_list;
#define GL_SUN_vertex 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_SUN_vertex;
#define GL_WIN_phong_shading 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_WIN_phong_shading;
#define GL_WIN_specular_fog 1
AGX_CUSTOM_GLAD_API_CALL int AGX_CUSTOM_GLAD_GL_WIN_specular_fog;


typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACCUMPROC)(GLenum op, GLfloat value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACCUMXOESPROC)(GLenum op, GLfixed value);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC)(GLuint memory, GLuint64 key, GLuint timeout);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVEPROGRAMEXTPROC)(GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVESTENCILFACEEXTPROC)(GLenum face);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLACTIVEVARYINGNVPROC)(GLuint program, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHAFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHAFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHAFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHAFUNCXOESPROC)(GLenum func, GLfixed ref);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLAPPLYTEXTUREEXTPROC)(GLenum mode);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLAREPROGRAMSRESIDENTNVPROC)(GLsizei n, const GLuint * programs, GLboolean * residences);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLARRAYELEMENTPROC)(GLint i);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLARRAYELEMENTEXTPROC)(GLint i);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLARRAYOBJECTATIPROC)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLASYNCCOPYBUFFERSUBDATANVXPROC)(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLASYNCCOPYIMAGESUBDATANVXPROC)(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLASYNCMARKERSGIXPROC)(GLuint marker);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLATTACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB obj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERNVPROC)(GLuint id, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERNVXPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINFRAGMENTSHADERATIPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINOCCLUSIONQUERYNVPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINPERFMONITORAMDPROC)(GLuint monitor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINQUERYARBPROC)(GLenum target, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)(GLenum primitiveMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKNVPROC)(GLenum primitiveMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINVERTEXSHADEREXTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBEGINVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB programObj, GLuint index, const GLcharARB * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERARBPROC)(GLenum target, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERBASEEXTPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERBASENVPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFEROFFSETEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFEROFFSETNVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERRANGEEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERRANGENVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONEXTPROC)(GLuint program, GLuint color, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum target, GLuint framebuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDIMAGETEXTUREEXTPROC)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDLIGHTPARAMETEREXTPROC)(GLenum light, GLenum value);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDMATERIALPARAMETEREXTPROC)(GLenum face, GLenum value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDMULTITEXTUREEXTPROC)(GLenum texunit, GLenum target, GLuint texture);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDPARAMETEREXTPROC)(GLenum value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDPROGRAMARBPROC)(GLenum target, GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDPROGRAMNVPROC)(GLenum target, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDRENDERBUFFEREXTPROC)(GLenum target, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint * samplers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDSHADINGRATEIMAGENVPROC)(GLuint texture);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXGENPARAMETEREXTPROC)(GLenum unit, GLenum coord, GLenum value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXTUREEXTPROC)(GLenum target, GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)(GLenum unit, GLenum value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKNVPROC)(GLenum target, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVERTEXARRAYAPPLEPROC)(GLuint array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVERTEXSHADEREXTPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3BEXTPROC)(GLbyte bx, GLbyte by, GLbyte bz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3BVEXTPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3DEXTPROC)(GLdouble bx, GLdouble by, GLdouble bz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3DVEXTPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3FEXTPROC)(GLfloat bx, GLfloat by, GLfloat bz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3FVEXTPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3IEXTPROC)(GLint bx, GLint by, GLint bz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3IVEXTPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3SEXTPROC)(GLshort bx, GLshort by, GLshort bz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMAL3SVEXTPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBINORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBITMAPXOESPROC)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDBARRIERKHRPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDBARRIERNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDCOLOREXTPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONINDEXEDAMDPROC)(GLuint buf, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEEXTPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDEQUATIONIARBPROC)(GLuint buf, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCINDEXEDAMDPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEEXTPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEINGRPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDFUNCIARBPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLENDPARAMETERINVPROC)(GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLITFRAMEBUFFEREXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERADDRESSRANGENVPROC)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERATTACHMEMORYNVPROC)(GLenum target, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERDATAARBPROC)(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERPAGECOMMITMENTARBPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERPAGECOMMITMENTMEMNVPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERPARAMETERIAPPLEPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERSTORAGEEXTERNALEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERSTORAGEMEMEXTPROC)(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCALLCOMMANDLISTNVPROC)(GLuint list);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCALLLISTPROC)(GLuint list);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void * lists);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum target);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint framebuffer, GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLAMPCOLORARBPROC)(GLenum target, GLenum clamp);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARACCUMXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARCOLORIIEXTPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARCOLORIUIEXTPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARDEPTHDNVPROC)(GLdouble depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARDEPTHFOESPROC)(GLclampf depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARDEPTHXOESPROC)(GLfixed depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)(GLenum stream);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC)(GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIPPLANEFOESPROC)(GLenum plane, const GLfloat * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCLIPPLANEXOESPROC)(GLenum plane, const GLfixed * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3BVPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3UBVPROC)(const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3UIVPROC)(const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3USVPROC)(const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3XOESPROC)(GLfixed red, GLfixed green, GLfixed blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR3XVOESPROC)(const GLfixed * components);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4BVPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBVERTEX2FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBVERTEX2FVSUNPROC)(const GLubyte * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBVERTEX3FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBVERTEX3FVSUNPROC)(const GLubyte * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UBVPROC)(const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4UIVPROC)(const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4USVPROC)(const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4XOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLOR4XVOESPROC)(const GLfixed * components);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORMASKINDEXEDEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint * color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORSUBTABLEPROC)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEEXTPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERINPUTNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINEROUTPUTNVPROC)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERPARAMETERFNVPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERPARAMETERFVNVPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERPARAMETERIVNVPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMMANDLISTSEGMENTSNVPROC)(GLuint list, GLuint segments);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPILECOMMANDLISTNVPROC)(GLuint list);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPILESHADERARBPROC)(GLhandleARB shaderObj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONSERVATIVERASTERPARAMETERFNVPROC)(GLenum pname, GLfloat value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONSERVATIVERASTERPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONFILTER1DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONFILTER2DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIPROC)(GLenum target, GLenum pname, GLint params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCOLORSUBTABLEPROC)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCOLORTABLEPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER1DPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER2DPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYIMAGESUBDATANVPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYPATHNVPROC)(GLuint resultPath, GLuint srcPath);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERFILLPATHNVPROC)(GLuint path, GLenum coverMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERSTROKEPATHNVPROC)(GLuint path, GLenum coverMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERAGEMODULATIONNVPROC)(GLenum components);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCOVERAGEMODULATIONTABLENVPROC)(GLsizei n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATECOMMANDLISTSNVPROC)(GLsizei n, GLuint * lists);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEMEMORYOBJECTSEXTPROC)(GLsizei n, GLuint * memoryObjects);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEPERFQUERYINTELPROC)(GLuint queryId, GLuint * queryHandle);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef GLhandleARB (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEPROGRAMOBJECTARBPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEPROGRESSFENCENVXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint * samplers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESEMAPHORESNVPROC)(GLsizei n, GLuint * semaphores);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef GLhandleARB (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESHADEROBJECTARBPROC)(GLenum shaderType);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESHADERPROGRAMEXTPROC)(GLenum type, const GLchar * string);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESTATESNVPROC)(GLsizei n, GLuint * states);
typedef GLsync (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATESYNCFROMCLEVENTARBPROC)(struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCULLPARAMETERDVEXTPROC)(GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCULLPARAMETERFVEXTPROC)(GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLCURRENTPALETTEMATRIXARBPROC)(GLint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKAMDPROC)(GLDEBUGPROCAMD callback, void * userParam);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback, const void * userParam);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGEENABLEAMDPROC)(GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTAMDPROC)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEFORMSGIXPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEFORMATIONMAP3DSGIXPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEFORMATIONMAP3FSGIXPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEASYNCMARKERSSGIXPROC)(GLuint marker, GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETECOMMANDLISTSNVPROC)(GLsizei n, const GLuint * lists);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEFENCESAPPLEPROC)(GLsizei n, const GLuint * fences);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEFENCESNVPROC)(GLsizei n, const GLuint * fences);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEMEMORYOBJECTSEXTPROC)(GLsizei n, const GLuint * memoryObjects);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETENAMESAMDPROC)(GLenum identifier, GLuint num, const GLuint * names);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEOBJECTARBPROC)(GLhandleARB obj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEOCCLUSIONQUERIESNVPROC)(GLsizei n, const GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPATHSNVPROC)(GLuint path, GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPERFMONITORSAMDPROC)(GLsizei n, GLuint * monitors);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPROGRAMSARBPROC)(GLsizei n, const GLuint * programs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEPROGRAMSNVPROC)(GLsizei n, const GLuint * programs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEQUERIESARBPROC)(GLsizei n, const GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEQUERYRESOURCETAGNVPROC)(GLsizei n, const GLint * tagIds);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETESEMAPHORESEXTPROC)(GLsizei n, const GLuint * semaphores);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETESTATESNVPROC)(GLsizei n, const GLuint * states);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETETEXTURESEXTPROC)(GLsizei n, const GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSNVPROC)(GLsizei n, const GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSAPPLEPROC)(GLsizei n, const GLuint * arrays);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDELETEVERTEXSHADEREXTPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHBOUNDSEXTPROC)(GLclampd zmin, GLclampd zmax);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHBOUNDSDNVPROC)(GLdouble zmin, GLdouble zmax);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEARRAYDVNVPROC)(GLuint first, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDDNVPROC)(GLuint index, GLdouble n, GLdouble f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEDNVPROC)(GLdouble zNear, GLdouble zFar);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEFOESPROC)(GLclampf n, GLclampf f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDEPTHRANGEXOESPROC)(GLfixed n, GLfixed f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDETACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB attachedObj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDETAILTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSEXTPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWBUFFERSARBPROC)(GLsizei n, const GLenum * bufs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWBUFFERSATIPROC)(GLsizei n, const GLenum * bufs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWCOMMANDSADDRESSNVPROC)(GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWCOMMANDSNVPROC)(GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)(const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWCOMMANDSSTATESNVPROC)(GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTARRAYATIPROC)(GLenum mode, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWMESHARRAYSSUNPROC)(GLenum mode, GLint first, GLsizei count, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWMESHTASKSNVPROC)(GLuint first, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTARRAYATIPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTEXTURENVPROC)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKNVPROC)(GLenum mode, GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLDRAWVKIMAGENVPROC)(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC)(GLenum target, GLeglImageOES image, const GLint * attrib_list);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC)(GLuint texture, GLeglImageOES image, const GLint * attrib_list);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGFORMATNVPROC)(GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei stride, GLsizei count, const GLboolean * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGPOINTERLISTIBMPROC)(GLint stride, const GLboolean ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEDGEFLAGVPROC)(const GLboolean * flag);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLELEMENTPOINTERAPPLEPROC)(GLenum type, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLELEMENTPOINTERATIPROC)(GLenum type, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLECLIENTSTATEPROC)(GLenum array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDCONDITIONALRENDERNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDCONDITIONALRENDERNVXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDFRAGMENTSHADERATIPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDLISTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDOCCLUSIONQUERYNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDPERFMONITORAMDPROC)(GLuint monitor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDQUERYARBPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKEXTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDVERTEXSHADEREXTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLENDVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1DVPROC)(const GLdouble * u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1FVPROC)(const GLfloat * u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1XOESPROC)(GLfixed u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD1XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2DVPROC)(const GLdouble * u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2FVPROC)(const GLfloat * u);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2XOESPROC)(GLfixed u, GLfixed v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALCOORD2XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALMAPSNVPROC)(GLenum target, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALPOINT1PROC)(GLint i);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALPOINT2PROC)(GLint i, GLint j);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEVALUATEDEPTHVALUESARBPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEXECUTEPROGRAMNVPROC)(GLenum target, GLuint id, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLEXTRACTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat * buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFEEDBACKBUFFERXOESPROC)(GLsizei n, GLenum type, const GLfixed * buffer);
typedef GLsync (AGX_CUSTOM_GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINALCOMBINERINPUTNVPROC)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHASYNCSGIXPROC)(GLuint * markerp);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHFENCEAPPLEPROC)(GLuint fence);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHFENCENVPROC)(GLuint fence);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHOBJECTAPPLEPROC)(GLenum object, GLint name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFINISHTEXTURESUNXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)(GLenum target, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHPIXELDATARANGENVPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHRASTERSGIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHSTATICDATAIBMPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFLUSHVERTEXARRAYRANGENVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDDPROC)(GLdouble coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDDEXTPROC)(GLdouble coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDDVPROC)(const GLdouble * coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDDVEXTPROC)(const GLdouble * coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDFPROC)(GLfloat coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDFEXTPROC)(GLfloat coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDFVPROC)(const GLfloat * coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDFVEXTPROC)(const GLfloat * coord);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDHNVPROC)(GLhalfNV fog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGCOORDHVNVPROC)(const GLhalfNV * fog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGFUNCSGISPROC)(GLsizei n, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGFPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGFVPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGIVPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGXOESPROC)(GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFOGXVOESPROC)(GLenum pname, const GLfixed * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTCOLORMATERIALSGIXPROC)(GLenum face, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTCOVERAGECOLORNVPROC)(GLuint color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELFSGIXPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELISGIXPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTFSGIXPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTISGIXPROC)(GLenum light, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTMATERIALFSGIXPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTMATERIALISGIXPROC)(GLenum face, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMETERMINATORGREMEDYPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEZOOMSGIXPROC)(GLint factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIMESAPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFREEOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRUSTUMFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLFRUSTUMXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENASYNCMARKERSSGIXPROC)(GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENBUFFERSARBPROC)(GLsizei n, GLuint * buffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENFENCESAPPLEPROC)(GLsizei n, GLuint * fences);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENFENCESNVPROC)(GLsizei n, GLuint * fences);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENFRAGMENTSHADERSATIPROC)(GLuint range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei n, GLuint * framebuffers);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENLISTSPROC)(GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENNAMESAMDPROC)(GLenum identifier, GLuint num, GLuint * names);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENOCCLUSIONQUERIESNVPROC)(GLsizei n, GLuint * ids);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENPATHSNVPROC)(GLsizei range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENPERFMONITORSAMDPROC)(GLsizei n, GLuint * monitors);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENPROGRAMSARBPROC)(GLsizei n, GLuint * programs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENPROGRAMSNVPROC)(GLsizei n, GLuint * programs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENQUERIESARBPROC)(GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENQUERYRESOURCETAGNVPROC)(GLsizei n, GLint * tagIds);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENSEMAPHORESEXTPROC)(GLsizei n, GLuint * semaphores);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENSYMBOLSEXTPROC)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENTEXTURESEXTPROC)(GLsizei n, GLuint * textures);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSNVPROC)(GLsizei n, GLuint * ids);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENVERTEXARRAYSAPPLEPROC)(GLsizei n, GLuint * arrays);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENVERTEXSHADERSEXTPROC)(GLuint range);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENERATEMIPMAPEXTPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum texunit, GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint texture, GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETACTIVEVARYINGNVPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETARRAYOBJECTFVATIPROC)(GLenum array, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETARRAYOBJECTIVATIPROC)(GLenum array, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERUI64VNVPROC)(GLenum target, GLenum pname, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target, GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCLIPPLANEFOESPROC)(GLenum plane, GLfloat * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCLIPPLANEXOESPROC)(GLenum plane, GLfixed * equation);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPROC)(GLenum target, GLenum format, GLenum type, void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEEXTPROC)(GLenum target, GLenum format, GLenum type, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOLORTABLESGIPROC)(GLenum target, GLenum format, GLenum type, void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, GLfloat * params);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMMANDHEADERNVPROC)(GLenum tokenID, GLuint size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint lod, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint level, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint lod, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONFILTERPROC)(GLenum target, GLenum format, GLenum type, void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETCOVERAGEMODULATIONTABLENVPROC)(GLsizei bufSize, GLfloat * v);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGAMDPROC)(GLuint count, GLsizei bufSize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDETAILTEXFUNCSGISPROC)(GLenum target, GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDOUBLEI_VEXTPROC)(GLenum pname, GLuint index, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFENCEIVNVPROC)(GLuint fence, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)(GLenum variable, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)(GLenum variable, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFIRSTPERFQUERYIDINTELPROC)(GLuint * queryId);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFIXEDVOESPROC)(GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFLOATI_VEXTPROC)(GLenum pname, GLuint index, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFOGFUNCSGISPROC)(GLfloat * points);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONEXTPROC)(GLuint program, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC)(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void);
typedef GLhandleARB (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHANDLEARBPROC)(GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETIMAGEHANDLEARBPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETIMAGEHANDLENVPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINFOLOGARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINSTRUMENTSSGIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target, GLuint index, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGERUI64I_VNVPROC)(GLenum value, GLuint index, GLuint64EXT * result);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGERUI64VNVPROC)(GLenum value, GLuint64EXT * result);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETINVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLOCALCONSTANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPATTRIBPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPATTRIBPARAMETERIVNVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMAPXVOESPROC)(GLenum target, GLenum query, GLfixed * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC)(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMINMAXPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETMULTISAMPLEFVNVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)(GLuint buffer, GLenum pname, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint buffer, GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC)(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum pname, void * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint program, GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNEXTPERFQUERYIDINTELPROC)(GLuint queryId, GLuint * nextQueryId);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTBUFFERFVATIPROC)(GLuint buffer, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTBUFFERIVATIPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTLABELEXTPROC)(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB obj, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTPARAMETERIVAPPLEPROC)(GLenum objectType, GLuint name, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB obj, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOCCLUSIONQUERYIVNVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETOCCLUSIONQUERYUIVNVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHCOLORGENFVNVPROC)(GLenum color, GLenum pname, GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHCOLORGENIVNVPROC)(GLenum color, GLenum pname, GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHCOMMANDSNVPROC)(GLuint path, GLubyte * commands);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHCOORDSNVPROC)(GLuint path, GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHDASHARRAYNVPROC)(GLuint path, GLfloat * dashArray);
typedef GLfloat (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHLENGTHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHMETRICRANGENVPROC)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHMETRICSNVPROC)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHSPACINGNVPROC)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHTEXGENFVNVPROC)(GLenum texCoordSet, GLenum pname, GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPATHTEXGENIVNVPROC)(GLenum texCoordSet, GLenum pname, GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFCOUNTERINFOINTELPROC)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)(GLuint group, GLuint counter, GLenum pname, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERSAMDPROC)(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFMONITORGROUPSAMDPROC)(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFQUERYDATAINTELPROC)(GLuint queryHandle, GLuint flags, GLsizei dataSize, void * data, GLuint * bytesWritten);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFQUERYIDBYNAMEINTELPROC)(GLchar * queryName, GLuint * queryId);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPERFQUERYINFOINTELPROC)(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELMAPXVPROC)(GLenum map, GLint size, GLfixed * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum target, GLuint index, void ** data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPOINTERI_VEXTPROC)(GLenum pname, GLuint index, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPOINTERVEXTPROC)(GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte * mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMPARAMETERDVNVPROC)(GLenum target, GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEFVNVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target, GLenum pname, void * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMSTRINGNVPROC)(GLuint id, GLenum pname, GLubyte * program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)(GLenum target, GLuint index, GLuint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETPROGRAMIVNVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTIVARBPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETQUERYIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore, GLenum pname, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSEPARABLEFILTERPROC)(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSEPARABLEFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport, GLuint entry, GLenum * rate);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC)(GLenum rate, GLuint samples, GLuint index, GLint * location);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSHARPENTEXFUNCSGISPROC)(GLenum target, GLfloat * points);
typedef GLushort (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSTAGEINDEXNVPROC)(GLenum shadertype);
typedef const GLubyte * (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef const GLubyte * (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXBUMPPARAMETERFVATIPROC)(GLenum pname, GLfloat * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXBUMPPARAMETERIVATIPROC)(GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXENVXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLfloat * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXGENXVOESPROC)(GLenum coord, GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERXVOESPROC)(GLenum target, GLint level, GLenum pname, GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)(GLenum target, GLenum pname, void ** params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREHANDLEARBPROC)(GLuint texture);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREHANDLENVPROC)(GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURESAMPLERHANDLEARBPROC)(GLuint texture, GLuint sampler);
typedef GLuint64 (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURESAMPLERHANDLENVPROC)(GLuint texture, GLuint sampler);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRACKMATRIXIVNVPROC)(GLenum target, GLuint address, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)(GLuint program, GLuint index, GLint * location);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint * param);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMBUFFERSIZEEXTPROC)(GLuint program, GLint location);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
typedef GLintptr (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMOFFSETEXTPROC)(GLuint program, GLint location);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMFVARBPROC)(GLhandleARB programObj, GLint location, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMI64VARBPROC)(GLuint program, GLint location, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMI64VNVPROC)(GLuint program, GLint location, GLint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMIVARBPROC)(GLhandleARB programObj, GLint location, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNIFORMUIVEXTPROC)(GLuint program, GLint location, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEI_VEXTPROC)(GLenum target, GLuint index, GLubyte * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEVEXTPROC)(GLenum pname, GLubyte * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTARRAYOBJECTFVATIPROC)(GLuint id, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTARRAYOBJECTIVATIPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARIANTPOINTERVEXTPROC)(GLuint id, GLenum value, void ** data);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVARYINGLOCATIONNVPROC)(GLuint program, const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint vaobj, GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, void ** param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint vaobj, GLenum pname, void ** param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVEXTPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVEXTPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVEXTPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLI64VNVPROC)(GLuint index, GLenum pname, GLint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLUI64VARBPROC)(GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLUI64VNVPROC)(GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVNVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVNVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVNVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVNVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOCAPTUREIVNVPROC)(GLuint video_capture_slot, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOI64VNVPROC)(GLuint video_slot, GLenum pname, GLint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOIVNVPROC)(GLuint video_slot, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOUI64VNVPROC)(GLuint video_slot, GLenum pname, GLuint64EXT * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVIDEOUIVNVPROC)(GLuint video_slot, GLenum pname, GLuint * params);
typedef GLVULKANPROCNV (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETVKPROCADDRNVPROC)(const GLchar * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCOLORTABLEPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCOLORTABLEARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint lod, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint lod, GLsizei bufSize, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCONVOLUTIONFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNCONVOLUTIONFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNHISTOGRAMPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNHISTOGRAMARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPDVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPDVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPFVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPFVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPIVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMAPIVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMINMAXPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNMINMAXARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPFVPROC)(GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPFVARBPROC)(GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPUIVPROC)(GLenum map, GLsizei bufSize, GLuint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPUIVARBPROC)(GLenum map, GLsizei bufSize, GLuint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPUSVPROC)(GLenum map, GLsizei bufSize, GLushort * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPIXELMAPUSVARBPROC)(GLenum map, GLsizei bufSize, GLushort * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPOLYGONSTIPPLEPROC)(GLsizei bufSize, GLubyte * pattern);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNPOLYGONSTIPPLEARBPROC)(GLsizei bufSize, GLubyte * pattern);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNSEPARABLEFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNSEPARABLEFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNTEXIMAGEARBPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMDVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMFVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGETNUNIFORMUIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORBSUNPROC)(GLbyte factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORDSUNPROC)(GLdouble factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORFSUNPROC)(GLfloat factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORISUNPROC)(GLint factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORSSUNPROC)(GLshort factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUBSUNPROC)(GLubyte factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUISUNPROC)(GLuint factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUSSUNPROC)(GLushort factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLHINTPGIPROC)(GLenum target, GLint mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLHISTOGRAMPROC)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLHISTOGRAMEXTPROC)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIGLOOINTERFACESGIXPROC)(GLenum pname, const void * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERFHPPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERIHPPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTMEMORYFDEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, void * handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, const void * name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTSEMAPHOREFDEXTPROC)(GLuint semaphore, GLenum handleType, GLint fd);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC)(GLuint semaphore, GLenum handleType, void * handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC)(GLuint semaphore, GLenum handleType, const void * name);
typedef GLsync (AGX_CUSTOM_GLAD_API_PTR *PFNGLIMPORTSYNCEXTPROC)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXFUNCEXTPROC)(GLenum func, GLclampf ref);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXMATERIALEXTPROC)(GLenum face, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXDPROC)(GLdouble c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXDVPROC)(const GLdouble * c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXFPROC)(GLfloat c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXFVPROC)(const GLfloat * c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXIPROC)(GLint c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXIVPROC)(const GLint * c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXSPROC)(GLshort c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXSVPROC)(const GLshort * c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXUBPROC)(GLubyte c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXUBVPROC)(const GLubyte * c);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXXOESPROC)(GLfixed component);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINDEXXVOESPROC)(const GLfixed * component);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINITNAMESPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINSERTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINSERTEVENTMARKEREXTPROC)(GLsizei length, const GLchar * marker);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINSTRUMENTSBUFFERSGIXPROC)(GLsizei size, GLint * buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINTERPOLATEPATHSNVPROC)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISASYNCMARKERSGIXPROC)(GLuint marker);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISBUFFERARBPROC)(GLuint buffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISBUFFERRESIDENTNVPROC)(GLenum target);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISCOMMANDLISTNVPROC)(GLuint list);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISFENCENVPROC)(GLuint fence);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISFRAMEBUFFEREXTPROC)(GLuint framebuffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISLISTPROC)(GLuint list);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISMEMORYOBJECTEXTPROC)(GLuint memoryObject);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISNAMEAMDPROC)(GLenum identifier, GLuint name);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISNAMEDBUFFERRESIDENTNVPROC)(GLuint buffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISOBJECTBUFFERATIPROC)(GLuint buffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISOCCLUSIONQUERYNVPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPATHNVPROC)(GLuint path);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPOINTINFILLPATHNVPROC)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPOINTINSTROKEPATHNVPROC)(GLuint path, GLfloat x, GLfloat y);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPROGRAMARBPROC)(GLuint program);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPROGRAMNVPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISQUERYARBPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISRENDERBUFFEREXTPROC)(GLuint renderbuffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISSEMAPHOREEXTPROC)(GLuint semaphore);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISSTATENVPROC)(GLuint state);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTEXTUREEXTPROC)(GLuint texture);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKNVPROC)(GLuint id);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISVARIANTENABLEDEXTPROC)(GLuint id, GLenum cap);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISVERTEXARRAYAPPLEPROC)(GLuint array);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)(GLuint index, GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLGPUCOPYIMAGESUBDATANVXPROC)(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLGPUINTERLOCKNVXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLABELOBJECTEXTPROC)(GLenum type, GLuint object, GLsizei length, const GLchar * label);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTENVISGIXPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELXOESPROC)(GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTMODELXVOESPROC)(GLenum pname, const GLfixed * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLIGHTXVOESPROC)(GLenum light, GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLINEWIDTHXOESPROC)(GLfixed width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLINKPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTBASEPROC)(GLuint base);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)(GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTPARAMETERFSGIXPROC)(GLuint list, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTPARAMETERISGIXPROC)(GLuint list, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADIDENTITYPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADMATRIXDPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADMATRIXFPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADMATRIXXOESPROC)(const GLfixed * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADNAMEPROC)(GLuint name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADPROGRAMNVPROC)(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOCKARRAYSEXTPROC)(GLint first, GLsizei count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEBUFFERNONRESIDENTNVPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEBUFFERRESIDENTNVPROC)(GLenum target, GLenum access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle, GLenum access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle, GLenum access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)(GLuint buffer, GLenum access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP1XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAP2XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPBUFFERARBPROC)(GLenum target, GLenum access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID1XOESPROC)(GLint n, GLfixed u1, GLfixed u2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPGRID2XOESPROC)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint buffer, GLenum access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void * (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPVERTEXATTRIB1DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPVERTEXATTRIB1FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPVERTEXATTRIB2DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAPVERTEXATTRIB2FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATERIALXVOESPROC)(GLenum face, GLenum pname, const GLfixed * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXFRUSTUMEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXINDEXPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXINDEXUBVARBPROC)(GLint size, const GLubyte * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXINDEXUIVARBPROC)(GLint size, const GLuint * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXINDEXUSVARBPROC)(GLint size, const GLushort * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOAD3X2FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOAD3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXLOADFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULT3X2FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULT3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULTDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXMULTFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXORTHOEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXPOPEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXPUSHEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXROTATEDEXTPROC)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXROTATEFEXTPROC)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXSCALEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXSCALEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAXSHADERCOMPILERTHREADSARBPROC)(GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMAXSHADERCOMPILERTHREADSKHRPROC)(GLuint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMEMORYBARRIEREXTPROC)(GLbitfield barriers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMINMAXPROC)(GLenum target, GLenum internalformat, GLboolean sink);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMINMAXEXTPROC)(GLenum target, GLenum internalformat, GLboolean sink);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTMATRIXDPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTMATRIXFPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTMATRIXXOESPROC)(const GLfixed * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSEXTPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)(GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSEXTPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC)(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect, GLsizei drawcount, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIMODEDRAWARRAYSIBMPROC)(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTIMODEDRAWELEMENTSIBMPROC)(const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXBUFFEREXTPROC)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1BOESPROC)(GLenum texture, GLbyte s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1DARBPROC)(GLenum target, GLdouble s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1FARBPROC)(GLenum target, GLfloat s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1HNVPROC)(GLenum target, GLhalfNV s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1IARBPROC)(GLenum target, GLint s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1IVARBPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1SARBPROC)(GLenum target, GLshort s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1SVARBPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1XOESPROC)(GLenum texture, GLfixed s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD1XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2BOESPROC)(GLenum texture, GLbyte s, GLbyte t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2DARBPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2FARBPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2IARBPROC)(GLenum target, GLint s, GLint t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2IVARBPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2SARBPROC)(GLenum target, GLshort s, GLshort t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2SVARBPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2XOESPROC)(GLenum texture, GLfixed s, GLfixed t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD2XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3IARBPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3IVARBPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3SVARBPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD3XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4IARBPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4IVARBPROC)(GLenum target, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4SVARBPROC)(GLenum target, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORD4XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXENVFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXENVIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENDEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENFEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENIEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTBARRIERNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTBLITFRAMEBUFFERNVPROC)(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTBUFFERSUBDATANVPROC)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC)(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTCOPYIMAGESUBDATANVPROC)(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTIVNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTSCISSORARRAYVNVXPROC)(GLuint gpu, GLuint first, GLsizei count, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTVIEWPORTARRAYVNVXPROC)(GLuint gpu, GLuint first, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC)(GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLMULTICASTWAITSYNCNVPROC)(GLuint signalGpu, GLbitfield waitGpuMask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERATTACHMEMORYNVPROC)(GLuint buffer, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)(GLuint framebuffer, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNAMEDSTRINGARBPROC)(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
typedef GLuint (AGX_CUSTOM_GLAD_API_PTR *PFNGLNEWOBJECTBUFFERATIPROC)(GLsizei size, const void * pointer, GLenum usage);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3BVPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3FVERTEX3FSUNPROC)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3HNVPROC)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3XOESPROC)(GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMAL3XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALPOINTERVINTELPROC)(GLenum type, const void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3BATIPROC)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3BVATIPROC)(GLenum stream, const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3DATIPROC)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3FATIPROC)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3IATIPROC)(GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3SATIPROC)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLNORMALSTREAM3SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLOBJECTPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLOBJECTUNPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLORTHOFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLORTHOXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPNTRIANGLESFATIPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPNTRIANGLESIATIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPASSTEXCOORDATIPROC)(GLuint dst, GLuint coord, GLenum swizzle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPASSTHROUGHXOESPROC)(GLfixed token);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHCOLORGENNVPROC)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHCOMMANDSNVPROC)(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHCOORDSNVPROC)(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHCOVERDEPTHFUNCNVPROC)(GLenum func);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHDASHARRAYNVPROC)(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHFOGGENNVPROC)(GLenum genMode);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHGLYPHINDEXRANGENVPROC)(GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint * baseAndCount);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHGLYPHRANGENVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHGLYPHSNVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHPARAMETERFNVPROC)(GLuint path, GLenum pname, GLfloat value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHPARAMETERINVPROC)(GLuint path, GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHSTENCILDEPTHOFFSETNVPROC)(GLfloat factor, GLfloat units);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHSTENCILFUNCNVPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHSTRINGNVPROC)(GLuint path, GLenum format, GLsizei length, const void * pathString);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHSUBCOMMANDSNVPROC)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHSUBCOORDSNVPROC)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPATHTEXGENNVPROC)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELDATARANGENVPROC)(GLenum target, GLsizei length, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELMAPXPROC)(GLenum map, GLint size, const GLfixed * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELSTOREXPROC)(GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERFSGISPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERISGISPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTEXGENSGIXPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFERXOESPROC)(GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPIXELZOOMXOESPROC)(GLfixed xfactor, GLfixed yfactor);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTALONGPATHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFARBPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFEXTPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFSGISPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFVARBPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFVEXTPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERFVSGISPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERIVNVPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTPARAMETERXVOESPROC)(GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOINTSIZEXOESPROC)(GLfixed size);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLLASYNCSGIXPROC)(GLuint * markerp);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLLINSTRUMENTSSGIXPROC)(GLint * marker_p);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONOFFSETCLAMPEXTPROC)(GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONOFFSETEXTPROC)(GLfloat factor, GLfloat bias);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONOFFSETXOESPROC)(GLfixed factor, GLfixed units);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOLYGONSTIPPLEPROC)(const GLubyte * mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPATTRIBPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPGROUPMARKEREXTPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPMATRIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPOPNAMEPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRESENTFRAMEDUALFILLNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRESENTFRAMEKEYEDNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXARBPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXNVPROC)(GLuint index);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIMITIVERESTARTNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei n, const GLuint * textures, const GLclampf * priorities);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPRIORITIZETEXTURESXOESPROC)(GLsizei n, const GLuint * textures, const GLfixed * priorities);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETER4DNVPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETER4DVNVPROC)(GLenum target, GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETER4FNVPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETER4FVNVPROC)(GLenum target, GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETERIARBPROC)(GLuint program, GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program, GLenum pname, GLint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETERS4DVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPARAMETERS4FVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMSTRINGARBPROC)(GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)(GLenum target, GLsizei count, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DEXTPROC)(GLuint program, GLint location, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64ARBPROC)(GLuint program, GLint location, GLint64 x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint program, GLint location, GLint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program, GLint location, GLint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64ARBPROC)(GLuint program, GLint location, GLuint64 x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program, GLint location, GLuint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)(GLuint program, GLint location, GLuint64 value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)(GLuint program, GLint location, GLuint64 value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMUI64NVPROC)(GLuint program, GLint location, GLuint64EXT value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROGRAMVERTEXLIMITNVPROC)(GLenum target, GLint limit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPROVOKINGVERTEXEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHGROUPMARKEREXTPROC)(GLsizei length, const GLchar * marker);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHMATRIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef GLbitfield (AGX_CUSTOM_GLAD_API_PTR *PFNGLQUERYMATRIXXOESPROC)(GLfixed * mantissa, GLint * exponent);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLQUERYOBJECTPARAMETERUIAMDPROC)(GLenum target, GLuint id, GLenum pname, GLuint param);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLQUERYRESOURCENVPROC)(GLenum queryType, GLint tagId, GLuint count, GLint * buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLQUERYRESOURCETAGNVPROC)(GLint tagId, const GLchar * tagString);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2XOESPROC)(GLfixed x, GLfixed y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS2XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS3XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4XOESPROC)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERPOS4XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRASTERSAMPLESEXTPROC)(GLuint samples, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREADINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREADNPIXELSARBPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTDVPROC)(const GLdouble * v1, const GLdouble * v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTFVPROC)(const GLfloat * v1, const GLfloat * v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTIVPROC)(const GLint * v1, const GLint * v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTSVPROC)(const GLshort * v1, const GLshort * v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTXOESPROC)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRECTXVOESPROC)(const GLfixed * v1, const GLfixed * v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREFERENCEPLANESGIXPROC)(const GLdouble * equation);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC)(GLuint memory, GLuint64 key);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERGPUMASKNVPROC)(GLbitfield mask);
typedef GLint (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEPOINTERSUNPROC)(GLenum type, GLsizei stride, const void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUBSUNPROC)(GLubyte code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUBVSUNPROC)(const GLubyte * code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)(const GLuint * rc, const GLubyte * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUISUNPROC)(GLuint code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVSUNPROC)(const GLuint * code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUSSUNPROC)(GLushort code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREPLACEMENTCODEUSVSUNPROC)(const GLushort * code);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLREQUESTRESIDENTPROGRAMSNVPROC)(GLsizei n, const GLuint * programs);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESETHISTOGRAMPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESETHISTOGRAMEXTPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESETMEMORYOBJECTPARAMETERNVPROC)(GLuint memory, GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESETMINMAXPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESETMINMAXEXTPROC)(GLenum target);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESIZEBUFFERSMESAPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESOLVEDEPTHVALUESNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLROTATEXOESPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value, GLboolean invert);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEMAPATIPROC)(GLuint dst, GLuint interp, GLenum swizzle);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEMASKEXTPROC)(GLclampf value, GLboolean invert);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEMASKINDEXEDNVPROC)(GLuint index, GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEMASKSGISPROC)(GLclampf value, GLboolean invert);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEPATTERNEXTPROC)(GLenum pattern);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLEPATTERNSGISPROC)(GLenum pattern);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCALEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSOREXCLUSIVEARRAYVNVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSOREXCLUSIVENVPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3BEXTPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVEXTPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3DEXTPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVEXTPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3FEXTPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVEXTPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3IEXTPROC)(GLint red, GLint green, GLint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVEXTPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3SEXTPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVEXTPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBEXTPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVEXTPROC)(const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIEXTPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVEXTPROC)(const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3USEXTPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVPROC)(const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVEXTPROC)(const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint * buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore, GLenum pname, const GLuint64 * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSEPARABLEFILTER2DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSEPARABLEFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETFENCEAPPLEPROC)(GLuint fence);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETFENCENVPROC)(GLuint fence, GLenum condition);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)(GLuint dst, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETINVARIANTEXTPROC)(GLuint id, GLenum type, const void * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETLOCALCONSTANTEXTPROC)(GLuint id, GLenum type, const void * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSETMULTISAMPLEFVAMDPROC)(GLenum pname, GLuint index, const GLfloat * val);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADEROP1EXTPROC)(GLenum op, GLuint res, GLuint arg1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADEROP2EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADEROP3EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADERSOURCEARBPROC)(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADINGRATEIMAGEBARRIERNVPROC)(GLboolean synchronize);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport, GLuint first, GLsizei count, const GLenum * rates);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC)(GLenum rate, GLuint samples, const GLint * locations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHADINGRATESAMPLEORDERNVPROC)(GLenum order);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSHARPENTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat * points);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSIGNALSEMAPHOREEXTPROC)(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * dstLayouts);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSIGNALSEMAPHOREUI64NVXPROC)(GLuint signalGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSIGNALVKFENCENVPROC)(GLuint64 vkFence);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSIGNALVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPECIALIZESHADERPROC)(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPECIALIZESHADERARBPROC)(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPRITEPARAMETERFSGIXPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPRITEPARAMETERFVSGIXPROC)(GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPRITEPARAMETERISGIXPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSPRITEPARAMETERIVSGIXPROC)(GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTARTINSTRUMENTSSGIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTATECAPTURENVPROC)(GLuint state, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILCLEARTAGEXTPROC)(GLsizei stencilTagBits, GLuint stencilClearTag);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEATIPROC)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILOPSEPARATEATIPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILOPVALUEAMDPROC)(GLenum face, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILTHENCOVERFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTOPINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSTRINGMARKERGREMEDYPROC)(GLsizei len, const void * string);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSUBPIXELPRECISIONBIASNVPROC)(GLuint xbits, GLuint ybits);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSWIZZLEEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLSYNCTEXTUREINTELPROC)(GLuint texture);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTAGSAMPLEBUFFERSGIXPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3BEXTPROC)(GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3BVEXTPROC)(const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3DEXTPROC)(GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3DVEXTPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3FEXTPROC)(GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3FVEXTPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3IEXTPROC)(GLint tx, GLint ty, GLint tz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3IVEXTPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3SEXTPROC)(GLshort tx, GLshort ty, GLshort tz);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENT3SVEXTPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTANGENTPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTBUFFERMASK3DFXPROC)(GLuint mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTESSELLATIONFACTORAMDPROC)(GLfloat factor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTESSELLATIONMODEAMDPROC)(GLenum mode);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLTESTFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLTESTFENCENVPROC)(GLuint fence);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLTESTOBJECTAPPLEPROC)(GLenum object, GLuint name);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXATTACHMEMORYNVPROC)(GLenum target, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUFFERARBPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUFFEREXTPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUMPPARAMETERFVATIPROC)(GLenum pname, const GLfloat * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXBUMPPARAMETERIVATIPROC)(GLenum pname, const GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1BOESPROC)(GLbyte s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1HNVPROC)(GLhalfNV s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1XOESPROC)(GLfixed s);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD1XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2BOESPROC)(GLbyte s, GLbyte t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)(const GLfloat * tc, const GLubyte * c, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2HNVPROC)(GLhalfNV s, GLhalfNV t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2XOESPROC)(GLfixed s, GLfixed t);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD2XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3BOESPROC)(GLbyte s, GLbyte t, GLbyte r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3XOESPROC)(GLfixed s, GLfixed t, GLfixed r);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD3XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4BOESPROC)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FVERTEX4FVSUNPROC)(const GLfloat * tc, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4XOESPROC)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORD4XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXCOORDPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXENVXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENXOESPROC)(GLenum coord, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXGENXVOESPROC)(GLenum coord, GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE3DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXIMAGE4DSGISPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPAGECOMMITMENTMEMNVPROC)(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXRENDERBUFFERNVPROC)(GLenum target, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGEMEM1DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSTORAGESPARSEAMDPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXSUBIMAGE4DSGISPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREATTACHMEMORYNVPROC)(GLuint texture, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBARRIERPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBARRIERNVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBUFFEREXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEEXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURECOLORMASKSGISPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURELIGHTEXTPROC)(GLenum pname);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREMATERIALEXTPROC)(GLenum face, GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURENORMALEXTPROC)(GLenum mode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPAGECOMMITMENTEXTPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC)(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint * param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURERANGEAPPLEPROC)(GLenum target, GLsizei length, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM1DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESTORAGESPARSEAMDPROC)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRACKMATRIXNVPROC)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)(GLsizei count, const GLint * attribs, GLenum bufferMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)(GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSFORMPATHNVPROC)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLTRANSLATEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1FARBPROC)(GLint location, GLfloat v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1I64ARBPROC)(GLint location, GLint64 x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1I64NVPROC)(GLint location, GLint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1IARBPROC)(GLint location, GLint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UI64ARBPROC)(GLint location, GLuint64 x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UI64NVPROC)(GLint location, GLuint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UIEXTPROC)(GLint location, GLuint v0);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM1UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2FARBPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2I64ARBPROC)(GLint location, GLint64 x, GLint64 y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2IARBPROC)(GLint location, GLint v0, GLint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UIEXTPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM2UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM3UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORM4UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMBUFFEREXTPROC)(GLuint program, GLint location, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64ARBPROC)(GLint location, GLuint64 value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64NVPROC)(GLint location, GLuint64 value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64VNVPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMUI64NVPROC)(GLint location, GLuint64EXT value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNIFORMUI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNLOCKARRAYSEXTPROC)(void);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPBUFFERARBPROC)(GLenum target);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUNMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUPDATEOBJECTBUFFERATIPROC)(GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUPLOADGPUMASKNVXPROC)(GLbitfield mask);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB programObj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLUSESHADERPROGRAMEXTPROC)(GLenum type, GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUFININVPROC)(void);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUGETSURFACEIVNVPROC)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUINITNVPROC)(const void * vdpDevice, const void * getProcAddress);
typedef GLboolean (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUISSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUMAPSURFACESNVPROC)(GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
typedef GLvdpauSurfaceNV (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLvdpauSurfaceNV (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLvdpauSurfaceNV (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames, GLboolean isFrameStructure);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUSURFACEACCESSNVPROC)(GLvdpauSurfaceNV surface, GLenum access);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUUNMAPSURFACESNVPROC)(GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVDPAUUNREGISTERSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTARRAYOBJECTATIPROC)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTPOINTEREXTPROC)(GLuint id, GLenum type, GLuint stride, const void * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTBVEXTPROC)(GLuint id, const GLbyte * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTDVEXTPROC)(GLuint id, const GLdouble * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTFVEXTPROC)(GLuint id, const GLfloat * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTIVEXTPROC)(GLuint id, const GLint * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTSVEXTPROC)(GLuint id, const GLshort * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTUBVEXTPROC)(GLuint id, const GLubyte * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTUIVEXTPROC)(GLuint id, const GLuint * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVARIANTUSVEXTPROC)(GLuint id, const GLushort * addr);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2BOESPROC)(GLbyte x, GLbyte y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2HNVPROC)(GLhalfNV x, GLhalfNV y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2IPROC)(GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2XOESPROC)(GLfixed x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX2XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3BOESPROC)(GLbyte x, GLbyte y, GLbyte z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3XOESPROC)(GLfixed x, GLfixed y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX3XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4BOESPROC)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4BVOESPROC)(const GLbyte * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4HVNVPROC)(const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEX4XVOESPROC)(const GLfixed * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYRANGENVPROC)(GLsizei length, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)(GLuint vaobj, GLuint index, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DARBPROC)(GLuint index, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DNVPROC)(GLuint index, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FARBPROC)(GLuint index, GLfloat x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FNVPROC)(GLuint index, GLfloat x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1HNVPROC)(GLuint index, GLhalfNV x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SARBPROC)(GLuint index, GLshort x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SNVPROC)(GLuint index, GLshort x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB1SVNVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DARBPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DNVPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FARBPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FNVPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SARBPROC)(GLuint index, GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SNVPROC)(GLuint index, GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB2SVNVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB3SVNVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4SVNVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UBNVPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVNVPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint index, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IEXTPROC)(GLuint index, GLint x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVEXTPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIEXTPROC)(GLuint index, GLuint x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IEXTPROC)(GLuint index, GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVEXTPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIEXTPROC)(GLuint index, GLuint x, GLuint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IEXTPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVEXTPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVEXTPROC)(GLuint index, const GLbyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IEXTPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVEXTPROC)(GLuint index, const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVEXTPROC)(GLuint index, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVEXTPROC)(GLuint index, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVEXTPROC)(GLuint index, const GLushort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DEXTPROC)(GLuint index, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1I64NVPROC)(GLuint index, GLint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64ARBPROC)(GLuint index, GLuint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64NVPROC)(GLuint index, GLuint64EXT x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64VARBPROC)(GLuint index, const GLuint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DEXTPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL2UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL3UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBL4UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBPARAMETERIAMDPROC)(GLuint index, GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERNVPROC)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS1DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS1FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS1HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS1SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS2DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS2FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS2HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS2SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS3DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS3FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS3HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS3SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS4DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS4FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS4HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS4SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXATTRIBS4UBVNVPROC)(GLuint index, GLsizei count, const GLubyte * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXBLENDARBPROC)(GLint count);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXBLENDENVFATIPROC)(GLenum pname, GLfloat param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXBLENDENVIATIPROC)(GLenum pname, GLint param);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint * value);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1DATIPROC)(GLenum stream, GLdouble x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1FATIPROC)(GLenum stream, GLfloat x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1IATIPROC)(GLenum stream, GLint x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1SATIPROC)(GLenum stream, GLshort x);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM1SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2DATIPROC)(GLenum stream, GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2FATIPROC)(GLenum stream, GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2IATIPROC)(GLenum stream, GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2SATIPROC)(GLenum stream, GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM2SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3IATIPROC)(GLenum stream, GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM3SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4IATIPROC)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXSTREAM4SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXWEIGHTPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXWEIGHTFEXTPROC)(GLfloat weight);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXWEIGHTFVEXTPROC)(const GLfloat * weight);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXWEIGHTHNVPROC)(GLhalfNV weight);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVERTEXWEIGHTHVNVPROC)(const GLhalfNV * weight);
typedef GLenum (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIDEOCAPTURENVPROC)(GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTPOSITIONWSCALENVPROC)(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLVIEWPORTSWIZZLENVPROC)(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWAITSEMAPHOREEXTPROC)(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * srcLayouts);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWAITSEMAPHOREUI64NVXPROC)(GLuint waitGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWAITVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTPATHSNVPROC)(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTBVARBPROC)(GLint size, const GLbyte * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTDVARBPROC)(GLint size, const GLdouble * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTFVARBPROC)(GLint size, const GLfloat * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTIVARBPROC)(GLint size, const GLint * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTSVARBPROC)(GLint size, const GLshort * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTUBVARBPROC)(GLint size, const GLubyte * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTUIVARBPROC)(GLint size, const GLuint * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWEIGHTUSVARBPROC)(GLint size, const GLushort * weights);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DARBPROC)(GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DMESAPROC)(GLdouble x, GLdouble y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DVARBPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2DVMESAPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FARBPROC)(GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FMESAPROC)(GLfloat x, GLfloat y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FVARBPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2FVMESAPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IARBPROC)(GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IMESAPROC)(GLint x, GLint y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IVARBPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2IVMESAPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SARBPROC)(GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SMESAPROC)(GLshort x, GLshort y);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SVARBPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS2SVMESAPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DARBPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DMESAPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DVPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DVARBPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3DVMESAPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FARBPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FMESAPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FVPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FVARBPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3FVMESAPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IARBPROC)(GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IMESAPROC)(GLint x, GLint y, GLint z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IVPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IVARBPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3IVMESAPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SARBPROC)(GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SMESAPROC)(GLshort x, GLshort y, GLshort z);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SVPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SVARBPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS3SVMESAPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4DMESAPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4DVMESAPROC)(const GLdouble * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4FMESAPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4FVMESAPROC)(const GLfloat * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4IMESAPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4IVMESAPROC)(const GLint * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4SMESAPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWPOS4SVMESAPROC)(const GLshort * v);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWINDOWRECTANGLESEXTPROC)(GLenum mode, GLsizei count, const GLint * box);
typedef void (AGX_CUSTOM_GLAD_API_PTR *PFNGLWRITEMASKEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);

AGX_CUSTOM_GLAD_API_CALL PFNGLACCUMPROC agx_custom_glad_glAccum;
#define glAccum agx_custom_glad_glAccum
AGX_CUSTOM_GLAD_API_CALL PFNGLACCUMXOESPROC agx_custom_glad_glAccumxOES;
#define glAccumxOES agx_custom_glad_glAccumxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC agx_custom_glad_glAcquireKeyedMutexWin32EXT;
#define glAcquireKeyedMutexWin32EXT agx_custom_glad_glAcquireKeyedMutexWin32EXT
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVEPROGRAMEXTPROC agx_custom_glad_glActiveProgramEXT;
#define glActiveProgramEXT agx_custom_glad_glActiveProgramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVESHADERPROGRAMPROC agx_custom_glad_glActiveShaderProgram;
#define glActiveShaderProgram agx_custom_glad_glActiveShaderProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVESTENCILFACEEXTPROC agx_custom_glad_glActiveStencilFaceEXT;
#define glActiveStencilFaceEXT agx_custom_glad_glActiveStencilFaceEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVETEXTUREPROC agx_custom_glad_glActiveTexture;
#define glActiveTexture agx_custom_glad_glActiveTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVETEXTUREARBPROC agx_custom_glad_glActiveTextureARB;
#define glActiveTextureARB agx_custom_glad_glActiveTextureARB
AGX_CUSTOM_GLAD_API_CALL PFNGLACTIVEVARYINGNVPROC agx_custom_glad_glActiveVaryingNV;
#define glActiveVaryingNV agx_custom_glad_glActiveVaryingNV
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHAFRAGMENTOP1ATIPROC agx_custom_glad_glAlphaFragmentOp1ATI;
#define glAlphaFragmentOp1ATI agx_custom_glad_glAlphaFragmentOp1ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHAFRAGMENTOP2ATIPROC agx_custom_glad_glAlphaFragmentOp2ATI;
#define glAlphaFragmentOp2ATI agx_custom_glad_glAlphaFragmentOp2ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHAFRAGMENTOP3ATIPROC agx_custom_glad_glAlphaFragmentOp3ATI;
#define glAlphaFragmentOp3ATI agx_custom_glad_glAlphaFragmentOp3ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHAFUNCPROC agx_custom_glad_glAlphaFunc;
#define glAlphaFunc agx_custom_glad_glAlphaFunc
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHAFUNCXOESPROC agx_custom_glad_glAlphaFuncxOES;
#define glAlphaFuncxOES agx_custom_glad_glAlphaFuncxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC agx_custom_glad_glAlphaToCoverageDitherControlNV;
#define glAlphaToCoverageDitherControlNV agx_custom_glad_glAlphaToCoverageDitherControlNV
AGX_CUSTOM_GLAD_API_CALL PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC agx_custom_glad_glApplyFramebufferAttachmentCMAAINTEL;
#define glApplyFramebufferAttachmentCMAAINTEL agx_custom_glad_glApplyFramebufferAttachmentCMAAINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLAPPLYTEXTUREEXTPROC agx_custom_glad_glApplyTextureEXT;
#define glApplyTextureEXT agx_custom_glad_glApplyTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLAREPROGRAMSRESIDENTNVPROC agx_custom_glad_glAreProgramsResidentNV;
#define glAreProgramsResidentNV agx_custom_glad_glAreProgramsResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLARETEXTURESRESIDENTPROC agx_custom_glad_glAreTexturesResident;
#define glAreTexturesResident agx_custom_glad_glAreTexturesResident
AGX_CUSTOM_GLAD_API_CALL PFNGLARETEXTURESRESIDENTEXTPROC agx_custom_glad_glAreTexturesResidentEXT;
#define glAreTexturesResidentEXT agx_custom_glad_glAreTexturesResidentEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLARRAYELEMENTPROC agx_custom_glad_glArrayElement;
#define glArrayElement agx_custom_glad_glArrayElement
AGX_CUSTOM_GLAD_API_CALL PFNGLARRAYELEMENTEXTPROC agx_custom_glad_glArrayElementEXT;
#define glArrayElementEXT agx_custom_glad_glArrayElementEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLARRAYOBJECTATIPROC agx_custom_glad_glArrayObjectATI;
#define glArrayObjectATI agx_custom_glad_glArrayObjectATI
AGX_CUSTOM_GLAD_API_CALL PFNGLASYNCCOPYBUFFERSUBDATANVXPROC agx_custom_glad_glAsyncCopyBufferSubDataNVX;
#define glAsyncCopyBufferSubDataNVX agx_custom_glad_glAsyncCopyBufferSubDataNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLASYNCCOPYIMAGESUBDATANVXPROC agx_custom_glad_glAsyncCopyImageSubDataNVX;
#define glAsyncCopyImageSubDataNVX agx_custom_glad_glAsyncCopyImageSubDataNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLASYNCMARKERSGIXPROC agx_custom_glad_glAsyncMarkerSGIX;
#define glAsyncMarkerSGIX agx_custom_glad_glAsyncMarkerSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLATTACHOBJECTARBPROC agx_custom_glad_glAttachObjectARB;
#define glAttachObjectARB agx_custom_glad_glAttachObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLATTACHSHADERPROC agx_custom_glad_glAttachShader;
#define glAttachShader agx_custom_glad_glAttachShader
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINPROC agx_custom_glad_glBegin;
#define glBegin agx_custom_glad_glBegin
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERPROC agx_custom_glad_glBeginConditionalRender;
#define glBeginConditionalRender agx_custom_glad_glBeginConditionalRender
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERNVPROC agx_custom_glad_glBeginConditionalRenderNV;
#define glBeginConditionalRenderNV agx_custom_glad_glBeginConditionalRenderNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERNVXPROC agx_custom_glad_glBeginConditionalRenderNVX;
#define glBeginConditionalRenderNVX agx_custom_glad_glBeginConditionalRenderNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINFRAGMENTSHADERATIPROC agx_custom_glad_glBeginFragmentShaderATI;
#define glBeginFragmentShaderATI agx_custom_glad_glBeginFragmentShaderATI
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINOCCLUSIONQUERYNVPROC agx_custom_glad_glBeginOcclusionQueryNV;
#define glBeginOcclusionQueryNV agx_custom_glad_glBeginOcclusionQueryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINPERFMONITORAMDPROC agx_custom_glad_glBeginPerfMonitorAMD;
#define glBeginPerfMonitorAMD agx_custom_glad_glBeginPerfMonitorAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINPERFQUERYINTELPROC agx_custom_glad_glBeginPerfQueryINTEL;
#define glBeginPerfQueryINTEL agx_custom_glad_glBeginPerfQueryINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINQUERYPROC agx_custom_glad_glBeginQuery;
#define glBeginQuery agx_custom_glad_glBeginQuery
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINQUERYARBPROC agx_custom_glad_glBeginQueryARB;
#define glBeginQueryARB agx_custom_glad_glBeginQueryARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINQUERYINDEXEDPROC agx_custom_glad_glBeginQueryIndexed;
#define glBeginQueryIndexed agx_custom_glad_glBeginQueryIndexed
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKPROC agx_custom_glad_glBeginTransformFeedback;
#define glBeginTransformFeedback agx_custom_glad_glBeginTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKEXTPROC agx_custom_glad_glBeginTransformFeedbackEXT;
#define glBeginTransformFeedbackEXT agx_custom_glad_glBeginTransformFeedbackEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKNVPROC agx_custom_glad_glBeginTransformFeedbackNV;
#define glBeginTransformFeedbackNV agx_custom_glad_glBeginTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINVERTEXSHADEREXTPROC agx_custom_glad_glBeginVertexShaderEXT;
#define glBeginVertexShaderEXT agx_custom_glad_glBeginVertexShaderEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBEGINVIDEOCAPTURENVPROC agx_custom_glad_glBeginVideoCaptureNV;
#define glBeginVideoCaptureNV agx_custom_glad_glBeginVideoCaptureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDATTRIBLOCATIONPROC agx_custom_glad_glBindAttribLocation;
#define glBindAttribLocation agx_custom_glad_glBindAttribLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDATTRIBLOCATIONARBPROC agx_custom_glad_glBindAttribLocationARB;
#define glBindAttribLocationARB agx_custom_glad_glBindAttribLocationARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERPROC agx_custom_glad_glBindBuffer;
#define glBindBuffer agx_custom_glad_glBindBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERARBPROC agx_custom_glad_glBindBufferARB;
#define glBindBufferARB agx_custom_glad_glBindBufferARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERBASEPROC agx_custom_glad_glBindBufferBase;
#define glBindBufferBase agx_custom_glad_glBindBufferBase
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERBASEEXTPROC agx_custom_glad_glBindBufferBaseEXT;
#define glBindBufferBaseEXT agx_custom_glad_glBindBufferBaseEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERBASENVPROC agx_custom_glad_glBindBufferBaseNV;
#define glBindBufferBaseNV agx_custom_glad_glBindBufferBaseNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFEROFFSETEXTPROC agx_custom_glad_glBindBufferOffsetEXT;
#define glBindBufferOffsetEXT agx_custom_glad_glBindBufferOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFEROFFSETNVPROC agx_custom_glad_glBindBufferOffsetNV;
#define glBindBufferOffsetNV agx_custom_glad_glBindBufferOffsetNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERRANGEPROC agx_custom_glad_glBindBufferRange;
#define glBindBufferRange agx_custom_glad_glBindBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERRANGEEXTPROC agx_custom_glad_glBindBufferRangeEXT;
#define glBindBufferRangeEXT agx_custom_glad_glBindBufferRangeEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERRANGENVPROC agx_custom_glad_glBindBufferRangeNV;
#define glBindBufferRangeNV agx_custom_glad_glBindBufferRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERSBASEPROC agx_custom_glad_glBindBuffersBase;
#define glBindBuffersBase agx_custom_glad_glBindBuffersBase
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDBUFFERSRANGEPROC agx_custom_glad_glBindBuffersRange;
#define glBindBuffersRange agx_custom_glad_glBindBuffersRange
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONPROC agx_custom_glad_glBindFragDataLocation;
#define glBindFragDataLocation agx_custom_glad_glBindFragDataLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONEXTPROC agx_custom_glad_glBindFragDataLocationEXT;
#define glBindFragDataLocationEXT agx_custom_glad_glBindFragDataLocationEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONINDEXEDPROC agx_custom_glad_glBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed agx_custom_glad_glBindFragDataLocationIndexed
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAGMENTSHADERATIPROC agx_custom_glad_glBindFragmentShaderATI;
#define glBindFragmentShaderATI agx_custom_glad_glBindFragmentShaderATI
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAMEBUFFERPROC agx_custom_glad_glBindFramebuffer;
#define glBindFramebuffer agx_custom_glad_glBindFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDFRAMEBUFFEREXTPROC agx_custom_glad_glBindFramebufferEXT;
#define glBindFramebufferEXT agx_custom_glad_glBindFramebufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDIMAGETEXTUREPROC agx_custom_glad_glBindImageTexture;
#define glBindImageTexture agx_custom_glad_glBindImageTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDIMAGETEXTUREEXTPROC agx_custom_glad_glBindImageTextureEXT;
#define glBindImageTextureEXT agx_custom_glad_glBindImageTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDIMAGETEXTURESPROC agx_custom_glad_glBindImageTextures;
#define glBindImageTextures agx_custom_glad_glBindImageTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDLIGHTPARAMETEREXTPROC agx_custom_glad_glBindLightParameterEXT;
#define glBindLightParameterEXT agx_custom_glad_glBindLightParameterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDMATERIALPARAMETEREXTPROC agx_custom_glad_glBindMaterialParameterEXT;
#define glBindMaterialParameterEXT agx_custom_glad_glBindMaterialParameterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDMULTITEXTUREEXTPROC agx_custom_glad_glBindMultiTextureEXT;
#define glBindMultiTextureEXT agx_custom_glad_glBindMultiTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDPARAMETEREXTPROC agx_custom_glad_glBindParameterEXT;
#define glBindParameterEXT agx_custom_glad_glBindParameterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDPROGRAMARBPROC agx_custom_glad_glBindProgramARB;
#define glBindProgramARB agx_custom_glad_glBindProgramARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDPROGRAMNVPROC agx_custom_glad_glBindProgramNV;
#define glBindProgramNV agx_custom_glad_glBindProgramNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDPROGRAMPIPELINEPROC agx_custom_glad_glBindProgramPipeline;
#define glBindProgramPipeline agx_custom_glad_glBindProgramPipeline
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDRENDERBUFFERPROC agx_custom_glad_glBindRenderbuffer;
#define glBindRenderbuffer agx_custom_glad_glBindRenderbuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDRENDERBUFFEREXTPROC agx_custom_glad_glBindRenderbufferEXT;
#define glBindRenderbufferEXT agx_custom_glad_glBindRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDSAMPLERPROC agx_custom_glad_glBindSampler;
#define glBindSampler agx_custom_glad_glBindSampler
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDSAMPLERSPROC agx_custom_glad_glBindSamplers;
#define glBindSamplers agx_custom_glad_glBindSamplers
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDSHADINGRATEIMAGENVPROC agx_custom_glad_glBindShadingRateImageNV;
#define glBindShadingRateImageNV agx_custom_glad_glBindShadingRateImageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXGENPARAMETEREXTPROC agx_custom_glad_glBindTexGenParameterEXT;
#define glBindTexGenParameterEXT agx_custom_glad_glBindTexGenParameterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXTUREPROC agx_custom_glad_glBindTexture;
#define glBindTexture agx_custom_glad_glBindTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXTUREEXTPROC agx_custom_glad_glBindTextureEXT;
#define glBindTextureEXT agx_custom_glad_glBindTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXTUREUNITPROC agx_custom_glad_glBindTextureUnit;
#define glBindTextureUnit agx_custom_glad_glBindTextureUnit
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXTUREUNITPARAMETEREXTPROC agx_custom_glad_glBindTextureUnitParameterEXT;
#define glBindTextureUnitParameterEXT agx_custom_glad_glBindTextureUnitParameterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTEXTURESPROC agx_custom_glad_glBindTextures;
#define glBindTextures agx_custom_glad_glBindTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTRANSFORMFEEDBACKPROC agx_custom_glad_glBindTransformFeedback;
#define glBindTransformFeedback agx_custom_glad_glBindTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDTRANSFORMFEEDBACKNVPROC agx_custom_glad_glBindTransformFeedbackNV;
#define glBindTransformFeedbackNV agx_custom_glad_glBindTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVERTEXARRAYPROC agx_custom_glad_glBindVertexArray;
#define glBindVertexArray agx_custom_glad_glBindVertexArray
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVERTEXARRAYAPPLEPROC agx_custom_glad_glBindVertexArrayAPPLE;
#define glBindVertexArrayAPPLE agx_custom_glad_glBindVertexArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVERTEXBUFFERPROC agx_custom_glad_glBindVertexBuffer;
#define glBindVertexBuffer agx_custom_glad_glBindVertexBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVERTEXBUFFERSPROC agx_custom_glad_glBindVertexBuffers;
#define glBindVertexBuffers agx_custom_glad_glBindVertexBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVERTEXSHADEREXTPROC agx_custom_glad_glBindVertexShaderEXT;
#define glBindVertexShaderEXT agx_custom_glad_glBindVertexShaderEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC agx_custom_glad_glBindVideoCaptureStreamBufferNV;
#define glBindVideoCaptureStreamBufferNV agx_custom_glad_glBindVideoCaptureStreamBufferNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC agx_custom_glad_glBindVideoCaptureStreamTextureNV;
#define glBindVideoCaptureStreamTextureNV agx_custom_glad_glBindVideoCaptureStreamTextureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3BEXTPROC agx_custom_glad_glBinormal3bEXT;
#define glBinormal3bEXT agx_custom_glad_glBinormal3bEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3BVEXTPROC agx_custom_glad_glBinormal3bvEXT;
#define glBinormal3bvEXT agx_custom_glad_glBinormal3bvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3DEXTPROC agx_custom_glad_glBinormal3dEXT;
#define glBinormal3dEXT agx_custom_glad_glBinormal3dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3DVEXTPROC agx_custom_glad_glBinormal3dvEXT;
#define glBinormal3dvEXT agx_custom_glad_glBinormal3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3FEXTPROC agx_custom_glad_glBinormal3fEXT;
#define glBinormal3fEXT agx_custom_glad_glBinormal3fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3FVEXTPROC agx_custom_glad_glBinormal3fvEXT;
#define glBinormal3fvEXT agx_custom_glad_glBinormal3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3IEXTPROC agx_custom_glad_glBinormal3iEXT;
#define glBinormal3iEXT agx_custom_glad_glBinormal3iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3IVEXTPROC agx_custom_glad_glBinormal3ivEXT;
#define glBinormal3ivEXT agx_custom_glad_glBinormal3ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3SEXTPROC agx_custom_glad_glBinormal3sEXT;
#define glBinormal3sEXT agx_custom_glad_glBinormal3sEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMAL3SVEXTPROC agx_custom_glad_glBinormal3svEXT;
#define glBinormal3svEXT agx_custom_glad_glBinormal3svEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBINORMALPOINTEREXTPROC agx_custom_glad_glBinormalPointerEXT;
#define glBinormalPointerEXT agx_custom_glad_glBinormalPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBITMAPPROC agx_custom_glad_glBitmap;
#define glBitmap agx_custom_glad_glBitmap
AGX_CUSTOM_GLAD_API_CALL PFNGLBITMAPXOESPROC agx_custom_glad_glBitmapxOES;
#define glBitmapxOES agx_custom_glad_glBitmapxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDBARRIERKHRPROC agx_custom_glad_glBlendBarrierKHR;
#define glBlendBarrierKHR agx_custom_glad_glBlendBarrierKHR
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDBARRIERNVPROC agx_custom_glad_glBlendBarrierNV;
#define glBlendBarrierNV agx_custom_glad_glBlendBarrierNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDCOLORPROC agx_custom_glad_glBlendColor;
#define glBlendColor agx_custom_glad_glBlendColor
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDCOLOREXTPROC agx_custom_glad_glBlendColorEXT;
#define glBlendColorEXT agx_custom_glad_glBlendColorEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDCOLORXOESPROC agx_custom_glad_glBlendColorxOES;
#define glBlendColorxOES agx_custom_glad_glBlendColorxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONPROC agx_custom_glad_glBlendEquation;
#define glBlendEquation agx_custom_glad_glBlendEquation
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONEXTPROC agx_custom_glad_glBlendEquationEXT;
#define glBlendEquationEXT agx_custom_glad_glBlendEquationEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONINDEXEDAMDPROC agx_custom_glad_glBlendEquationIndexedAMD;
#define glBlendEquationIndexedAMD agx_custom_glad_glBlendEquationIndexedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEPROC agx_custom_glad_glBlendEquationSeparate;
#define glBlendEquationSeparate agx_custom_glad_glBlendEquationSeparate
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEEXTPROC agx_custom_glad_glBlendEquationSeparateEXT;
#define glBlendEquationSeparateEXT agx_custom_glad_glBlendEquationSeparateEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC agx_custom_glad_glBlendEquationSeparateIndexedAMD;
#define glBlendEquationSeparateIndexedAMD agx_custom_glad_glBlendEquationSeparateIndexedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEIPROC agx_custom_glad_glBlendEquationSeparatei;
#define glBlendEquationSeparatei agx_custom_glad_glBlendEquationSeparatei
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEIARBPROC agx_custom_glad_glBlendEquationSeparateiARB;
#define glBlendEquationSeparateiARB agx_custom_glad_glBlendEquationSeparateiARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONIPROC agx_custom_glad_glBlendEquationi;
#define glBlendEquationi agx_custom_glad_glBlendEquationi
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDEQUATIONIARBPROC agx_custom_glad_glBlendEquationiARB;
#define glBlendEquationiARB agx_custom_glad_glBlendEquationiARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCPROC agx_custom_glad_glBlendFunc;
#define glBlendFunc agx_custom_glad_glBlendFunc
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCINDEXEDAMDPROC agx_custom_glad_glBlendFuncIndexedAMD;
#define glBlendFuncIndexedAMD agx_custom_glad_glBlendFuncIndexedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEPROC agx_custom_glad_glBlendFuncSeparate;
#define glBlendFuncSeparate agx_custom_glad_glBlendFuncSeparate
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEEXTPROC agx_custom_glad_glBlendFuncSeparateEXT;
#define glBlendFuncSeparateEXT agx_custom_glad_glBlendFuncSeparateEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEINGRPROC agx_custom_glad_glBlendFuncSeparateINGR;
#define glBlendFuncSeparateINGR agx_custom_glad_glBlendFuncSeparateINGR
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC agx_custom_glad_glBlendFuncSeparateIndexedAMD;
#define glBlendFuncSeparateIndexedAMD agx_custom_glad_glBlendFuncSeparateIndexedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEIPROC agx_custom_glad_glBlendFuncSeparatei;
#define glBlendFuncSeparatei agx_custom_glad_glBlendFuncSeparatei
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEIARBPROC agx_custom_glad_glBlendFuncSeparateiARB;
#define glBlendFuncSeparateiARB agx_custom_glad_glBlendFuncSeparateiARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCIPROC agx_custom_glad_glBlendFunci;
#define glBlendFunci agx_custom_glad_glBlendFunci
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDFUNCIARBPROC agx_custom_glad_glBlendFunciARB;
#define glBlendFunciARB agx_custom_glad_glBlendFunciARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBLENDPARAMETERINVPROC agx_custom_glad_glBlendParameteriNV;
#define glBlendParameteriNV agx_custom_glad_glBlendParameteriNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBLITFRAMEBUFFERPROC agx_custom_glad_glBlitFramebuffer;
#define glBlitFramebuffer agx_custom_glad_glBlitFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBLITFRAMEBUFFEREXTPROC agx_custom_glad_glBlitFramebufferEXT;
#define glBlitFramebufferEXT agx_custom_glad_glBlitFramebufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBLITNAMEDFRAMEBUFFERPROC agx_custom_glad_glBlitNamedFramebuffer;
#define glBlitNamedFramebuffer agx_custom_glad_glBlitNamedFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERADDRESSRANGENVPROC agx_custom_glad_glBufferAddressRangeNV;
#define glBufferAddressRangeNV agx_custom_glad_glBufferAddressRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERATTACHMEMORYNVPROC agx_custom_glad_glBufferAttachMemoryNV;
#define glBufferAttachMemoryNV agx_custom_glad_glBufferAttachMemoryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERDATAPROC agx_custom_glad_glBufferData;
#define glBufferData agx_custom_glad_glBufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERDATAARBPROC agx_custom_glad_glBufferDataARB;
#define glBufferDataARB agx_custom_glad_glBufferDataARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERPAGECOMMITMENTARBPROC agx_custom_glad_glBufferPageCommitmentARB;
#define glBufferPageCommitmentARB agx_custom_glad_glBufferPageCommitmentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERPAGECOMMITMENTMEMNVPROC agx_custom_glad_glBufferPageCommitmentMemNV;
#define glBufferPageCommitmentMemNV agx_custom_glad_glBufferPageCommitmentMemNV
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERPARAMETERIAPPLEPROC agx_custom_glad_glBufferParameteriAPPLE;
#define glBufferParameteriAPPLE agx_custom_glad_glBufferParameteriAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERSTORAGEPROC agx_custom_glad_glBufferStorage;
#define glBufferStorage agx_custom_glad_glBufferStorage
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERSTORAGEEXTERNALEXTPROC agx_custom_glad_glBufferStorageExternalEXT;
#define glBufferStorageExternalEXT agx_custom_glad_glBufferStorageExternalEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERSTORAGEMEMEXTPROC agx_custom_glad_glBufferStorageMemEXT;
#define glBufferStorageMemEXT agx_custom_glad_glBufferStorageMemEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERSUBDATAPROC agx_custom_glad_glBufferSubData;
#define glBufferSubData agx_custom_glad_glBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLBUFFERSUBDATAARBPROC agx_custom_glad_glBufferSubDataARB;
#define glBufferSubDataARB agx_custom_glad_glBufferSubDataARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCALLCOMMANDLISTNVPROC agx_custom_glad_glCallCommandListNV;
#define glCallCommandListNV agx_custom_glad_glCallCommandListNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCALLLISTPROC agx_custom_glad_glCallList;
#define glCallList agx_custom_glad_glCallList
AGX_CUSTOM_GLAD_API_CALL PFNGLCALLLISTSPROC agx_custom_glad_glCallLists;
#define glCallLists agx_custom_glad_glCallLists
AGX_CUSTOM_GLAD_API_CALL PFNGLCHECKFRAMEBUFFERSTATUSPROC agx_custom_glad_glCheckFramebufferStatus;
#define glCheckFramebufferStatus agx_custom_glad_glCheckFramebufferStatus
AGX_CUSTOM_GLAD_API_CALL PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC agx_custom_glad_glCheckFramebufferStatusEXT;
#define glCheckFramebufferStatusEXT agx_custom_glad_glCheckFramebufferStatusEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC agx_custom_glad_glCheckNamedFramebufferStatus;
#define glCheckNamedFramebufferStatus agx_custom_glad_glCheckNamedFramebufferStatus
AGX_CUSTOM_GLAD_API_CALL PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC agx_custom_glad_glCheckNamedFramebufferStatusEXT;
#define glCheckNamedFramebufferStatusEXT agx_custom_glad_glCheckNamedFramebufferStatusEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLAMPCOLORPROC agx_custom_glad_glClampColor;
#define glClampColor agx_custom_glad_glClampColor
AGX_CUSTOM_GLAD_API_CALL PFNGLCLAMPCOLORARBPROC agx_custom_glad_glClampColorARB;
#define glClampColorARB agx_custom_glad_glClampColorARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARPROC agx_custom_glad_glClear;
#define glClear agx_custom_glad_glClear
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARACCUMPROC agx_custom_glad_glClearAccum;
#define glClearAccum agx_custom_glad_glClearAccum
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARACCUMXOESPROC agx_custom_glad_glClearAccumxOES;
#define glClearAccumxOES agx_custom_glad_glClearAccumxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERDATAPROC agx_custom_glad_glClearBufferData;
#define glClearBufferData agx_custom_glad_glClearBufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERSUBDATAPROC agx_custom_glad_glClearBufferSubData;
#define glClearBufferSubData agx_custom_glad_glClearBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERFIPROC agx_custom_glad_glClearBufferfi;
#define glClearBufferfi agx_custom_glad_glClearBufferfi
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERFVPROC agx_custom_glad_glClearBufferfv;
#define glClearBufferfv agx_custom_glad_glClearBufferfv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERIVPROC agx_custom_glad_glClearBufferiv;
#define glClearBufferiv agx_custom_glad_glClearBufferiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARBUFFERUIVPROC agx_custom_glad_glClearBufferuiv;
#define glClearBufferuiv agx_custom_glad_glClearBufferuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARCOLORPROC agx_custom_glad_glClearColor;
#define glClearColor agx_custom_glad_glClearColor
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARCOLORIIEXTPROC agx_custom_glad_glClearColorIiEXT;
#define glClearColorIiEXT agx_custom_glad_glClearColorIiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARCOLORIUIEXTPROC agx_custom_glad_glClearColorIuiEXT;
#define glClearColorIuiEXT agx_custom_glad_glClearColorIuiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARCOLORXOESPROC agx_custom_glad_glClearColorxOES;
#define glClearColorxOES agx_custom_glad_glClearColorxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARDEPTHPROC agx_custom_glad_glClearDepth;
#define glClearDepth agx_custom_glad_glClearDepth
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARDEPTHDNVPROC agx_custom_glad_glClearDepthdNV;
#define glClearDepthdNV agx_custom_glad_glClearDepthdNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARDEPTHFPROC agx_custom_glad_glClearDepthf;
#define glClearDepthf agx_custom_glad_glClearDepthf
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARDEPTHFOESPROC agx_custom_glad_glClearDepthfOES;
#define glClearDepthfOES agx_custom_glad_glClearDepthfOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARDEPTHXOESPROC agx_custom_glad_glClearDepthxOES;
#define glClearDepthxOES agx_custom_glad_glClearDepthxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARINDEXPROC agx_custom_glad_glClearIndex;
#define glClearIndex agx_custom_glad_glClearIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDBUFFERDATAPROC agx_custom_glad_glClearNamedBufferData;
#define glClearNamedBufferData agx_custom_glad_glClearNamedBufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDBUFFERDATAEXTPROC agx_custom_glad_glClearNamedBufferDataEXT;
#define glClearNamedBufferDataEXT agx_custom_glad_glClearNamedBufferDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDBUFFERSUBDATAPROC agx_custom_glad_glClearNamedBufferSubData;
#define glClearNamedBufferSubData agx_custom_glad_glClearNamedBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glClearNamedBufferSubDataEXT;
#define glClearNamedBufferSubDataEXT agx_custom_glad_glClearNamedBufferSubDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDFRAMEBUFFERFIPROC agx_custom_glad_glClearNamedFramebufferfi;
#define glClearNamedFramebufferfi agx_custom_glad_glClearNamedFramebufferfi
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDFRAMEBUFFERFVPROC agx_custom_glad_glClearNamedFramebufferfv;
#define glClearNamedFramebufferfv agx_custom_glad_glClearNamedFramebufferfv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDFRAMEBUFFERIVPROC agx_custom_glad_glClearNamedFramebufferiv;
#define glClearNamedFramebufferiv agx_custom_glad_glClearNamedFramebufferiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC agx_custom_glad_glClearNamedFramebufferuiv;
#define glClearNamedFramebufferuiv agx_custom_glad_glClearNamedFramebufferuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARSTENCILPROC agx_custom_glad_glClearStencil;
#define glClearStencil agx_custom_glad_glClearStencil
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARTEXIMAGEPROC agx_custom_glad_glClearTexImage;
#define glClearTexImage agx_custom_glad_glClearTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLCLEARTEXSUBIMAGEPROC agx_custom_glad_glClearTexSubImage;
#define glClearTexSubImage agx_custom_glad_glClearTexSubImage
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTACTIVETEXTUREPROC agx_custom_glad_glClientActiveTexture;
#define glClientActiveTexture agx_custom_glad_glClientActiveTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTACTIVETEXTUREARBPROC agx_custom_glad_glClientActiveTextureARB;
#define glClientActiveTextureARB agx_custom_glad_glClientActiveTextureARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC agx_custom_glad_glClientActiveVertexStreamATI;
#define glClientActiveVertexStreamATI agx_custom_glad_glClientActiveVertexStreamATI
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTATTRIBDEFAULTEXTPROC agx_custom_glad_glClientAttribDefaultEXT;
#define glClientAttribDefaultEXT agx_custom_glad_glClientAttribDefaultEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC agx_custom_glad_glClientWaitSemaphoreui64NVX;
#define glClientWaitSemaphoreui64NVX agx_custom_glad_glClientWaitSemaphoreui64NVX
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIENTWAITSYNCPROC agx_custom_glad_glClientWaitSync;
#define glClientWaitSync agx_custom_glad_glClientWaitSync
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIPCONTROLPROC agx_custom_glad_glClipControl;
#define glClipControl agx_custom_glad_glClipControl
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIPPLANEPROC agx_custom_glad_glClipPlane;
#define glClipPlane agx_custom_glad_glClipPlane
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIPPLANEFOESPROC agx_custom_glad_glClipPlanefOES;
#define glClipPlanefOES agx_custom_glad_glClipPlanefOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCLIPPLANEXOESPROC agx_custom_glad_glClipPlanexOES;
#define glClipPlanexOES agx_custom_glad_glClipPlanexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3BPROC agx_custom_glad_glColor3b;
#define glColor3b agx_custom_glad_glColor3b
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3BVPROC agx_custom_glad_glColor3bv;
#define glColor3bv agx_custom_glad_glColor3bv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3DPROC agx_custom_glad_glColor3d;
#define glColor3d agx_custom_glad_glColor3d
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3DVPROC agx_custom_glad_glColor3dv;
#define glColor3dv agx_custom_glad_glColor3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3FPROC agx_custom_glad_glColor3f;
#define glColor3f agx_custom_glad_glColor3f
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3FVERTEX3FSUNPROC agx_custom_glad_glColor3fVertex3fSUN;
#define glColor3fVertex3fSUN agx_custom_glad_glColor3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glColor3fVertex3fvSUN;
#define glColor3fVertex3fvSUN agx_custom_glad_glColor3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3FVPROC agx_custom_glad_glColor3fv;
#define glColor3fv agx_custom_glad_glColor3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3HNVPROC agx_custom_glad_glColor3hNV;
#define glColor3hNV agx_custom_glad_glColor3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3HVNVPROC agx_custom_glad_glColor3hvNV;
#define glColor3hvNV agx_custom_glad_glColor3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3IPROC agx_custom_glad_glColor3i;
#define glColor3i agx_custom_glad_glColor3i
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3IVPROC agx_custom_glad_glColor3iv;
#define glColor3iv agx_custom_glad_glColor3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3SPROC agx_custom_glad_glColor3s;
#define glColor3s agx_custom_glad_glColor3s
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3SVPROC agx_custom_glad_glColor3sv;
#define glColor3sv agx_custom_glad_glColor3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3UBPROC agx_custom_glad_glColor3ub;
#define glColor3ub agx_custom_glad_glColor3ub
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3UBVPROC agx_custom_glad_glColor3ubv;
#define glColor3ubv agx_custom_glad_glColor3ubv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3UIPROC agx_custom_glad_glColor3ui;
#define glColor3ui agx_custom_glad_glColor3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3UIVPROC agx_custom_glad_glColor3uiv;
#define glColor3uiv agx_custom_glad_glColor3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3USPROC agx_custom_glad_glColor3us;
#define glColor3us agx_custom_glad_glColor3us
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3USVPROC agx_custom_glad_glColor3usv;
#define glColor3usv agx_custom_glad_glColor3usv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3XOESPROC agx_custom_glad_glColor3xOES;
#define glColor3xOES agx_custom_glad_glColor3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR3XVOESPROC agx_custom_glad_glColor3xvOES;
#define glColor3xvOES agx_custom_glad_glColor3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4BPROC agx_custom_glad_glColor4b;
#define glColor4b agx_custom_glad_glColor4b
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4BVPROC agx_custom_glad_glColor4bv;
#define glColor4bv agx_custom_glad_glColor4bv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4DPROC agx_custom_glad_glColor4d;
#define glColor4d agx_custom_glad_glColor4d
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4DVPROC agx_custom_glad_glColor4dv;
#define glColor4dv agx_custom_glad_glColor4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4FPROC agx_custom_glad_glColor4f;
#define glColor4f agx_custom_glad_glColor4f
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glColor4fNormal3fVertex3fSUN;
#define glColor4fNormal3fVertex3fSUN agx_custom_glad_glColor4fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glColor4fNormal3fVertex3fvSUN;
#define glColor4fNormal3fVertex3fvSUN agx_custom_glad_glColor4fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4FVPROC agx_custom_glad_glColor4fv;
#define glColor4fv agx_custom_glad_glColor4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4HNVPROC agx_custom_glad_glColor4hNV;
#define glColor4hNV agx_custom_glad_glColor4hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4HVNVPROC agx_custom_glad_glColor4hvNV;
#define glColor4hvNV agx_custom_glad_glColor4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4IPROC agx_custom_glad_glColor4i;
#define glColor4i agx_custom_glad_glColor4i
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4IVPROC agx_custom_glad_glColor4iv;
#define glColor4iv agx_custom_glad_glColor4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4SPROC agx_custom_glad_glColor4s;
#define glColor4s agx_custom_glad_glColor4s
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4SVPROC agx_custom_glad_glColor4sv;
#define glColor4sv agx_custom_glad_glColor4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBPROC agx_custom_glad_glColor4ub;
#define glColor4ub agx_custom_glad_glColor4ub
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBVERTEX2FSUNPROC agx_custom_glad_glColor4ubVertex2fSUN;
#define glColor4ubVertex2fSUN agx_custom_glad_glColor4ubVertex2fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBVERTEX2FVSUNPROC agx_custom_glad_glColor4ubVertex2fvSUN;
#define glColor4ubVertex2fvSUN agx_custom_glad_glColor4ubVertex2fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glColor4ubVertex3fSUN;
#define glColor4ubVertex3fSUN agx_custom_glad_glColor4ubVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glColor4ubVertex3fvSUN;
#define glColor4ubVertex3fvSUN agx_custom_glad_glColor4ubVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UBVPROC agx_custom_glad_glColor4ubv;
#define glColor4ubv agx_custom_glad_glColor4ubv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UIPROC agx_custom_glad_glColor4ui;
#define glColor4ui agx_custom_glad_glColor4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4UIVPROC agx_custom_glad_glColor4uiv;
#define glColor4uiv agx_custom_glad_glColor4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4USPROC agx_custom_glad_glColor4us;
#define glColor4us agx_custom_glad_glColor4us
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4USVPROC agx_custom_glad_glColor4usv;
#define glColor4usv agx_custom_glad_glColor4usv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4XOESPROC agx_custom_glad_glColor4xOES;
#define glColor4xOES agx_custom_glad_glColor4xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLOR4XVOESPROC agx_custom_glad_glColor4xvOES;
#define glColor4xvOES agx_custom_glad_glColor4xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORFORMATNVPROC agx_custom_glad_glColorFormatNV;
#define glColorFormatNV agx_custom_glad_glColorFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORFRAGMENTOP1ATIPROC agx_custom_glad_glColorFragmentOp1ATI;
#define glColorFragmentOp1ATI agx_custom_glad_glColorFragmentOp1ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORFRAGMENTOP2ATIPROC agx_custom_glad_glColorFragmentOp2ATI;
#define glColorFragmentOp2ATI agx_custom_glad_glColorFragmentOp2ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORFRAGMENTOP3ATIPROC agx_custom_glad_glColorFragmentOp3ATI;
#define glColorFragmentOp3ATI agx_custom_glad_glColorFragmentOp3ATI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORMASKPROC agx_custom_glad_glColorMask;
#define glColorMask agx_custom_glad_glColorMask
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORMASKINDEXEDEXTPROC agx_custom_glad_glColorMaskIndexedEXT;
#define glColorMaskIndexedEXT agx_custom_glad_glColorMaskIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORMASKIPROC agx_custom_glad_glColorMaski;
#define glColorMaski agx_custom_glad_glColorMaski
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORMATERIALPROC agx_custom_glad_glColorMaterial;
#define glColorMaterial agx_custom_glad_glColorMaterial
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORP3UIPROC agx_custom_glad_glColorP3ui;
#define glColorP3ui agx_custom_glad_glColorP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORP3UIVPROC agx_custom_glad_glColorP3uiv;
#define glColorP3uiv agx_custom_glad_glColorP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORP4UIPROC agx_custom_glad_glColorP4ui;
#define glColorP4ui agx_custom_glad_glColorP4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORP4UIVPROC agx_custom_glad_glColorP4uiv;
#define glColorP4uiv agx_custom_glad_glColorP4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORPOINTERPROC agx_custom_glad_glColorPointer;
#define glColorPointer agx_custom_glad_glColorPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORPOINTEREXTPROC agx_custom_glad_glColorPointerEXT;
#define glColorPointerEXT agx_custom_glad_glColorPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORPOINTERLISTIBMPROC agx_custom_glad_glColorPointerListIBM;
#define glColorPointerListIBM agx_custom_glad_glColorPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORPOINTERVINTELPROC agx_custom_glad_glColorPointervINTEL;
#define glColorPointervINTEL agx_custom_glad_glColorPointervINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORSUBTABLEPROC agx_custom_glad_glColorSubTable;
#define glColorSubTable agx_custom_glad_glColorSubTable
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORSUBTABLEEXTPROC agx_custom_glad_glColorSubTableEXT;
#define glColorSubTableEXT agx_custom_glad_glColorSubTableEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEPROC agx_custom_glad_glColorTable;
#define glColorTable agx_custom_glad_glColorTable
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEEXTPROC agx_custom_glad_glColorTableEXT;
#define glColorTableEXT agx_custom_glad_glColorTableEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEPARAMETERFVPROC agx_custom_glad_glColorTableParameterfv;
#define glColorTableParameterfv agx_custom_glad_glColorTableParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEPARAMETERFVSGIPROC agx_custom_glad_glColorTableParameterfvSGI;
#define glColorTableParameterfvSGI agx_custom_glad_glColorTableParameterfvSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEPARAMETERIVPROC agx_custom_glad_glColorTableParameteriv;
#define glColorTableParameteriv agx_custom_glad_glColorTableParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLEPARAMETERIVSGIPROC agx_custom_glad_glColorTableParameterivSGI;
#define glColorTableParameterivSGI agx_custom_glad_glColorTableParameterivSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOLORTABLESGIPROC agx_custom_glad_glColorTableSGI;
#define glColorTableSGI agx_custom_glad_glColorTableSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERINPUTNVPROC agx_custom_glad_glCombinerInputNV;
#define glCombinerInputNV agx_custom_glad_glCombinerInputNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINEROUTPUTNVPROC agx_custom_glad_glCombinerOutputNV;
#define glCombinerOutputNV agx_custom_glad_glCombinerOutputNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERPARAMETERFNVPROC agx_custom_glad_glCombinerParameterfNV;
#define glCombinerParameterfNV agx_custom_glad_glCombinerParameterfNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERPARAMETERFVNVPROC agx_custom_glad_glCombinerParameterfvNV;
#define glCombinerParameterfvNV agx_custom_glad_glCombinerParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERPARAMETERINVPROC agx_custom_glad_glCombinerParameteriNV;
#define glCombinerParameteriNV agx_custom_glad_glCombinerParameteriNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERPARAMETERIVNVPROC agx_custom_glad_glCombinerParameterivNV;
#define glCombinerParameterivNV agx_custom_glad_glCombinerParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMBINERSTAGEPARAMETERFVNVPROC agx_custom_glad_glCombinerStageParameterfvNV;
#define glCombinerStageParameterfvNV agx_custom_glad_glCombinerStageParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMMANDLISTSEGMENTSNVPROC agx_custom_glad_glCommandListSegmentsNV;
#define glCommandListSegmentsNV agx_custom_glad_glCommandListSegmentsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPILECOMMANDLISTNVPROC agx_custom_glad_glCompileCommandListNV;
#define glCompileCommandListNV agx_custom_glad_glCompileCommandListNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPILESHADERPROC agx_custom_glad_glCompileShader;
#define glCompileShader agx_custom_glad_glCompileShader
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPILESHADERARBPROC agx_custom_glad_glCompileShaderARB;
#define glCompileShaderARB agx_custom_glad_glCompileShaderARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPILESHADERINCLUDEARBPROC agx_custom_glad_glCompileShaderIncludeARB;
#define glCompileShaderIncludeARB agx_custom_glad_glCompileShaderIncludeARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC agx_custom_glad_glCompressedMultiTexImage1DEXT;
#define glCompressedMultiTexImage1DEXT agx_custom_glad_glCompressedMultiTexImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC agx_custom_glad_glCompressedMultiTexImage2DEXT;
#define glCompressedMultiTexImage2DEXT agx_custom_glad_glCompressedMultiTexImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC agx_custom_glad_glCompressedMultiTexImage3DEXT;
#define glCompressedMultiTexImage3DEXT agx_custom_glad_glCompressedMultiTexImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage1DEXT;
#define glCompressedMultiTexSubImage1DEXT agx_custom_glad_glCompressedMultiTexSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage2DEXT;
#define glCompressedMultiTexSubImage2DEXT agx_custom_glad_glCompressedMultiTexSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage3DEXT;
#define glCompressedMultiTexSubImage3DEXT agx_custom_glad_glCompressedMultiTexSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DPROC agx_custom_glad_glCompressedTexImage1D;
#define glCompressedTexImage1D agx_custom_glad_glCompressedTexImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DARBPROC agx_custom_glad_glCompressedTexImage1DARB;
#define glCompressedTexImage1DARB agx_custom_glad_glCompressedTexImage1DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DPROC agx_custom_glad_glCompressedTexImage2D;
#define glCompressedTexImage2D agx_custom_glad_glCompressedTexImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DARBPROC agx_custom_glad_glCompressedTexImage2DARB;
#define glCompressedTexImage2DARB agx_custom_glad_glCompressedTexImage2DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DPROC agx_custom_glad_glCompressedTexImage3D;
#define glCompressedTexImage3D agx_custom_glad_glCompressedTexImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DARBPROC agx_custom_glad_glCompressedTexImage3DARB;
#define glCompressedTexImage3DARB agx_custom_glad_glCompressedTexImage3DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC agx_custom_glad_glCompressedTexSubImage1D;
#define glCompressedTexSubImage1D agx_custom_glad_glCompressedTexSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC agx_custom_glad_glCompressedTexSubImage1DARB;
#define glCompressedTexSubImage1DARB agx_custom_glad_glCompressedTexSubImage1DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC agx_custom_glad_glCompressedTexSubImage2D;
#define glCompressedTexSubImage2D agx_custom_glad_glCompressedTexSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC agx_custom_glad_glCompressedTexSubImage2DARB;
#define glCompressedTexSubImage2DARB agx_custom_glad_glCompressedTexSubImage2DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC agx_custom_glad_glCompressedTexSubImage3D;
#define glCompressedTexSubImage3D agx_custom_glad_glCompressedTexSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC agx_custom_glad_glCompressedTexSubImage3DARB;
#define glCompressedTexSubImage3DARB agx_custom_glad_glCompressedTexSubImage3DARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC agx_custom_glad_glCompressedTextureImage1DEXT;
#define glCompressedTextureImage1DEXT agx_custom_glad_glCompressedTextureImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC agx_custom_glad_glCompressedTextureImage2DEXT;
#define glCompressedTextureImage2DEXT agx_custom_glad_glCompressedTextureImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC agx_custom_glad_glCompressedTextureImage3DEXT;
#define glCompressedTextureImage3DEXT agx_custom_glad_glCompressedTextureImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC agx_custom_glad_glCompressedTextureSubImage1D;
#define glCompressedTextureSubImage1D agx_custom_glad_glCompressedTextureSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glCompressedTextureSubImage1DEXT;
#define glCompressedTextureSubImage1DEXT agx_custom_glad_glCompressedTextureSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC agx_custom_glad_glCompressedTextureSubImage2D;
#define glCompressedTextureSubImage2D agx_custom_glad_glCompressedTextureSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glCompressedTextureSubImage2DEXT;
#define glCompressedTextureSubImage2DEXT agx_custom_glad_glCompressedTextureSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC agx_custom_glad_glCompressedTextureSubImage3D;
#define glCompressedTextureSubImage3D agx_custom_glad_glCompressedTextureSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glCompressedTextureSubImage3DEXT;
#define glCompressedTextureSubImage3DEXT agx_custom_glad_glCompressedTextureSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONSERVATIVERASTERPARAMETERFNVPROC agx_custom_glad_glConservativeRasterParameterfNV;
#define glConservativeRasterParameterfNV agx_custom_glad_glConservativeRasterParameterfNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCONSERVATIVERASTERPARAMETERINVPROC agx_custom_glad_glConservativeRasterParameteriNV;
#define glConservativeRasterParameteriNV agx_custom_glad_glConservativeRasterParameteriNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONFILTER1DPROC agx_custom_glad_glConvolutionFilter1D;
#define glConvolutionFilter1D agx_custom_glad_glConvolutionFilter1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONFILTER1DEXTPROC agx_custom_glad_glConvolutionFilter1DEXT;
#define glConvolutionFilter1DEXT agx_custom_glad_glConvolutionFilter1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONFILTER2DPROC agx_custom_glad_glConvolutionFilter2D;
#define glConvolutionFilter2D agx_custom_glad_glConvolutionFilter2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONFILTER2DEXTPROC agx_custom_glad_glConvolutionFilter2DEXT;
#define glConvolutionFilter2DEXT agx_custom_glad_glConvolutionFilter2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERFPROC agx_custom_glad_glConvolutionParameterf;
#define glConvolutionParameterf agx_custom_glad_glConvolutionParameterf
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERFEXTPROC agx_custom_glad_glConvolutionParameterfEXT;
#define glConvolutionParameterfEXT agx_custom_glad_glConvolutionParameterfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERFVPROC agx_custom_glad_glConvolutionParameterfv;
#define glConvolutionParameterfv agx_custom_glad_glConvolutionParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERFVEXTPROC agx_custom_glad_glConvolutionParameterfvEXT;
#define glConvolutionParameterfvEXT agx_custom_glad_glConvolutionParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERIPROC agx_custom_glad_glConvolutionParameteri;
#define glConvolutionParameteri agx_custom_glad_glConvolutionParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERIEXTPROC agx_custom_glad_glConvolutionParameteriEXT;
#define glConvolutionParameteriEXT agx_custom_glad_glConvolutionParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERIVPROC agx_custom_glad_glConvolutionParameteriv;
#define glConvolutionParameteriv agx_custom_glad_glConvolutionParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERIVEXTPROC agx_custom_glad_glConvolutionParameterivEXT;
#define glConvolutionParameterivEXT agx_custom_glad_glConvolutionParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERXOESPROC agx_custom_glad_glConvolutionParameterxOES;
#define glConvolutionParameterxOES agx_custom_glad_glConvolutionParameterxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCONVOLUTIONPARAMETERXVOESPROC agx_custom_glad_glConvolutionParameterxvOES;
#define glConvolutionParameterxvOES agx_custom_glad_glConvolutionParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYBUFFERSUBDATAPROC agx_custom_glad_glCopyBufferSubData;
#define glCopyBufferSubData agx_custom_glad_glCopyBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCOLORSUBTABLEPROC agx_custom_glad_glCopyColorSubTable;
#define glCopyColorSubTable agx_custom_glad_glCopyColorSubTable
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCOLORSUBTABLEEXTPROC agx_custom_glad_glCopyColorSubTableEXT;
#define glCopyColorSubTableEXT agx_custom_glad_glCopyColorSubTableEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCOLORTABLEPROC agx_custom_glad_glCopyColorTable;
#define glCopyColorTable agx_custom_glad_glCopyColorTable
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCOLORTABLESGIPROC agx_custom_glad_glCopyColorTableSGI;
#define glCopyColorTableSGI agx_custom_glad_glCopyColorTableSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCONVOLUTIONFILTER1DPROC agx_custom_glad_glCopyConvolutionFilter1D;
#define glCopyConvolutionFilter1D agx_custom_glad_glCopyConvolutionFilter1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC agx_custom_glad_glCopyConvolutionFilter1DEXT;
#define glCopyConvolutionFilter1DEXT agx_custom_glad_glCopyConvolutionFilter1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCONVOLUTIONFILTER2DPROC agx_custom_glad_glCopyConvolutionFilter2D;
#define glCopyConvolutionFilter2D agx_custom_glad_glCopyConvolutionFilter2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC agx_custom_glad_glCopyConvolutionFilter2DEXT;
#define glCopyConvolutionFilter2DEXT agx_custom_glad_glCopyConvolutionFilter2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYIMAGESUBDATAPROC agx_custom_glad_glCopyImageSubData;
#define glCopyImageSubData agx_custom_glad_glCopyImageSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYIMAGESUBDATANVPROC agx_custom_glad_glCopyImageSubDataNV;
#define glCopyImageSubDataNV agx_custom_glad_glCopyImageSubDataNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYMULTITEXIMAGE1DEXTPROC agx_custom_glad_glCopyMultiTexImage1DEXT;
#define glCopyMultiTexImage1DEXT agx_custom_glad_glCopyMultiTexImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYMULTITEXIMAGE2DEXTPROC agx_custom_glad_glCopyMultiTexImage2DEXT;
#define glCopyMultiTexImage2DEXT agx_custom_glad_glCopyMultiTexImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glCopyMultiTexSubImage1DEXT;
#define glCopyMultiTexSubImage1DEXT agx_custom_glad_glCopyMultiTexSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glCopyMultiTexSubImage2DEXT;
#define glCopyMultiTexSubImage2DEXT agx_custom_glad_glCopyMultiTexSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glCopyMultiTexSubImage3DEXT;
#define glCopyMultiTexSubImage3DEXT agx_custom_glad_glCopyMultiTexSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYNAMEDBUFFERSUBDATAPROC agx_custom_glad_glCopyNamedBufferSubData;
#define glCopyNamedBufferSubData agx_custom_glad_glCopyNamedBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYPATHNVPROC agx_custom_glad_glCopyPathNV;
#define glCopyPathNV agx_custom_glad_glCopyPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYPIXELSPROC agx_custom_glad_glCopyPixels;
#define glCopyPixels agx_custom_glad_glCopyPixels
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXIMAGE1DPROC agx_custom_glad_glCopyTexImage1D;
#define glCopyTexImage1D agx_custom_glad_glCopyTexImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXIMAGE1DEXTPROC agx_custom_glad_glCopyTexImage1DEXT;
#define glCopyTexImage1DEXT agx_custom_glad_glCopyTexImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXIMAGE2DPROC agx_custom_glad_glCopyTexImage2D;
#define glCopyTexImage2D agx_custom_glad_glCopyTexImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXIMAGE2DEXTPROC agx_custom_glad_glCopyTexImage2DEXT;
#define glCopyTexImage2DEXT agx_custom_glad_glCopyTexImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE1DPROC agx_custom_glad_glCopyTexSubImage1D;
#define glCopyTexSubImage1D agx_custom_glad_glCopyTexSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE1DEXTPROC agx_custom_glad_glCopyTexSubImage1DEXT;
#define glCopyTexSubImage1DEXT agx_custom_glad_glCopyTexSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE2DPROC agx_custom_glad_glCopyTexSubImage2D;
#define glCopyTexSubImage2D agx_custom_glad_glCopyTexSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE2DEXTPROC agx_custom_glad_glCopyTexSubImage2DEXT;
#define glCopyTexSubImage2DEXT agx_custom_glad_glCopyTexSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE3DPROC agx_custom_glad_glCopyTexSubImage3D;
#define glCopyTexSubImage3D agx_custom_glad_glCopyTexSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE3DEXTPROC agx_custom_glad_glCopyTexSubImage3DEXT;
#define glCopyTexSubImage3DEXT agx_custom_glad_glCopyTexSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTUREIMAGE1DEXTPROC agx_custom_glad_glCopyTextureImage1DEXT;
#define glCopyTextureImage1DEXT agx_custom_glad_glCopyTextureImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTUREIMAGE2DEXTPROC agx_custom_glad_glCopyTextureImage2DEXT;
#define glCopyTextureImage2DEXT agx_custom_glad_glCopyTextureImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE1DPROC agx_custom_glad_glCopyTextureSubImage1D;
#define glCopyTextureSubImage1D agx_custom_glad_glCopyTextureSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glCopyTextureSubImage1DEXT;
#define glCopyTextureSubImage1DEXT agx_custom_glad_glCopyTextureSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE2DPROC agx_custom_glad_glCopyTextureSubImage2D;
#define glCopyTextureSubImage2D agx_custom_glad_glCopyTextureSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glCopyTextureSubImage2DEXT;
#define glCopyTextureSubImage2DEXT agx_custom_glad_glCopyTextureSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE3DPROC agx_custom_glad_glCopyTextureSubImage3D;
#define glCopyTextureSubImage3D agx_custom_glad_glCopyTextureSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glCopyTextureSubImage3DEXT;
#define glCopyTextureSubImage3DEXT agx_custom_glad_glCopyTextureSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERFILLPATHINSTANCEDNVPROC agx_custom_glad_glCoverFillPathInstancedNV;
#define glCoverFillPathInstancedNV agx_custom_glad_glCoverFillPathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERFILLPATHNVPROC agx_custom_glad_glCoverFillPathNV;
#define glCoverFillPathNV agx_custom_glad_glCoverFillPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glCoverStrokePathInstancedNV;
#define glCoverStrokePathInstancedNV agx_custom_glad_glCoverStrokePathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERSTROKEPATHNVPROC agx_custom_glad_glCoverStrokePathNV;
#define glCoverStrokePathNV agx_custom_glad_glCoverStrokePathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERAGEMODULATIONNVPROC agx_custom_glad_glCoverageModulationNV;
#define glCoverageModulationNV agx_custom_glad_glCoverageModulationNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCOVERAGEMODULATIONTABLENVPROC agx_custom_glad_glCoverageModulationTableNV;
#define glCoverageModulationTableNV agx_custom_glad_glCoverageModulationTableNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEBUFFERSPROC agx_custom_glad_glCreateBuffers;
#define glCreateBuffers agx_custom_glad_glCreateBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATECOMMANDLISTSNVPROC agx_custom_glad_glCreateCommandListsNV;
#define glCreateCommandListsNV agx_custom_glad_glCreateCommandListsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEFRAMEBUFFERSPROC agx_custom_glad_glCreateFramebuffers;
#define glCreateFramebuffers agx_custom_glad_glCreateFramebuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEMEMORYOBJECTSEXTPROC agx_custom_glad_glCreateMemoryObjectsEXT;
#define glCreateMemoryObjectsEXT agx_custom_glad_glCreateMemoryObjectsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEPERFQUERYINTELPROC agx_custom_glad_glCreatePerfQueryINTEL;
#define glCreatePerfQueryINTEL agx_custom_glad_glCreatePerfQueryINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEPROGRAMPROC agx_custom_glad_glCreateProgram;
#define glCreateProgram agx_custom_glad_glCreateProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEPROGRAMOBJECTARBPROC agx_custom_glad_glCreateProgramObjectARB;
#define glCreateProgramObjectARB agx_custom_glad_glCreateProgramObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEPROGRAMPIPELINESPROC agx_custom_glad_glCreateProgramPipelines;
#define glCreateProgramPipelines agx_custom_glad_glCreateProgramPipelines
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEPROGRESSFENCENVXPROC agx_custom_glad_glCreateProgressFenceNVX;
#define glCreateProgressFenceNVX agx_custom_glad_glCreateProgressFenceNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEQUERIESPROC agx_custom_glad_glCreateQueries;
#define glCreateQueries agx_custom_glad_glCreateQueries
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATERENDERBUFFERSPROC agx_custom_glad_glCreateRenderbuffers;
#define glCreateRenderbuffers agx_custom_glad_glCreateRenderbuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESAMPLERSPROC agx_custom_glad_glCreateSamplers;
#define glCreateSamplers agx_custom_glad_glCreateSamplers
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESEMAPHORESNVPROC agx_custom_glad_glCreateSemaphoresNV;
#define glCreateSemaphoresNV agx_custom_glad_glCreateSemaphoresNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESHADERPROC agx_custom_glad_glCreateShader;
#define glCreateShader agx_custom_glad_glCreateShader
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESHADEROBJECTARBPROC agx_custom_glad_glCreateShaderObjectARB;
#define glCreateShaderObjectARB agx_custom_glad_glCreateShaderObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESHADERPROGRAMEXTPROC agx_custom_glad_glCreateShaderProgramEXT;
#define glCreateShaderProgramEXT agx_custom_glad_glCreateShaderProgramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESHADERPROGRAMVPROC agx_custom_glad_glCreateShaderProgramv;
#define glCreateShaderProgramv agx_custom_glad_glCreateShaderProgramv
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESTATESNVPROC agx_custom_glad_glCreateStatesNV;
#define glCreateStatesNV agx_custom_glad_glCreateStatesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATESYNCFROMCLEVENTARBPROC agx_custom_glad_glCreateSyncFromCLeventARB;
#define glCreateSyncFromCLeventARB agx_custom_glad_glCreateSyncFromCLeventARB
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATETEXTURESPROC agx_custom_glad_glCreateTextures;
#define glCreateTextures agx_custom_glad_glCreateTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATETRANSFORMFEEDBACKSPROC agx_custom_glad_glCreateTransformFeedbacks;
#define glCreateTransformFeedbacks agx_custom_glad_glCreateTransformFeedbacks
AGX_CUSTOM_GLAD_API_CALL PFNGLCREATEVERTEXARRAYSPROC agx_custom_glad_glCreateVertexArrays;
#define glCreateVertexArrays agx_custom_glad_glCreateVertexArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLCULLFACEPROC agx_custom_glad_glCullFace;
#define glCullFace agx_custom_glad_glCullFace
AGX_CUSTOM_GLAD_API_CALL PFNGLCULLPARAMETERDVEXTPROC agx_custom_glad_glCullParameterdvEXT;
#define glCullParameterdvEXT agx_custom_glad_glCullParameterdvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCULLPARAMETERFVEXTPROC agx_custom_glad_glCullParameterfvEXT;
#define glCullParameterfvEXT agx_custom_glad_glCullParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLCURRENTPALETTEMATRIXARBPROC agx_custom_glad_glCurrentPaletteMatrixARB;
#define glCurrentPaletteMatrixARB agx_custom_glad_glCurrentPaletteMatrixARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKPROC agx_custom_glad_glDebugMessageCallback;
#define glDebugMessageCallback agx_custom_glad_glDebugMessageCallback
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKAMDPROC agx_custom_glad_glDebugMessageCallbackAMD;
#define glDebugMessageCallbackAMD agx_custom_glad_glDebugMessageCallbackAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKARBPROC agx_custom_glad_glDebugMessageCallbackARB;
#define glDebugMessageCallbackARB agx_custom_glad_glDebugMessageCallbackARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGECONTROLPROC agx_custom_glad_glDebugMessageControl;
#define glDebugMessageControl agx_custom_glad_glDebugMessageControl
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGECONTROLARBPROC agx_custom_glad_glDebugMessageControlARB;
#define glDebugMessageControlARB agx_custom_glad_glDebugMessageControlARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGEENABLEAMDPROC agx_custom_glad_glDebugMessageEnableAMD;
#define glDebugMessageEnableAMD agx_custom_glad_glDebugMessageEnableAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTPROC agx_custom_glad_glDebugMessageInsert;
#define glDebugMessageInsert agx_custom_glad_glDebugMessageInsert
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTAMDPROC agx_custom_glad_glDebugMessageInsertAMD;
#define glDebugMessageInsertAMD agx_custom_glad_glDebugMessageInsertAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTARBPROC agx_custom_glad_glDebugMessageInsertARB;
#define glDebugMessageInsertARB agx_custom_glad_glDebugMessageInsertARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDEFORMSGIXPROC agx_custom_glad_glDeformSGIX;
#define glDeformSGIX agx_custom_glad_glDeformSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLDEFORMATIONMAP3DSGIXPROC agx_custom_glad_glDeformationMap3dSGIX;
#define glDeformationMap3dSGIX agx_custom_glad_glDeformationMap3dSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLDEFORMATIONMAP3FSGIXPROC agx_custom_glad_glDeformationMap3fSGIX;
#define glDeformationMap3fSGIX agx_custom_glad_glDeformationMap3fSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEASYNCMARKERSSGIXPROC agx_custom_glad_glDeleteAsyncMarkersSGIX;
#define glDeleteAsyncMarkersSGIX agx_custom_glad_glDeleteAsyncMarkersSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEBUFFERSPROC agx_custom_glad_glDeleteBuffers;
#define glDeleteBuffers agx_custom_glad_glDeleteBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEBUFFERSARBPROC agx_custom_glad_glDeleteBuffersARB;
#define glDeleteBuffersARB agx_custom_glad_glDeleteBuffersARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETECOMMANDLISTSNVPROC agx_custom_glad_glDeleteCommandListsNV;
#define glDeleteCommandListsNV agx_custom_glad_glDeleteCommandListsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEFENCESAPPLEPROC agx_custom_glad_glDeleteFencesAPPLE;
#define glDeleteFencesAPPLE agx_custom_glad_glDeleteFencesAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEFENCESNVPROC agx_custom_glad_glDeleteFencesNV;
#define glDeleteFencesNV agx_custom_glad_glDeleteFencesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEFRAGMENTSHADERATIPROC agx_custom_glad_glDeleteFragmentShaderATI;
#define glDeleteFragmentShaderATI agx_custom_glad_glDeleteFragmentShaderATI
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEFRAMEBUFFERSPROC agx_custom_glad_glDeleteFramebuffers;
#define glDeleteFramebuffers agx_custom_glad_glDeleteFramebuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEFRAMEBUFFERSEXTPROC agx_custom_glad_glDeleteFramebuffersEXT;
#define glDeleteFramebuffersEXT agx_custom_glad_glDeleteFramebuffersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETELISTSPROC agx_custom_glad_glDeleteLists;
#define glDeleteLists agx_custom_glad_glDeleteLists
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEMEMORYOBJECTSEXTPROC agx_custom_glad_glDeleteMemoryObjectsEXT;
#define glDeleteMemoryObjectsEXT agx_custom_glad_glDeleteMemoryObjectsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETENAMEDSTRINGARBPROC agx_custom_glad_glDeleteNamedStringARB;
#define glDeleteNamedStringARB agx_custom_glad_glDeleteNamedStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETENAMESAMDPROC agx_custom_glad_glDeleteNamesAMD;
#define glDeleteNamesAMD agx_custom_glad_glDeleteNamesAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEOBJECTARBPROC agx_custom_glad_glDeleteObjectARB;
#define glDeleteObjectARB agx_custom_glad_glDeleteObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEOCCLUSIONQUERIESNVPROC agx_custom_glad_glDeleteOcclusionQueriesNV;
#define glDeleteOcclusionQueriesNV agx_custom_glad_glDeleteOcclusionQueriesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPATHSNVPROC agx_custom_glad_glDeletePathsNV;
#define glDeletePathsNV agx_custom_glad_glDeletePathsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPERFMONITORSAMDPROC agx_custom_glad_glDeletePerfMonitorsAMD;
#define glDeletePerfMonitorsAMD agx_custom_glad_glDeletePerfMonitorsAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPERFQUERYINTELPROC agx_custom_glad_glDeletePerfQueryINTEL;
#define glDeletePerfQueryINTEL agx_custom_glad_glDeletePerfQueryINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPROGRAMPROC agx_custom_glad_glDeleteProgram;
#define glDeleteProgram agx_custom_glad_glDeleteProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPROGRAMPIPELINESPROC agx_custom_glad_glDeleteProgramPipelines;
#define glDeleteProgramPipelines agx_custom_glad_glDeleteProgramPipelines
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPROGRAMSARBPROC agx_custom_glad_glDeleteProgramsARB;
#define glDeleteProgramsARB agx_custom_glad_glDeleteProgramsARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEPROGRAMSNVPROC agx_custom_glad_glDeleteProgramsNV;
#define glDeleteProgramsNV agx_custom_glad_glDeleteProgramsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEQUERIESPROC agx_custom_glad_glDeleteQueries;
#define glDeleteQueries agx_custom_glad_glDeleteQueries
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEQUERIESARBPROC agx_custom_glad_glDeleteQueriesARB;
#define glDeleteQueriesARB agx_custom_glad_glDeleteQueriesARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEQUERYRESOURCETAGNVPROC agx_custom_glad_glDeleteQueryResourceTagNV;
#define glDeleteQueryResourceTagNV agx_custom_glad_glDeleteQueryResourceTagNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETERENDERBUFFERSPROC agx_custom_glad_glDeleteRenderbuffers;
#define glDeleteRenderbuffers agx_custom_glad_glDeleteRenderbuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETERENDERBUFFERSEXTPROC agx_custom_glad_glDeleteRenderbuffersEXT;
#define glDeleteRenderbuffersEXT agx_custom_glad_glDeleteRenderbuffersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETESAMPLERSPROC agx_custom_glad_glDeleteSamplers;
#define glDeleteSamplers agx_custom_glad_glDeleteSamplers
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETESEMAPHORESEXTPROC agx_custom_glad_glDeleteSemaphoresEXT;
#define glDeleteSemaphoresEXT agx_custom_glad_glDeleteSemaphoresEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETESHADERPROC agx_custom_glad_glDeleteShader;
#define glDeleteShader agx_custom_glad_glDeleteShader
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETESTATESNVPROC agx_custom_glad_glDeleteStatesNV;
#define glDeleteStatesNV agx_custom_glad_glDeleteStatesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETESYNCPROC agx_custom_glad_glDeleteSync;
#define glDeleteSync agx_custom_glad_glDeleteSync
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETETEXTURESPROC agx_custom_glad_glDeleteTextures;
#define glDeleteTextures agx_custom_glad_glDeleteTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETETEXTURESEXTPROC agx_custom_glad_glDeleteTexturesEXT;
#define glDeleteTexturesEXT agx_custom_glad_glDeleteTexturesEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETETRANSFORMFEEDBACKSPROC agx_custom_glad_glDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks agx_custom_glad_glDeleteTransformFeedbacks
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETETRANSFORMFEEDBACKSNVPROC agx_custom_glad_glDeleteTransformFeedbacksNV;
#define glDeleteTransformFeedbacksNV agx_custom_glad_glDeleteTransformFeedbacksNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEVERTEXARRAYSPROC agx_custom_glad_glDeleteVertexArrays;
#define glDeleteVertexArrays agx_custom_glad_glDeleteVertexArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEVERTEXARRAYSAPPLEPROC agx_custom_glad_glDeleteVertexArraysAPPLE;
#define glDeleteVertexArraysAPPLE agx_custom_glad_glDeleteVertexArraysAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLDELETEVERTEXSHADEREXTPROC agx_custom_glad_glDeleteVertexShaderEXT;
#define glDeleteVertexShaderEXT agx_custom_glad_glDeleteVertexShaderEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHBOUNDSEXTPROC agx_custom_glad_glDepthBoundsEXT;
#define glDepthBoundsEXT agx_custom_glad_glDepthBoundsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHBOUNDSDNVPROC agx_custom_glad_glDepthBoundsdNV;
#define glDepthBoundsdNV agx_custom_glad_glDepthBoundsdNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHFUNCPROC agx_custom_glad_glDepthFunc;
#define glDepthFunc agx_custom_glad_glDepthFunc
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHMASKPROC agx_custom_glad_glDepthMask;
#define glDepthMask agx_custom_glad_glDepthMask
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEPROC agx_custom_glad_glDepthRange;
#define glDepthRange agx_custom_glad_glDepthRange
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEARRAYDVNVPROC agx_custom_glad_glDepthRangeArraydvNV;
#define glDepthRangeArraydvNV agx_custom_glad_glDepthRangeArraydvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEARRAYVPROC agx_custom_glad_glDepthRangeArrayv;
#define glDepthRangeArrayv agx_custom_glad_glDepthRangeArrayv
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEINDEXEDPROC agx_custom_glad_glDepthRangeIndexed;
#define glDepthRangeIndexed agx_custom_glad_glDepthRangeIndexed
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEINDEXEDDNVPROC agx_custom_glad_glDepthRangeIndexeddNV;
#define glDepthRangeIndexeddNV agx_custom_glad_glDepthRangeIndexeddNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEDNVPROC agx_custom_glad_glDepthRangedNV;
#define glDepthRangedNV agx_custom_glad_glDepthRangedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEFPROC agx_custom_glad_glDepthRangef;
#define glDepthRangef agx_custom_glad_glDepthRangef
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEFOESPROC agx_custom_glad_glDepthRangefOES;
#define glDepthRangefOES agx_custom_glad_glDepthRangefOES
AGX_CUSTOM_GLAD_API_CALL PFNGLDEPTHRANGEXOESPROC agx_custom_glad_glDepthRangexOES;
#define glDepthRangexOES agx_custom_glad_glDepthRangexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLDETACHOBJECTARBPROC agx_custom_glad_glDetachObjectARB;
#define glDetachObjectARB agx_custom_glad_glDetachObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDETACHSHADERPROC agx_custom_glad_glDetachShader;
#define glDetachShader agx_custom_glad_glDetachShader
AGX_CUSTOM_GLAD_API_CALL PFNGLDETAILTEXFUNCSGISPROC agx_custom_glad_glDetailTexFuncSGIS;
#define glDetailTexFuncSGIS agx_custom_glad_glDetailTexFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEPROC agx_custom_glad_glDisable;
#define glDisable agx_custom_glad_glDisable
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLECLIENTSTATEPROC agx_custom_glad_glDisableClientState;
#define glDisableClientState agx_custom_glad_glDisableClientState
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC agx_custom_glad_glDisableClientStateIndexedEXT;
#define glDisableClientStateIndexedEXT agx_custom_glad_glDisableClientStateIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLECLIENTSTATEIEXTPROC agx_custom_glad_glDisableClientStateiEXT;
#define glDisableClientStateiEXT agx_custom_glad_glDisableClientStateiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEINDEXEDEXTPROC agx_custom_glad_glDisableIndexedEXT;
#define glDisableIndexedEXT agx_custom_glad_glDisableIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC agx_custom_glad_glDisableVariantClientStateEXT;
#define glDisableVariantClientStateEXT agx_custom_glad_glDisableVariantClientStateEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXARRAYATTRIBPROC agx_custom_glad_glDisableVertexArrayAttrib;
#define glDisableVertexArrayAttrib agx_custom_glad_glDisableVertexArrayAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC agx_custom_glad_glDisableVertexArrayAttribEXT;
#define glDisableVertexArrayAttribEXT agx_custom_glad_glDisableVertexArrayAttribEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXARRAYEXTPROC agx_custom_glad_glDisableVertexArrayEXT;
#define glDisableVertexArrayEXT agx_custom_glad_glDisableVertexArrayEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBAPPLEPROC agx_custom_glad_glDisableVertexAttribAPPLE;
#define glDisableVertexAttribAPPLE agx_custom_glad_glDisableVertexAttribAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBARRAYPROC agx_custom_glad_glDisableVertexAttribArray;
#define glDisableVertexAttribArray agx_custom_glad_glDisableVertexAttribArray
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBARRAYARBPROC agx_custom_glad_glDisableVertexAttribArrayARB;
#define glDisableVertexAttribArrayARB agx_custom_glad_glDisableVertexAttribArrayARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDISABLEIPROC agx_custom_glad_glDisablei;
#define glDisablei agx_custom_glad_glDisablei
AGX_CUSTOM_GLAD_API_CALL PFNGLDISPATCHCOMPUTEPROC agx_custom_glad_glDispatchCompute;
#define glDispatchCompute agx_custom_glad_glDispatchCompute
AGX_CUSTOM_GLAD_API_CALL PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC agx_custom_glad_glDispatchComputeGroupSizeARB;
#define glDispatchComputeGroupSizeARB agx_custom_glad_glDispatchComputeGroupSizeARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDISPATCHCOMPUTEINDIRECTPROC agx_custom_glad_glDispatchComputeIndirect;
#define glDispatchComputeIndirect agx_custom_glad_glDispatchComputeIndirect
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSPROC agx_custom_glad_glDrawArrays;
#define glDrawArrays agx_custom_glad_glDrawArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSEXTPROC agx_custom_glad_glDrawArraysEXT;
#define glDrawArraysEXT agx_custom_glad_glDrawArraysEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSINDIRECTPROC agx_custom_glad_glDrawArraysIndirect;
#define glDrawArraysIndirect agx_custom_glad_glDrawArraysIndirect
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDPROC agx_custom_glad_glDrawArraysInstanced;
#define glDrawArraysInstanced agx_custom_glad_glDrawArraysInstanced
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDARBPROC agx_custom_glad_glDrawArraysInstancedARB;
#define glDrawArraysInstancedARB agx_custom_glad_glDrawArraysInstancedARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC agx_custom_glad_glDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance agx_custom_glad_glDrawArraysInstancedBaseInstance
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDEXTPROC agx_custom_glad_glDrawArraysInstancedEXT;
#define glDrawArraysInstancedEXT agx_custom_glad_glDrawArraysInstancedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWBUFFERPROC agx_custom_glad_glDrawBuffer;
#define glDrawBuffer agx_custom_glad_glDrawBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWBUFFERSPROC agx_custom_glad_glDrawBuffers;
#define glDrawBuffers agx_custom_glad_glDrawBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWBUFFERSARBPROC agx_custom_glad_glDrawBuffersARB;
#define glDrawBuffersARB agx_custom_glad_glDrawBuffersARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWBUFFERSATIPROC agx_custom_glad_glDrawBuffersATI;
#define glDrawBuffersATI agx_custom_glad_glDrawBuffersATI
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWCOMMANDSADDRESSNVPROC agx_custom_glad_glDrawCommandsAddressNV;
#define glDrawCommandsAddressNV agx_custom_glad_glDrawCommandsAddressNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWCOMMANDSNVPROC agx_custom_glad_glDrawCommandsNV;
#define glDrawCommandsNV agx_custom_glad_glDrawCommandsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC agx_custom_glad_glDrawCommandsStatesAddressNV;
#define glDrawCommandsStatesAddressNV agx_custom_glad_glDrawCommandsStatesAddressNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWCOMMANDSSTATESNVPROC agx_custom_glad_glDrawCommandsStatesNV;
#define glDrawCommandsStatesNV agx_custom_glad_glDrawCommandsStatesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTARRAYAPPLEPROC agx_custom_glad_glDrawElementArrayAPPLE;
#define glDrawElementArrayAPPLE agx_custom_glad_glDrawElementArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTARRAYATIPROC agx_custom_glad_glDrawElementArrayATI;
#define glDrawElementArrayATI agx_custom_glad_glDrawElementArrayATI
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSPROC agx_custom_glad_glDrawElements;
#define glDrawElements agx_custom_glad_glDrawElements
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSBASEVERTEXPROC agx_custom_glad_glDrawElementsBaseVertex;
#define glDrawElementsBaseVertex agx_custom_glad_glDrawElementsBaseVertex
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINDIRECTPROC agx_custom_glad_glDrawElementsIndirect;
#define glDrawElementsIndirect agx_custom_glad_glDrawElementsIndirect
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDPROC agx_custom_glad_glDrawElementsInstanced;
#define glDrawElementsInstanced agx_custom_glad_glDrawElementsInstanced
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDARBPROC agx_custom_glad_glDrawElementsInstancedARB;
#define glDrawElementsInstancedARB agx_custom_glad_glDrawElementsInstancedARB
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC agx_custom_glad_glDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance agx_custom_glad_glDrawElementsInstancedBaseInstance
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC agx_custom_glad_glDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex agx_custom_glad_glDrawElementsInstancedBaseVertex
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC agx_custom_glad_glDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance agx_custom_glad_glDrawElementsInstancedBaseVertexBaseInstance
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDEXTPROC agx_custom_glad_glDrawElementsInstancedEXT;
#define glDrawElementsInstancedEXT agx_custom_glad_glDrawElementsInstancedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWMESHARRAYSSUNPROC agx_custom_glad_glDrawMeshArraysSUN;
#define glDrawMeshArraysSUN agx_custom_glad_glDrawMeshArraysSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWMESHTASKSINDIRECTNVPROC agx_custom_glad_glDrawMeshTasksIndirectNV;
#define glDrawMeshTasksIndirectNV agx_custom_glad_glDrawMeshTasksIndirectNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWMESHTASKSNVPROC agx_custom_glad_glDrawMeshTasksNV;
#define glDrawMeshTasksNV agx_custom_glad_glDrawMeshTasksNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWPIXELSPROC agx_custom_glad_glDrawPixels;
#define glDrawPixels agx_custom_glad_glDrawPixels
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC agx_custom_glad_glDrawRangeElementArrayAPPLE;
#define glDrawRangeElementArrayAPPLE agx_custom_glad_glDrawRangeElementArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWRANGEELEMENTARRAYATIPROC agx_custom_glad_glDrawRangeElementArrayATI;
#define glDrawRangeElementArrayATI agx_custom_glad_glDrawRangeElementArrayATI
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWRANGEELEMENTSPROC agx_custom_glad_glDrawRangeElements;
#define glDrawRangeElements agx_custom_glad_glDrawRangeElements
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC agx_custom_glad_glDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex agx_custom_glad_glDrawRangeElementsBaseVertex
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWRANGEELEMENTSEXTPROC agx_custom_glad_glDrawRangeElementsEXT;
#define glDrawRangeElementsEXT agx_custom_glad_glDrawRangeElementsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTEXTURENVPROC agx_custom_glad_glDrawTextureNV;
#define glDrawTextureNV agx_custom_glad_glDrawTextureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKPROC agx_custom_glad_glDrawTransformFeedback;
#define glDrawTransformFeedback agx_custom_glad_glDrawTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC agx_custom_glad_glDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced agx_custom_glad_glDrawTransformFeedbackInstanced
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKNVPROC agx_custom_glad_glDrawTransformFeedbackNV;
#define glDrawTransformFeedbackNV agx_custom_glad_glDrawTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC agx_custom_glad_glDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream agx_custom_glad_glDrawTransformFeedbackStream
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC agx_custom_glad_glDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced agx_custom_glad_glDrawTransformFeedbackStreamInstanced
AGX_CUSTOM_GLAD_API_CALL PFNGLDRAWVKIMAGENVPROC agx_custom_glad_glDrawVkImageNV;
#define glDrawVkImageNV agx_custom_glad_glDrawVkImageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC agx_custom_glad_glEGLImageTargetTexStorageEXT;
#define glEGLImageTargetTexStorageEXT agx_custom_glad_glEGLImageTargetTexStorageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC agx_custom_glad_glEGLImageTargetTextureStorageEXT;
#define glEGLImageTargetTextureStorageEXT agx_custom_glad_glEGLImageTargetTextureStorageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGPROC agx_custom_glad_glEdgeFlag;
#define glEdgeFlag agx_custom_glad_glEdgeFlag
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGFORMATNVPROC agx_custom_glad_glEdgeFlagFormatNV;
#define glEdgeFlagFormatNV agx_custom_glad_glEdgeFlagFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGPOINTERPROC agx_custom_glad_glEdgeFlagPointer;
#define glEdgeFlagPointer agx_custom_glad_glEdgeFlagPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGPOINTEREXTPROC agx_custom_glad_glEdgeFlagPointerEXT;
#define glEdgeFlagPointerEXT agx_custom_glad_glEdgeFlagPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGPOINTERLISTIBMPROC agx_custom_glad_glEdgeFlagPointerListIBM;
#define glEdgeFlagPointerListIBM agx_custom_glad_glEdgeFlagPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLEDGEFLAGVPROC agx_custom_glad_glEdgeFlagv;
#define glEdgeFlagv agx_custom_glad_glEdgeFlagv
AGX_CUSTOM_GLAD_API_CALL PFNGLELEMENTPOINTERAPPLEPROC agx_custom_glad_glElementPointerAPPLE;
#define glElementPointerAPPLE agx_custom_glad_glElementPointerAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLELEMENTPOINTERATIPROC agx_custom_glad_glElementPointerATI;
#define glElementPointerATI agx_custom_glad_glElementPointerATI
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEPROC agx_custom_glad_glEnable;
#define glEnable agx_custom_glad_glEnable
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLECLIENTSTATEPROC agx_custom_glad_glEnableClientState;
#define glEnableClientState agx_custom_glad_glEnableClientState
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLECLIENTSTATEINDEXEDEXTPROC agx_custom_glad_glEnableClientStateIndexedEXT;
#define glEnableClientStateIndexedEXT agx_custom_glad_glEnableClientStateIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLECLIENTSTATEIEXTPROC agx_custom_glad_glEnableClientStateiEXT;
#define glEnableClientStateiEXT agx_custom_glad_glEnableClientStateiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEINDEXEDEXTPROC agx_custom_glad_glEnableIndexedEXT;
#define glEnableIndexedEXT agx_custom_glad_glEnableIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVARIANTCLIENTSTATEEXTPROC agx_custom_glad_glEnableVariantClientStateEXT;
#define glEnableVariantClientStateEXT agx_custom_glad_glEnableVariantClientStateEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXARRAYATTRIBPROC agx_custom_glad_glEnableVertexArrayAttrib;
#define glEnableVertexArrayAttrib agx_custom_glad_glEnableVertexArrayAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXARRAYATTRIBEXTPROC agx_custom_glad_glEnableVertexArrayAttribEXT;
#define glEnableVertexArrayAttribEXT agx_custom_glad_glEnableVertexArrayAttribEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXARRAYEXTPROC agx_custom_glad_glEnableVertexArrayEXT;
#define glEnableVertexArrayEXT agx_custom_glad_glEnableVertexArrayEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXATTRIBAPPLEPROC agx_custom_glad_glEnableVertexAttribAPPLE;
#define glEnableVertexAttribAPPLE agx_custom_glad_glEnableVertexAttribAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXATTRIBARRAYPROC agx_custom_glad_glEnableVertexAttribArray;
#define glEnableVertexAttribArray agx_custom_glad_glEnableVertexAttribArray
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEVERTEXATTRIBARRAYARBPROC agx_custom_glad_glEnableVertexAttribArrayARB;
#define glEnableVertexAttribArrayARB agx_custom_glad_glEnableVertexAttribArrayARB
AGX_CUSTOM_GLAD_API_CALL PFNGLENABLEIPROC agx_custom_glad_glEnablei;
#define glEnablei agx_custom_glad_glEnablei
AGX_CUSTOM_GLAD_API_CALL PFNGLENDPROC agx_custom_glad_glEnd;
#define glEnd agx_custom_glad_glEnd
AGX_CUSTOM_GLAD_API_CALL PFNGLENDCONDITIONALRENDERPROC agx_custom_glad_glEndConditionalRender;
#define glEndConditionalRender agx_custom_glad_glEndConditionalRender
AGX_CUSTOM_GLAD_API_CALL PFNGLENDCONDITIONALRENDERNVPROC agx_custom_glad_glEndConditionalRenderNV;
#define glEndConditionalRenderNV agx_custom_glad_glEndConditionalRenderNV
AGX_CUSTOM_GLAD_API_CALL PFNGLENDCONDITIONALRENDERNVXPROC agx_custom_glad_glEndConditionalRenderNVX;
#define glEndConditionalRenderNVX agx_custom_glad_glEndConditionalRenderNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLENDFRAGMENTSHADERATIPROC agx_custom_glad_glEndFragmentShaderATI;
#define glEndFragmentShaderATI agx_custom_glad_glEndFragmentShaderATI
AGX_CUSTOM_GLAD_API_CALL PFNGLENDLISTPROC agx_custom_glad_glEndList;
#define glEndList agx_custom_glad_glEndList
AGX_CUSTOM_GLAD_API_CALL PFNGLENDOCCLUSIONQUERYNVPROC agx_custom_glad_glEndOcclusionQueryNV;
#define glEndOcclusionQueryNV agx_custom_glad_glEndOcclusionQueryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLENDPERFMONITORAMDPROC agx_custom_glad_glEndPerfMonitorAMD;
#define glEndPerfMonitorAMD agx_custom_glad_glEndPerfMonitorAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLENDPERFQUERYINTELPROC agx_custom_glad_glEndPerfQueryINTEL;
#define glEndPerfQueryINTEL agx_custom_glad_glEndPerfQueryINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLENDQUERYPROC agx_custom_glad_glEndQuery;
#define glEndQuery agx_custom_glad_glEndQuery
AGX_CUSTOM_GLAD_API_CALL PFNGLENDQUERYARBPROC agx_custom_glad_glEndQueryARB;
#define glEndQueryARB agx_custom_glad_glEndQueryARB
AGX_CUSTOM_GLAD_API_CALL PFNGLENDQUERYINDEXEDPROC agx_custom_glad_glEndQueryIndexed;
#define glEndQueryIndexed agx_custom_glad_glEndQueryIndexed
AGX_CUSTOM_GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKPROC agx_custom_glad_glEndTransformFeedback;
#define glEndTransformFeedback agx_custom_glad_glEndTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKEXTPROC agx_custom_glad_glEndTransformFeedbackEXT;
#define glEndTransformFeedbackEXT agx_custom_glad_glEndTransformFeedbackEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKNVPROC agx_custom_glad_glEndTransformFeedbackNV;
#define glEndTransformFeedbackNV agx_custom_glad_glEndTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLENDVERTEXSHADEREXTPROC agx_custom_glad_glEndVertexShaderEXT;
#define glEndVertexShaderEXT agx_custom_glad_glEndVertexShaderEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLENDVIDEOCAPTURENVPROC agx_custom_glad_glEndVideoCaptureNV;
#define glEndVideoCaptureNV agx_custom_glad_glEndVideoCaptureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1DPROC agx_custom_glad_glEvalCoord1d;
#define glEvalCoord1d agx_custom_glad_glEvalCoord1d
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1DVPROC agx_custom_glad_glEvalCoord1dv;
#define glEvalCoord1dv agx_custom_glad_glEvalCoord1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1FPROC agx_custom_glad_glEvalCoord1f;
#define glEvalCoord1f agx_custom_glad_glEvalCoord1f
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1FVPROC agx_custom_glad_glEvalCoord1fv;
#define glEvalCoord1fv agx_custom_glad_glEvalCoord1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1XOESPROC agx_custom_glad_glEvalCoord1xOES;
#define glEvalCoord1xOES agx_custom_glad_glEvalCoord1xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD1XVOESPROC agx_custom_glad_glEvalCoord1xvOES;
#define glEvalCoord1xvOES agx_custom_glad_glEvalCoord1xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2DPROC agx_custom_glad_glEvalCoord2d;
#define glEvalCoord2d agx_custom_glad_glEvalCoord2d
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2DVPROC agx_custom_glad_glEvalCoord2dv;
#define glEvalCoord2dv agx_custom_glad_glEvalCoord2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2FPROC agx_custom_glad_glEvalCoord2f;
#define glEvalCoord2f agx_custom_glad_glEvalCoord2f
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2FVPROC agx_custom_glad_glEvalCoord2fv;
#define glEvalCoord2fv agx_custom_glad_glEvalCoord2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2XOESPROC agx_custom_glad_glEvalCoord2xOES;
#define glEvalCoord2xOES agx_custom_glad_glEvalCoord2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALCOORD2XVOESPROC agx_custom_glad_glEvalCoord2xvOES;
#define glEvalCoord2xvOES agx_custom_glad_glEvalCoord2xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALMAPSNVPROC agx_custom_glad_glEvalMapsNV;
#define glEvalMapsNV agx_custom_glad_glEvalMapsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALMESH1PROC agx_custom_glad_glEvalMesh1;
#define glEvalMesh1 agx_custom_glad_glEvalMesh1
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALMESH2PROC agx_custom_glad_glEvalMesh2;
#define glEvalMesh2 agx_custom_glad_glEvalMesh2
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALPOINT1PROC agx_custom_glad_glEvalPoint1;
#define glEvalPoint1 agx_custom_glad_glEvalPoint1
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALPOINT2PROC agx_custom_glad_glEvalPoint2;
#define glEvalPoint2 agx_custom_glad_glEvalPoint2
AGX_CUSTOM_GLAD_API_CALL PFNGLEVALUATEDEPTHVALUESARBPROC agx_custom_glad_glEvaluateDepthValuesARB;
#define glEvaluateDepthValuesARB agx_custom_glad_glEvaluateDepthValuesARB
AGX_CUSTOM_GLAD_API_CALL PFNGLEXECUTEPROGRAMNVPROC agx_custom_glad_glExecuteProgramNV;
#define glExecuteProgramNV agx_custom_glad_glExecuteProgramNV
AGX_CUSTOM_GLAD_API_CALL PFNGLEXTRACTCOMPONENTEXTPROC agx_custom_glad_glExtractComponentEXT;
#define glExtractComponentEXT agx_custom_glad_glExtractComponentEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFEEDBACKBUFFERPROC agx_custom_glad_glFeedbackBuffer;
#define glFeedbackBuffer agx_custom_glad_glFeedbackBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLFEEDBACKBUFFERXOESPROC agx_custom_glad_glFeedbackBufferxOES;
#define glFeedbackBufferxOES agx_custom_glad_glFeedbackBufferxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLFENCESYNCPROC agx_custom_glad_glFenceSync;
#define glFenceSync agx_custom_glad_glFenceSync
AGX_CUSTOM_GLAD_API_CALL PFNGLFINALCOMBINERINPUTNVPROC agx_custom_glad_glFinalCombinerInputNV;
#define glFinalCombinerInputNV agx_custom_glad_glFinalCombinerInputNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHPROC agx_custom_glad_glFinish;
#define glFinish agx_custom_glad_glFinish
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHASYNCSGIXPROC agx_custom_glad_glFinishAsyncSGIX;
#define glFinishAsyncSGIX agx_custom_glad_glFinishAsyncSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHFENCEAPPLEPROC agx_custom_glad_glFinishFenceAPPLE;
#define glFinishFenceAPPLE agx_custom_glad_glFinishFenceAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHFENCENVPROC agx_custom_glad_glFinishFenceNV;
#define glFinishFenceNV agx_custom_glad_glFinishFenceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHOBJECTAPPLEPROC agx_custom_glad_glFinishObjectAPPLE;
#define glFinishObjectAPPLE agx_custom_glad_glFinishObjectAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLFINISHTEXTURESUNXPROC agx_custom_glad_glFinishTextureSUNX;
#define glFinishTextureSUNX agx_custom_glad_glFinishTextureSUNX
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHPROC agx_custom_glad_glFlush;
#define glFlush agx_custom_glad_glFlush
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHMAPPEDBUFFERRANGEPROC agx_custom_glad_glFlushMappedBufferRange;
#define glFlushMappedBufferRange agx_custom_glad_glFlushMappedBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC agx_custom_glad_glFlushMappedBufferRangeAPPLE;
#define glFlushMappedBufferRangeAPPLE agx_custom_glad_glFlushMappedBufferRangeAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC agx_custom_glad_glFlushMappedNamedBufferRange;
#define glFlushMappedNamedBufferRange agx_custom_glad_glFlushMappedNamedBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC agx_custom_glad_glFlushMappedNamedBufferRangeEXT;
#define glFlushMappedNamedBufferRangeEXT agx_custom_glad_glFlushMappedNamedBufferRangeEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHPIXELDATARANGENVPROC agx_custom_glad_glFlushPixelDataRangeNV;
#define glFlushPixelDataRangeNV agx_custom_glad_glFlushPixelDataRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHRASTERSGIXPROC agx_custom_glad_glFlushRasterSGIX;
#define glFlushRasterSGIX agx_custom_glad_glFlushRasterSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHSTATICDATAIBMPROC agx_custom_glad_glFlushStaticDataIBM;
#define glFlushStaticDataIBM agx_custom_glad_glFlushStaticDataIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC agx_custom_glad_glFlushVertexArrayRangeAPPLE;
#define glFlushVertexArrayRangeAPPLE agx_custom_glad_glFlushVertexArrayRangeAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLFLUSHVERTEXARRAYRANGENVPROC agx_custom_glad_glFlushVertexArrayRangeNV;
#define glFlushVertexArrayRangeNV agx_custom_glad_glFlushVertexArrayRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDFORMATNVPROC agx_custom_glad_glFogCoordFormatNV;
#define glFogCoordFormatNV agx_custom_glad_glFogCoordFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDPOINTERPROC agx_custom_glad_glFogCoordPointer;
#define glFogCoordPointer agx_custom_glad_glFogCoordPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDPOINTEREXTPROC agx_custom_glad_glFogCoordPointerEXT;
#define glFogCoordPointerEXT agx_custom_glad_glFogCoordPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDPOINTERLISTIBMPROC agx_custom_glad_glFogCoordPointerListIBM;
#define glFogCoordPointerListIBM agx_custom_glad_glFogCoordPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDDPROC agx_custom_glad_glFogCoordd;
#define glFogCoordd agx_custom_glad_glFogCoordd
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDDEXTPROC agx_custom_glad_glFogCoorddEXT;
#define glFogCoorddEXT agx_custom_glad_glFogCoorddEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDDVPROC agx_custom_glad_glFogCoorddv;
#define glFogCoorddv agx_custom_glad_glFogCoorddv
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDDVEXTPROC agx_custom_glad_glFogCoorddvEXT;
#define glFogCoorddvEXT agx_custom_glad_glFogCoorddvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDFPROC agx_custom_glad_glFogCoordf;
#define glFogCoordf agx_custom_glad_glFogCoordf
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDFEXTPROC agx_custom_glad_glFogCoordfEXT;
#define glFogCoordfEXT agx_custom_glad_glFogCoordfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDFVPROC agx_custom_glad_glFogCoordfv;
#define glFogCoordfv agx_custom_glad_glFogCoordfv
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDFVEXTPROC agx_custom_glad_glFogCoordfvEXT;
#define glFogCoordfvEXT agx_custom_glad_glFogCoordfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDHNVPROC agx_custom_glad_glFogCoordhNV;
#define glFogCoordhNV agx_custom_glad_glFogCoordhNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGCOORDHVNVPROC agx_custom_glad_glFogCoordhvNV;
#define glFogCoordhvNV agx_custom_glad_glFogCoordhvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGFUNCSGISPROC agx_custom_glad_glFogFuncSGIS;
#define glFogFuncSGIS agx_custom_glad_glFogFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGFPROC agx_custom_glad_glFogf;
#define glFogf agx_custom_glad_glFogf
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGFVPROC agx_custom_glad_glFogfv;
#define glFogfv agx_custom_glad_glFogfv
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGIPROC agx_custom_glad_glFogi;
#define glFogi agx_custom_glad_glFogi
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGIVPROC agx_custom_glad_glFogiv;
#define glFogiv agx_custom_glad_glFogiv
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGXOESPROC agx_custom_glad_glFogxOES;
#define glFogxOES agx_custom_glad_glFogxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLFOGXVOESPROC agx_custom_glad_glFogxvOES;
#define glFogxvOES agx_custom_glad_glFogxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTCOLORMATERIALSGIXPROC agx_custom_glad_glFragmentColorMaterialSGIX;
#define glFragmentColorMaterialSGIX agx_custom_glad_glFragmentColorMaterialSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTCOVERAGECOLORNVPROC agx_custom_glad_glFragmentCoverageColorNV;
#define glFragmentCoverageColorNV agx_custom_glad_glFragmentCoverageColorNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTMODELFSGIXPROC agx_custom_glad_glFragmentLightModelfSGIX;
#define glFragmentLightModelfSGIX agx_custom_glad_glFragmentLightModelfSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTMODELFVSGIXPROC agx_custom_glad_glFragmentLightModelfvSGIX;
#define glFragmentLightModelfvSGIX agx_custom_glad_glFragmentLightModelfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTMODELISGIXPROC agx_custom_glad_glFragmentLightModeliSGIX;
#define glFragmentLightModeliSGIX agx_custom_glad_glFragmentLightModeliSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTMODELIVSGIXPROC agx_custom_glad_glFragmentLightModelivSGIX;
#define glFragmentLightModelivSGIX agx_custom_glad_glFragmentLightModelivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTFSGIXPROC agx_custom_glad_glFragmentLightfSGIX;
#define glFragmentLightfSGIX agx_custom_glad_glFragmentLightfSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTFVSGIXPROC agx_custom_glad_glFragmentLightfvSGIX;
#define glFragmentLightfvSGIX agx_custom_glad_glFragmentLightfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTISGIXPROC agx_custom_glad_glFragmentLightiSGIX;
#define glFragmentLightiSGIX agx_custom_glad_glFragmentLightiSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTLIGHTIVSGIXPROC agx_custom_glad_glFragmentLightivSGIX;
#define glFragmentLightivSGIX agx_custom_glad_glFragmentLightivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTMATERIALFSGIXPROC agx_custom_glad_glFragmentMaterialfSGIX;
#define glFragmentMaterialfSGIX agx_custom_glad_glFragmentMaterialfSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTMATERIALFVSGIXPROC agx_custom_glad_glFragmentMaterialfvSGIX;
#define glFragmentMaterialfvSGIX agx_custom_glad_glFragmentMaterialfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTMATERIALISGIXPROC agx_custom_glad_glFragmentMaterialiSGIX;
#define glFragmentMaterialiSGIX agx_custom_glad_glFragmentMaterialiSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAGMENTMATERIALIVSGIXPROC agx_custom_glad_glFragmentMaterialivSGIX;
#define glFragmentMaterialivSGIX agx_custom_glad_glFragmentMaterialivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMETERMINATORGREMEDYPROC agx_custom_glad_glFrameTerminatorGREMEDY;
#define glFrameTerminatorGREMEDY agx_custom_glad_glFrameTerminatorGREMEDY
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEZOOMSGIXPROC agx_custom_glad_glFrameZoomSGIX;
#define glFrameZoomSGIX agx_custom_glad_glFrameZoomSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC agx_custom_glad_glFramebufferDrawBufferEXT;
#define glFramebufferDrawBufferEXT agx_custom_glad_glFramebufferDrawBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC agx_custom_glad_glFramebufferDrawBuffersEXT;
#define glFramebufferDrawBuffersEXT agx_custom_glad_glFramebufferDrawBuffersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC agx_custom_glad_glFramebufferFetchBarrierEXT;
#define glFramebufferFetchBarrierEXT agx_custom_glad_glFramebufferFetchBarrierEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERPARAMETERIPROC agx_custom_glad_glFramebufferParameteri;
#define glFramebufferParameteri agx_custom_glad_glFramebufferParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERPARAMETERIMESAPROC agx_custom_glad_glFramebufferParameteriMESA;
#define glFramebufferParameteriMESA agx_custom_glad_glFramebufferParameteriMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERREADBUFFEREXTPROC agx_custom_glad_glFramebufferReadBufferEXT;
#define glFramebufferReadBufferEXT agx_custom_glad_glFramebufferReadBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERRENDERBUFFERPROC agx_custom_glad_glFramebufferRenderbuffer;
#define glFramebufferRenderbuffer agx_custom_glad_glFramebufferRenderbuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC agx_custom_glad_glFramebufferRenderbufferEXT;
#define glFramebufferRenderbufferEXT agx_custom_glad_glFramebufferRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC agx_custom_glad_glFramebufferSampleLocationsfvARB;
#define glFramebufferSampleLocationsfvARB agx_custom_glad_glFramebufferSampleLocationsfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glFramebufferSampleLocationsfvNV;
#define glFramebufferSampleLocationsfvNV agx_custom_glad_glFramebufferSampleLocationsfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC agx_custom_glad_glFramebufferSamplePositionsfvAMD;
#define glFramebufferSamplePositionsfvAMD agx_custom_glad_glFramebufferSamplePositionsfvAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREPROC agx_custom_glad_glFramebufferTexture;
#define glFramebufferTexture agx_custom_glad_glFramebufferTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE1DPROC agx_custom_glad_glFramebufferTexture1D;
#define glFramebufferTexture1D agx_custom_glad_glFramebufferTexture1D
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE1DEXTPROC agx_custom_glad_glFramebufferTexture1DEXT;
#define glFramebufferTexture1DEXT agx_custom_glad_glFramebufferTexture1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE2DPROC agx_custom_glad_glFramebufferTexture2D;
#define glFramebufferTexture2D agx_custom_glad_glFramebufferTexture2D
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE2DEXTPROC agx_custom_glad_glFramebufferTexture2DEXT;
#define glFramebufferTexture2DEXT agx_custom_glad_glFramebufferTexture2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE3DPROC agx_custom_glad_glFramebufferTexture3D;
#define glFramebufferTexture3D agx_custom_glad_glFramebufferTexture3D
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE3DEXTPROC agx_custom_glad_glFramebufferTexture3DEXT;
#define glFramebufferTexture3DEXT agx_custom_glad_glFramebufferTexture3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREARBPROC agx_custom_glad_glFramebufferTextureARB;
#define glFramebufferTextureARB agx_custom_glad_glFramebufferTextureARB
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREEXTPROC agx_custom_glad_glFramebufferTextureEXT;
#define glFramebufferTextureEXT agx_custom_glad_glFramebufferTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREFACEARBPROC agx_custom_glad_glFramebufferTextureFaceARB;
#define glFramebufferTextureFaceARB agx_custom_glad_glFramebufferTextureFaceARB
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC agx_custom_glad_glFramebufferTextureFaceEXT;
#define glFramebufferTextureFaceEXT agx_custom_glad_glFramebufferTextureFaceEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYERPROC agx_custom_glad_glFramebufferTextureLayer;
#define glFramebufferTextureLayer agx_custom_glad_glFramebufferTextureLayer
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYERARBPROC agx_custom_glad_glFramebufferTextureLayerARB;
#define glFramebufferTextureLayerARB agx_custom_glad_glFramebufferTextureLayerARB
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC agx_custom_glad_glFramebufferTextureLayerEXT;
#define glFramebufferTextureLayerEXT agx_custom_glad_glFramebufferTextureLayerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC agx_custom_glad_glFramebufferTextureMultiviewOVR;
#define glFramebufferTextureMultiviewOVR agx_custom_glad_glFramebufferTextureMultiviewOVR
AGX_CUSTOM_GLAD_API_CALL PFNGLFREEOBJECTBUFFERATIPROC agx_custom_glad_glFreeObjectBufferATI;
#define glFreeObjectBufferATI agx_custom_glad_glFreeObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLFRONTFACEPROC agx_custom_glad_glFrontFace;
#define glFrontFace agx_custom_glad_glFrontFace
AGX_CUSTOM_GLAD_API_CALL PFNGLFRUSTUMPROC agx_custom_glad_glFrustum;
#define glFrustum agx_custom_glad_glFrustum
AGX_CUSTOM_GLAD_API_CALL PFNGLFRUSTUMFOESPROC agx_custom_glad_glFrustumfOES;
#define glFrustumfOES agx_custom_glad_glFrustumfOES
AGX_CUSTOM_GLAD_API_CALL PFNGLFRUSTUMXOESPROC agx_custom_glad_glFrustumxOES;
#define glFrustumxOES agx_custom_glad_glFrustumxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGENASYNCMARKERSSGIXPROC agx_custom_glad_glGenAsyncMarkersSGIX;
#define glGenAsyncMarkersSGIX agx_custom_glad_glGenAsyncMarkersSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGENBUFFERSPROC agx_custom_glad_glGenBuffers;
#define glGenBuffers agx_custom_glad_glGenBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLGENBUFFERSARBPROC agx_custom_glad_glGenBuffersARB;
#define glGenBuffersARB agx_custom_glad_glGenBuffersARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGENFENCESAPPLEPROC agx_custom_glad_glGenFencesAPPLE;
#define glGenFencesAPPLE agx_custom_glad_glGenFencesAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLGENFENCESNVPROC agx_custom_glad_glGenFencesNV;
#define glGenFencesNV agx_custom_glad_glGenFencesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENFRAGMENTSHADERSATIPROC agx_custom_glad_glGenFragmentShadersATI;
#define glGenFragmentShadersATI agx_custom_glad_glGenFragmentShadersATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGENFRAMEBUFFERSPROC agx_custom_glad_glGenFramebuffers;
#define glGenFramebuffers agx_custom_glad_glGenFramebuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLGENFRAMEBUFFERSEXTPROC agx_custom_glad_glGenFramebuffersEXT;
#define glGenFramebuffersEXT agx_custom_glad_glGenFramebuffersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENLISTSPROC agx_custom_glad_glGenLists;
#define glGenLists agx_custom_glad_glGenLists
AGX_CUSTOM_GLAD_API_CALL PFNGLGENNAMESAMDPROC agx_custom_glad_glGenNamesAMD;
#define glGenNamesAMD agx_custom_glad_glGenNamesAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGENOCCLUSIONQUERIESNVPROC agx_custom_glad_glGenOcclusionQueriesNV;
#define glGenOcclusionQueriesNV agx_custom_glad_glGenOcclusionQueriesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENPATHSNVPROC agx_custom_glad_glGenPathsNV;
#define glGenPathsNV agx_custom_glad_glGenPathsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENPERFMONITORSAMDPROC agx_custom_glad_glGenPerfMonitorsAMD;
#define glGenPerfMonitorsAMD agx_custom_glad_glGenPerfMonitorsAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGENPROGRAMPIPELINESPROC agx_custom_glad_glGenProgramPipelines;
#define glGenProgramPipelines agx_custom_glad_glGenProgramPipelines
AGX_CUSTOM_GLAD_API_CALL PFNGLGENPROGRAMSARBPROC agx_custom_glad_glGenProgramsARB;
#define glGenProgramsARB agx_custom_glad_glGenProgramsARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGENPROGRAMSNVPROC agx_custom_glad_glGenProgramsNV;
#define glGenProgramsNV agx_custom_glad_glGenProgramsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENQUERIESPROC agx_custom_glad_glGenQueries;
#define glGenQueries agx_custom_glad_glGenQueries
AGX_CUSTOM_GLAD_API_CALL PFNGLGENQUERIESARBPROC agx_custom_glad_glGenQueriesARB;
#define glGenQueriesARB agx_custom_glad_glGenQueriesARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGENQUERYRESOURCETAGNVPROC agx_custom_glad_glGenQueryResourceTagNV;
#define glGenQueryResourceTagNV agx_custom_glad_glGenQueryResourceTagNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENRENDERBUFFERSPROC agx_custom_glad_glGenRenderbuffers;
#define glGenRenderbuffers agx_custom_glad_glGenRenderbuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLGENRENDERBUFFERSEXTPROC agx_custom_glad_glGenRenderbuffersEXT;
#define glGenRenderbuffersEXT agx_custom_glad_glGenRenderbuffersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENSAMPLERSPROC agx_custom_glad_glGenSamplers;
#define glGenSamplers agx_custom_glad_glGenSamplers
AGX_CUSTOM_GLAD_API_CALL PFNGLGENSEMAPHORESEXTPROC agx_custom_glad_glGenSemaphoresEXT;
#define glGenSemaphoresEXT agx_custom_glad_glGenSemaphoresEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENSYMBOLSEXTPROC agx_custom_glad_glGenSymbolsEXT;
#define glGenSymbolsEXT agx_custom_glad_glGenSymbolsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENTEXTURESPROC agx_custom_glad_glGenTextures;
#define glGenTextures agx_custom_glad_glGenTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLGENTEXTURESEXTPROC agx_custom_glad_glGenTexturesEXT;
#define glGenTexturesEXT agx_custom_glad_glGenTexturesEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENTRANSFORMFEEDBACKSPROC agx_custom_glad_glGenTransformFeedbacks;
#define glGenTransformFeedbacks agx_custom_glad_glGenTransformFeedbacks
AGX_CUSTOM_GLAD_API_CALL PFNGLGENTRANSFORMFEEDBACKSNVPROC agx_custom_glad_glGenTransformFeedbacksNV;
#define glGenTransformFeedbacksNV agx_custom_glad_glGenTransformFeedbacksNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGENVERTEXARRAYSPROC agx_custom_glad_glGenVertexArrays;
#define glGenVertexArrays agx_custom_glad_glGenVertexArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLGENVERTEXARRAYSAPPLEPROC agx_custom_glad_glGenVertexArraysAPPLE;
#define glGenVertexArraysAPPLE agx_custom_glad_glGenVertexArraysAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLGENVERTEXSHADERSEXTPROC agx_custom_glad_glGenVertexShadersEXT;
#define glGenVertexShadersEXT agx_custom_glad_glGenVertexShadersEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENERATEMIPMAPPROC agx_custom_glad_glGenerateMipmap;
#define glGenerateMipmap agx_custom_glad_glGenerateMipmap
AGX_CUSTOM_GLAD_API_CALL PFNGLGENERATEMIPMAPEXTPROC agx_custom_glad_glGenerateMipmapEXT;
#define glGenerateMipmapEXT agx_custom_glad_glGenerateMipmapEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENERATEMULTITEXMIPMAPEXTPROC agx_custom_glad_glGenerateMultiTexMipmapEXT;
#define glGenerateMultiTexMipmapEXT agx_custom_glad_glGenerateMultiTexMipmapEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGENERATETEXTUREMIPMAPPROC agx_custom_glad_glGenerateTextureMipmap;
#define glGenerateTextureMipmap agx_custom_glad_glGenerateTextureMipmap
AGX_CUSTOM_GLAD_API_CALL PFNGLGENERATETEXTUREMIPMAPEXTPROC agx_custom_glad_glGenerateTextureMipmapEXT;
#define glGenerateTextureMipmapEXT agx_custom_glad_glGenerateTextureMipmapEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC agx_custom_glad_glGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv agx_custom_glad_glGetActiveAtomicCounterBufferiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEATTRIBPROC agx_custom_glad_glGetActiveAttrib;
#define glGetActiveAttrib agx_custom_glad_glGetActiveAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEATTRIBARBPROC agx_custom_glad_glGetActiveAttribARB;
#define glGetActiveAttribARB agx_custom_glad_glGetActiveAttribARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVESUBROUTINENAMEPROC agx_custom_glad_glGetActiveSubroutineName;
#define glGetActiveSubroutineName agx_custom_glad_glGetActiveSubroutineName
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC agx_custom_glad_glGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName agx_custom_glad_glGetActiveSubroutineUniformName
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC agx_custom_glad_glGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv agx_custom_glad_glGetActiveSubroutineUniformiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMPROC agx_custom_glad_glGetActiveUniform;
#define glGetActiveUniform agx_custom_glad_glGetActiveUniform
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMARBPROC agx_custom_glad_glGetActiveUniformARB;
#define glGetActiveUniformARB agx_custom_glad_glGetActiveUniformARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC agx_custom_glad_glGetActiveUniformBlockName;
#define glGetActiveUniformBlockName agx_custom_glad_glGetActiveUniformBlockName
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKIVPROC agx_custom_glad_glGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv agx_custom_glad_glGetActiveUniformBlockiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMNAMEPROC agx_custom_glad_glGetActiveUniformName;
#define glGetActiveUniformName agx_custom_glad_glGetActiveUniformName
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEUNIFORMSIVPROC agx_custom_glad_glGetActiveUniformsiv;
#define glGetActiveUniformsiv agx_custom_glad_glGetActiveUniformsiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETACTIVEVARYINGNVPROC agx_custom_glad_glGetActiveVaryingNV;
#define glGetActiveVaryingNV agx_custom_glad_glGetActiveVaryingNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETARRAYOBJECTFVATIPROC agx_custom_glad_glGetArrayObjectfvATI;
#define glGetArrayObjectfvATI agx_custom_glad_glGetArrayObjectfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETARRAYOBJECTIVATIPROC agx_custom_glad_glGetArrayObjectivATI;
#define glGetArrayObjectivATI agx_custom_glad_glGetArrayObjectivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETATTACHEDOBJECTSARBPROC agx_custom_glad_glGetAttachedObjectsARB;
#define glGetAttachedObjectsARB agx_custom_glad_glGetAttachedObjectsARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETATTACHEDSHADERSPROC agx_custom_glad_glGetAttachedShaders;
#define glGetAttachedShaders agx_custom_glad_glGetAttachedShaders
AGX_CUSTOM_GLAD_API_CALL PFNGLGETATTRIBLOCATIONPROC agx_custom_glad_glGetAttribLocation;
#define glGetAttribLocation agx_custom_glad_glGetAttribLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLGETATTRIBLOCATIONARBPROC agx_custom_glad_glGetAttribLocationARB;
#define glGetAttribLocationARB agx_custom_glad_glGetAttribLocationARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBOOLEANINDEXEDVEXTPROC agx_custom_glad_glGetBooleanIndexedvEXT;
#define glGetBooleanIndexedvEXT agx_custom_glad_glGetBooleanIndexedvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBOOLEANI_VPROC agx_custom_glad_glGetBooleani_v;
#define glGetBooleani_v agx_custom_glad_glGetBooleani_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBOOLEANVPROC agx_custom_glad_glGetBooleanv;
#define glGetBooleanv agx_custom_glad_glGetBooleanv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPARAMETERI64VPROC agx_custom_glad_glGetBufferParameteri64v;
#define glGetBufferParameteri64v agx_custom_glad_glGetBufferParameteri64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPARAMETERIVPROC agx_custom_glad_glGetBufferParameteriv;
#define glGetBufferParameteriv agx_custom_glad_glGetBufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPARAMETERIVARBPROC agx_custom_glad_glGetBufferParameterivARB;
#define glGetBufferParameterivARB agx_custom_glad_glGetBufferParameterivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPARAMETERUI64VNVPROC agx_custom_glad_glGetBufferParameterui64vNV;
#define glGetBufferParameterui64vNV agx_custom_glad_glGetBufferParameterui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPOINTERVPROC agx_custom_glad_glGetBufferPointerv;
#define glGetBufferPointerv agx_custom_glad_glGetBufferPointerv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERPOINTERVARBPROC agx_custom_glad_glGetBufferPointervARB;
#define glGetBufferPointervARB agx_custom_glad_glGetBufferPointervARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERSUBDATAPROC agx_custom_glad_glGetBufferSubData;
#define glGetBufferSubData agx_custom_glad_glGetBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLGETBUFFERSUBDATAARBPROC agx_custom_glad_glGetBufferSubDataARB;
#define glGetBufferSubDataARB agx_custom_glad_glGetBufferSubDataARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCLIPPLANEPROC agx_custom_glad_glGetClipPlane;
#define glGetClipPlane agx_custom_glad_glGetClipPlane
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCLIPPLANEFOESPROC agx_custom_glad_glGetClipPlanefOES;
#define glGetClipPlanefOES agx_custom_glad_glGetClipPlanefOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCLIPPLANEXOESPROC agx_custom_glad_glGetClipPlanexOES;
#define glGetClipPlanexOES agx_custom_glad_glGetClipPlanexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPROC agx_custom_glad_glGetColorTable;
#define glGetColorTable agx_custom_glad_glGetColorTable
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEEXTPROC agx_custom_glad_glGetColorTableEXT;
#define glGetColorTableEXT agx_custom_glad_glGetColorTableEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERFVPROC agx_custom_glad_glGetColorTableParameterfv;
#define glGetColorTableParameterfv agx_custom_glad_glGetColorTableParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERFVEXTPROC agx_custom_glad_glGetColorTableParameterfvEXT;
#define glGetColorTableParameterfvEXT agx_custom_glad_glGetColorTableParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERFVSGIPROC agx_custom_glad_glGetColorTableParameterfvSGI;
#define glGetColorTableParameterfvSGI agx_custom_glad_glGetColorTableParameterfvSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERIVPROC agx_custom_glad_glGetColorTableParameteriv;
#define glGetColorTableParameteriv agx_custom_glad_glGetColorTableParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERIVEXTPROC agx_custom_glad_glGetColorTableParameterivEXT;
#define glGetColorTableParameterivEXT agx_custom_glad_glGetColorTableParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLEPARAMETERIVSGIPROC agx_custom_glad_glGetColorTableParameterivSGI;
#define glGetColorTableParameterivSGI agx_custom_glad_glGetColorTableParameterivSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOLORTABLESGIPROC agx_custom_glad_glGetColorTableSGI;
#define glGetColorTableSGI agx_custom_glad_glGetColorTableSGI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC agx_custom_glad_glGetCombinerInputParameterfvNV;
#define glGetCombinerInputParameterfvNV agx_custom_glad_glGetCombinerInputParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC agx_custom_glad_glGetCombinerInputParameterivNV;
#define glGetCombinerInputParameterivNV agx_custom_glad_glGetCombinerInputParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC agx_custom_glad_glGetCombinerOutputParameterfvNV;
#define glGetCombinerOutputParameterfvNV agx_custom_glad_glGetCombinerOutputParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC agx_custom_glad_glGetCombinerOutputParameterivNV;
#define glGetCombinerOutputParameterivNV agx_custom_glad_glGetCombinerOutputParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC agx_custom_glad_glGetCombinerStageParameterfvNV;
#define glGetCombinerStageParameterfvNV agx_custom_glad_glGetCombinerStageParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMMANDHEADERNVPROC agx_custom_glad_glGetCommandHeaderNV;
#define glGetCommandHeaderNV agx_custom_glad_glGetCommandHeaderNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC agx_custom_glad_glGetCompressedMultiTexImageEXT;
#define glGetCompressedMultiTexImageEXT agx_custom_glad_glGetCompressedMultiTexImageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEPROC agx_custom_glad_glGetCompressedTexImage;
#define glGetCompressedTexImage agx_custom_glad_glGetCompressedTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEARBPROC agx_custom_glad_glGetCompressedTexImageARB;
#define glGetCompressedTexImageARB agx_custom_glad_glGetCompressedTexImageARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC agx_custom_glad_glGetCompressedTextureImage;
#define glGetCompressedTextureImage agx_custom_glad_glGetCompressedTextureImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC agx_custom_glad_glGetCompressedTextureImageEXT;
#define glGetCompressedTextureImageEXT agx_custom_glad_glGetCompressedTextureImageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC agx_custom_glad_glGetCompressedTextureSubImage;
#define glGetCompressedTextureSubImage agx_custom_glad_glGetCompressedTextureSubImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONFILTERPROC agx_custom_glad_glGetConvolutionFilter;
#define glGetConvolutionFilter agx_custom_glad_glGetConvolutionFilter
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONFILTEREXTPROC agx_custom_glad_glGetConvolutionFilterEXT;
#define glGetConvolutionFilterEXT agx_custom_glad_glGetConvolutionFilterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONPARAMETERFVPROC agx_custom_glad_glGetConvolutionParameterfv;
#define glGetConvolutionParameterfv agx_custom_glad_glGetConvolutionParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC agx_custom_glad_glGetConvolutionParameterfvEXT;
#define glGetConvolutionParameterfvEXT agx_custom_glad_glGetConvolutionParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONPARAMETERIVPROC agx_custom_glad_glGetConvolutionParameteriv;
#define glGetConvolutionParameteriv agx_custom_glad_glGetConvolutionParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC agx_custom_glad_glGetConvolutionParameterivEXT;
#define glGetConvolutionParameterivEXT agx_custom_glad_glGetConvolutionParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCONVOLUTIONPARAMETERXVOESPROC agx_custom_glad_glGetConvolutionParameterxvOES;
#define glGetConvolutionParameterxvOES agx_custom_glad_glGetConvolutionParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETCOVERAGEMODULATIONTABLENVPROC agx_custom_glad_glGetCoverageModulationTableNV;
#define glGetCoverageModulationTableNV agx_custom_glad_glGetCoverageModulationTableNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGPROC agx_custom_glad_glGetDebugMessageLog;
#define glGetDebugMessageLog agx_custom_glad_glGetDebugMessageLog
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGAMDPROC agx_custom_glad_glGetDebugMessageLogAMD;
#define glGetDebugMessageLogAMD agx_custom_glad_glGetDebugMessageLogAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGARBPROC agx_custom_glad_glGetDebugMessageLogARB;
#define glGetDebugMessageLogARB agx_custom_glad_glGetDebugMessageLogARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDETAILTEXFUNCSGISPROC agx_custom_glad_glGetDetailTexFuncSGIS;
#define glGetDetailTexFuncSGIS agx_custom_glad_glGetDetailTexFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDOUBLEINDEXEDVEXTPROC agx_custom_glad_glGetDoubleIndexedvEXT;
#define glGetDoubleIndexedvEXT agx_custom_glad_glGetDoubleIndexedvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDOUBLEI_VPROC agx_custom_glad_glGetDoublei_v;
#define glGetDoublei_v agx_custom_glad_glGetDoublei_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDOUBLEI_VEXTPROC agx_custom_glad_glGetDoublei_vEXT;
#define glGetDoublei_vEXT agx_custom_glad_glGetDoublei_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETDOUBLEVPROC agx_custom_glad_glGetDoublev;
#define glGetDoublev agx_custom_glad_glGetDoublev
AGX_CUSTOM_GLAD_API_CALL PFNGLGETERRORPROC agx_custom_glad_glGetError;
#define glGetError agx_custom_glad_glGetError
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFENCEIVNVPROC agx_custom_glad_glGetFenceivNV;
#define glGetFenceivNV agx_custom_glad_glGetFenceivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC agx_custom_glad_glGetFinalCombinerInputParameterfvNV;
#define glGetFinalCombinerInputParameterfvNV agx_custom_glad_glGetFinalCombinerInputParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC agx_custom_glad_glGetFinalCombinerInputParameterivNV;
#define glGetFinalCombinerInputParameterivNV agx_custom_glad_glGetFinalCombinerInputParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFIRSTPERFQUERYIDINTELPROC agx_custom_glad_glGetFirstPerfQueryIdINTEL;
#define glGetFirstPerfQueryIdINTEL agx_custom_glad_glGetFirstPerfQueryIdINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFIXEDVOESPROC agx_custom_glad_glGetFixedvOES;
#define glGetFixedvOES agx_custom_glad_glGetFixedvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFLOATINDEXEDVEXTPROC agx_custom_glad_glGetFloatIndexedvEXT;
#define glGetFloatIndexedvEXT agx_custom_glad_glGetFloatIndexedvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFLOATI_VPROC agx_custom_glad_glGetFloati_v;
#define glGetFloati_v agx_custom_glad_glGetFloati_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFLOATI_VEXTPROC agx_custom_glad_glGetFloati_vEXT;
#define glGetFloati_vEXT agx_custom_glad_glGetFloati_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFLOATVPROC agx_custom_glad_glGetFloatv;
#define glGetFloatv agx_custom_glad_glGetFloatv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFOGFUNCSGISPROC agx_custom_glad_glGetFogFuncSGIS;
#define glGetFogFuncSGIS agx_custom_glad_glGetFogFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGDATAINDEXPROC agx_custom_glad_glGetFragDataIndex;
#define glGetFragDataIndex agx_custom_glad_glGetFragDataIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGDATALOCATIONPROC agx_custom_glad_glGetFragDataLocation;
#define glGetFragDataLocation agx_custom_glad_glGetFragDataLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGDATALOCATIONEXTPROC agx_custom_glad_glGetFragDataLocationEXT;
#define glGetFragDataLocationEXT agx_custom_glad_glGetFragDataLocationEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGMENTLIGHTFVSGIXPROC agx_custom_glad_glGetFragmentLightfvSGIX;
#define glGetFragmentLightfvSGIX agx_custom_glad_glGetFragmentLightfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGMENTLIGHTIVSGIXPROC agx_custom_glad_glGetFragmentLightivSGIX;
#define glGetFragmentLightivSGIX agx_custom_glad_glGetFragmentLightivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGMENTMATERIALFVSGIXPROC agx_custom_glad_glGetFragmentMaterialfvSGIX;
#define glGetFragmentMaterialfvSGIX agx_custom_glad_glGetFragmentMaterialfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAGMENTMATERIALIVSGIXPROC agx_custom_glad_glGetFragmentMaterialivSGIX;
#define glGetFragmentMaterialivSGIX agx_custom_glad_glGetFragmentMaterialivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC agx_custom_glad_glGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv agx_custom_glad_glGetFramebufferAttachmentParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC agx_custom_glad_glGetFramebufferAttachmentParameterivEXT;
#define glGetFramebufferAttachmentParameterivEXT agx_custom_glad_glGetFramebufferAttachmentParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC agx_custom_glad_glGetFramebufferParameterfvAMD;
#define glGetFramebufferParameterfvAMD agx_custom_glad_glGetFramebufferParameterfvAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERPARAMETERIVPROC agx_custom_glad_glGetFramebufferParameteriv;
#define glGetFramebufferParameteriv agx_custom_glad_glGetFramebufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetFramebufferParameterivEXT;
#define glGetFramebufferParameterivEXT agx_custom_glad_glGetFramebufferParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC agx_custom_glad_glGetFramebufferParameterivMESA;
#define glGetFramebufferParameterivMESA agx_custom_glad_glGetFramebufferParameterivMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLGETGRAPHICSRESETSTATUSPROC agx_custom_glad_glGetGraphicsResetStatus;
#define glGetGraphicsResetStatus agx_custom_glad_glGetGraphicsResetStatus
AGX_CUSTOM_GLAD_API_CALL PFNGLGETGRAPHICSRESETSTATUSARBPROC agx_custom_glad_glGetGraphicsResetStatusARB;
#define glGetGraphicsResetStatusARB agx_custom_glad_glGetGraphicsResetStatusARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHANDLEARBPROC agx_custom_glad_glGetHandleARB;
#define glGetHandleARB agx_custom_glad_glGetHandleARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPROC agx_custom_glad_glGetHistogram;
#define glGetHistogram agx_custom_glad_glGetHistogram
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMEXTPROC agx_custom_glad_glGetHistogramEXT;
#define glGetHistogramEXT agx_custom_glad_glGetHistogramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPARAMETERFVPROC agx_custom_glad_glGetHistogramParameterfv;
#define glGetHistogramParameterfv agx_custom_glad_glGetHistogramParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPARAMETERFVEXTPROC agx_custom_glad_glGetHistogramParameterfvEXT;
#define glGetHistogramParameterfvEXT agx_custom_glad_glGetHistogramParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPARAMETERIVPROC agx_custom_glad_glGetHistogramParameteriv;
#define glGetHistogramParameteriv agx_custom_glad_glGetHistogramParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPARAMETERIVEXTPROC agx_custom_glad_glGetHistogramParameterivEXT;
#define glGetHistogramParameterivEXT agx_custom_glad_glGetHistogramParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETHISTOGRAMPARAMETERXVOESPROC agx_custom_glad_glGetHistogramParameterxvOES;
#define glGetHistogramParameterxvOES agx_custom_glad_glGetHistogramParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETIMAGEHANDLEARBPROC agx_custom_glad_glGetImageHandleARB;
#define glGetImageHandleARB agx_custom_glad_glGetImageHandleARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETIMAGEHANDLENVPROC agx_custom_glad_glGetImageHandleNV;
#define glGetImageHandleNV agx_custom_glad_glGetImageHandleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC agx_custom_glad_glGetImageTransformParameterfvHP;
#define glGetImageTransformParameterfvHP agx_custom_glad_glGetImageTransformParameterfvHP
AGX_CUSTOM_GLAD_API_CALL PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC agx_custom_glad_glGetImageTransformParameterivHP;
#define glGetImageTransformParameterivHP agx_custom_glad_glGetImageTransformParameterivHP
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINFOLOGARBPROC agx_custom_glad_glGetInfoLogARB;
#define glGetInfoLogARB agx_custom_glad_glGetInfoLogARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINSTRUMENTSSGIXPROC agx_custom_glad_glGetInstrumentsSGIX;
#define glGetInstrumentsSGIX agx_custom_glad_glGetInstrumentsSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGER64I_VPROC agx_custom_glad_glGetInteger64i_v;
#define glGetInteger64i_v agx_custom_glad_glGetInteger64i_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGER64VPROC agx_custom_glad_glGetInteger64v;
#define glGetInteger64v agx_custom_glad_glGetInteger64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGERINDEXEDVEXTPROC agx_custom_glad_glGetIntegerIndexedvEXT;
#define glGetIntegerIndexedvEXT agx_custom_glad_glGetIntegerIndexedvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGERI_VPROC agx_custom_glad_glGetIntegeri_v;
#define glGetIntegeri_v agx_custom_glad_glGetIntegeri_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGERUI64I_VNVPROC agx_custom_glad_glGetIntegerui64i_vNV;
#define glGetIntegerui64i_vNV agx_custom_glad_glGetIntegerui64i_vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGERUI64VNVPROC agx_custom_glad_glGetIntegerui64vNV;
#define glGetIntegerui64vNV agx_custom_glad_glGetIntegerui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTEGERVPROC agx_custom_glad_glGetIntegerv;
#define glGetIntegerv agx_custom_glad_glGetIntegerv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTERNALFORMATSAMPLEIVNVPROC agx_custom_glad_glGetInternalformatSampleivNV;
#define glGetInternalformatSampleivNV agx_custom_glad_glGetInternalformatSampleivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTERNALFORMATI64VPROC agx_custom_glad_glGetInternalformati64v;
#define glGetInternalformati64v agx_custom_glad_glGetInternalformati64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINTERNALFORMATIVPROC agx_custom_glad_glGetInternalformativ;
#define glGetInternalformativ agx_custom_glad_glGetInternalformativ
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINVARIANTBOOLEANVEXTPROC agx_custom_glad_glGetInvariantBooleanvEXT;
#define glGetInvariantBooleanvEXT agx_custom_glad_glGetInvariantBooleanvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINVARIANTFLOATVEXTPROC agx_custom_glad_glGetInvariantFloatvEXT;
#define glGetInvariantFloatvEXT agx_custom_glad_glGetInvariantFloatvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETINVARIANTINTEGERVEXTPROC agx_custom_glad_glGetInvariantIntegervEXT;
#define glGetInvariantIntegervEXT agx_custom_glad_glGetInvariantIntegervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLIGHTFVPROC agx_custom_glad_glGetLightfv;
#define glGetLightfv agx_custom_glad_glGetLightfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLIGHTIVPROC agx_custom_glad_glGetLightiv;
#define glGetLightiv agx_custom_glad_glGetLightiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLIGHTXOESPROC agx_custom_glad_glGetLightxOES;
#define glGetLightxOES agx_custom_glad_glGetLightxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLISTPARAMETERFVSGIXPROC agx_custom_glad_glGetListParameterfvSGIX;
#define glGetListParameterfvSGIX agx_custom_glad_glGetListParameterfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLISTPARAMETERIVSGIXPROC agx_custom_glad_glGetListParameterivSGIX;
#define glGetListParameterivSGIX agx_custom_glad_glGetListParameterivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC agx_custom_glad_glGetLocalConstantBooleanvEXT;
#define glGetLocalConstantBooleanvEXT agx_custom_glad_glGetLocalConstantBooleanvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLOCALCONSTANTFLOATVEXTPROC agx_custom_glad_glGetLocalConstantFloatvEXT;
#define glGetLocalConstantFloatvEXT agx_custom_glad_glGetLocalConstantFloatvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETLOCALCONSTANTINTEGERVEXTPROC agx_custom_glad_glGetLocalConstantIntegervEXT;
#define glGetLocalConstantIntegervEXT agx_custom_glad_glGetLocalConstantIntegervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPATTRIBPARAMETERFVNVPROC agx_custom_glad_glGetMapAttribParameterfvNV;
#define glGetMapAttribParameterfvNV agx_custom_glad_glGetMapAttribParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPATTRIBPARAMETERIVNVPROC agx_custom_glad_glGetMapAttribParameterivNV;
#define glGetMapAttribParameterivNV agx_custom_glad_glGetMapAttribParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPCONTROLPOINTSNVPROC agx_custom_glad_glGetMapControlPointsNV;
#define glGetMapControlPointsNV agx_custom_glad_glGetMapControlPointsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPPARAMETERFVNVPROC agx_custom_glad_glGetMapParameterfvNV;
#define glGetMapParameterfvNV agx_custom_glad_glGetMapParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPPARAMETERIVNVPROC agx_custom_glad_glGetMapParameterivNV;
#define glGetMapParameterivNV agx_custom_glad_glGetMapParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPDVPROC agx_custom_glad_glGetMapdv;
#define glGetMapdv agx_custom_glad_glGetMapdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPFVPROC agx_custom_glad_glGetMapfv;
#define glGetMapfv agx_custom_glad_glGetMapfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPIVPROC agx_custom_glad_glGetMapiv;
#define glGetMapiv agx_custom_glad_glGetMapiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMAPXVOESPROC agx_custom_glad_glGetMapxvOES;
#define glGetMapxvOES agx_custom_glad_glGetMapxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMATERIALFVPROC agx_custom_glad_glGetMaterialfv;
#define glGetMaterialfv agx_custom_glad_glGetMaterialfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMATERIALIVPROC agx_custom_glad_glGetMaterialiv;
#define glGetMaterialiv agx_custom_glad_glGetMaterialiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMATERIALXOESPROC agx_custom_glad_glGetMaterialxOES;
#define glGetMaterialxOES agx_custom_glad_glGetMaterialxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC agx_custom_glad_glGetMemoryObjectDetachedResourcesuivNV;
#define glGetMemoryObjectDetachedResourcesuivNV agx_custom_glad_glGetMemoryObjectDetachedResourcesuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC agx_custom_glad_glGetMemoryObjectParameterivEXT;
#define glGetMemoryObjectParameterivEXT agx_custom_glad_glGetMemoryObjectParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXPROC agx_custom_glad_glGetMinmax;
#define glGetMinmax agx_custom_glad_glGetMinmax
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXEXTPROC agx_custom_glad_glGetMinmaxEXT;
#define glGetMinmaxEXT agx_custom_glad_glGetMinmaxEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXPARAMETERFVPROC agx_custom_glad_glGetMinmaxParameterfv;
#define glGetMinmaxParameterfv agx_custom_glad_glGetMinmaxParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXPARAMETERFVEXTPROC agx_custom_glad_glGetMinmaxParameterfvEXT;
#define glGetMinmaxParameterfvEXT agx_custom_glad_glGetMinmaxParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXPARAMETERIVPROC agx_custom_glad_glGetMinmaxParameteriv;
#define glGetMinmaxParameteriv agx_custom_glad_glGetMinmaxParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMINMAXPARAMETERIVEXTPROC agx_custom_glad_glGetMinmaxParameterivEXT;
#define glGetMinmaxParameterivEXT agx_custom_glad_glGetMinmaxParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXENVFVEXTPROC agx_custom_glad_glGetMultiTexEnvfvEXT;
#define glGetMultiTexEnvfvEXT agx_custom_glad_glGetMultiTexEnvfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXENVIVEXTPROC agx_custom_glad_glGetMultiTexEnvivEXT;
#define glGetMultiTexEnvivEXT agx_custom_glad_glGetMultiTexEnvivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXGENDVEXTPROC agx_custom_glad_glGetMultiTexGendvEXT;
#define glGetMultiTexGendvEXT agx_custom_glad_glGetMultiTexGendvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXGENFVEXTPROC agx_custom_glad_glGetMultiTexGenfvEXT;
#define glGetMultiTexGenfvEXT agx_custom_glad_glGetMultiTexGenfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXGENIVEXTPROC agx_custom_glad_glGetMultiTexGenivEXT;
#define glGetMultiTexGenivEXT agx_custom_glad_glGetMultiTexGenivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXIMAGEEXTPROC agx_custom_glad_glGetMultiTexImageEXT;
#define glGetMultiTexImageEXT agx_custom_glad_glGetMultiTexImageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC agx_custom_glad_glGetMultiTexLevelParameterfvEXT;
#define glGetMultiTexLevelParameterfvEXT agx_custom_glad_glGetMultiTexLevelParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC agx_custom_glad_glGetMultiTexLevelParameterivEXT;
#define glGetMultiTexLevelParameterivEXT agx_custom_glad_glGetMultiTexLevelParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXPARAMETERIIVEXTPROC agx_custom_glad_glGetMultiTexParameterIivEXT;
#define glGetMultiTexParameterIivEXT agx_custom_glad_glGetMultiTexParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXPARAMETERIUIVEXTPROC agx_custom_glad_glGetMultiTexParameterIuivEXT;
#define glGetMultiTexParameterIuivEXT agx_custom_glad_glGetMultiTexParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXPARAMETERFVEXTPROC agx_custom_glad_glGetMultiTexParameterfvEXT;
#define glGetMultiTexParameterfvEXT agx_custom_glad_glGetMultiTexParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTITEXPARAMETERIVEXTPROC agx_custom_glad_glGetMultiTexParameterivEXT;
#define glGetMultiTexParameterivEXT agx_custom_glad_glGetMultiTexParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTISAMPLEFVPROC agx_custom_glad_glGetMultisamplefv;
#define glGetMultisamplefv agx_custom_glad_glGetMultisamplefv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETMULTISAMPLEFVNVPROC agx_custom_glad_glGetMultisamplefvNV;
#define glGetMultisamplefvNV agx_custom_glad_glGetMultisamplefvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPARAMETERI64VPROC agx_custom_glad_glGetNamedBufferParameteri64v;
#define glGetNamedBufferParameteri64v agx_custom_glad_glGetNamedBufferParameteri64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedBufferParameteriv;
#define glGetNamedBufferParameteriv agx_custom_glad_glGetNamedBufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedBufferParameterivEXT;
#define glGetNamedBufferParameterivEXT agx_custom_glad_glGetNamedBufferParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC agx_custom_glad_glGetNamedBufferParameterui64vNV;
#define glGetNamedBufferParameterui64vNV agx_custom_glad_glGetNamedBufferParameterui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPOINTERVPROC agx_custom_glad_glGetNamedBufferPointerv;
#define glGetNamedBufferPointerv agx_custom_glad_glGetNamedBufferPointerv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERPOINTERVEXTPROC agx_custom_glad_glGetNamedBufferPointervEXT;
#define glGetNamedBufferPointervEXT agx_custom_glad_glGetNamedBufferPointervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERSUBDATAPROC agx_custom_glad_glGetNamedBufferSubData;
#define glGetNamedBufferSubData agx_custom_glad_glGetNamedBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glGetNamedBufferSubDataEXT;
#define glGetNamedBufferSubDataEXT agx_custom_glad_glGetNamedBufferSubDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC agx_custom_glad_glGetNamedFramebufferAttachmentParameteriv;
#define glGetNamedFramebufferAttachmentParameteriv agx_custom_glad_glGetNamedFramebufferAttachmentParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC agx_custom_glad_glGetNamedFramebufferAttachmentParameterivEXT;
#define glGetNamedFramebufferAttachmentParameterivEXT agx_custom_glad_glGetNamedFramebufferAttachmentParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC agx_custom_glad_glGetNamedFramebufferParameterfvAMD;
#define glGetNamedFramebufferParameterfvAMD agx_custom_glad_glGetNamedFramebufferParameterfvAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedFramebufferParameteriv;
#define glGetNamedFramebufferParameteriv agx_custom_glad_glGetNamedFramebufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedFramebufferParameterivEXT;
#define glGetNamedFramebufferParameterivEXT agx_custom_glad_glGetNamedFramebufferParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterIivEXT;
#define glGetNamedProgramLocalParameterIivEXT agx_custom_glad_glGetNamedProgramLocalParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterIuivEXT;
#define glGetNamedProgramLocalParameterIuivEXT agx_custom_glad_glGetNamedProgramLocalParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterdvEXT;
#define glGetNamedProgramLocalParameterdvEXT agx_custom_glad_glGetNamedProgramLocalParameterdvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterfvEXT;
#define glGetNamedProgramLocalParameterfvEXT agx_custom_glad_glGetNamedProgramLocalParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMSTRINGEXTPROC agx_custom_glad_glGetNamedProgramStringEXT;
#define glGetNamedProgramStringEXT agx_custom_glad_glGetNamedProgramStringEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDPROGRAMIVEXTPROC agx_custom_glad_glGetNamedProgramivEXT;
#define glGetNamedProgramivEXT agx_custom_glad_glGetNamedProgramivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedRenderbufferParameteriv;
#define glGetNamedRenderbufferParameteriv agx_custom_glad_glGetNamedRenderbufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedRenderbufferParameterivEXT;
#define glGetNamedRenderbufferParameterivEXT agx_custom_glad_glGetNamedRenderbufferParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDSTRINGARBPROC agx_custom_glad_glGetNamedStringARB;
#define glGetNamedStringARB agx_custom_glad_glGetNamedStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNAMEDSTRINGIVARBPROC agx_custom_glad_glGetNamedStringivARB;
#define glGetNamedStringivARB agx_custom_glad_glGetNamedStringivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNEXTPERFQUERYIDINTELPROC agx_custom_glad_glGetNextPerfQueryIdINTEL;
#define glGetNextPerfQueryIdINTEL agx_custom_glad_glGetNextPerfQueryIdINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTBUFFERFVATIPROC agx_custom_glad_glGetObjectBufferfvATI;
#define glGetObjectBufferfvATI agx_custom_glad_glGetObjectBufferfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTBUFFERIVATIPROC agx_custom_glad_glGetObjectBufferivATI;
#define glGetObjectBufferivATI agx_custom_glad_glGetObjectBufferivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTLABELPROC agx_custom_glad_glGetObjectLabel;
#define glGetObjectLabel agx_custom_glad_glGetObjectLabel
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTLABELEXTPROC agx_custom_glad_glGetObjectLabelEXT;
#define glGetObjectLabelEXT agx_custom_glad_glGetObjectLabelEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTPARAMETERFVARBPROC agx_custom_glad_glGetObjectParameterfvARB;
#define glGetObjectParameterfvARB agx_custom_glad_glGetObjectParameterfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTPARAMETERIVAPPLEPROC agx_custom_glad_glGetObjectParameterivAPPLE;
#define glGetObjectParameterivAPPLE agx_custom_glad_glGetObjectParameterivAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTPARAMETERIVARBPROC agx_custom_glad_glGetObjectParameterivARB;
#define glGetObjectParameterivARB agx_custom_glad_glGetObjectParameterivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOBJECTPTRLABELPROC agx_custom_glad_glGetObjectPtrLabel;
#define glGetObjectPtrLabel agx_custom_glad_glGetObjectPtrLabel
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOCCLUSIONQUERYIVNVPROC agx_custom_glad_glGetOcclusionQueryivNV;
#define glGetOcclusionQueryivNV agx_custom_glad_glGetOcclusionQueryivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETOCCLUSIONQUERYUIVNVPROC agx_custom_glad_glGetOcclusionQueryuivNV;
#define glGetOcclusionQueryuivNV agx_custom_glad_glGetOcclusionQueryuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHCOLORGENFVNVPROC agx_custom_glad_glGetPathColorGenfvNV;
#define glGetPathColorGenfvNV agx_custom_glad_glGetPathColorGenfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHCOLORGENIVNVPROC agx_custom_glad_glGetPathColorGenivNV;
#define glGetPathColorGenivNV agx_custom_glad_glGetPathColorGenivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHCOMMANDSNVPROC agx_custom_glad_glGetPathCommandsNV;
#define glGetPathCommandsNV agx_custom_glad_glGetPathCommandsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHCOORDSNVPROC agx_custom_glad_glGetPathCoordsNV;
#define glGetPathCoordsNV agx_custom_glad_glGetPathCoordsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHDASHARRAYNVPROC agx_custom_glad_glGetPathDashArrayNV;
#define glGetPathDashArrayNV agx_custom_glad_glGetPathDashArrayNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHLENGTHNVPROC agx_custom_glad_glGetPathLengthNV;
#define glGetPathLengthNV agx_custom_glad_glGetPathLengthNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHMETRICRANGENVPROC agx_custom_glad_glGetPathMetricRangeNV;
#define glGetPathMetricRangeNV agx_custom_glad_glGetPathMetricRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHMETRICSNVPROC agx_custom_glad_glGetPathMetricsNV;
#define glGetPathMetricsNV agx_custom_glad_glGetPathMetricsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHPARAMETERFVNVPROC agx_custom_glad_glGetPathParameterfvNV;
#define glGetPathParameterfvNV agx_custom_glad_glGetPathParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHPARAMETERIVNVPROC agx_custom_glad_glGetPathParameterivNV;
#define glGetPathParameterivNV agx_custom_glad_glGetPathParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHSPACINGNVPROC agx_custom_glad_glGetPathSpacingNV;
#define glGetPathSpacingNV agx_custom_glad_glGetPathSpacingNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHTEXGENFVNVPROC agx_custom_glad_glGetPathTexGenfvNV;
#define glGetPathTexGenfvNV agx_custom_glad_glGetPathTexGenfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPATHTEXGENIVNVPROC agx_custom_glad_glGetPathTexGenivNV;
#define glGetPathTexGenivNV agx_custom_glad_glGetPathTexGenivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFCOUNTERINFOINTELPROC agx_custom_glad_glGetPerfCounterInfoINTEL;
#define glGetPerfCounterInfoINTEL agx_custom_glad_glGetPerfCounterInfoINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORCOUNTERDATAAMDPROC agx_custom_glad_glGetPerfMonitorCounterDataAMD;
#define glGetPerfMonitorCounterDataAMD agx_custom_glad_glGetPerfMonitorCounterDataAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORCOUNTERINFOAMDPROC agx_custom_glad_glGetPerfMonitorCounterInfoAMD;
#define glGetPerfMonitorCounterInfoAMD agx_custom_glad_glGetPerfMonitorCounterInfoAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC agx_custom_glad_glGetPerfMonitorCounterStringAMD;
#define glGetPerfMonitorCounterStringAMD agx_custom_glad_glGetPerfMonitorCounterStringAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORCOUNTERSAMDPROC agx_custom_glad_glGetPerfMonitorCountersAMD;
#define glGetPerfMonitorCountersAMD agx_custom_glad_glGetPerfMonitorCountersAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORGROUPSTRINGAMDPROC agx_custom_glad_glGetPerfMonitorGroupStringAMD;
#define glGetPerfMonitorGroupStringAMD agx_custom_glad_glGetPerfMonitorGroupStringAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFMONITORGROUPSAMDPROC agx_custom_glad_glGetPerfMonitorGroupsAMD;
#define glGetPerfMonitorGroupsAMD agx_custom_glad_glGetPerfMonitorGroupsAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFQUERYDATAINTELPROC agx_custom_glad_glGetPerfQueryDataINTEL;
#define glGetPerfQueryDataINTEL agx_custom_glad_glGetPerfQueryDataINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFQUERYIDBYNAMEINTELPROC agx_custom_glad_glGetPerfQueryIdByNameINTEL;
#define glGetPerfQueryIdByNameINTEL agx_custom_glad_glGetPerfQueryIdByNameINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPERFQUERYINFOINTELPROC agx_custom_glad_glGetPerfQueryInfoINTEL;
#define glGetPerfQueryInfoINTEL agx_custom_glad_glGetPerfQueryInfoINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELMAPFVPROC agx_custom_glad_glGetPixelMapfv;
#define glGetPixelMapfv agx_custom_glad_glGetPixelMapfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELMAPUIVPROC agx_custom_glad_glGetPixelMapuiv;
#define glGetPixelMapuiv agx_custom_glad_glGetPixelMapuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELMAPUSVPROC agx_custom_glad_glGetPixelMapusv;
#define glGetPixelMapusv agx_custom_glad_glGetPixelMapusv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELMAPXVPROC agx_custom_glad_glGetPixelMapxv;
#define glGetPixelMapxv agx_custom_glad_glGetPixelMapxv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC agx_custom_glad_glGetPixelTexGenParameterfvSGIS;
#define glGetPixelTexGenParameterfvSGIS agx_custom_glad_glGetPixelTexGenParameterfvSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC agx_custom_glad_glGetPixelTexGenParameterivSGIS;
#define glGetPixelTexGenParameterivSGIS agx_custom_glad_glGetPixelTexGenParameterivSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC agx_custom_glad_glGetPixelTransformParameterfvEXT;
#define glGetPixelTransformParameterfvEXT agx_custom_glad_glGetPixelTransformParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC agx_custom_glad_glGetPixelTransformParameterivEXT;
#define glGetPixelTransformParameterivEXT agx_custom_glad_glGetPixelTransformParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPOINTERINDEXEDVEXTPROC agx_custom_glad_glGetPointerIndexedvEXT;
#define glGetPointerIndexedvEXT agx_custom_glad_glGetPointerIndexedvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPOINTERI_VEXTPROC agx_custom_glad_glGetPointeri_vEXT;
#define glGetPointeri_vEXT agx_custom_glad_glGetPointeri_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPOINTERVPROC agx_custom_glad_glGetPointerv;
#define glGetPointerv agx_custom_glad_glGetPointerv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPOINTERVEXTPROC agx_custom_glad_glGetPointervEXT;
#define glGetPointervEXT agx_custom_glad_glGetPointervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPOLYGONSTIPPLEPROC agx_custom_glad_glGetPolygonStipple;
#define glGetPolygonStipple agx_custom_glad_glGetPolygonStipple
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMBINARYPROC agx_custom_glad_glGetProgramBinary;
#define glGetProgramBinary agx_custom_glad_glGetProgramBinary
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMENVPARAMETERIIVNVPROC agx_custom_glad_glGetProgramEnvParameterIivNV;
#define glGetProgramEnvParameterIivNV agx_custom_glad_glGetProgramEnvParameterIivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC agx_custom_glad_glGetProgramEnvParameterIuivNV;
#define glGetProgramEnvParameterIuivNV agx_custom_glad_glGetProgramEnvParameterIuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMENVPARAMETERDVARBPROC agx_custom_glad_glGetProgramEnvParameterdvARB;
#define glGetProgramEnvParameterdvARB agx_custom_glad_glGetProgramEnvParameterdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMENVPARAMETERFVARBPROC agx_custom_glad_glGetProgramEnvParameterfvARB;
#define glGetProgramEnvParameterfvARB agx_custom_glad_glGetProgramEnvParameterfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMINFOLOGPROC agx_custom_glad_glGetProgramInfoLog;
#define glGetProgramInfoLog agx_custom_glad_glGetProgramInfoLog
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMINTERFACEIVPROC agx_custom_glad_glGetProgramInterfaceiv;
#define glGetProgramInterfaceiv agx_custom_glad_glGetProgramInterfaceiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC agx_custom_glad_glGetProgramLocalParameterIivNV;
#define glGetProgramLocalParameterIivNV agx_custom_glad_glGetProgramLocalParameterIivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC agx_custom_glad_glGetProgramLocalParameterIuivNV;
#define glGetProgramLocalParameterIuivNV agx_custom_glad_glGetProgramLocalParameterIuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC agx_custom_glad_glGetProgramLocalParameterdvARB;
#define glGetProgramLocalParameterdvARB agx_custom_glad_glGetProgramLocalParameterdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC agx_custom_glad_glGetProgramLocalParameterfvARB;
#define glGetProgramLocalParameterfvARB agx_custom_glad_glGetProgramLocalParameterfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC agx_custom_glad_glGetProgramNamedParameterdvNV;
#define glGetProgramNamedParameterdvNV agx_custom_glad_glGetProgramNamedParameterdvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC agx_custom_glad_glGetProgramNamedParameterfvNV;
#define glGetProgramNamedParameterfvNV agx_custom_glad_glGetProgramNamedParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMPARAMETERDVNVPROC agx_custom_glad_glGetProgramParameterdvNV;
#define glGetProgramParameterdvNV agx_custom_glad_glGetProgramParameterdvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMPARAMETERFVNVPROC agx_custom_glad_glGetProgramParameterfvNV;
#define glGetProgramParameterfvNV agx_custom_glad_glGetProgramParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMPIPELINEINFOLOGPROC agx_custom_glad_glGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog agx_custom_glad_glGetProgramPipelineInfoLog
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMPIPELINEIVPROC agx_custom_glad_glGetProgramPipelineiv;
#define glGetProgramPipelineiv agx_custom_glad_glGetProgramPipelineiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCEINDEXPROC agx_custom_glad_glGetProgramResourceIndex;
#define glGetProgramResourceIndex agx_custom_glad_glGetProgramResourceIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCELOCATIONPROC agx_custom_glad_glGetProgramResourceLocation;
#define glGetProgramResourceLocation agx_custom_glad_glGetProgramResourceLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC agx_custom_glad_glGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex agx_custom_glad_glGetProgramResourceLocationIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCENAMEPROC agx_custom_glad_glGetProgramResourceName;
#define glGetProgramResourceName agx_custom_glad_glGetProgramResourceName
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCEFVNVPROC agx_custom_glad_glGetProgramResourcefvNV;
#define glGetProgramResourcefvNV agx_custom_glad_glGetProgramResourcefvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMRESOURCEIVPROC agx_custom_glad_glGetProgramResourceiv;
#define glGetProgramResourceiv agx_custom_glad_glGetProgramResourceiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMSTAGEIVPROC agx_custom_glad_glGetProgramStageiv;
#define glGetProgramStageiv agx_custom_glad_glGetProgramStageiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMSTRINGARBPROC agx_custom_glad_glGetProgramStringARB;
#define glGetProgramStringARB agx_custom_glad_glGetProgramStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMSTRINGNVPROC agx_custom_glad_glGetProgramStringNV;
#define glGetProgramStringNV agx_custom_glad_glGetProgramStringNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC agx_custom_glad_glGetProgramSubroutineParameteruivNV;
#define glGetProgramSubroutineParameteruivNV agx_custom_glad_glGetProgramSubroutineParameteruivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMIVPROC agx_custom_glad_glGetProgramiv;
#define glGetProgramiv agx_custom_glad_glGetProgramiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMIVARBPROC agx_custom_glad_glGetProgramivARB;
#define glGetProgramivARB agx_custom_glad_glGetProgramivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETPROGRAMIVNVPROC agx_custom_glad_glGetProgramivNV;
#define glGetProgramivNV agx_custom_glad_glGetProgramivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYBUFFEROBJECTI64VPROC agx_custom_glad_glGetQueryBufferObjecti64v;
#define glGetQueryBufferObjecti64v agx_custom_glad_glGetQueryBufferObjecti64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYBUFFEROBJECTIVPROC agx_custom_glad_glGetQueryBufferObjectiv;
#define glGetQueryBufferObjectiv agx_custom_glad_glGetQueryBufferObjectiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYBUFFEROBJECTUI64VPROC agx_custom_glad_glGetQueryBufferObjectui64v;
#define glGetQueryBufferObjectui64v agx_custom_glad_glGetQueryBufferObjectui64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYBUFFEROBJECTUIVPROC agx_custom_glad_glGetQueryBufferObjectuiv;
#define glGetQueryBufferObjectuiv agx_custom_glad_glGetQueryBufferObjectuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYINDEXEDIVPROC agx_custom_glad_glGetQueryIndexediv;
#define glGetQueryIndexediv agx_custom_glad_glGetQueryIndexediv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTI64VPROC agx_custom_glad_glGetQueryObjecti64v;
#define glGetQueryObjecti64v agx_custom_glad_glGetQueryObjecti64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTI64VEXTPROC agx_custom_glad_glGetQueryObjecti64vEXT;
#define glGetQueryObjecti64vEXT agx_custom_glad_glGetQueryObjecti64vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTIVPROC agx_custom_glad_glGetQueryObjectiv;
#define glGetQueryObjectiv agx_custom_glad_glGetQueryObjectiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTIVARBPROC agx_custom_glad_glGetQueryObjectivARB;
#define glGetQueryObjectivARB agx_custom_glad_glGetQueryObjectivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTUI64VPROC agx_custom_glad_glGetQueryObjectui64v;
#define glGetQueryObjectui64v agx_custom_glad_glGetQueryObjectui64v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTUI64VEXTPROC agx_custom_glad_glGetQueryObjectui64vEXT;
#define glGetQueryObjectui64vEXT agx_custom_glad_glGetQueryObjectui64vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTUIVPROC agx_custom_glad_glGetQueryObjectuiv;
#define glGetQueryObjectuiv agx_custom_glad_glGetQueryObjectuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYOBJECTUIVARBPROC agx_custom_glad_glGetQueryObjectuivARB;
#define glGetQueryObjectuivARB agx_custom_glad_glGetQueryObjectuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYIVPROC agx_custom_glad_glGetQueryiv;
#define glGetQueryiv agx_custom_glad_glGetQueryiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETQUERYIVARBPROC agx_custom_glad_glGetQueryivARB;
#define glGetQueryivARB agx_custom_glad_glGetQueryivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETRENDERBUFFERPARAMETERIVPROC agx_custom_glad_glGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv agx_custom_glad_glGetRenderbufferParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetRenderbufferParameterivEXT;
#define glGetRenderbufferParameterivEXT agx_custom_glad_glGetRenderbufferParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIIVPROC agx_custom_glad_glGetSamplerParameterIiv;
#define glGetSamplerParameterIiv agx_custom_glad_glGetSamplerParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIUIVPROC agx_custom_glad_glGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv agx_custom_glad_glGetSamplerParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERFVPROC agx_custom_glad_glGetSamplerParameterfv;
#define glGetSamplerParameterfv agx_custom_glad_glGetSamplerParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIVPROC agx_custom_glad_glGetSamplerParameteriv;
#define glGetSamplerParameteriv agx_custom_glad_glGetSamplerParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSEMAPHOREPARAMETERIVNVPROC agx_custom_glad_glGetSemaphoreParameterivNV;
#define glGetSemaphoreParameterivNV agx_custom_glad_glGetSemaphoreParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC agx_custom_glad_glGetSemaphoreParameterui64vEXT;
#define glGetSemaphoreParameterui64vEXT agx_custom_glad_glGetSemaphoreParameterui64vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSEPARABLEFILTERPROC agx_custom_glad_glGetSeparableFilter;
#define glGetSeparableFilter agx_custom_glad_glGetSeparableFilter
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSEPARABLEFILTEREXTPROC agx_custom_glad_glGetSeparableFilterEXT;
#define glGetSeparableFilterEXT agx_custom_glad_glGetSeparableFilterEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADERINFOLOGPROC agx_custom_glad_glGetShaderInfoLog;
#define glGetShaderInfoLog agx_custom_glad_glGetShaderInfoLog
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADERPRECISIONFORMATPROC agx_custom_glad_glGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat agx_custom_glad_glGetShaderPrecisionFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADERSOURCEPROC agx_custom_glad_glGetShaderSource;
#define glGetShaderSource agx_custom_glad_glGetShaderSource
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADERSOURCEARBPROC agx_custom_glad_glGetShaderSourceARB;
#define glGetShaderSourceARB agx_custom_glad_glGetShaderSourceARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADERIVPROC agx_custom_glad_glGetShaderiv;
#define glGetShaderiv agx_custom_glad_glGetShaderiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADINGRATEIMAGEPALETTENVPROC agx_custom_glad_glGetShadingRateImagePaletteNV;
#define glGetShadingRateImagePaletteNV agx_custom_glad_glGetShadingRateImagePaletteNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC agx_custom_glad_glGetShadingRateSampleLocationivNV;
#define glGetShadingRateSampleLocationivNV agx_custom_glad_glGetShadingRateSampleLocationivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSHARPENTEXFUNCSGISPROC agx_custom_glad_glGetSharpenTexFuncSGIS;
#define glGetSharpenTexFuncSGIS agx_custom_glad_glGetSharpenTexFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSTAGEINDEXNVPROC agx_custom_glad_glGetStageIndexNV;
#define glGetStageIndexNV agx_custom_glad_glGetStageIndexNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSTRINGPROC agx_custom_glad_glGetString;
#define glGetString agx_custom_glad_glGetString
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSTRINGIPROC agx_custom_glad_glGetStringi;
#define glGetStringi agx_custom_glad_glGetStringi
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSUBROUTINEINDEXPROC agx_custom_glad_glGetSubroutineIndex;
#define glGetSubroutineIndex agx_custom_glad_glGetSubroutineIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC agx_custom_glad_glGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation agx_custom_glad_glGetSubroutineUniformLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLGETSYNCIVPROC agx_custom_glad_glGetSynciv;
#define glGetSynciv agx_custom_glad_glGetSynciv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXBUMPPARAMETERFVATIPROC agx_custom_glad_glGetTexBumpParameterfvATI;
#define glGetTexBumpParameterfvATI agx_custom_glad_glGetTexBumpParameterfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXBUMPPARAMETERIVATIPROC agx_custom_glad_glGetTexBumpParameterivATI;
#define glGetTexBumpParameterivATI agx_custom_glad_glGetTexBumpParameterivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXENVFVPROC agx_custom_glad_glGetTexEnvfv;
#define glGetTexEnvfv agx_custom_glad_glGetTexEnvfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXENVIVPROC agx_custom_glad_glGetTexEnviv;
#define glGetTexEnviv agx_custom_glad_glGetTexEnviv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXENVXVOESPROC agx_custom_glad_glGetTexEnvxvOES;
#define glGetTexEnvxvOES agx_custom_glad_glGetTexEnvxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXFILTERFUNCSGISPROC agx_custom_glad_glGetTexFilterFuncSGIS;
#define glGetTexFilterFuncSGIS agx_custom_glad_glGetTexFilterFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXGENDVPROC agx_custom_glad_glGetTexGendv;
#define glGetTexGendv agx_custom_glad_glGetTexGendv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXGENFVPROC agx_custom_glad_glGetTexGenfv;
#define glGetTexGenfv agx_custom_glad_glGetTexGenfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXGENIVPROC agx_custom_glad_glGetTexGeniv;
#define glGetTexGeniv agx_custom_glad_glGetTexGeniv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXGENXVOESPROC agx_custom_glad_glGetTexGenxvOES;
#define glGetTexGenxvOES agx_custom_glad_glGetTexGenxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXIMAGEPROC agx_custom_glad_glGetTexImage;
#define glGetTexImage agx_custom_glad_glGetTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERFVPROC agx_custom_glad_glGetTexLevelParameterfv;
#define glGetTexLevelParameterfv agx_custom_glad_glGetTexLevelParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERIVPROC agx_custom_glad_glGetTexLevelParameteriv;
#define glGetTexLevelParameteriv agx_custom_glad_glGetTexLevelParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERXVOESPROC agx_custom_glad_glGetTexLevelParameterxvOES;
#define glGetTexLevelParameterxvOES agx_custom_glad_glGetTexLevelParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERIIVPROC agx_custom_glad_glGetTexParameterIiv;
#define glGetTexParameterIiv agx_custom_glad_glGetTexParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERIIVEXTPROC agx_custom_glad_glGetTexParameterIivEXT;
#define glGetTexParameterIivEXT agx_custom_glad_glGetTexParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERIUIVPROC agx_custom_glad_glGetTexParameterIuiv;
#define glGetTexParameterIuiv agx_custom_glad_glGetTexParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERIUIVEXTPROC agx_custom_glad_glGetTexParameterIuivEXT;
#define glGetTexParameterIuivEXT agx_custom_glad_glGetTexParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC agx_custom_glad_glGetTexParameterPointervAPPLE;
#define glGetTexParameterPointervAPPLE agx_custom_glad_glGetTexParameterPointervAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERFVPROC agx_custom_glad_glGetTexParameterfv;
#define glGetTexParameterfv agx_custom_glad_glGetTexParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERIVPROC agx_custom_glad_glGetTexParameteriv;
#define glGetTexParameteriv agx_custom_glad_glGetTexParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXPARAMETERXVOESPROC agx_custom_glad_glGetTexParameterxvOES;
#define glGetTexParameterxvOES agx_custom_glad_glGetTexParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREHANDLEARBPROC agx_custom_glad_glGetTextureHandleARB;
#define glGetTextureHandleARB agx_custom_glad_glGetTextureHandleARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREHANDLENVPROC agx_custom_glad_glGetTextureHandleNV;
#define glGetTextureHandleNV agx_custom_glad_glGetTextureHandleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREIMAGEPROC agx_custom_glad_glGetTextureImage;
#define glGetTextureImage agx_custom_glad_glGetTextureImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREIMAGEEXTPROC agx_custom_glad_glGetTextureImageEXT;
#define glGetTextureImageEXT agx_custom_glad_glGetTextureImageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURELEVELPARAMETERFVPROC agx_custom_glad_glGetTextureLevelParameterfv;
#define glGetTextureLevelParameterfv agx_custom_glad_glGetTextureLevelParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC agx_custom_glad_glGetTextureLevelParameterfvEXT;
#define glGetTextureLevelParameterfvEXT agx_custom_glad_glGetTextureLevelParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURELEVELPARAMETERIVPROC agx_custom_glad_glGetTextureLevelParameteriv;
#define glGetTextureLevelParameteriv agx_custom_glad_glGetTextureLevelParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC agx_custom_glad_glGetTextureLevelParameterivEXT;
#define glGetTextureLevelParameterivEXT agx_custom_glad_glGetTextureLevelParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIIVPROC agx_custom_glad_glGetTextureParameterIiv;
#define glGetTextureParameterIiv agx_custom_glad_glGetTextureParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIIVEXTPROC agx_custom_glad_glGetTextureParameterIivEXT;
#define glGetTextureParameterIivEXT agx_custom_glad_glGetTextureParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIUIVPROC agx_custom_glad_glGetTextureParameterIuiv;
#define glGetTextureParameterIuiv agx_custom_glad_glGetTextureParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIUIVEXTPROC agx_custom_glad_glGetTextureParameterIuivEXT;
#define glGetTextureParameterIuivEXT agx_custom_glad_glGetTextureParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERFVPROC agx_custom_glad_glGetTextureParameterfv;
#define glGetTextureParameterfv agx_custom_glad_glGetTextureParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERFVEXTPROC agx_custom_glad_glGetTextureParameterfvEXT;
#define glGetTextureParameterfvEXT agx_custom_glad_glGetTextureParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIVPROC agx_custom_glad_glGetTextureParameteriv;
#define glGetTextureParameteriv agx_custom_glad_glGetTextureParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTUREPARAMETERIVEXTPROC agx_custom_glad_glGetTextureParameterivEXT;
#define glGetTextureParameterivEXT agx_custom_glad_glGetTextureParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURESAMPLERHANDLEARBPROC agx_custom_glad_glGetTextureSamplerHandleARB;
#define glGetTextureSamplerHandleARB agx_custom_glad_glGetTextureSamplerHandleARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURESAMPLERHANDLENVPROC agx_custom_glad_glGetTextureSamplerHandleNV;
#define glGetTextureSamplerHandleNV agx_custom_glad_glGetTextureSamplerHandleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTEXTURESUBIMAGEPROC agx_custom_glad_glGetTextureSubImage;
#define glGetTextureSubImage agx_custom_glad_glGetTextureSubImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRACKMATRIXIVNVPROC agx_custom_glad_glGetTrackMatrixivNV;
#define glGetTrackMatrixivNV agx_custom_glad_glGetTrackMatrixivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGPROC agx_custom_glad_glGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying agx_custom_glad_glGetTransformFeedbackVarying
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC agx_custom_glad_glGetTransformFeedbackVaryingEXT;
#define glGetTransformFeedbackVaryingEXT agx_custom_glad_glGetTransformFeedbackVaryingEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC agx_custom_glad_glGetTransformFeedbackVaryingNV;
#define glGetTransformFeedbackVaryingNV agx_custom_glad_glGetTransformFeedbackVaryingNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKI64_VPROC agx_custom_glad_glGetTransformFeedbacki64_v;
#define glGetTransformFeedbacki64_v agx_custom_glad_glGetTransformFeedbacki64_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKI_VPROC agx_custom_glad_glGetTransformFeedbacki_v;
#define glGetTransformFeedbacki_v agx_custom_glad_glGetTransformFeedbacki_v
AGX_CUSTOM_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKIVPROC agx_custom_glad_glGetTransformFeedbackiv;
#define glGetTransformFeedbackiv agx_custom_glad_glGetTransformFeedbackiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMBLOCKINDEXPROC agx_custom_glad_glGetUniformBlockIndex;
#define glGetUniformBlockIndex agx_custom_glad_glGetUniformBlockIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMBUFFERSIZEEXTPROC agx_custom_glad_glGetUniformBufferSizeEXT;
#define glGetUniformBufferSizeEXT agx_custom_glad_glGetUniformBufferSizeEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMINDICESPROC agx_custom_glad_glGetUniformIndices;
#define glGetUniformIndices agx_custom_glad_glGetUniformIndices
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMLOCATIONPROC agx_custom_glad_glGetUniformLocation;
#define glGetUniformLocation agx_custom_glad_glGetUniformLocation
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMLOCATIONARBPROC agx_custom_glad_glGetUniformLocationARB;
#define glGetUniformLocationARB agx_custom_glad_glGetUniformLocationARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMOFFSETEXTPROC agx_custom_glad_glGetUniformOffsetEXT;
#define glGetUniformOffsetEXT agx_custom_glad_glGetUniformOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMSUBROUTINEUIVPROC agx_custom_glad_glGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv agx_custom_glad_glGetUniformSubroutineuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMDVPROC agx_custom_glad_glGetUniformdv;
#define glGetUniformdv agx_custom_glad_glGetUniformdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMFVPROC agx_custom_glad_glGetUniformfv;
#define glGetUniformfv agx_custom_glad_glGetUniformfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMFVARBPROC agx_custom_glad_glGetUniformfvARB;
#define glGetUniformfvARB agx_custom_glad_glGetUniformfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMI64VARBPROC agx_custom_glad_glGetUniformi64vARB;
#define glGetUniformi64vARB agx_custom_glad_glGetUniformi64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMI64VNVPROC agx_custom_glad_glGetUniformi64vNV;
#define glGetUniformi64vNV agx_custom_glad_glGetUniformi64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMIVPROC agx_custom_glad_glGetUniformiv;
#define glGetUniformiv agx_custom_glad_glGetUniformiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMIVARBPROC agx_custom_glad_glGetUniformivARB;
#define glGetUniformivARB agx_custom_glad_glGetUniformivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMUI64VARBPROC agx_custom_glad_glGetUniformui64vARB;
#define glGetUniformui64vARB agx_custom_glad_glGetUniformui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMUI64VNVPROC agx_custom_glad_glGetUniformui64vNV;
#define glGetUniformui64vNV agx_custom_glad_glGetUniformui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMUIVPROC agx_custom_glad_glGetUniformuiv;
#define glGetUniformuiv agx_custom_glad_glGetUniformuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNIFORMUIVEXTPROC agx_custom_glad_glGetUniformuivEXT;
#define glGetUniformuivEXT agx_custom_glad_glGetUniformuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNSIGNEDBYTEI_VEXTPROC agx_custom_glad_glGetUnsignedBytei_vEXT;
#define glGetUnsignedBytei_vEXT agx_custom_glad_glGetUnsignedBytei_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETUNSIGNEDBYTEVEXTPROC agx_custom_glad_glGetUnsignedBytevEXT;
#define glGetUnsignedBytevEXT agx_custom_glad_glGetUnsignedBytevEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTARRAYOBJECTFVATIPROC agx_custom_glad_glGetVariantArrayObjectfvATI;
#define glGetVariantArrayObjectfvATI agx_custom_glad_glGetVariantArrayObjectfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTARRAYOBJECTIVATIPROC agx_custom_glad_glGetVariantArrayObjectivATI;
#define glGetVariantArrayObjectivATI agx_custom_glad_glGetVariantArrayObjectivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTBOOLEANVEXTPROC agx_custom_glad_glGetVariantBooleanvEXT;
#define glGetVariantBooleanvEXT agx_custom_glad_glGetVariantBooleanvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTFLOATVEXTPROC agx_custom_glad_glGetVariantFloatvEXT;
#define glGetVariantFloatvEXT agx_custom_glad_glGetVariantFloatvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTINTEGERVEXTPROC agx_custom_glad_glGetVariantIntegervEXT;
#define glGetVariantIntegervEXT agx_custom_glad_glGetVariantIntegervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARIANTPOINTERVEXTPROC agx_custom_glad_glGetVariantPointervEXT;
#define glGetVariantPointervEXT agx_custom_glad_glGetVariantPointervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVARYINGLOCATIONNVPROC agx_custom_glad_glGetVaryingLocationNV;
#define glGetVaryingLocationNV agx_custom_glad_glGetVaryingLocationNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYINDEXED64IVPROC agx_custom_glad_glGetVertexArrayIndexed64iv;
#define glGetVertexArrayIndexed64iv agx_custom_glad_glGetVertexArrayIndexed64iv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYINDEXEDIVPROC agx_custom_glad_glGetVertexArrayIndexediv;
#define glGetVertexArrayIndexediv agx_custom_glad_glGetVertexArrayIndexediv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC agx_custom_glad_glGetVertexArrayIntegeri_vEXT;
#define glGetVertexArrayIntegeri_vEXT agx_custom_glad_glGetVertexArrayIntegeri_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYINTEGERVEXTPROC agx_custom_glad_glGetVertexArrayIntegervEXT;
#define glGetVertexArrayIntegervEXT agx_custom_glad_glGetVertexArrayIntegervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC agx_custom_glad_glGetVertexArrayPointeri_vEXT;
#define glGetVertexArrayPointeri_vEXT agx_custom_glad_glGetVertexArrayPointeri_vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYPOINTERVEXTPROC agx_custom_glad_glGetVertexArrayPointervEXT;
#define glGetVertexArrayPointervEXT agx_custom_glad_glGetVertexArrayPointervEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXARRAYIVPROC agx_custom_glad_glGetVertexArrayiv;
#define glGetVertexArrayiv agx_custom_glad_glGetVertexArrayiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC agx_custom_glad_glGetVertexAttribArrayObjectfvATI;
#define glGetVertexAttribArrayObjectfvATI agx_custom_glad_glGetVertexAttribArrayObjectfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC agx_custom_glad_glGetVertexAttribArrayObjectivATI;
#define glGetVertexAttribArrayObjectivATI agx_custom_glad_glGetVertexAttribArrayObjectivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIIVPROC agx_custom_glad_glGetVertexAttribIiv;
#define glGetVertexAttribIiv agx_custom_glad_glGetVertexAttribIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIIVEXTPROC agx_custom_glad_glGetVertexAttribIivEXT;
#define glGetVertexAttribIivEXT agx_custom_glad_glGetVertexAttribIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIUIVPROC agx_custom_glad_glGetVertexAttribIuiv;
#define glGetVertexAttribIuiv agx_custom_glad_glGetVertexAttribIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIUIVEXTPROC agx_custom_glad_glGetVertexAttribIuivEXT;
#define glGetVertexAttribIuivEXT agx_custom_glad_glGetVertexAttribIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBLDVPROC agx_custom_glad_glGetVertexAttribLdv;
#define glGetVertexAttribLdv agx_custom_glad_glGetVertexAttribLdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBLDVEXTPROC agx_custom_glad_glGetVertexAttribLdvEXT;
#define glGetVertexAttribLdvEXT agx_custom_glad_glGetVertexAttribLdvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBLI64VNVPROC agx_custom_glad_glGetVertexAttribLi64vNV;
#define glGetVertexAttribLi64vNV agx_custom_glad_glGetVertexAttribLi64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBLUI64VARBPROC agx_custom_glad_glGetVertexAttribLui64vARB;
#define glGetVertexAttribLui64vARB agx_custom_glad_glGetVertexAttribLui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBLUI64VNVPROC agx_custom_glad_glGetVertexAttribLui64vNV;
#define glGetVertexAttribLui64vNV agx_custom_glad_glGetVertexAttribLui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVPROC agx_custom_glad_glGetVertexAttribPointerv;
#define glGetVertexAttribPointerv agx_custom_glad_glGetVertexAttribPointerv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVARBPROC agx_custom_glad_glGetVertexAttribPointervARB;
#define glGetVertexAttribPointervARB agx_custom_glad_glGetVertexAttribPointervARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVNVPROC agx_custom_glad_glGetVertexAttribPointervNV;
#define glGetVertexAttribPointervNV agx_custom_glad_glGetVertexAttribPointervNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBDVPROC agx_custom_glad_glGetVertexAttribdv;
#define glGetVertexAttribdv agx_custom_glad_glGetVertexAttribdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBDVARBPROC agx_custom_glad_glGetVertexAttribdvARB;
#define glGetVertexAttribdvARB agx_custom_glad_glGetVertexAttribdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBDVNVPROC agx_custom_glad_glGetVertexAttribdvNV;
#define glGetVertexAttribdvNV agx_custom_glad_glGetVertexAttribdvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBFVPROC agx_custom_glad_glGetVertexAttribfv;
#define glGetVertexAttribfv agx_custom_glad_glGetVertexAttribfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBFVARBPROC agx_custom_glad_glGetVertexAttribfvARB;
#define glGetVertexAttribfvARB agx_custom_glad_glGetVertexAttribfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBFVNVPROC agx_custom_glad_glGetVertexAttribfvNV;
#define glGetVertexAttribfvNV agx_custom_glad_glGetVertexAttribfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIVPROC agx_custom_glad_glGetVertexAttribiv;
#define glGetVertexAttribiv agx_custom_glad_glGetVertexAttribiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIVARBPROC agx_custom_glad_glGetVertexAttribivARB;
#define glGetVertexAttribivARB agx_custom_glad_glGetVertexAttribivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVERTEXATTRIBIVNVPROC agx_custom_glad_glGetVertexAttribivNV;
#define glGetVertexAttribivNV agx_custom_glad_glGetVertexAttribivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOCAPTURESTREAMDVNVPROC agx_custom_glad_glGetVideoCaptureStreamdvNV;
#define glGetVideoCaptureStreamdvNV agx_custom_glad_glGetVideoCaptureStreamdvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOCAPTURESTREAMFVNVPROC agx_custom_glad_glGetVideoCaptureStreamfvNV;
#define glGetVideoCaptureStreamfvNV agx_custom_glad_glGetVideoCaptureStreamfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOCAPTURESTREAMIVNVPROC agx_custom_glad_glGetVideoCaptureStreamivNV;
#define glGetVideoCaptureStreamivNV agx_custom_glad_glGetVideoCaptureStreamivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOCAPTUREIVNVPROC agx_custom_glad_glGetVideoCaptureivNV;
#define glGetVideoCaptureivNV agx_custom_glad_glGetVideoCaptureivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOI64VNVPROC agx_custom_glad_glGetVideoi64vNV;
#define glGetVideoi64vNV agx_custom_glad_glGetVideoi64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOIVNVPROC agx_custom_glad_glGetVideoivNV;
#define glGetVideoivNV agx_custom_glad_glGetVideoivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOUI64VNVPROC agx_custom_glad_glGetVideoui64vNV;
#define glGetVideoui64vNV agx_custom_glad_glGetVideoui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVIDEOUIVNVPROC agx_custom_glad_glGetVideouivNV;
#define glGetVideouivNV agx_custom_glad_glGetVideouivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETVKPROCADDRNVPROC agx_custom_glad_glGetVkProcAddrNV;
#define glGetVkProcAddrNV agx_custom_glad_glGetVkProcAddrNV
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCOLORTABLEPROC agx_custom_glad_glGetnColorTable;
#define glGetnColorTable agx_custom_glad_glGetnColorTable
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCOLORTABLEARBPROC agx_custom_glad_glGetnColorTableARB;
#define glGetnColorTableARB agx_custom_glad_glGetnColorTableARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCOMPRESSEDTEXIMAGEPROC agx_custom_glad_glGetnCompressedTexImage;
#define glGetnCompressedTexImage agx_custom_glad_glGetnCompressedTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC agx_custom_glad_glGetnCompressedTexImageARB;
#define glGetnCompressedTexImageARB agx_custom_glad_glGetnCompressedTexImageARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCONVOLUTIONFILTERPROC agx_custom_glad_glGetnConvolutionFilter;
#define glGetnConvolutionFilter agx_custom_glad_glGetnConvolutionFilter
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNCONVOLUTIONFILTERARBPROC agx_custom_glad_glGetnConvolutionFilterARB;
#define glGetnConvolutionFilterARB agx_custom_glad_glGetnConvolutionFilterARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNHISTOGRAMPROC agx_custom_glad_glGetnHistogram;
#define glGetnHistogram agx_custom_glad_glGetnHistogram
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNHISTOGRAMARBPROC agx_custom_glad_glGetnHistogramARB;
#define glGetnHistogramARB agx_custom_glad_glGetnHistogramARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPDVPROC agx_custom_glad_glGetnMapdv;
#define glGetnMapdv agx_custom_glad_glGetnMapdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPDVARBPROC agx_custom_glad_glGetnMapdvARB;
#define glGetnMapdvARB agx_custom_glad_glGetnMapdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPFVPROC agx_custom_glad_glGetnMapfv;
#define glGetnMapfv agx_custom_glad_glGetnMapfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPFVARBPROC agx_custom_glad_glGetnMapfvARB;
#define glGetnMapfvARB agx_custom_glad_glGetnMapfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPIVPROC agx_custom_glad_glGetnMapiv;
#define glGetnMapiv agx_custom_glad_glGetnMapiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMAPIVARBPROC agx_custom_glad_glGetnMapivARB;
#define glGetnMapivARB agx_custom_glad_glGetnMapivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMINMAXPROC agx_custom_glad_glGetnMinmax;
#define glGetnMinmax agx_custom_glad_glGetnMinmax
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNMINMAXARBPROC agx_custom_glad_glGetnMinmaxARB;
#define glGetnMinmaxARB agx_custom_glad_glGetnMinmaxARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPFVPROC agx_custom_glad_glGetnPixelMapfv;
#define glGetnPixelMapfv agx_custom_glad_glGetnPixelMapfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPFVARBPROC agx_custom_glad_glGetnPixelMapfvARB;
#define glGetnPixelMapfvARB agx_custom_glad_glGetnPixelMapfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPUIVPROC agx_custom_glad_glGetnPixelMapuiv;
#define glGetnPixelMapuiv agx_custom_glad_glGetnPixelMapuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPUIVARBPROC agx_custom_glad_glGetnPixelMapuivARB;
#define glGetnPixelMapuivARB agx_custom_glad_glGetnPixelMapuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPUSVPROC agx_custom_glad_glGetnPixelMapusv;
#define glGetnPixelMapusv agx_custom_glad_glGetnPixelMapusv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPIXELMAPUSVARBPROC agx_custom_glad_glGetnPixelMapusvARB;
#define glGetnPixelMapusvARB agx_custom_glad_glGetnPixelMapusvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPOLYGONSTIPPLEPROC agx_custom_glad_glGetnPolygonStipple;
#define glGetnPolygonStipple agx_custom_glad_glGetnPolygonStipple
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNPOLYGONSTIPPLEARBPROC agx_custom_glad_glGetnPolygonStippleARB;
#define glGetnPolygonStippleARB agx_custom_glad_glGetnPolygonStippleARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNSEPARABLEFILTERPROC agx_custom_glad_glGetnSeparableFilter;
#define glGetnSeparableFilter agx_custom_glad_glGetnSeparableFilter
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNSEPARABLEFILTERARBPROC agx_custom_glad_glGetnSeparableFilterARB;
#define glGetnSeparableFilterARB agx_custom_glad_glGetnSeparableFilterARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNTEXIMAGEPROC agx_custom_glad_glGetnTexImage;
#define glGetnTexImage agx_custom_glad_glGetnTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNTEXIMAGEARBPROC agx_custom_glad_glGetnTexImageARB;
#define glGetnTexImageARB agx_custom_glad_glGetnTexImageARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMDVPROC agx_custom_glad_glGetnUniformdv;
#define glGetnUniformdv agx_custom_glad_glGetnUniformdv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMDVARBPROC agx_custom_glad_glGetnUniformdvARB;
#define glGetnUniformdvARB agx_custom_glad_glGetnUniformdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMFVPROC agx_custom_glad_glGetnUniformfv;
#define glGetnUniformfv agx_custom_glad_glGetnUniformfv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMFVARBPROC agx_custom_glad_glGetnUniformfvARB;
#define glGetnUniformfvARB agx_custom_glad_glGetnUniformfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMI64VARBPROC agx_custom_glad_glGetnUniformi64vARB;
#define glGetnUniformi64vARB agx_custom_glad_glGetnUniformi64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMIVPROC agx_custom_glad_glGetnUniformiv;
#define glGetnUniformiv agx_custom_glad_glGetnUniformiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMIVARBPROC agx_custom_glad_glGetnUniformivARB;
#define glGetnUniformivARB agx_custom_glad_glGetnUniformivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMUI64VARBPROC agx_custom_glad_glGetnUniformui64vARB;
#define glGetnUniformui64vARB agx_custom_glad_glGetnUniformui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMUIVPROC agx_custom_glad_glGetnUniformuiv;
#define glGetnUniformuiv agx_custom_glad_glGetnUniformuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLGETNUNIFORMUIVARBPROC agx_custom_glad_glGetnUniformuivARB;
#define glGetnUniformuivARB agx_custom_glad_glGetnUniformuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORBSUNPROC agx_custom_glad_glGlobalAlphaFactorbSUN;
#define glGlobalAlphaFactorbSUN agx_custom_glad_glGlobalAlphaFactorbSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORDSUNPROC agx_custom_glad_glGlobalAlphaFactordSUN;
#define glGlobalAlphaFactordSUN agx_custom_glad_glGlobalAlphaFactordSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORFSUNPROC agx_custom_glad_glGlobalAlphaFactorfSUN;
#define glGlobalAlphaFactorfSUN agx_custom_glad_glGlobalAlphaFactorfSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORISUNPROC agx_custom_glad_glGlobalAlphaFactoriSUN;
#define glGlobalAlphaFactoriSUN agx_custom_glad_glGlobalAlphaFactoriSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORSSUNPROC agx_custom_glad_glGlobalAlphaFactorsSUN;
#define glGlobalAlphaFactorsSUN agx_custom_glad_glGlobalAlphaFactorsSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORUBSUNPROC agx_custom_glad_glGlobalAlphaFactorubSUN;
#define glGlobalAlphaFactorubSUN agx_custom_glad_glGlobalAlphaFactorubSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORUISUNPROC agx_custom_glad_glGlobalAlphaFactoruiSUN;
#define glGlobalAlphaFactoruiSUN agx_custom_glad_glGlobalAlphaFactoruiSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLGLOBALALPHAFACTORUSSUNPROC agx_custom_glad_glGlobalAlphaFactorusSUN;
#define glGlobalAlphaFactorusSUN agx_custom_glad_glGlobalAlphaFactorusSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLHINTPROC agx_custom_glad_glHint;
#define glHint agx_custom_glad_glHint
AGX_CUSTOM_GLAD_API_CALL PFNGLHINTPGIPROC agx_custom_glad_glHintPGI;
#define glHintPGI agx_custom_glad_glHintPGI
AGX_CUSTOM_GLAD_API_CALL PFNGLHISTOGRAMPROC agx_custom_glad_glHistogram;
#define glHistogram agx_custom_glad_glHistogram
AGX_CUSTOM_GLAD_API_CALL PFNGLHISTOGRAMEXTPROC agx_custom_glad_glHistogramEXT;
#define glHistogramEXT agx_custom_glad_glHistogramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIGLOOINTERFACESGIXPROC agx_custom_glad_glIglooInterfaceSGIX;
#define glIglooInterfaceSGIX agx_custom_glad_glIglooInterfaceSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLIMAGETRANSFORMPARAMETERFHPPROC agx_custom_glad_glImageTransformParameterfHP;
#define glImageTransformParameterfHP agx_custom_glad_glImageTransformParameterfHP
AGX_CUSTOM_GLAD_API_CALL PFNGLIMAGETRANSFORMPARAMETERFVHPPROC agx_custom_glad_glImageTransformParameterfvHP;
#define glImageTransformParameterfvHP agx_custom_glad_glImageTransformParameterfvHP
AGX_CUSTOM_GLAD_API_CALL PFNGLIMAGETRANSFORMPARAMETERIHPPROC agx_custom_glad_glImageTransformParameteriHP;
#define glImageTransformParameteriHP agx_custom_glad_glImageTransformParameteriHP
AGX_CUSTOM_GLAD_API_CALL PFNGLIMAGETRANSFORMPARAMETERIVHPPROC agx_custom_glad_glImageTransformParameterivHP;
#define glImageTransformParameterivHP agx_custom_glad_glImageTransformParameterivHP
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTMEMORYFDEXTPROC agx_custom_glad_glImportMemoryFdEXT;
#define glImportMemoryFdEXT agx_custom_glad_glImportMemoryFdEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC agx_custom_glad_glImportMemoryWin32HandleEXT;
#define glImportMemoryWin32HandleEXT agx_custom_glad_glImportMemoryWin32HandleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTMEMORYWIN32NAMEEXTPROC agx_custom_glad_glImportMemoryWin32NameEXT;
#define glImportMemoryWin32NameEXT agx_custom_glad_glImportMemoryWin32NameEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTSEMAPHOREFDEXTPROC agx_custom_glad_glImportSemaphoreFdEXT;
#define glImportSemaphoreFdEXT agx_custom_glad_glImportSemaphoreFdEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC agx_custom_glad_glImportSemaphoreWin32HandleEXT;
#define glImportSemaphoreWin32HandleEXT agx_custom_glad_glImportSemaphoreWin32HandleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC agx_custom_glad_glImportSemaphoreWin32NameEXT;
#define glImportSemaphoreWin32NameEXT agx_custom_glad_glImportSemaphoreWin32NameEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLIMPORTSYNCEXTPROC agx_custom_glad_glImportSyncEXT;
#define glImportSyncEXT agx_custom_glad_glImportSyncEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXFORMATNVPROC agx_custom_glad_glIndexFormatNV;
#define glIndexFormatNV agx_custom_glad_glIndexFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXFUNCEXTPROC agx_custom_glad_glIndexFuncEXT;
#define glIndexFuncEXT agx_custom_glad_glIndexFuncEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXMASKPROC agx_custom_glad_glIndexMask;
#define glIndexMask agx_custom_glad_glIndexMask
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXMATERIALEXTPROC agx_custom_glad_glIndexMaterialEXT;
#define glIndexMaterialEXT agx_custom_glad_glIndexMaterialEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXPOINTERPROC agx_custom_glad_glIndexPointer;
#define glIndexPointer agx_custom_glad_glIndexPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXPOINTEREXTPROC agx_custom_glad_glIndexPointerEXT;
#define glIndexPointerEXT agx_custom_glad_glIndexPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXPOINTERLISTIBMPROC agx_custom_glad_glIndexPointerListIBM;
#define glIndexPointerListIBM agx_custom_glad_glIndexPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXDPROC agx_custom_glad_glIndexd;
#define glIndexd agx_custom_glad_glIndexd
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXDVPROC agx_custom_glad_glIndexdv;
#define glIndexdv agx_custom_glad_glIndexdv
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXFPROC agx_custom_glad_glIndexf;
#define glIndexf agx_custom_glad_glIndexf
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXFVPROC agx_custom_glad_glIndexfv;
#define glIndexfv agx_custom_glad_glIndexfv
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXIPROC agx_custom_glad_glIndexi;
#define glIndexi agx_custom_glad_glIndexi
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXIVPROC agx_custom_glad_glIndexiv;
#define glIndexiv agx_custom_glad_glIndexiv
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXSPROC agx_custom_glad_glIndexs;
#define glIndexs agx_custom_glad_glIndexs
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXSVPROC agx_custom_glad_glIndexsv;
#define glIndexsv agx_custom_glad_glIndexsv
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXUBPROC agx_custom_glad_glIndexub;
#define glIndexub agx_custom_glad_glIndexub
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXUBVPROC agx_custom_glad_glIndexubv;
#define glIndexubv agx_custom_glad_glIndexubv
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXXOESPROC agx_custom_glad_glIndexxOES;
#define glIndexxOES agx_custom_glad_glIndexxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLINDEXXVOESPROC agx_custom_glad_glIndexxvOES;
#define glIndexxvOES agx_custom_glad_glIndexxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLINITNAMESPROC agx_custom_glad_glInitNames;
#define glInitNames agx_custom_glad_glInitNames
AGX_CUSTOM_GLAD_API_CALL PFNGLINSERTCOMPONENTEXTPROC agx_custom_glad_glInsertComponentEXT;
#define glInsertComponentEXT agx_custom_glad_glInsertComponentEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINSERTEVENTMARKEREXTPROC agx_custom_glad_glInsertEventMarkerEXT;
#define glInsertEventMarkerEXT agx_custom_glad_glInsertEventMarkerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLINSTRUMENTSBUFFERSGIXPROC agx_custom_glad_glInstrumentsBufferSGIX;
#define glInstrumentsBufferSGIX agx_custom_glad_glInstrumentsBufferSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLINTERLEAVEDARRAYSPROC agx_custom_glad_glInterleavedArrays;
#define glInterleavedArrays agx_custom_glad_glInterleavedArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLINTERPOLATEPATHSNVPROC agx_custom_glad_glInterpolatePathsNV;
#define glInterpolatePathsNV agx_custom_glad_glInterpolatePathsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATEBUFFERDATAPROC agx_custom_glad_glInvalidateBufferData;
#define glInvalidateBufferData agx_custom_glad_glInvalidateBufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATEBUFFERSUBDATAPROC agx_custom_glad_glInvalidateBufferSubData;
#define glInvalidateBufferSubData agx_custom_glad_glInvalidateBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATEFRAMEBUFFERPROC agx_custom_glad_glInvalidateFramebuffer;
#define glInvalidateFramebuffer agx_custom_glad_glInvalidateFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC agx_custom_glad_glInvalidateNamedFramebufferData;
#define glInvalidateNamedFramebufferData agx_custom_glad_glInvalidateNamedFramebufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC agx_custom_glad_glInvalidateNamedFramebufferSubData;
#define glInvalidateNamedFramebufferSubData agx_custom_glad_glInvalidateNamedFramebufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATESUBFRAMEBUFFERPROC agx_custom_glad_glInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer agx_custom_glad_glInvalidateSubFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATETEXIMAGEPROC agx_custom_glad_glInvalidateTexImage;
#define glInvalidateTexImage agx_custom_glad_glInvalidateTexImage
AGX_CUSTOM_GLAD_API_CALL PFNGLINVALIDATETEXSUBIMAGEPROC agx_custom_glad_glInvalidateTexSubImage;
#define glInvalidateTexSubImage agx_custom_glad_glInvalidateTexSubImage
AGX_CUSTOM_GLAD_API_CALL PFNGLISASYNCMARKERSGIXPROC agx_custom_glad_glIsAsyncMarkerSGIX;
#define glIsAsyncMarkerSGIX agx_custom_glad_glIsAsyncMarkerSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLISBUFFERPROC agx_custom_glad_glIsBuffer;
#define glIsBuffer agx_custom_glad_glIsBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLISBUFFERARBPROC agx_custom_glad_glIsBufferARB;
#define glIsBufferARB agx_custom_glad_glIsBufferARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISBUFFERRESIDENTNVPROC agx_custom_glad_glIsBufferResidentNV;
#define glIsBufferResidentNV agx_custom_glad_glIsBufferResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISCOMMANDLISTNVPROC agx_custom_glad_glIsCommandListNV;
#define glIsCommandListNV agx_custom_glad_glIsCommandListNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISENABLEDPROC agx_custom_glad_glIsEnabled;
#define glIsEnabled agx_custom_glad_glIsEnabled
AGX_CUSTOM_GLAD_API_CALL PFNGLISENABLEDINDEXEDEXTPROC agx_custom_glad_glIsEnabledIndexedEXT;
#define glIsEnabledIndexedEXT agx_custom_glad_glIsEnabledIndexedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISENABLEDIPROC agx_custom_glad_glIsEnabledi;
#define glIsEnabledi agx_custom_glad_glIsEnabledi
AGX_CUSTOM_GLAD_API_CALL PFNGLISFENCEAPPLEPROC agx_custom_glad_glIsFenceAPPLE;
#define glIsFenceAPPLE agx_custom_glad_glIsFenceAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLISFENCENVPROC agx_custom_glad_glIsFenceNV;
#define glIsFenceNV agx_custom_glad_glIsFenceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISFRAMEBUFFERPROC agx_custom_glad_glIsFramebuffer;
#define glIsFramebuffer agx_custom_glad_glIsFramebuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLISFRAMEBUFFEREXTPROC agx_custom_glad_glIsFramebufferEXT;
#define glIsFramebufferEXT agx_custom_glad_glIsFramebufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISIMAGEHANDLERESIDENTARBPROC agx_custom_glad_glIsImageHandleResidentARB;
#define glIsImageHandleResidentARB agx_custom_glad_glIsImageHandleResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISIMAGEHANDLERESIDENTNVPROC agx_custom_glad_glIsImageHandleResidentNV;
#define glIsImageHandleResidentNV agx_custom_glad_glIsImageHandleResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISLISTPROC agx_custom_glad_glIsList;
#define glIsList agx_custom_glad_glIsList
AGX_CUSTOM_GLAD_API_CALL PFNGLISMEMORYOBJECTEXTPROC agx_custom_glad_glIsMemoryObjectEXT;
#define glIsMemoryObjectEXT agx_custom_glad_glIsMemoryObjectEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISNAMEAMDPROC agx_custom_glad_glIsNameAMD;
#define glIsNameAMD agx_custom_glad_glIsNameAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLISNAMEDBUFFERRESIDENTNVPROC agx_custom_glad_glIsNamedBufferResidentNV;
#define glIsNamedBufferResidentNV agx_custom_glad_glIsNamedBufferResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISNAMEDSTRINGARBPROC agx_custom_glad_glIsNamedStringARB;
#define glIsNamedStringARB agx_custom_glad_glIsNamedStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISOBJECTBUFFERATIPROC agx_custom_glad_glIsObjectBufferATI;
#define glIsObjectBufferATI agx_custom_glad_glIsObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLISOCCLUSIONQUERYNVPROC agx_custom_glad_glIsOcclusionQueryNV;
#define glIsOcclusionQueryNV agx_custom_glad_glIsOcclusionQueryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISPATHNVPROC agx_custom_glad_glIsPathNV;
#define glIsPathNV agx_custom_glad_glIsPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISPOINTINFILLPATHNVPROC agx_custom_glad_glIsPointInFillPathNV;
#define glIsPointInFillPathNV agx_custom_glad_glIsPointInFillPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISPOINTINSTROKEPATHNVPROC agx_custom_glad_glIsPointInStrokePathNV;
#define glIsPointInStrokePathNV agx_custom_glad_glIsPointInStrokePathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISPROGRAMPROC agx_custom_glad_glIsProgram;
#define glIsProgram agx_custom_glad_glIsProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLISPROGRAMARBPROC agx_custom_glad_glIsProgramARB;
#define glIsProgramARB agx_custom_glad_glIsProgramARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISPROGRAMNVPROC agx_custom_glad_glIsProgramNV;
#define glIsProgramNV agx_custom_glad_glIsProgramNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISPROGRAMPIPELINEPROC agx_custom_glad_glIsProgramPipeline;
#define glIsProgramPipeline agx_custom_glad_glIsProgramPipeline
AGX_CUSTOM_GLAD_API_CALL PFNGLISQUERYPROC agx_custom_glad_glIsQuery;
#define glIsQuery agx_custom_glad_glIsQuery
AGX_CUSTOM_GLAD_API_CALL PFNGLISQUERYARBPROC agx_custom_glad_glIsQueryARB;
#define glIsQueryARB agx_custom_glad_glIsQueryARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISRENDERBUFFERPROC agx_custom_glad_glIsRenderbuffer;
#define glIsRenderbuffer agx_custom_glad_glIsRenderbuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLISRENDERBUFFEREXTPROC agx_custom_glad_glIsRenderbufferEXT;
#define glIsRenderbufferEXT agx_custom_glad_glIsRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISSAMPLERPROC agx_custom_glad_glIsSampler;
#define glIsSampler agx_custom_glad_glIsSampler
AGX_CUSTOM_GLAD_API_CALL PFNGLISSEMAPHOREEXTPROC agx_custom_glad_glIsSemaphoreEXT;
#define glIsSemaphoreEXT agx_custom_glad_glIsSemaphoreEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISSHADERPROC agx_custom_glad_glIsShader;
#define glIsShader agx_custom_glad_glIsShader
AGX_CUSTOM_GLAD_API_CALL PFNGLISSTATENVPROC agx_custom_glad_glIsStateNV;
#define glIsStateNV agx_custom_glad_glIsStateNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISSYNCPROC agx_custom_glad_glIsSync;
#define glIsSync agx_custom_glad_glIsSync
AGX_CUSTOM_GLAD_API_CALL PFNGLISTEXTUREPROC agx_custom_glad_glIsTexture;
#define glIsTexture agx_custom_glad_glIsTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLISTEXTUREEXTPROC agx_custom_glad_glIsTextureEXT;
#define glIsTextureEXT agx_custom_glad_glIsTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISTEXTUREHANDLERESIDENTARBPROC agx_custom_glad_glIsTextureHandleResidentARB;
#define glIsTextureHandleResidentARB agx_custom_glad_glIsTextureHandleResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLISTEXTUREHANDLERESIDENTNVPROC agx_custom_glad_glIsTextureHandleResidentNV;
#define glIsTextureHandleResidentNV agx_custom_glad_glIsTextureHandleResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISTRANSFORMFEEDBACKPROC agx_custom_glad_glIsTransformFeedback;
#define glIsTransformFeedback agx_custom_glad_glIsTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLISTRANSFORMFEEDBACKNVPROC agx_custom_glad_glIsTransformFeedbackNV;
#define glIsTransformFeedbackNV agx_custom_glad_glIsTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLISVARIANTENABLEDEXTPROC agx_custom_glad_glIsVariantEnabledEXT;
#define glIsVariantEnabledEXT agx_custom_glad_glIsVariantEnabledEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLISVERTEXARRAYPROC agx_custom_glad_glIsVertexArray;
#define glIsVertexArray agx_custom_glad_glIsVertexArray
AGX_CUSTOM_GLAD_API_CALL PFNGLISVERTEXARRAYAPPLEPROC agx_custom_glad_glIsVertexArrayAPPLE;
#define glIsVertexArrayAPPLE agx_custom_glad_glIsVertexArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLISVERTEXATTRIBENABLEDAPPLEPROC agx_custom_glad_glIsVertexAttribEnabledAPPLE;
#define glIsVertexAttribEnabledAPPLE agx_custom_glad_glIsVertexAttribEnabledAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLLGPUCOPYIMAGESUBDATANVXPROC agx_custom_glad_glLGPUCopyImageSubDataNVX;
#define glLGPUCopyImageSubDataNVX agx_custom_glad_glLGPUCopyImageSubDataNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLLGPUINTERLOCKNVXPROC agx_custom_glad_glLGPUInterlockNVX;
#define glLGPUInterlockNVX agx_custom_glad_glLGPUInterlockNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC agx_custom_glad_glLGPUNamedBufferSubDataNVX;
#define glLGPUNamedBufferSubDataNVX agx_custom_glad_glLGPUNamedBufferSubDataNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLLABELOBJECTEXTPROC agx_custom_glad_glLabelObjectEXT;
#define glLabelObjectEXT agx_custom_glad_glLabelObjectEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTENVISGIXPROC agx_custom_glad_glLightEnviSGIX;
#define glLightEnviSGIX agx_custom_glad_glLightEnviSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELFPROC agx_custom_glad_glLightModelf;
#define glLightModelf agx_custom_glad_glLightModelf
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELFVPROC agx_custom_glad_glLightModelfv;
#define glLightModelfv agx_custom_glad_glLightModelfv
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELIPROC agx_custom_glad_glLightModeli;
#define glLightModeli agx_custom_glad_glLightModeli
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELIVPROC agx_custom_glad_glLightModeliv;
#define glLightModeliv agx_custom_glad_glLightModeliv
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELXOESPROC agx_custom_glad_glLightModelxOES;
#define glLightModelxOES agx_custom_glad_glLightModelxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTMODELXVOESPROC agx_custom_glad_glLightModelxvOES;
#define glLightModelxvOES agx_custom_glad_glLightModelxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTFPROC agx_custom_glad_glLightf;
#define glLightf agx_custom_glad_glLightf
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTFVPROC agx_custom_glad_glLightfv;
#define glLightfv agx_custom_glad_glLightfv
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTIPROC agx_custom_glad_glLighti;
#define glLighti agx_custom_glad_glLighti
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTIVPROC agx_custom_glad_glLightiv;
#define glLightiv agx_custom_glad_glLightiv
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTXOESPROC agx_custom_glad_glLightxOES;
#define glLightxOES agx_custom_glad_glLightxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLIGHTXVOESPROC agx_custom_glad_glLightxvOES;
#define glLightxvOES agx_custom_glad_glLightxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLINESTIPPLEPROC agx_custom_glad_glLineStipple;
#define glLineStipple agx_custom_glad_glLineStipple
AGX_CUSTOM_GLAD_API_CALL PFNGLLINEWIDTHPROC agx_custom_glad_glLineWidth;
#define glLineWidth agx_custom_glad_glLineWidth
AGX_CUSTOM_GLAD_API_CALL PFNGLLINEWIDTHXOESPROC agx_custom_glad_glLineWidthxOES;
#define glLineWidthxOES agx_custom_glad_glLineWidthxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLINKPROGRAMPROC agx_custom_glad_glLinkProgram;
#define glLinkProgram agx_custom_glad_glLinkProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLLINKPROGRAMARBPROC agx_custom_glad_glLinkProgramARB;
#define glLinkProgramARB agx_custom_glad_glLinkProgramARB
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTBASEPROC agx_custom_glad_glListBase;
#define glListBase agx_custom_glad_glListBase
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC agx_custom_glad_glListDrawCommandsStatesClientNV;
#define glListDrawCommandsStatesClientNV agx_custom_glad_glListDrawCommandsStatesClientNV
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTPARAMETERFSGIXPROC agx_custom_glad_glListParameterfSGIX;
#define glListParameterfSGIX agx_custom_glad_glListParameterfSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTPARAMETERFVSGIXPROC agx_custom_glad_glListParameterfvSGIX;
#define glListParameterfvSGIX agx_custom_glad_glListParameterfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTPARAMETERISGIXPROC agx_custom_glad_glListParameteriSGIX;
#define glListParameteriSGIX agx_custom_glad_glListParameteriSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLISTPARAMETERIVSGIXPROC agx_custom_glad_glListParameterivSGIX;
#define glListParameterivSGIX agx_custom_glad_glListParameterivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADIDENTITYPROC agx_custom_glad_glLoadIdentity;
#define glLoadIdentity agx_custom_glad_glLoadIdentity
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC agx_custom_glad_glLoadIdentityDeformationMapSGIX;
#define glLoadIdentityDeformationMapSGIX agx_custom_glad_glLoadIdentityDeformationMapSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADMATRIXDPROC agx_custom_glad_glLoadMatrixd;
#define glLoadMatrixd agx_custom_glad_glLoadMatrixd
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADMATRIXFPROC agx_custom_glad_glLoadMatrixf;
#define glLoadMatrixf agx_custom_glad_glLoadMatrixf
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADMATRIXXOESPROC agx_custom_glad_glLoadMatrixxOES;
#define glLoadMatrixxOES agx_custom_glad_glLoadMatrixxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADNAMEPROC agx_custom_glad_glLoadName;
#define glLoadName agx_custom_glad_glLoadName
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADPROGRAMNVPROC agx_custom_glad_glLoadProgramNV;
#define glLoadProgramNV agx_custom_glad_glLoadProgramNV
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXDPROC agx_custom_glad_glLoadTransposeMatrixd;
#define glLoadTransposeMatrixd agx_custom_glad_glLoadTransposeMatrixd
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXDARBPROC agx_custom_glad_glLoadTransposeMatrixdARB;
#define glLoadTransposeMatrixdARB agx_custom_glad_glLoadTransposeMatrixdARB
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXFPROC agx_custom_glad_glLoadTransposeMatrixf;
#define glLoadTransposeMatrixf agx_custom_glad_glLoadTransposeMatrixf
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXFARBPROC agx_custom_glad_glLoadTransposeMatrixfARB;
#define glLoadTransposeMatrixfARB agx_custom_glad_glLoadTransposeMatrixfARB
AGX_CUSTOM_GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXXOESPROC agx_custom_glad_glLoadTransposeMatrixxOES;
#define glLoadTransposeMatrixxOES agx_custom_glad_glLoadTransposeMatrixxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLLOCKARRAYSEXTPROC agx_custom_glad_glLockArraysEXT;
#define glLockArraysEXT agx_custom_glad_glLockArraysEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLLOGICOPPROC agx_custom_glad_glLogicOp;
#define glLogicOp agx_custom_glad_glLogicOp
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEBUFFERNONRESIDENTNVPROC agx_custom_glad_glMakeBufferNonResidentNV;
#define glMakeBufferNonResidentNV agx_custom_glad_glMakeBufferNonResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEBUFFERRESIDENTNVPROC agx_custom_glad_glMakeBufferResidentNV;
#define glMakeBufferResidentNV agx_custom_glad_glMakeBufferResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC agx_custom_glad_glMakeImageHandleNonResidentARB;
#define glMakeImageHandleNonResidentARB agx_custom_glad_glMakeImageHandleNonResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC agx_custom_glad_glMakeImageHandleNonResidentNV;
#define glMakeImageHandleNonResidentNV agx_custom_glad_glMakeImageHandleNonResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEIMAGEHANDLERESIDENTARBPROC agx_custom_glad_glMakeImageHandleResidentARB;
#define glMakeImageHandleResidentARB agx_custom_glad_glMakeImageHandleResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKEIMAGEHANDLERESIDENTNVPROC agx_custom_glad_glMakeImageHandleResidentNV;
#define glMakeImageHandleResidentNV agx_custom_glad_glMakeImageHandleResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC agx_custom_glad_glMakeNamedBufferNonResidentNV;
#define glMakeNamedBufferNonResidentNV agx_custom_glad_glMakeNamedBufferNonResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKENAMEDBUFFERRESIDENTNVPROC agx_custom_glad_glMakeNamedBufferResidentNV;
#define glMakeNamedBufferResidentNV agx_custom_glad_glMakeNamedBufferResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC agx_custom_glad_glMakeTextureHandleNonResidentARB;
#define glMakeTextureHandleNonResidentARB agx_custom_glad_glMakeTextureHandleNonResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC agx_custom_glad_glMakeTextureHandleNonResidentNV;
#define glMakeTextureHandleNonResidentNV agx_custom_glad_glMakeTextureHandleNonResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKETEXTUREHANDLERESIDENTARBPROC agx_custom_glad_glMakeTextureHandleResidentARB;
#define glMakeTextureHandleResidentARB agx_custom_glad_glMakeTextureHandleResidentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAKETEXTUREHANDLERESIDENTNVPROC agx_custom_glad_glMakeTextureHandleResidentNV;
#define glMakeTextureHandleResidentNV agx_custom_glad_glMakeTextureHandleResidentNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP1DPROC agx_custom_glad_glMap1d;
#define glMap1d agx_custom_glad_glMap1d
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP1FPROC agx_custom_glad_glMap1f;
#define glMap1f agx_custom_glad_glMap1f
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP1XOESPROC agx_custom_glad_glMap1xOES;
#define glMap1xOES agx_custom_glad_glMap1xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP2DPROC agx_custom_glad_glMap2d;
#define glMap2d agx_custom_glad_glMap2d
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP2FPROC agx_custom_glad_glMap2f;
#define glMap2f agx_custom_glad_glMap2f
AGX_CUSTOM_GLAD_API_CALL PFNGLMAP2XOESPROC agx_custom_glad_glMap2xOES;
#define glMap2xOES agx_custom_glad_glMap2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPBUFFERPROC agx_custom_glad_glMapBuffer;
#define glMapBuffer agx_custom_glad_glMapBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPBUFFERARBPROC agx_custom_glad_glMapBufferARB;
#define glMapBufferARB agx_custom_glad_glMapBufferARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPBUFFERRANGEPROC agx_custom_glad_glMapBufferRange;
#define glMapBufferRange agx_custom_glad_glMapBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPCONTROLPOINTSNVPROC agx_custom_glad_glMapControlPointsNV;
#define glMapControlPointsNV agx_custom_glad_glMapControlPointsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID1DPROC agx_custom_glad_glMapGrid1d;
#define glMapGrid1d agx_custom_glad_glMapGrid1d
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID1FPROC agx_custom_glad_glMapGrid1f;
#define glMapGrid1f agx_custom_glad_glMapGrid1f
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID1XOESPROC agx_custom_glad_glMapGrid1xOES;
#define glMapGrid1xOES agx_custom_glad_glMapGrid1xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID2DPROC agx_custom_glad_glMapGrid2d;
#define glMapGrid2d agx_custom_glad_glMapGrid2d
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID2FPROC agx_custom_glad_glMapGrid2f;
#define glMapGrid2f agx_custom_glad_glMapGrid2f
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPGRID2XOESPROC agx_custom_glad_glMapGrid2xOES;
#define glMapGrid2xOES agx_custom_glad_glMapGrid2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPNAMEDBUFFERPROC agx_custom_glad_glMapNamedBuffer;
#define glMapNamedBuffer agx_custom_glad_glMapNamedBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPNAMEDBUFFEREXTPROC agx_custom_glad_glMapNamedBufferEXT;
#define glMapNamedBufferEXT agx_custom_glad_glMapNamedBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPNAMEDBUFFERRANGEPROC agx_custom_glad_glMapNamedBufferRange;
#define glMapNamedBufferRange agx_custom_glad_glMapNamedBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPNAMEDBUFFERRANGEEXTPROC agx_custom_glad_glMapNamedBufferRangeEXT;
#define glMapNamedBufferRangeEXT agx_custom_glad_glMapNamedBufferRangeEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPOBJECTBUFFERATIPROC agx_custom_glad_glMapObjectBufferATI;
#define glMapObjectBufferATI agx_custom_glad_glMapObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPPARAMETERFVNVPROC agx_custom_glad_glMapParameterfvNV;
#define glMapParameterfvNV agx_custom_glad_glMapParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPPARAMETERIVNVPROC agx_custom_glad_glMapParameterivNV;
#define glMapParameterivNV agx_custom_glad_glMapParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPTEXTURE2DINTELPROC agx_custom_glad_glMapTexture2DINTEL;
#define glMapTexture2DINTEL agx_custom_glad_glMapTexture2DINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPVERTEXATTRIB1DAPPLEPROC agx_custom_glad_glMapVertexAttrib1dAPPLE;
#define glMapVertexAttrib1dAPPLE agx_custom_glad_glMapVertexAttrib1dAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPVERTEXATTRIB1FAPPLEPROC agx_custom_glad_glMapVertexAttrib1fAPPLE;
#define glMapVertexAttrib1fAPPLE agx_custom_glad_glMapVertexAttrib1fAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPVERTEXATTRIB2DAPPLEPROC agx_custom_glad_glMapVertexAttrib2dAPPLE;
#define glMapVertexAttrib2dAPPLE agx_custom_glad_glMapVertexAttrib2dAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMAPVERTEXATTRIB2FAPPLEPROC agx_custom_glad_glMapVertexAttrib2fAPPLE;
#define glMapVertexAttrib2fAPPLE agx_custom_glad_glMapVertexAttrib2fAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALFPROC agx_custom_glad_glMaterialf;
#define glMaterialf agx_custom_glad_glMaterialf
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALFVPROC agx_custom_glad_glMaterialfv;
#define glMaterialfv agx_custom_glad_glMaterialfv
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALIPROC agx_custom_glad_glMateriali;
#define glMateriali agx_custom_glad_glMateriali
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALIVPROC agx_custom_glad_glMaterialiv;
#define glMaterialiv agx_custom_glad_glMaterialiv
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALXOESPROC agx_custom_glad_glMaterialxOES;
#define glMaterialxOES agx_custom_glad_glMaterialxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMATERIALXVOESPROC agx_custom_glad_glMaterialxvOES;
#define glMaterialxvOES agx_custom_glad_glMaterialxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXFRUSTUMEXTPROC agx_custom_glad_glMatrixFrustumEXT;
#define glMatrixFrustumEXT agx_custom_glad_glMatrixFrustumEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXINDEXPOINTERARBPROC agx_custom_glad_glMatrixIndexPointerARB;
#define glMatrixIndexPointerARB agx_custom_glad_glMatrixIndexPointerARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXINDEXUBVARBPROC agx_custom_glad_glMatrixIndexubvARB;
#define glMatrixIndexubvARB agx_custom_glad_glMatrixIndexubvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXINDEXUIVARBPROC agx_custom_glad_glMatrixIndexuivARB;
#define glMatrixIndexuivARB agx_custom_glad_glMatrixIndexuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXINDEXUSVARBPROC agx_custom_glad_glMatrixIndexusvARB;
#define glMatrixIndexusvARB agx_custom_glad_glMatrixIndexusvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOAD3X2FNVPROC agx_custom_glad_glMatrixLoad3x2fNV;
#define glMatrixLoad3x2fNV agx_custom_glad_glMatrixLoad3x2fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOAD3X3FNVPROC agx_custom_glad_glMatrixLoad3x3fNV;
#define glMatrixLoad3x3fNV agx_custom_glad_glMatrixLoad3x3fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADIDENTITYEXTPROC agx_custom_glad_glMatrixLoadIdentityEXT;
#define glMatrixLoadIdentityEXT agx_custom_glad_glMatrixLoadIdentityEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC agx_custom_glad_glMatrixLoadTranspose3x3fNV;
#define glMatrixLoadTranspose3x3fNV agx_custom_glad_glMatrixLoadTranspose3x3fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADTRANSPOSEDEXTPROC agx_custom_glad_glMatrixLoadTransposedEXT;
#define glMatrixLoadTransposedEXT agx_custom_glad_glMatrixLoadTransposedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADTRANSPOSEFEXTPROC agx_custom_glad_glMatrixLoadTransposefEXT;
#define glMatrixLoadTransposefEXT agx_custom_glad_glMatrixLoadTransposefEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADDEXTPROC agx_custom_glad_glMatrixLoaddEXT;
#define glMatrixLoaddEXT agx_custom_glad_glMatrixLoaddEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXLOADFEXTPROC agx_custom_glad_glMatrixLoadfEXT;
#define glMatrixLoadfEXT agx_custom_glad_glMatrixLoadfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMODEPROC agx_custom_glad_glMatrixMode;
#define glMatrixMode agx_custom_glad_glMatrixMode
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULT3X2FNVPROC agx_custom_glad_glMatrixMult3x2fNV;
#define glMatrixMult3x2fNV agx_custom_glad_glMatrixMult3x2fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULT3X3FNVPROC agx_custom_glad_glMatrixMult3x3fNV;
#define glMatrixMult3x3fNV agx_custom_glad_glMatrixMult3x3fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC agx_custom_glad_glMatrixMultTranspose3x3fNV;
#define glMatrixMultTranspose3x3fNV agx_custom_glad_glMatrixMultTranspose3x3fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULTTRANSPOSEDEXTPROC agx_custom_glad_glMatrixMultTransposedEXT;
#define glMatrixMultTransposedEXT agx_custom_glad_glMatrixMultTransposedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULTTRANSPOSEFEXTPROC agx_custom_glad_glMatrixMultTransposefEXT;
#define glMatrixMultTransposefEXT agx_custom_glad_glMatrixMultTransposefEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULTDEXTPROC agx_custom_glad_glMatrixMultdEXT;
#define glMatrixMultdEXT agx_custom_glad_glMatrixMultdEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXMULTFEXTPROC agx_custom_glad_glMatrixMultfEXT;
#define glMatrixMultfEXT agx_custom_glad_glMatrixMultfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXORTHOEXTPROC agx_custom_glad_glMatrixOrthoEXT;
#define glMatrixOrthoEXT agx_custom_glad_glMatrixOrthoEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXPOPEXTPROC agx_custom_glad_glMatrixPopEXT;
#define glMatrixPopEXT agx_custom_glad_glMatrixPopEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXPUSHEXTPROC agx_custom_glad_glMatrixPushEXT;
#define glMatrixPushEXT agx_custom_glad_glMatrixPushEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXROTATEDEXTPROC agx_custom_glad_glMatrixRotatedEXT;
#define glMatrixRotatedEXT agx_custom_glad_glMatrixRotatedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXROTATEFEXTPROC agx_custom_glad_glMatrixRotatefEXT;
#define glMatrixRotatefEXT agx_custom_glad_glMatrixRotatefEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXSCALEDEXTPROC agx_custom_glad_glMatrixScaledEXT;
#define glMatrixScaledEXT agx_custom_glad_glMatrixScaledEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXSCALEFEXTPROC agx_custom_glad_glMatrixScalefEXT;
#define glMatrixScalefEXT agx_custom_glad_glMatrixScalefEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXTRANSLATEDEXTPROC agx_custom_glad_glMatrixTranslatedEXT;
#define glMatrixTranslatedEXT agx_custom_glad_glMatrixTranslatedEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMATRIXTRANSLATEFEXTPROC agx_custom_glad_glMatrixTranslatefEXT;
#define glMatrixTranslatefEXT agx_custom_glad_glMatrixTranslatefEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMAXSHADERCOMPILERTHREADSARBPROC agx_custom_glad_glMaxShaderCompilerThreadsARB;
#define glMaxShaderCompilerThreadsARB agx_custom_glad_glMaxShaderCompilerThreadsARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMAXSHADERCOMPILERTHREADSKHRPROC agx_custom_glad_glMaxShaderCompilerThreadsKHR;
#define glMaxShaderCompilerThreadsKHR agx_custom_glad_glMaxShaderCompilerThreadsKHR
AGX_CUSTOM_GLAD_API_CALL PFNGLMEMORYBARRIERPROC agx_custom_glad_glMemoryBarrier;
#define glMemoryBarrier agx_custom_glad_glMemoryBarrier
AGX_CUSTOM_GLAD_API_CALL PFNGLMEMORYBARRIERBYREGIONPROC agx_custom_glad_glMemoryBarrierByRegion;
#define glMemoryBarrierByRegion agx_custom_glad_glMemoryBarrierByRegion
AGX_CUSTOM_GLAD_API_CALL PFNGLMEMORYBARRIEREXTPROC agx_custom_glad_glMemoryBarrierEXT;
#define glMemoryBarrierEXT agx_custom_glad_glMemoryBarrierEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMEMORYOBJECTPARAMETERIVEXTPROC agx_custom_glad_glMemoryObjectParameterivEXT;
#define glMemoryObjectParameterivEXT agx_custom_glad_glMemoryObjectParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMINSAMPLESHADINGPROC agx_custom_glad_glMinSampleShading;
#define glMinSampleShading agx_custom_glad_glMinSampleShading
AGX_CUSTOM_GLAD_API_CALL PFNGLMINSAMPLESHADINGARBPROC agx_custom_glad_glMinSampleShadingARB;
#define glMinSampleShadingARB agx_custom_glad_glMinSampleShadingARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMINMAXPROC agx_custom_glad_glMinmax;
#define glMinmax agx_custom_glad_glMinmax
AGX_CUSTOM_GLAD_API_CALL PFNGLMINMAXEXTPROC agx_custom_glad_glMinmaxEXT;
#define glMinmaxEXT agx_custom_glad_glMinmaxEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTMATRIXDPROC agx_custom_glad_glMultMatrixd;
#define glMultMatrixd agx_custom_glad_glMultMatrixd
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTMATRIXFPROC agx_custom_glad_glMultMatrixf;
#define glMultMatrixf agx_custom_glad_glMultMatrixf
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTMATRIXXOESPROC agx_custom_glad_glMultMatrixxOES;
#define glMultMatrixxOES agx_custom_glad_glMultMatrixxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXDPROC agx_custom_glad_glMultTransposeMatrixd;
#define glMultTransposeMatrixd agx_custom_glad_glMultTransposeMatrixd
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXDARBPROC agx_custom_glad_glMultTransposeMatrixdARB;
#define glMultTransposeMatrixdARB agx_custom_glad_glMultTransposeMatrixdARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXFPROC agx_custom_glad_glMultTransposeMatrixf;
#define glMultTransposeMatrixf agx_custom_glad_glMultTransposeMatrixf
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXFARBPROC agx_custom_glad_glMultTransposeMatrixfARB;
#define glMultTransposeMatrixfARB agx_custom_glad_glMultTransposeMatrixfARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXXOESPROC agx_custom_glad_glMultTransposeMatrixxOES;
#define glMultTransposeMatrixxOES agx_custom_glad_glMultTransposeMatrixxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSPROC agx_custom_glad_glMultiDrawArrays;
#define glMultiDrawArrays agx_custom_glad_glMultiDrawArrays
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSEXTPROC agx_custom_glad_glMultiDrawArraysEXT;
#define glMultiDrawArraysEXT agx_custom_glad_glMultiDrawArraysEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTPROC agx_custom_glad_glMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect agx_custom_glad_glMultiDrawArraysIndirect
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC agx_custom_glad_glMultiDrawArraysIndirectAMD;
#define glMultiDrawArraysIndirectAMD agx_custom_glad_glMultiDrawArraysIndirectAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC agx_custom_glad_glMultiDrawArraysIndirectBindlessCountNV;
#define glMultiDrawArraysIndirectBindlessCountNV agx_custom_glad_glMultiDrawArraysIndirectBindlessCountNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC agx_custom_glad_glMultiDrawArraysIndirectBindlessNV;
#define glMultiDrawArraysIndirectBindlessNV agx_custom_glad_glMultiDrawArraysIndirectBindlessNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC agx_custom_glad_glMultiDrawArraysIndirectCount;
#define glMultiDrawArraysIndirectCount agx_custom_glad_glMultiDrawArraysIndirectCount
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC agx_custom_glad_glMultiDrawArraysIndirectCountARB;
#define glMultiDrawArraysIndirectCountARB agx_custom_glad_glMultiDrawArraysIndirectCountARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC agx_custom_glad_glMultiDrawElementArrayAPPLE;
#define glMultiDrawElementArrayAPPLE agx_custom_glad_glMultiDrawElementArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSPROC agx_custom_glad_glMultiDrawElements;
#define glMultiDrawElements agx_custom_glad_glMultiDrawElements
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC agx_custom_glad_glMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex agx_custom_glad_glMultiDrawElementsBaseVertex
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSEXTPROC agx_custom_glad_glMultiDrawElementsEXT;
#define glMultiDrawElementsEXT agx_custom_glad_glMultiDrawElementsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTPROC agx_custom_glad_glMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect agx_custom_glad_glMultiDrawElementsIndirect
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC agx_custom_glad_glMultiDrawElementsIndirectAMD;
#define glMultiDrawElementsIndirectAMD agx_custom_glad_glMultiDrawElementsIndirectAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC agx_custom_glad_glMultiDrawElementsIndirectBindlessCountNV;
#define glMultiDrawElementsIndirectBindlessCountNV agx_custom_glad_glMultiDrawElementsIndirectBindlessCountNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC agx_custom_glad_glMultiDrawElementsIndirectBindlessNV;
#define glMultiDrawElementsIndirectBindlessNV agx_custom_glad_glMultiDrawElementsIndirectBindlessNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC agx_custom_glad_glMultiDrawElementsIndirectCount;
#define glMultiDrawElementsIndirectCount agx_custom_glad_glMultiDrawElementsIndirectCount
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC agx_custom_glad_glMultiDrawElementsIndirectCountARB;
#define glMultiDrawElementsIndirectCountARB agx_custom_glad_glMultiDrawElementsIndirectCountARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC agx_custom_glad_glMultiDrawMeshTasksIndirectCountNV;
#define glMultiDrawMeshTasksIndirectCountNV agx_custom_glad_glMultiDrawMeshTasksIndirectCountNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC agx_custom_glad_glMultiDrawMeshTasksIndirectNV;
#define glMultiDrawMeshTasksIndirectNV agx_custom_glad_glMultiDrawMeshTasksIndirectNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC agx_custom_glad_glMultiDrawRangeElementArrayAPPLE;
#define glMultiDrawRangeElementArrayAPPLE agx_custom_glad_glMultiDrawRangeElementArrayAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIMODEDRAWARRAYSIBMPROC agx_custom_glad_glMultiModeDrawArraysIBM;
#define glMultiModeDrawArraysIBM agx_custom_glad_glMultiModeDrawArraysIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTIMODEDRAWELEMENTSIBMPROC agx_custom_glad_glMultiModeDrawElementsIBM;
#define glMultiModeDrawElementsIBM agx_custom_glad_glMultiModeDrawElementsIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXBUFFEREXTPROC agx_custom_glad_glMultiTexBufferEXT;
#define glMultiTexBufferEXT agx_custom_glad_glMultiTexBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1BOESPROC agx_custom_glad_glMultiTexCoord1bOES;
#define glMultiTexCoord1bOES agx_custom_glad_glMultiTexCoord1bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1BVOESPROC agx_custom_glad_glMultiTexCoord1bvOES;
#define glMultiTexCoord1bvOES agx_custom_glad_glMultiTexCoord1bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1DPROC agx_custom_glad_glMultiTexCoord1d;
#define glMultiTexCoord1d agx_custom_glad_glMultiTexCoord1d
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1DARBPROC agx_custom_glad_glMultiTexCoord1dARB;
#define glMultiTexCoord1dARB agx_custom_glad_glMultiTexCoord1dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1DVPROC agx_custom_glad_glMultiTexCoord1dv;
#define glMultiTexCoord1dv agx_custom_glad_glMultiTexCoord1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1DVARBPROC agx_custom_glad_glMultiTexCoord1dvARB;
#define glMultiTexCoord1dvARB agx_custom_glad_glMultiTexCoord1dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1FPROC agx_custom_glad_glMultiTexCoord1f;
#define glMultiTexCoord1f agx_custom_glad_glMultiTexCoord1f
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1FARBPROC agx_custom_glad_glMultiTexCoord1fARB;
#define glMultiTexCoord1fARB agx_custom_glad_glMultiTexCoord1fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1FVPROC agx_custom_glad_glMultiTexCoord1fv;
#define glMultiTexCoord1fv agx_custom_glad_glMultiTexCoord1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1FVARBPROC agx_custom_glad_glMultiTexCoord1fvARB;
#define glMultiTexCoord1fvARB agx_custom_glad_glMultiTexCoord1fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1HNVPROC agx_custom_glad_glMultiTexCoord1hNV;
#define glMultiTexCoord1hNV agx_custom_glad_glMultiTexCoord1hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1HVNVPROC agx_custom_glad_glMultiTexCoord1hvNV;
#define glMultiTexCoord1hvNV agx_custom_glad_glMultiTexCoord1hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1IPROC agx_custom_glad_glMultiTexCoord1i;
#define glMultiTexCoord1i agx_custom_glad_glMultiTexCoord1i
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1IARBPROC agx_custom_glad_glMultiTexCoord1iARB;
#define glMultiTexCoord1iARB agx_custom_glad_glMultiTexCoord1iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1IVPROC agx_custom_glad_glMultiTexCoord1iv;
#define glMultiTexCoord1iv agx_custom_glad_glMultiTexCoord1iv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1IVARBPROC agx_custom_glad_glMultiTexCoord1ivARB;
#define glMultiTexCoord1ivARB agx_custom_glad_glMultiTexCoord1ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1SPROC agx_custom_glad_glMultiTexCoord1s;
#define glMultiTexCoord1s agx_custom_glad_glMultiTexCoord1s
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1SARBPROC agx_custom_glad_glMultiTexCoord1sARB;
#define glMultiTexCoord1sARB agx_custom_glad_glMultiTexCoord1sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1SVPROC agx_custom_glad_glMultiTexCoord1sv;
#define glMultiTexCoord1sv agx_custom_glad_glMultiTexCoord1sv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1SVARBPROC agx_custom_glad_glMultiTexCoord1svARB;
#define glMultiTexCoord1svARB agx_custom_glad_glMultiTexCoord1svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1XOESPROC agx_custom_glad_glMultiTexCoord1xOES;
#define glMultiTexCoord1xOES agx_custom_glad_glMultiTexCoord1xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD1XVOESPROC agx_custom_glad_glMultiTexCoord1xvOES;
#define glMultiTexCoord1xvOES agx_custom_glad_glMultiTexCoord1xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2BOESPROC agx_custom_glad_glMultiTexCoord2bOES;
#define glMultiTexCoord2bOES agx_custom_glad_glMultiTexCoord2bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2BVOESPROC agx_custom_glad_glMultiTexCoord2bvOES;
#define glMultiTexCoord2bvOES agx_custom_glad_glMultiTexCoord2bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2DPROC agx_custom_glad_glMultiTexCoord2d;
#define glMultiTexCoord2d agx_custom_glad_glMultiTexCoord2d
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2DARBPROC agx_custom_glad_glMultiTexCoord2dARB;
#define glMultiTexCoord2dARB agx_custom_glad_glMultiTexCoord2dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2DVPROC agx_custom_glad_glMultiTexCoord2dv;
#define glMultiTexCoord2dv agx_custom_glad_glMultiTexCoord2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2DVARBPROC agx_custom_glad_glMultiTexCoord2dvARB;
#define glMultiTexCoord2dvARB agx_custom_glad_glMultiTexCoord2dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2FPROC agx_custom_glad_glMultiTexCoord2f;
#define glMultiTexCoord2f agx_custom_glad_glMultiTexCoord2f
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2FARBPROC agx_custom_glad_glMultiTexCoord2fARB;
#define glMultiTexCoord2fARB agx_custom_glad_glMultiTexCoord2fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2FVPROC agx_custom_glad_glMultiTexCoord2fv;
#define glMultiTexCoord2fv agx_custom_glad_glMultiTexCoord2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2FVARBPROC agx_custom_glad_glMultiTexCoord2fvARB;
#define glMultiTexCoord2fvARB agx_custom_glad_glMultiTexCoord2fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2HNVPROC agx_custom_glad_glMultiTexCoord2hNV;
#define glMultiTexCoord2hNV agx_custom_glad_glMultiTexCoord2hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2HVNVPROC agx_custom_glad_glMultiTexCoord2hvNV;
#define glMultiTexCoord2hvNV agx_custom_glad_glMultiTexCoord2hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2IPROC agx_custom_glad_glMultiTexCoord2i;
#define glMultiTexCoord2i agx_custom_glad_glMultiTexCoord2i
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2IARBPROC agx_custom_glad_glMultiTexCoord2iARB;
#define glMultiTexCoord2iARB agx_custom_glad_glMultiTexCoord2iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2IVPROC agx_custom_glad_glMultiTexCoord2iv;
#define glMultiTexCoord2iv agx_custom_glad_glMultiTexCoord2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2IVARBPROC agx_custom_glad_glMultiTexCoord2ivARB;
#define glMultiTexCoord2ivARB agx_custom_glad_glMultiTexCoord2ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2SPROC agx_custom_glad_glMultiTexCoord2s;
#define glMultiTexCoord2s agx_custom_glad_glMultiTexCoord2s
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2SARBPROC agx_custom_glad_glMultiTexCoord2sARB;
#define glMultiTexCoord2sARB agx_custom_glad_glMultiTexCoord2sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2SVPROC agx_custom_glad_glMultiTexCoord2sv;
#define glMultiTexCoord2sv agx_custom_glad_glMultiTexCoord2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2SVARBPROC agx_custom_glad_glMultiTexCoord2svARB;
#define glMultiTexCoord2svARB agx_custom_glad_glMultiTexCoord2svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2XOESPROC agx_custom_glad_glMultiTexCoord2xOES;
#define glMultiTexCoord2xOES agx_custom_glad_glMultiTexCoord2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD2XVOESPROC agx_custom_glad_glMultiTexCoord2xvOES;
#define glMultiTexCoord2xvOES agx_custom_glad_glMultiTexCoord2xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3BOESPROC agx_custom_glad_glMultiTexCoord3bOES;
#define glMultiTexCoord3bOES agx_custom_glad_glMultiTexCoord3bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3BVOESPROC agx_custom_glad_glMultiTexCoord3bvOES;
#define glMultiTexCoord3bvOES agx_custom_glad_glMultiTexCoord3bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3DPROC agx_custom_glad_glMultiTexCoord3d;
#define glMultiTexCoord3d agx_custom_glad_glMultiTexCoord3d
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3DARBPROC agx_custom_glad_glMultiTexCoord3dARB;
#define glMultiTexCoord3dARB agx_custom_glad_glMultiTexCoord3dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3DVPROC agx_custom_glad_glMultiTexCoord3dv;
#define glMultiTexCoord3dv agx_custom_glad_glMultiTexCoord3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3DVARBPROC agx_custom_glad_glMultiTexCoord3dvARB;
#define glMultiTexCoord3dvARB agx_custom_glad_glMultiTexCoord3dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3FPROC agx_custom_glad_glMultiTexCoord3f;
#define glMultiTexCoord3f agx_custom_glad_glMultiTexCoord3f
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3FARBPROC agx_custom_glad_glMultiTexCoord3fARB;
#define glMultiTexCoord3fARB agx_custom_glad_glMultiTexCoord3fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3FVPROC agx_custom_glad_glMultiTexCoord3fv;
#define glMultiTexCoord3fv agx_custom_glad_glMultiTexCoord3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3FVARBPROC agx_custom_glad_glMultiTexCoord3fvARB;
#define glMultiTexCoord3fvARB agx_custom_glad_glMultiTexCoord3fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3HNVPROC agx_custom_glad_glMultiTexCoord3hNV;
#define glMultiTexCoord3hNV agx_custom_glad_glMultiTexCoord3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3HVNVPROC agx_custom_glad_glMultiTexCoord3hvNV;
#define glMultiTexCoord3hvNV agx_custom_glad_glMultiTexCoord3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3IPROC agx_custom_glad_glMultiTexCoord3i;
#define glMultiTexCoord3i agx_custom_glad_glMultiTexCoord3i
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3IARBPROC agx_custom_glad_glMultiTexCoord3iARB;
#define glMultiTexCoord3iARB agx_custom_glad_glMultiTexCoord3iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3IVPROC agx_custom_glad_glMultiTexCoord3iv;
#define glMultiTexCoord3iv agx_custom_glad_glMultiTexCoord3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3IVARBPROC agx_custom_glad_glMultiTexCoord3ivARB;
#define glMultiTexCoord3ivARB agx_custom_glad_glMultiTexCoord3ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3SPROC agx_custom_glad_glMultiTexCoord3s;
#define glMultiTexCoord3s agx_custom_glad_glMultiTexCoord3s
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3SARBPROC agx_custom_glad_glMultiTexCoord3sARB;
#define glMultiTexCoord3sARB agx_custom_glad_glMultiTexCoord3sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3SVPROC agx_custom_glad_glMultiTexCoord3sv;
#define glMultiTexCoord3sv agx_custom_glad_glMultiTexCoord3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3SVARBPROC agx_custom_glad_glMultiTexCoord3svARB;
#define glMultiTexCoord3svARB agx_custom_glad_glMultiTexCoord3svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3XOESPROC agx_custom_glad_glMultiTexCoord3xOES;
#define glMultiTexCoord3xOES agx_custom_glad_glMultiTexCoord3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD3XVOESPROC agx_custom_glad_glMultiTexCoord3xvOES;
#define glMultiTexCoord3xvOES agx_custom_glad_glMultiTexCoord3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4BOESPROC agx_custom_glad_glMultiTexCoord4bOES;
#define glMultiTexCoord4bOES agx_custom_glad_glMultiTexCoord4bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4BVOESPROC agx_custom_glad_glMultiTexCoord4bvOES;
#define glMultiTexCoord4bvOES agx_custom_glad_glMultiTexCoord4bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4DPROC agx_custom_glad_glMultiTexCoord4d;
#define glMultiTexCoord4d agx_custom_glad_glMultiTexCoord4d
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4DARBPROC agx_custom_glad_glMultiTexCoord4dARB;
#define glMultiTexCoord4dARB agx_custom_glad_glMultiTexCoord4dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4DVPROC agx_custom_glad_glMultiTexCoord4dv;
#define glMultiTexCoord4dv agx_custom_glad_glMultiTexCoord4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4DVARBPROC agx_custom_glad_glMultiTexCoord4dvARB;
#define glMultiTexCoord4dvARB agx_custom_glad_glMultiTexCoord4dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4FPROC agx_custom_glad_glMultiTexCoord4f;
#define glMultiTexCoord4f agx_custom_glad_glMultiTexCoord4f
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4FARBPROC agx_custom_glad_glMultiTexCoord4fARB;
#define glMultiTexCoord4fARB agx_custom_glad_glMultiTexCoord4fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4FVPROC agx_custom_glad_glMultiTexCoord4fv;
#define glMultiTexCoord4fv agx_custom_glad_glMultiTexCoord4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4FVARBPROC agx_custom_glad_glMultiTexCoord4fvARB;
#define glMultiTexCoord4fvARB agx_custom_glad_glMultiTexCoord4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4HNVPROC agx_custom_glad_glMultiTexCoord4hNV;
#define glMultiTexCoord4hNV agx_custom_glad_glMultiTexCoord4hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4HVNVPROC agx_custom_glad_glMultiTexCoord4hvNV;
#define glMultiTexCoord4hvNV agx_custom_glad_glMultiTexCoord4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4IPROC agx_custom_glad_glMultiTexCoord4i;
#define glMultiTexCoord4i agx_custom_glad_glMultiTexCoord4i
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4IARBPROC agx_custom_glad_glMultiTexCoord4iARB;
#define glMultiTexCoord4iARB agx_custom_glad_glMultiTexCoord4iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4IVPROC agx_custom_glad_glMultiTexCoord4iv;
#define glMultiTexCoord4iv agx_custom_glad_glMultiTexCoord4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4IVARBPROC agx_custom_glad_glMultiTexCoord4ivARB;
#define glMultiTexCoord4ivARB agx_custom_glad_glMultiTexCoord4ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4SPROC agx_custom_glad_glMultiTexCoord4s;
#define glMultiTexCoord4s agx_custom_glad_glMultiTexCoord4s
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4SARBPROC agx_custom_glad_glMultiTexCoord4sARB;
#define glMultiTexCoord4sARB agx_custom_glad_glMultiTexCoord4sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4SVPROC agx_custom_glad_glMultiTexCoord4sv;
#define glMultiTexCoord4sv agx_custom_glad_glMultiTexCoord4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4SVARBPROC agx_custom_glad_glMultiTexCoord4svARB;
#define glMultiTexCoord4svARB agx_custom_glad_glMultiTexCoord4svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4XOESPROC agx_custom_glad_glMultiTexCoord4xOES;
#define glMultiTexCoord4xOES agx_custom_glad_glMultiTexCoord4xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORD4XVOESPROC agx_custom_glad_glMultiTexCoord4xvOES;
#define glMultiTexCoord4xvOES agx_custom_glad_glMultiTexCoord4xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP1UIPROC agx_custom_glad_glMultiTexCoordP1ui;
#define glMultiTexCoordP1ui agx_custom_glad_glMultiTexCoordP1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP1UIVPROC agx_custom_glad_glMultiTexCoordP1uiv;
#define glMultiTexCoordP1uiv agx_custom_glad_glMultiTexCoordP1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP2UIPROC agx_custom_glad_glMultiTexCoordP2ui;
#define glMultiTexCoordP2ui agx_custom_glad_glMultiTexCoordP2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP2UIVPROC agx_custom_glad_glMultiTexCoordP2uiv;
#define glMultiTexCoordP2uiv agx_custom_glad_glMultiTexCoordP2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP3UIPROC agx_custom_glad_glMultiTexCoordP3ui;
#define glMultiTexCoordP3ui agx_custom_glad_glMultiTexCoordP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP3UIVPROC agx_custom_glad_glMultiTexCoordP3uiv;
#define glMultiTexCoordP3uiv agx_custom_glad_glMultiTexCoordP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP4UIPROC agx_custom_glad_glMultiTexCoordP4ui;
#define glMultiTexCoordP4ui agx_custom_glad_glMultiTexCoordP4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDP4UIVPROC agx_custom_glad_glMultiTexCoordP4uiv;
#define glMultiTexCoordP4uiv agx_custom_glad_glMultiTexCoordP4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXCOORDPOINTEREXTPROC agx_custom_glad_glMultiTexCoordPointerEXT;
#define glMultiTexCoordPointerEXT agx_custom_glad_glMultiTexCoordPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXENVFEXTPROC agx_custom_glad_glMultiTexEnvfEXT;
#define glMultiTexEnvfEXT agx_custom_glad_glMultiTexEnvfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXENVFVEXTPROC agx_custom_glad_glMultiTexEnvfvEXT;
#define glMultiTexEnvfvEXT agx_custom_glad_glMultiTexEnvfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXENVIEXTPROC agx_custom_glad_glMultiTexEnviEXT;
#define glMultiTexEnviEXT agx_custom_glad_glMultiTexEnviEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXENVIVEXTPROC agx_custom_glad_glMultiTexEnvivEXT;
#define glMultiTexEnvivEXT agx_custom_glad_glMultiTexEnvivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENDEXTPROC agx_custom_glad_glMultiTexGendEXT;
#define glMultiTexGendEXT agx_custom_glad_glMultiTexGendEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENDVEXTPROC agx_custom_glad_glMultiTexGendvEXT;
#define glMultiTexGendvEXT agx_custom_glad_glMultiTexGendvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENFEXTPROC agx_custom_glad_glMultiTexGenfEXT;
#define glMultiTexGenfEXT agx_custom_glad_glMultiTexGenfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENFVEXTPROC agx_custom_glad_glMultiTexGenfvEXT;
#define glMultiTexGenfvEXT agx_custom_glad_glMultiTexGenfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENIEXTPROC agx_custom_glad_glMultiTexGeniEXT;
#define glMultiTexGeniEXT agx_custom_glad_glMultiTexGeniEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXGENIVEXTPROC agx_custom_glad_glMultiTexGenivEXT;
#define glMultiTexGenivEXT agx_custom_glad_glMultiTexGenivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXIMAGE1DEXTPROC agx_custom_glad_glMultiTexImage1DEXT;
#define glMultiTexImage1DEXT agx_custom_glad_glMultiTexImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXIMAGE2DEXTPROC agx_custom_glad_glMultiTexImage2DEXT;
#define glMultiTexImage2DEXT agx_custom_glad_glMultiTexImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXIMAGE3DEXTPROC agx_custom_glad_glMultiTexImage3DEXT;
#define glMultiTexImage3DEXT agx_custom_glad_glMultiTexImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERIIVEXTPROC agx_custom_glad_glMultiTexParameterIivEXT;
#define glMultiTexParameterIivEXT agx_custom_glad_glMultiTexParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERIUIVEXTPROC agx_custom_glad_glMultiTexParameterIuivEXT;
#define glMultiTexParameterIuivEXT agx_custom_glad_glMultiTexParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERFEXTPROC agx_custom_glad_glMultiTexParameterfEXT;
#define glMultiTexParameterfEXT agx_custom_glad_glMultiTexParameterfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERFVEXTPROC agx_custom_glad_glMultiTexParameterfvEXT;
#define glMultiTexParameterfvEXT agx_custom_glad_glMultiTexParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERIEXTPROC agx_custom_glad_glMultiTexParameteriEXT;
#define glMultiTexParameteriEXT agx_custom_glad_glMultiTexParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXPARAMETERIVEXTPROC agx_custom_glad_glMultiTexParameterivEXT;
#define glMultiTexParameterivEXT agx_custom_glad_glMultiTexParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXRENDERBUFFEREXTPROC agx_custom_glad_glMultiTexRenderbufferEXT;
#define glMultiTexRenderbufferEXT agx_custom_glad_glMultiTexRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glMultiTexSubImage1DEXT;
#define glMultiTexSubImage1DEXT agx_custom_glad_glMultiTexSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glMultiTexSubImage2DEXT;
#define glMultiTexSubImage2DEXT agx_custom_glad_glMultiTexSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glMultiTexSubImage3DEXT;
#define glMultiTexSubImage3DEXT agx_custom_glad_glMultiTexSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTBARRIERNVPROC agx_custom_glad_glMulticastBarrierNV;
#define glMulticastBarrierNV agx_custom_glad_glMulticastBarrierNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTBLITFRAMEBUFFERNVPROC agx_custom_glad_glMulticastBlitFramebufferNV;
#define glMulticastBlitFramebufferNV agx_custom_glad_glMulticastBlitFramebufferNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTBUFFERSUBDATANVPROC agx_custom_glad_glMulticastBufferSubDataNV;
#define glMulticastBufferSubDataNV agx_custom_glad_glMulticastBufferSubDataNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC agx_custom_glad_glMulticastCopyBufferSubDataNV;
#define glMulticastCopyBufferSubDataNV agx_custom_glad_glMulticastCopyBufferSubDataNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTCOPYIMAGESUBDATANVPROC agx_custom_glad_glMulticastCopyImageSubDataNV;
#define glMulticastCopyImageSubDataNV agx_custom_glad_glMulticastCopyImageSubDataNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glMulticastFramebufferSampleLocationsfvNV;
#define glMulticastFramebufferSampleLocationsfvNV agx_custom_glad_glMulticastFramebufferSampleLocationsfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC agx_custom_glad_glMulticastGetQueryObjecti64vNV;
#define glMulticastGetQueryObjecti64vNV agx_custom_glad_glMulticastGetQueryObjecti64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTGETQUERYOBJECTIVNVPROC agx_custom_glad_glMulticastGetQueryObjectivNV;
#define glMulticastGetQueryObjectivNV agx_custom_glad_glMulticastGetQueryObjectivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC agx_custom_glad_glMulticastGetQueryObjectui64vNV;
#define glMulticastGetQueryObjectui64vNV agx_custom_glad_glMulticastGetQueryObjectui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC agx_custom_glad_glMulticastGetQueryObjectuivNV;
#define glMulticastGetQueryObjectuivNV agx_custom_glad_glMulticastGetQueryObjectuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTSCISSORARRAYVNVXPROC agx_custom_glad_glMulticastScissorArrayvNVX;
#define glMulticastScissorArrayvNVX agx_custom_glad_glMulticastScissorArrayvNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTVIEWPORTARRAYVNVXPROC agx_custom_glad_glMulticastViewportArrayvNVX;
#define glMulticastViewportArrayvNVX agx_custom_glad_glMulticastViewportArrayvNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC agx_custom_glad_glMulticastViewportPositionWScaleNVX;
#define glMulticastViewportPositionWScaleNVX agx_custom_glad_glMulticastViewportPositionWScaleNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLMULTICASTWAITSYNCNVPROC agx_custom_glad_glMulticastWaitSyncNV;
#define glMulticastWaitSyncNV agx_custom_glad_glMulticastWaitSyncNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERATTACHMEMORYNVPROC agx_custom_glad_glNamedBufferAttachMemoryNV;
#define glNamedBufferAttachMemoryNV agx_custom_glad_glNamedBufferAttachMemoryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERDATAPROC agx_custom_glad_glNamedBufferData;
#define glNamedBufferData agx_custom_glad_glNamedBufferData
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERDATAEXTPROC agx_custom_glad_glNamedBufferDataEXT;
#define glNamedBufferDataEXT agx_custom_glad_glNamedBufferDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC agx_custom_glad_glNamedBufferPageCommitmentARB;
#define glNamedBufferPageCommitmentARB agx_custom_glad_glNamedBufferPageCommitmentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC agx_custom_glad_glNamedBufferPageCommitmentEXT;
#define glNamedBufferPageCommitmentEXT agx_custom_glad_glNamedBufferPageCommitmentEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC agx_custom_glad_glNamedBufferPageCommitmentMemNV;
#define glNamedBufferPageCommitmentMemNV agx_custom_glad_glNamedBufferPageCommitmentMemNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSTORAGEPROC agx_custom_glad_glNamedBufferStorage;
#define glNamedBufferStorage agx_custom_glad_glNamedBufferStorage
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSTORAGEEXTPROC agx_custom_glad_glNamedBufferStorageEXT;
#define glNamedBufferStorageEXT agx_custom_glad_glNamedBufferStorageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC agx_custom_glad_glNamedBufferStorageExternalEXT;
#define glNamedBufferStorageExternalEXT agx_custom_glad_glNamedBufferStorageExternalEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC agx_custom_glad_glNamedBufferStorageMemEXT;
#define glNamedBufferStorageMemEXT agx_custom_glad_glNamedBufferStorageMemEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSUBDATAPROC agx_custom_glad_glNamedBufferSubData;
#define glNamedBufferSubData agx_custom_glad_glNamedBufferSubData
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glNamedBufferSubDataEXT;
#define glNamedBufferSubDataEXT agx_custom_glad_glNamedBufferSubDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC agx_custom_glad_glNamedCopyBufferSubDataEXT;
#define glNamedCopyBufferSubDataEXT agx_custom_glad_glNamedCopyBufferSubDataEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC agx_custom_glad_glNamedFramebufferDrawBuffer;
#define glNamedFramebufferDrawBuffer agx_custom_glad_glNamedFramebufferDrawBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC agx_custom_glad_glNamedFramebufferDrawBuffers;
#define glNamedFramebufferDrawBuffers agx_custom_glad_glNamedFramebufferDrawBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC agx_custom_glad_glNamedFramebufferParameteri;
#define glNamedFramebufferParameteri agx_custom_glad_glNamedFramebufferParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC agx_custom_glad_glNamedFramebufferParameteriEXT;
#define glNamedFramebufferParameteriEXT agx_custom_glad_glNamedFramebufferParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC agx_custom_glad_glNamedFramebufferReadBuffer;
#define glNamedFramebufferReadBuffer agx_custom_glad_glNamedFramebufferReadBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC agx_custom_glad_glNamedFramebufferRenderbuffer;
#define glNamedFramebufferRenderbuffer agx_custom_glad_glNamedFramebufferRenderbuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC agx_custom_glad_glNamedFramebufferRenderbufferEXT;
#define glNamedFramebufferRenderbufferEXT agx_custom_glad_glNamedFramebufferRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC agx_custom_glad_glNamedFramebufferSampleLocationsfvARB;
#define glNamedFramebufferSampleLocationsfvARB agx_custom_glad_glNamedFramebufferSampleLocationsfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glNamedFramebufferSampleLocationsfvNV;
#define glNamedFramebufferSampleLocationsfvNV agx_custom_glad_glNamedFramebufferSampleLocationsfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC agx_custom_glad_glNamedFramebufferSamplePositionsfvAMD;
#define glNamedFramebufferSamplePositionsfvAMD agx_custom_glad_glNamedFramebufferSamplePositionsfvAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTUREPROC agx_custom_glad_glNamedFramebufferTexture;
#define glNamedFramebufferTexture agx_custom_glad_glNamedFramebufferTexture
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC agx_custom_glad_glNamedFramebufferTexture1DEXT;
#define glNamedFramebufferTexture1DEXT agx_custom_glad_glNamedFramebufferTexture1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC agx_custom_glad_glNamedFramebufferTexture2DEXT;
#define glNamedFramebufferTexture2DEXT agx_custom_glad_glNamedFramebufferTexture2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC agx_custom_glad_glNamedFramebufferTexture3DEXT;
#define glNamedFramebufferTexture3DEXT agx_custom_glad_glNamedFramebufferTexture3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC agx_custom_glad_glNamedFramebufferTextureEXT;
#define glNamedFramebufferTextureEXT agx_custom_glad_glNamedFramebufferTextureEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC agx_custom_glad_glNamedFramebufferTextureFaceEXT;
#define glNamedFramebufferTextureFaceEXT agx_custom_glad_glNamedFramebufferTextureFaceEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC agx_custom_glad_glNamedFramebufferTextureLayer;
#define glNamedFramebufferTextureLayer agx_custom_glad_glNamedFramebufferTextureLayer
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC agx_custom_glad_glNamedFramebufferTextureLayerEXT;
#define glNamedFramebufferTextureLayerEXT agx_custom_glad_glNamedFramebufferTextureLayerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC agx_custom_glad_glNamedProgramLocalParameter4dEXT;
#define glNamedProgramLocalParameter4dEXT agx_custom_glad_glNamedProgramLocalParameter4dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC agx_custom_glad_glNamedProgramLocalParameter4dvEXT;
#define glNamedProgramLocalParameter4dvEXT agx_custom_glad_glNamedProgramLocalParameter4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC agx_custom_glad_glNamedProgramLocalParameter4fEXT;
#define glNamedProgramLocalParameter4fEXT agx_custom_glad_glNamedProgramLocalParameter4fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC agx_custom_glad_glNamedProgramLocalParameter4fvEXT;
#define glNamedProgramLocalParameter4fvEXT agx_custom_glad_glNamedProgramLocalParameter4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4iEXT;
#define glNamedProgramLocalParameterI4iEXT agx_custom_glad_glNamedProgramLocalParameterI4iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4ivEXT;
#define glNamedProgramLocalParameterI4ivEXT agx_custom_glad_glNamedProgramLocalParameterI4ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4uiEXT;
#define glNamedProgramLocalParameterI4uiEXT agx_custom_glad_glNamedProgramLocalParameterI4uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4uivEXT;
#define glNamedProgramLocalParameterI4uivEXT agx_custom_glad_glNamedProgramLocalParameterI4uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC agx_custom_glad_glNamedProgramLocalParameters4fvEXT;
#define glNamedProgramLocalParameters4fvEXT agx_custom_glad_glNamedProgramLocalParameters4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC agx_custom_glad_glNamedProgramLocalParametersI4ivEXT;
#define glNamedProgramLocalParametersI4ivEXT agx_custom_glad_glNamedProgramLocalParametersI4ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC agx_custom_glad_glNamedProgramLocalParametersI4uivEXT;
#define glNamedProgramLocalParametersI4uivEXT agx_custom_glad_glNamedProgramLocalParametersI4uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDPROGRAMSTRINGEXTPROC agx_custom_glad_glNamedProgramStringEXT;
#define glNamedProgramStringEXT agx_custom_glad_glNamedProgramStringEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEPROC agx_custom_glad_glNamedRenderbufferStorage;
#define glNamedRenderbufferStorage agx_custom_glad_glNamedRenderbufferStorage
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC agx_custom_glad_glNamedRenderbufferStorageEXT;
#define glNamedRenderbufferStorageEXT agx_custom_glad_glNamedRenderbufferStorageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC agx_custom_glad_glNamedRenderbufferStorageMultisample;
#define glNamedRenderbufferStorageMultisample agx_custom_glad_glNamedRenderbufferStorageMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleAdvancedAMD;
#define glNamedRenderbufferStorageMultisampleAdvancedAMD agx_custom_glad_glNamedRenderbufferStorageMultisampleAdvancedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleCoverageEXT;
#define glNamedRenderbufferStorageMultisampleCoverageEXT agx_custom_glad_glNamedRenderbufferStorageMultisampleCoverageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleEXT;
#define glNamedRenderbufferStorageMultisampleEXT agx_custom_glad_glNamedRenderbufferStorageMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNAMEDSTRINGARBPROC agx_custom_glad_glNamedStringARB;
#define glNamedStringARB agx_custom_glad_glNamedStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLNEWLISTPROC agx_custom_glad_glNewList;
#define glNewList agx_custom_glad_glNewList
AGX_CUSTOM_GLAD_API_CALL PFNGLNEWOBJECTBUFFERATIPROC agx_custom_glad_glNewObjectBufferATI;
#define glNewObjectBufferATI agx_custom_glad_glNewObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3BPROC agx_custom_glad_glNormal3b;
#define glNormal3b agx_custom_glad_glNormal3b
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3BVPROC agx_custom_glad_glNormal3bv;
#define glNormal3bv agx_custom_glad_glNormal3bv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3DPROC agx_custom_glad_glNormal3d;
#define glNormal3d agx_custom_glad_glNormal3d
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3DVPROC agx_custom_glad_glNormal3dv;
#define glNormal3dv agx_custom_glad_glNormal3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3FPROC agx_custom_glad_glNormal3f;
#define glNormal3f agx_custom_glad_glNormal3f
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glNormal3fVertex3fSUN;
#define glNormal3fVertex3fSUN agx_custom_glad_glNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glNormal3fVertex3fvSUN;
#define glNormal3fVertex3fvSUN agx_custom_glad_glNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3FVPROC agx_custom_glad_glNormal3fv;
#define glNormal3fv agx_custom_glad_glNormal3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3HNVPROC agx_custom_glad_glNormal3hNV;
#define glNormal3hNV agx_custom_glad_glNormal3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3HVNVPROC agx_custom_glad_glNormal3hvNV;
#define glNormal3hvNV agx_custom_glad_glNormal3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3IPROC agx_custom_glad_glNormal3i;
#define glNormal3i agx_custom_glad_glNormal3i
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3IVPROC agx_custom_glad_glNormal3iv;
#define glNormal3iv agx_custom_glad_glNormal3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3SPROC agx_custom_glad_glNormal3s;
#define glNormal3s agx_custom_glad_glNormal3s
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3SVPROC agx_custom_glad_glNormal3sv;
#define glNormal3sv agx_custom_glad_glNormal3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3XOESPROC agx_custom_glad_glNormal3xOES;
#define glNormal3xOES agx_custom_glad_glNormal3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMAL3XVOESPROC agx_custom_glad_glNormal3xvOES;
#define glNormal3xvOES agx_custom_glad_glNormal3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALFORMATNVPROC agx_custom_glad_glNormalFormatNV;
#define glNormalFormatNV agx_custom_glad_glNormalFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALP3UIPROC agx_custom_glad_glNormalP3ui;
#define glNormalP3ui agx_custom_glad_glNormalP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALP3UIVPROC agx_custom_glad_glNormalP3uiv;
#define glNormalP3uiv agx_custom_glad_glNormalP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALPOINTERPROC agx_custom_glad_glNormalPointer;
#define glNormalPointer agx_custom_glad_glNormalPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALPOINTEREXTPROC agx_custom_glad_glNormalPointerEXT;
#define glNormalPointerEXT agx_custom_glad_glNormalPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALPOINTERLISTIBMPROC agx_custom_glad_glNormalPointerListIBM;
#define glNormalPointerListIBM agx_custom_glad_glNormalPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALPOINTERVINTELPROC agx_custom_glad_glNormalPointervINTEL;
#define glNormalPointervINTEL agx_custom_glad_glNormalPointervINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3BATIPROC agx_custom_glad_glNormalStream3bATI;
#define glNormalStream3bATI agx_custom_glad_glNormalStream3bATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3BVATIPROC agx_custom_glad_glNormalStream3bvATI;
#define glNormalStream3bvATI agx_custom_glad_glNormalStream3bvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3DATIPROC agx_custom_glad_glNormalStream3dATI;
#define glNormalStream3dATI agx_custom_glad_glNormalStream3dATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3DVATIPROC agx_custom_glad_glNormalStream3dvATI;
#define glNormalStream3dvATI agx_custom_glad_glNormalStream3dvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3FATIPROC agx_custom_glad_glNormalStream3fATI;
#define glNormalStream3fATI agx_custom_glad_glNormalStream3fATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3FVATIPROC agx_custom_glad_glNormalStream3fvATI;
#define glNormalStream3fvATI agx_custom_glad_glNormalStream3fvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3IATIPROC agx_custom_glad_glNormalStream3iATI;
#define glNormalStream3iATI agx_custom_glad_glNormalStream3iATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3IVATIPROC agx_custom_glad_glNormalStream3ivATI;
#define glNormalStream3ivATI agx_custom_glad_glNormalStream3ivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3SATIPROC agx_custom_glad_glNormalStream3sATI;
#define glNormalStream3sATI agx_custom_glad_glNormalStream3sATI
AGX_CUSTOM_GLAD_API_CALL PFNGLNORMALSTREAM3SVATIPROC agx_custom_glad_glNormalStream3svATI;
#define glNormalStream3svATI agx_custom_glad_glNormalStream3svATI
AGX_CUSTOM_GLAD_API_CALL PFNGLOBJECTLABELPROC agx_custom_glad_glObjectLabel;
#define glObjectLabel agx_custom_glad_glObjectLabel
AGX_CUSTOM_GLAD_API_CALL PFNGLOBJECTPTRLABELPROC agx_custom_glad_glObjectPtrLabel;
#define glObjectPtrLabel agx_custom_glad_glObjectPtrLabel
AGX_CUSTOM_GLAD_API_CALL PFNGLOBJECTPURGEABLEAPPLEPROC agx_custom_glad_glObjectPurgeableAPPLE;
#define glObjectPurgeableAPPLE agx_custom_glad_glObjectPurgeableAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLOBJECTUNPURGEABLEAPPLEPROC agx_custom_glad_glObjectUnpurgeableAPPLE;
#define glObjectUnpurgeableAPPLE agx_custom_glad_glObjectUnpurgeableAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLORTHOPROC agx_custom_glad_glOrtho;
#define glOrtho agx_custom_glad_glOrtho
AGX_CUSTOM_GLAD_API_CALL PFNGLORTHOFOESPROC agx_custom_glad_glOrthofOES;
#define glOrthofOES agx_custom_glad_glOrthofOES
AGX_CUSTOM_GLAD_API_CALL PFNGLORTHOXOESPROC agx_custom_glad_glOrthoxOES;
#define glOrthoxOES agx_custom_glad_glOrthoxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPNTRIANGLESFATIPROC agx_custom_glad_glPNTrianglesfATI;
#define glPNTrianglesfATI agx_custom_glad_glPNTrianglesfATI
AGX_CUSTOM_GLAD_API_CALL PFNGLPNTRIANGLESIATIPROC agx_custom_glad_glPNTrianglesiATI;
#define glPNTrianglesiATI agx_custom_glad_glPNTrianglesiATI
AGX_CUSTOM_GLAD_API_CALL PFNGLPASSTEXCOORDATIPROC agx_custom_glad_glPassTexCoordATI;
#define glPassTexCoordATI agx_custom_glad_glPassTexCoordATI
AGX_CUSTOM_GLAD_API_CALL PFNGLPASSTHROUGHPROC agx_custom_glad_glPassThrough;
#define glPassThrough agx_custom_glad_glPassThrough
AGX_CUSTOM_GLAD_API_CALL PFNGLPASSTHROUGHXOESPROC agx_custom_glad_glPassThroughxOES;
#define glPassThroughxOES agx_custom_glad_glPassThroughxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPATCHPARAMETERFVPROC agx_custom_glad_glPatchParameterfv;
#define glPatchParameterfv agx_custom_glad_glPatchParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLPATCHPARAMETERIPROC agx_custom_glad_glPatchParameteri;
#define glPatchParameteri agx_custom_glad_glPatchParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHCOLORGENNVPROC agx_custom_glad_glPathColorGenNV;
#define glPathColorGenNV agx_custom_glad_glPathColorGenNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHCOMMANDSNVPROC agx_custom_glad_glPathCommandsNV;
#define glPathCommandsNV agx_custom_glad_glPathCommandsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHCOORDSNVPROC agx_custom_glad_glPathCoordsNV;
#define glPathCoordsNV agx_custom_glad_glPathCoordsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHCOVERDEPTHFUNCNVPROC agx_custom_glad_glPathCoverDepthFuncNV;
#define glPathCoverDepthFuncNV agx_custom_glad_glPathCoverDepthFuncNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHDASHARRAYNVPROC agx_custom_glad_glPathDashArrayNV;
#define glPathDashArrayNV agx_custom_glad_glPathDashArrayNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHFOGGENNVPROC agx_custom_glad_glPathFogGenNV;
#define glPathFogGenNV agx_custom_glad_glPathFogGenNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHGLYPHINDEXARRAYNVPROC agx_custom_glad_glPathGlyphIndexArrayNV;
#define glPathGlyphIndexArrayNV agx_custom_glad_glPathGlyphIndexArrayNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHGLYPHINDEXRANGENVPROC agx_custom_glad_glPathGlyphIndexRangeNV;
#define glPathGlyphIndexRangeNV agx_custom_glad_glPathGlyphIndexRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHGLYPHRANGENVPROC agx_custom_glad_glPathGlyphRangeNV;
#define glPathGlyphRangeNV agx_custom_glad_glPathGlyphRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHGLYPHSNVPROC agx_custom_glad_glPathGlyphsNV;
#define glPathGlyphsNV agx_custom_glad_glPathGlyphsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC agx_custom_glad_glPathMemoryGlyphIndexArrayNV;
#define glPathMemoryGlyphIndexArrayNV agx_custom_glad_glPathMemoryGlyphIndexArrayNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHPARAMETERFNVPROC agx_custom_glad_glPathParameterfNV;
#define glPathParameterfNV agx_custom_glad_glPathParameterfNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHPARAMETERFVNVPROC agx_custom_glad_glPathParameterfvNV;
#define glPathParameterfvNV agx_custom_glad_glPathParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHPARAMETERINVPROC agx_custom_glad_glPathParameteriNV;
#define glPathParameteriNV agx_custom_glad_glPathParameteriNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHPARAMETERIVNVPROC agx_custom_glad_glPathParameterivNV;
#define glPathParameterivNV agx_custom_glad_glPathParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHSTENCILDEPTHOFFSETNVPROC agx_custom_glad_glPathStencilDepthOffsetNV;
#define glPathStencilDepthOffsetNV agx_custom_glad_glPathStencilDepthOffsetNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHSTENCILFUNCNVPROC agx_custom_glad_glPathStencilFuncNV;
#define glPathStencilFuncNV agx_custom_glad_glPathStencilFuncNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHSTRINGNVPROC agx_custom_glad_glPathStringNV;
#define glPathStringNV agx_custom_glad_glPathStringNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHSUBCOMMANDSNVPROC agx_custom_glad_glPathSubCommandsNV;
#define glPathSubCommandsNV agx_custom_glad_glPathSubCommandsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHSUBCOORDSNVPROC agx_custom_glad_glPathSubCoordsNV;
#define glPathSubCoordsNV agx_custom_glad_glPathSubCoordsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPATHTEXGENNVPROC agx_custom_glad_glPathTexGenNV;
#define glPathTexGenNV agx_custom_glad_glPathTexGenNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPAUSETRANSFORMFEEDBACKPROC agx_custom_glad_glPauseTransformFeedback;
#define glPauseTransformFeedback agx_custom_glad_glPauseTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLPAUSETRANSFORMFEEDBACKNVPROC agx_custom_glad_glPauseTransformFeedbackNV;
#define glPauseTransformFeedbackNV agx_custom_glad_glPauseTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELDATARANGENVPROC agx_custom_glad_glPixelDataRangeNV;
#define glPixelDataRangeNV agx_custom_glad_glPixelDataRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELMAPFVPROC agx_custom_glad_glPixelMapfv;
#define glPixelMapfv agx_custom_glad_glPixelMapfv
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELMAPUIVPROC agx_custom_glad_glPixelMapuiv;
#define glPixelMapuiv agx_custom_glad_glPixelMapuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELMAPUSVPROC agx_custom_glad_glPixelMapusv;
#define glPixelMapusv agx_custom_glad_glPixelMapusv
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELMAPXPROC agx_custom_glad_glPixelMapx;
#define glPixelMapx agx_custom_glad_glPixelMapx
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELSTOREFPROC agx_custom_glad_glPixelStoref;
#define glPixelStoref agx_custom_glad_glPixelStoref
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELSTOREIPROC agx_custom_glad_glPixelStorei;
#define glPixelStorei agx_custom_glad_glPixelStorei
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELSTOREXPROC agx_custom_glad_glPixelStorex;
#define glPixelStorex agx_custom_glad_glPixelStorex
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTEXGENPARAMETERFSGISPROC agx_custom_glad_glPixelTexGenParameterfSGIS;
#define glPixelTexGenParameterfSGIS agx_custom_glad_glPixelTexGenParameterfSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTEXGENPARAMETERFVSGISPROC agx_custom_glad_glPixelTexGenParameterfvSGIS;
#define glPixelTexGenParameterfvSGIS agx_custom_glad_glPixelTexGenParameterfvSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTEXGENPARAMETERISGISPROC agx_custom_glad_glPixelTexGenParameteriSGIS;
#define glPixelTexGenParameteriSGIS agx_custom_glad_glPixelTexGenParameteriSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTEXGENPARAMETERIVSGISPROC agx_custom_glad_glPixelTexGenParameterivSGIS;
#define glPixelTexGenParameterivSGIS agx_custom_glad_glPixelTexGenParameterivSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTEXGENSGIXPROC agx_custom_glad_glPixelTexGenSGIX;
#define glPixelTexGenSGIX agx_custom_glad_glPixelTexGenSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFERFPROC agx_custom_glad_glPixelTransferf;
#define glPixelTransferf agx_custom_glad_glPixelTransferf
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFERIPROC agx_custom_glad_glPixelTransferi;
#define glPixelTransferi agx_custom_glad_glPixelTransferi
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFERXOESPROC agx_custom_glad_glPixelTransferxOES;
#define glPixelTransferxOES agx_custom_glad_glPixelTransferxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFORMPARAMETERFEXTPROC agx_custom_glad_glPixelTransformParameterfEXT;
#define glPixelTransformParameterfEXT agx_custom_glad_glPixelTransformParameterfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC agx_custom_glad_glPixelTransformParameterfvEXT;
#define glPixelTransformParameterfvEXT agx_custom_glad_glPixelTransformParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFORMPARAMETERIEXTPROC agx_custom_glad_glPixelTransformParameteriEXT;
#define glPixelTransformParameteriEXT agx_custom_glad_glPixelTransformParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC agx_custom_glad_glPixelTransformParameterivEXT;
#define glPixelTransformParameterivEXT agx_custom_glad_glPixelTransformParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELZOOMPROC agx_custom_glad_glPixelZoom;
#define glPixelZoom agx_custom_glad_glPixelZoom
AGX_CUSTOM_GLAD_API_CALL PFNGLPIXELZOOMXOESPROC agx_custom_glad_glPixelZoomxOES;
#define glPixelZoomxOES agx_custom_glad_glPixelZoomxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTALONGPATHNVPROC agx_custom_glad_glPointAlongPathNV;
#define glPointAlongPathNV agx_custom_glad_glPointAlongPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFPROC agx_custom_glad_glPointParameterf;
#define glPointParameterf agx_custom_glad_glPointParameterf
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFARBPROC agx_custom_glad_glPointParameterfARB;
#define glPointParameterfARB agx_custom_glad_glPointParameterfARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFEXTPROC agx_custom_glad_glPointParameterfEXT;
#define glPointParameterfEXT agx_custom_glad_glPointParameterfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFSGISPROC agx_custom_glad_glPointParameterfSGIS;
#define glPointParameterfSGIS agx_custom_glad_glPointParameterfSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFVPROC agx_custom_glad_glPointParameterfv;
#define glPointParameterfv agx_custom_glad_glPointParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFVARBPROC agx_custom_glad_glPointParameterfvARB;
#define glPointParameterfvARB agx_custom_glad_glPointParameterfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFVEXTPROC agx_custom_glad_glPointParameterfvEXT;
#define glPointParameterfvEXT agx_custom_glad_glPointParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERFVSGISPROC agx_custom_glad_glPointParameterfvSGIS;
#define glPointParameterfvSGIS agx_custom_glad_glPointParameterfvSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERIPROC agx_custom_glad_glPointParameteri;
#define glPointParameteri agx_custom_glad_glPointParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERINVPROC agx_custom_glad_glPointParameteriNV;
#define glPointParameteriNV agx_custom_glad_glPointParameteriNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERIVPROC agx_custom_glad_glPointParameteriv;
#define glPointParameteriv agx_custom_glad_glPointParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERIVNVPROC agx_custom_glad_glPointParameterivNV;
#define glPointParameterivNV agx_custom_glad_glPointParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTPARAMETERXVOESPROC agx_custom_glad_glPointParameterxvOES;
#define glPointParameterxvOES agx_custom_glad_glPointParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTSIZEPROC agx_custom_glad_glPointSize;
#define glPointSize agx_custom_glad_glPointSize
AGX_CUSTOM_GLAD_API_CALL PFNGLPOINTSIZEXOESPROC agx_custom_glad_glPointSizexOES;
#define glPointSizexOES agx_custom_glad_glPointSizexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLLASYNCSGIXPROC agx_custom_glad_glPollAsyncSGIX;
#define glPollAsyncSGIX agx_custom_glad_glPollAsyncSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLLINSTRUMENTSSGIXPROC agx_custom_glad_glPollInstrumentsSGIX;
#define glPollInstrumentsSGIX agx_custom_glad_glPollInstrumentsSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONMODEPROC agx_custom_glad_glPolygonMode;
#define glPolygonMode agx_custom_glad_glPolygonMode
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONOFFSETPROC agx_custom_glad_glPolygonOffset;
#define glPolygonOffset agx_custom_glad_glPolygonOffset
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONOFFSETCLAMPPROC agx_custom_glad_glPolygonOffsetClamp;
#define glPolygonOffsetClamp agx_custom_glad_glPolygonOffsetClamp
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONOFFSETCLAMPEXTPROC agx_custom_glad_glPolygonOffsetClampEXT;
#define glPolygonOffsetClampEXT agx_custom_glad_glPolygonOffsetClampEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONOFFSETEXTPROC agx_custom_glad_glPolygonOffsetEXT;
#define glPolygonOffsetEXT agx_custom_glad_glPolygonOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONOFFSETXOESPROC agx_custom_glad_glPolygonOffsetxOES;
#define glPolygonOffsetxOES agx_custom_glad_glPolygonOffsetxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPOLYGONSTIPPLEPROC agx_custom_glad_glPolygonStipple;
#define glPolygonStipple agx_custom_glad_glPolygonStipple
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPATTRIBPROC agx_custom_glad_glPopAttrib;
#define glPopAttrib agx_custom_glad_glPopAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPCLIENTATTRIBPROC agx_custom_glad_glPopClientAttrib;
#define glPopClientAttrib agx_custom_glad_glPopClientAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPDEBUGGROUPPROC agx_custom_glad_glPopDebugGroup;
#define glPopDebugGroup agx_custom_glad_glPopDebugGroup
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPGROUPMARKEREXTPROC agx_custom_glad_glPopGroupMarkerEXT;
#define glPopGroupMarkerEXT agx_custom_glad_glPopGroupMarkerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPMATRIXPROC agx_custom_glad_glPopMatrix;
#define glPopMatrix agx_custom_glad_glPopMatrix
AGX_CUSTOM_GLAD_API_CALL PFNGLPOPNAMEPROC agx_custom_glad_glPopName;
#define glPopName agx_custom_glad_glPopName
AGX_CUSTOM_GLAD_API_CALL PFNGLPRESENTFRAMEDUALFILLNVPROC agx_custom_glad_glPresentFrameDualFillNV;
#define glPresentFrameDualFillNV agx_custom_glad_glPresentFrameDualFillNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPRESENTFRAMEKEYEDNVPROC agx_custom_glad_glPresentFrameKeyedNV;
#define glPresentFrameKeyedNV agx_custom_glad_glPresentFrameKeyedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIMITIVEBOUNDINGBOXARBPROC agx_custom_glad_glPrimitiveBoundingBoxARB;
#define glPrimitiveBoundingBoxARB agx_custom_glad_glPrimitiveBoundingBoxARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIMITIVERESTARTINDEXPROC agx_custom_glad_glPrimitiveRestartIndex;
#define glPrimitiveRestartIndex agx_custom_glad_glPrimitiveRestartIndex
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIMITIVERESTARTINDEXNVPROC agx_custom_glad_glPrimitiveRestartIndexNV;
#define glPrimitiveRestartIndexNV agx_custom_glad_glPrimitiveRestartIndexNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIMITIVERESTARTNVPROC agx_custom_glad_glPrimitiveRestartNV;
#define glPrimitiveRestartNV agx_custom_glad_glPrimitiveRestartNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIORITIZETEXTURESPROC agx_custom_glad_glPrioritizeTextures;
#define glPrioritizeTextures agx_custom_glad_glPrioritizeTextures
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIORITIZETEXTURESEXTPROC agx_custom_glad_glPrioritizeTexturesEXT;
#define glPrioritizeTexturesEXT agx_custom_glad_glPrioritizeTexturesEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPRIORITIZETEXTURESXOESPROC agx_custom_glad_glPrioritizeTexturesxOES;
#define glPrioritizeTexturesxOES agx_custom_glad_glPrioritizeTexturesxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMBINARYPROC agx_custom_glad_glProgramBinary;
#define glProgramBinary agx_custom_glad_glProgramBinary
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC agx_custom_glad_glProgramBufferParametersIivNV;
#define glProgramBufferParametersIivNV agx_custom_glad_glProgramBufferParametersIivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC agx_custom_glad_glProgramBufferParametersIuivNV;
#define glProgramBufferParametersIuivNV agx_custom_glad_glProgramBufferParametersIuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC agx_custom_glad_glProgramBufferParametersfvNV;
#define glProgramBufferParametersfvNV agx_custom_glad_glProgramBufferParametersfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETER4DARBPROC agx_custom_glad_glProgramEnvParameter4dARB;
#define glProgramEnvParameter4dARB agx_custom_glad_glProgramEnvParameter4dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETER4DVARBPROC agx_custom_glad_glProgramEnvParameter4dvARB;
#define glProgramEnvParameter4dvARB agx_custom_glad_glProgramEnvParameter4dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETER4FARBPROC agx_custom_glad_glProgramEnvParameter4fARB;
#define glProgramEnvParameter4fARB agx_custom_glad_glProgramEnvParameter4fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETER4FVARBPROC agx_custom_glad_glProgramEnvParameter4fvARB;
#define glProgramEnvParameter4fvARB agx_custom_glad_glProgramEnvParameter4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERI4INVPROC agx_custom_glad_glProgramEnvParameterI4iNV;
#define glProgramEnvParameterI4iNV agx_custom_glad_glProgramEnvParameterI4iNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERI4IVNVPROC agx_custom_glad_glProgramEnvParameterI4ivNV;
#define glProgramEnvParameterI4ivNV agx_custom_glad_glProgramEnvParameterI4ivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERI4UINVPROC agx_custom_glad_glProgramEnvParameterI4uiNV;
#define glProgramEnvParameterI4uiNV agx_custom_glad_glProgramEnvParameterI4uiNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERI4UIVNVPROC agx_custom_glad_glProgramEnvParameterI4uivNV;
#define glProgramEnvParameterI4uivNV agx_custom_glad_glProgramEnvParameterI4uivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERS4FVEXTPROC agx_custom_glad_glProgramEnvParameters4fvEXT;
#define glProgramEnvParameters4fvEXT agx_custom_glad_glProgramEnvParameters4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERSI4IVNVPROC agx_custom_glad_glProgramEnvParametersI4ivNV;
#define glProgramEnvParametersI4ivNV agx_custom_glad_glProgramEnvParametersI4ivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC agx_custom_glad_glProgramEnvParametersI4uivNV;
#define glProgramEnvParametersI4uivNV agx_custom_glad_glProgramEnvParametersI4uivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETER4DARBPROC agx_custom_glad_glProgramLocalParameter4dARB;
#define glProgramLocalParameter4dARB agx_custom_glad_glProgramLocalParameter4dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETER4DVARBPROC agx_custom_glad_glProgramLocalParameter4dvARB;
#define glProgramLocalParameter4dvARB agx_custom_glad_glProgramLocalParameter4dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETER4FARBPROC agx_custom_glad_glProgramLocalParameter4fARB;
#define glProgramLocalParameter4fARB agx_custom_glad_glProgramLocalParameter4fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETER4FVARBPROC agx_custom_glad_glProgramLocalParameter4fvARB;
#define glProgramLocalParameter4fvARB agx_custom_glad_glProgramLocalParameter4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERI4INVPROC agx_custom_glad_glProgramLocalParameterI4iNV;
#define glProgramLocalParameterI4iNV agx_custom_glad_glProgramLocalParameterI4iNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC agx_custom_glad_glProgramLocalParameterI4ivNV;
#define glProgramLocalParameterI4ivNV agx_custom_glad_glProgramLocalParameterI4ivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERI4UINVPROC agx_custom_glad_glProgramLocalParameterI4uiNV;
#define glProgramLocalParameterI4uiNV agx_custom_glad_glProgramLocalParameterI4uiNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC agx_custom_glad_glProgramLocalParameterI4uivNV;
#define glProgramLocalParameterI4uivNV agx_custom_glad_glProgramLocalParameterI4uivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC agx_custom_glad_glProgramLocalParameters4fvEXT;
#define glProgramLocalParameters4fvEXT agx_custom_glad_glProgramLocalParameters4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC agx_custom_glad_glProgramLocalParametersI4ivNV;
#define glProgramLocalParametersI4ivNV agx_custom_glad_glProgramLocalParametersI4ivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC agx_custom_glad_glProgramLocalParametersI4uivNV;
#define glProgramLocalParametersI4uivNV agx_custom_glad_glProgramLocalParametersI4uivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMNAMEDPARAMETER4DNVPROC agx_custom_glad_glProgramNamedParameter4dNV;
#define glProgramNamedParameter4dNV agx_custom_glad_glProgramNamedParameter4dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC agx_custom_glad_glProgramNamedParameter4dvNV;
#define glProgramNamedParameter4dvNV agx_custom_glad_glProgramNamedParameter4dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMNAMEDPARAMETER4FNVPROC agx_custom_glad_glProgramNamedParameter4fNV;
#define glProgramNamedParameter4fNV agx_custom_glad_glProgramNamedParameter4fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC agx_custom_glad_glProgramNamedParameter4fvNV;
#define glProgramNamedParameter4fvNV agx_custom_glad_glProgramNamedParameter4fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETER4DNVPROC agx_custom_glad_glProgramParameter4dNV;
#define glProgramParameter4dNV agx_custom_glad_glProgramParameter4dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETER4DVNVPROC agx_custom_glad_glProgramParameter4dvNV;
#define glProgramParameter4dvNV agx_custom_glad_glProgramParameter4dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETER4FNVPROC agx_custom_glad_glProgramParameter4fNV;
#define glProgramParameter4fNV agx_custom_glad_glProgramParameter4fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETER4FVNVPROC agx_custom_glad_glProgramParameter4fvNV;
#define glProgramParameter4fvNV agx_custom_glad_glProgramParameter4fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETERIPROC agx_custom_glad_glProgramParameteri;
#define glProgramParameteri agx_custom_glad_glProgramParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETERIARBPROC agx_custom_glad_glProgramParameteriARB;
#define glProgramParameteriARB agx_custom_glad_glProgramParameteriARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETERIEXTPROC agx_custom_glad_glProgramParameteriEXT;
#define glProgramParameteriEXT agx_custom_glad_glProgramParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETERS4DVNVPROC agx_custom_glad_glProgramParameters4dvNV;
#define glProgramParameters4dvNV agx_custom_glad_glProgramParameters4dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPARAMETERS4FVNVPROC agx_custom_glad_glProgramParameters4fvNV;
#define glProgramParameters4fvNV agx_custom_glad_glProgramParameters4fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC agx_custom_glad_glProgramPathFragmentInputGenNV;
#define glProgramPathFragmentInputGenNV agx_custom_glad_glProgramPathFragmentInputGenNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMSTRINGARBPROC agx_custom_glad_glProgramStringARB;
#define glProgramStringARB agx_custom_glad_glProgramStringARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC agx_custom_glad_glProgramSubroutineParametersuivNV;
#define glProgramSubroutineParametersuivNV agx_custom_glad_glProgramSubroutineParametersuivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DPROC agx_custom_glad_glProgramUniform1d;
#define glProgramUniform1d agx_custom_glad_glProgramUniform1d
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DEXTPROC agx_custom_glad_glProgramUniform1dEXT;
#define glProgramUniform1dEXT agx_custom_glad_glProgramUniform1dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DVPROC agx_custom_glad_glProgramUniform1dv;
#define glProgramUniform1dv agx_custom_glad_glProgramUniform1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DVEXTPROC agx_custom_glad_glProgramUniform1dvEXT;
#define glProgramUniform1dvEXT agx_custom_glad_glProgramUniform1dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FPROC agx_custom_glad_glProgramUniform1f;
#define glProgramUniform1f agx_custom_glad_glProgramUniform1f
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FEXTPROC agx_custom_glad_glProgramUniform1fEXT;
#define glProgramUniform1fEXT agx_custom_glad_glProgramUniform1fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FVPROC agx_custom_glad_glProgramUniform1fv;
#define glProgramUniform1fv agx_custom_glad_glProgramUniform1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FVEXTPROC agx_custom_glad_glProgramUniform1fvEXT;
#define glProgramUniform1fvEXT agx_custom_glad_glProgramUniform1fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IPROC agx_custom_glad_glProgramUniform1i;
#define glProgramUniform1i agx_custom_glad_glProgramUniform1i
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1I64ARBPROC agx_custom_glad_glProgramUniform1i64ARB;
#define glProgramUniform1i64ARB agx_custom_glad_glProgramUniform1i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1I64NVPROC agx_custom_glad_glProgramUniform1i64NV;
#define glProgramUniform1i64NV agx_custom_glad_glProgramUniform1i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1I64VARBPROC agx_custom_glad_glProgramUniform1i64vARB;
#define glProgramUniform1i64vARB agx_custom_glad_glProgramUniform1i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1I64VNVPROC agx_custom_glad_glProgramUniform1i64vNV;
#define glProgramUniform1i64vNV agx_custom_glad_glProgramUniform1i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IEXTPROC agx_custom_glad_glProgramUniform1iEXT;
#define glProgramUniform1iEXT agx_custom_glad_glProgramUniform1iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IVPROC agx_custom_glad_glProgramUniform1iv;
#define glProgramUniform1iv agx_custom_glad_glProgramUniform1iv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IVEXTPROC agx_custom_glad_glProgramUniform1ivEXT;
#define glProgramUniform1ivEXT agx_custom_glad_glProgramUniform1ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIPROC agx_custom_glad_glProgramUniform1ui;
#define glProgramUniform1ui agx_custom_glad_glProgramUniform1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UI64ARBPROC agx_custom_glad_glProgramUniform1ui64ARB;
#define glProgramUniform1ui64ARB agx_custom_glad_glProgramUniform1ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UI64NVPROC agx_custom_glad_glProgramUniform1ui64NV;
#define glProgramUniform1ui64NV agx_custom_glad_glProgramUniform1ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UI64VARBPROC agx_custom_glad_glProgramUniform1ui64vARB;
#define glProgramUniform1ui64vARB agx_custom_glad_glProgramUniform1ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UI64VNVPROC agx_custom_glad_glProgramUniform1ui64vNV;
#define glProgramUniform1ui64vNV agx_custom_glad_glProgramUniform1ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIEXTPROC agx_custom_glad_glProgramUniform1uiEXT;
#define glProgramUniform1uiEXT agx_custom_glad_glProgramUniform1uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIVPROC agx_custom_glad_glProgramUniform1uiv;
#define glProgramUniform1uiv agx_custom_glad_glProgramUniform1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIVEXTPROC agx_custom_glad_glProgramUniform1uivEXT;
#define glProgramUniform1uivEXT agx_custom_glad_glProgramUniform1uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DPROC agx_custom_glad_glProgramUniform2d;
#define glProgramUniform2d agx_custom_glad_glProgramUniform2d
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DEXTPROC agx_custom_glad_glProgramUniform2dEXT;
#define glProgramUniform2dEXT agx_custom_glad_glProgramUniform2dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DVPROC agx_custom_glad_glProgramUniform2dv;
#define glProgramUniform2dv agx_custom_glad_glProgramUniform2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DVEXTPROC agx_custom_glad_glProgramUniform2dvEXT;
#define glProgramUniform2dvEXT agx_custom_glad_glProgramUniform2dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FPROC agx_custom_glad_glProgramUniform2f;
#define glProgramUniform2f agx_custom_glad_glProgramUniform2f
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FEXTPROC agx_custom_glad_glProgramUniform2fEXT;
#define glProgramUniform2fEXT agx_custom_glad_glProgramUniform2fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FVPROC agx_custom_glad_glProgramUniform2fv;
#define glProgramUniform2fv agx_custom_glad_glProgramUniform2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FVEXTPROC agx_custom_glad_glProgramUniform2fvEXT;
#define glProgramUniform2fvEXT agx_custom_glad_glProgramUniform2fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IPROC agx_custom_glad_glProgramUniform2i;
#define glProgramUniform2i agx_custom_glad_glProgramUniform2i
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2I64ARBPROC agx_custom_glad_glProgramUniform2i64ARB;
#define glProgramUniform2i64ARB agx_custom_glad_glProgramUniform2i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2I64NVPROC agx_custom_glad_glProgramUniform2i64NV;
#define glProgramUniform2i64NV agx_custom_glad_glProgramUniform2i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2I64VARBPROC agx_custom_glad_glProgramUniform2i64vARB;
#define glProgramUniform2i64vARB agx_custom_glad_glProgramUniform2i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2I64VNVPROC agx_custom_glad_glProgramUniform2i64vNV;
#define glProgramUniform2i64vNV agx_custom_glad_glProgramUniform2i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IEXTPROC agx_custom_glad_glProgramUniform2iEXT;
#define glProgramUniform2iEXT agx_custom_glad_glProgramUniform2iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IVPROC agx_custom_glad_glProgramUniform2iv;
#define glProgramUniform2iv agx_custom_glad_glProgramUniform2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IVEXTPROC agx_custom_glad_glProgramUniform2ivEXT;
#define glProgramUniform2ivEXT agx_custom_glad_glProgramUniform2ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIPROC agx_custom_glad_glProgramUniform2ui;
#define glProgramUniform2ui agx_custom_glad_glProgramUniform2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UI64ARBPROC agx_custom_glad_glProgramUniform2ui64ARB;
#define glProgramUniform2ui64ARB agx_custom_glad_glProgramUniform2ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UI64NVPROC agx_custom_glad_glProgramUniform2ui64NV;
#define glProgramUniform2ui64NV agx_custom_glad_glProgramUniform2ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UI64VARBPROC agx_custom_glad_glProgramUniform2ui64vARB;
#define glProgramUniform2ui64vARB agx_custom_glad_glProgramUniform2ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UI64VNVPROC agx_custom_glad_glProgramUniform2ui64vNV;
#define glProgramUniform2ui64vNV agx_custom_glad_glProgramUniform2ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIEXTPROC agx_custom_glad_glProgramUniform2uiEXT;
#define glProgramUniform2uiEXT agx_custom_glad_glProgramUniform2uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIVPROC agx_custom_glad_glProgramUniform2uiv;
#define glProgramUniform2uiv agx_custom_glad_glProgramUniform2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIVEXTPROC agx_custom_glad_glProgramUniform2uivEXT;
#define glProgramUniform2uivEXT agx_custom_glad_glProgramUniform2uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DPROC agx_custom_glad_glProgramUniform3d;
#define glProgramUniform3d agx_custom_glad_glProgramUniform3d
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DEXTPROC agx_custom_glad_glProgramUniform3dEXT;
#define glProgramUniform3dEXT agx_custom_glad_glProgramUniform3dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DVPROC agx_custom_glad_glProgramUniform3dv;
#define glProgramUniform3dv agx_custom_glad_glProgramUniform3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DVEXTPROC agx_custom_glad_glProgramUniform3dvEXT;
#define glProgramUniform3dvEXT agx_custom_glad_glProgramUniform3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FPROC agx_custom_glad_glProgramUniform3f;
#define glProgramUniform3f agx_custom_glad_glProgramUniform3f
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FEXTPROC agx_custom_glad_glProgramUniform3fEXT;
#define glProgramUniform3fEXT agx_custom_glad_glProgramUniform3fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FVPROC agx_custom_glad_glProgramUniform3fv;
#define glProgramUniform3fv agx_custom_glad_glProgramUniform3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FVEXTPROC agx_custom_glad_glProgramUniform3fvEXT;
#define glProgramUniform3fvEXT agx_custom_glad_glProgramUniform3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IPROC agx_custom_glad_glProgramUniform3i;
#define glProgramUniform3i agx_custom_glad_glProgramUniform3i
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3I64ARBPROC agx_custom_glad_glProgramUniform3i64ARB;
#define glProgramUniform3i64ARB agx_custom_glad_glProgramUniform3i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3I64NVPROC agx_custom_glad_glProgramUniform3i64NV;
#define glProgramUniform3i64NV agx_custom_glad_glProgramUniform3i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3I64VARBPROC agx_custom_glad_glProgramUniform3i64vARB;
#define glProgramUniform3i64vARB agx_custom_glad_glProgramUniform3i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3I64VNVPROC agx_custom_glad_glProgramUniform3i64vNV;
#define glProgramUniform3i64vNV agx_custom_glad_glProgramUniform3i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IEXTPROC agx_custom_glad_glProgramUniform3iEXT;
#define glProgramUniform3iEXT agx_custom_glad_glProgramUniform3iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IVPROC agx_custom_glad_glProgramUniform3iv;
#define glProgramUniform3iv agx_custom_glad_glProgramUniform3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IVEXTPROC agx_custom_glad_glProgramUniform3ivEXT;
#define glProgramUniform3ivEXT agx_custom_glad_glProgramUniform3ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIPROC agx_custom_glad_glProgramUniform3ui;
#define glProgramUniform3ui agx_custom_glad_glProgramUniform3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UI64ARBPROC agx_custom_glad_glProgramUniform3ui64ARB;
#define glProgramUniform3ui64ARB agx_custom_glad_glProgramUniform3ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UI64NVPROC agx_custom_glad_glProgramUniform3ui64NV;
#define glProgramUniform3ui64NV agx_custom_glad_glProgramUniform3ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UI64VARBPROC agx_custom_glad_glProgramUniform3ui64vARB;
#define glProgramUniform3ui64vARB agx_custom_glad_glProgramUniform3ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UI64VNVPROC agx_custom_glad_glProgramUniform3ui64vNV;
#define glProgramUniform3ui64vNV agx_custom_glad_glProgramUniform3ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIEXTPROC agx_custom_glad_glProgramUniform3uiEXT;
#define glProgramUniform3uiEXT agx_custom_glad_glProgramUniform3uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIVPROC agx_custom_glad_glProgramUniform3uiv;
#define glProgramUniform3uiv agx_custom_glad_glProgramUniform3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIVEXTPROC agx_custom_glad_glProgramUniform3uivEXT;
#define glProgramUniform3uivEXT agx_custom_glad_glProgramUniform3uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DPROC agx_custom_glad_glProgramUniform4d;
#define glProgramUniform4d agx_custom_glad_glProgramUniform4d
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DEXTPROC agx_custom_glad_glProgramUniform4dEXT;
#define glProgramUniform4dEXT agx_custom_glad_glProgramUniform4dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DVPROC agx_custom_glad_glProgramUniform4dv;
#define glProgramUniform4dv agx_custom_glad_glProgramUniform4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DVEXTPROC agx_custom_glad_glProgramUniform4dvEXT;
#define glProgramUniform4dvEXT agx_custom_glad_glProgramUniform4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FPROC agx_custom_glad_glProgramUniform4f;
#define glProgramUniform4f agx_custom_glad_glProgramUniform4f
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FEXTPROC agx_custom_glad_glProgramUniform4fEXT;
#define glProgramUniform4fEXT agx_custom_glad_glProgramUniform4fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FVPROC agx_custom_glad_glProgramUniform4fv;
#define glProgramUniform4fv agx_custom_glad_glProgramUniform4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FVEXTPROC agx_custom_glad_glProgramUniform4fvEXT;
#define glProgramUniform4fvEXT agx_custom_glad_glProgramUniform4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IPROC agx_custom_glad_glProgramUniform4i;
#define glProgramUniform4i agx_custom_glad_glProgramUniform4i
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4I64ARBPROC agx_custom_glad_glProgramUniform4i64ARB;
#define glProgramUniform4i64ARB agx_custom_glad_glProgramUniform4i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4I64NVPROC agx_custom_glad_glProgramUniform4i64NV;
#define glProgramUniform4i64NV agx_custom_glad_glProgramUniform4i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4I64VARBPROC agx_custom_glad_glProgramUniform4i64vARB;
#define glProgramUniform4i64vARB agx_custom_glad_glProgramUniform4i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4I64VNVPROC agx_custom_glad_glProgramUniform4i64vNV;
#define glProgramUniform4i64vNV agx_custom_glad_glProgramUniform4i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IEXTPROC agx_custom_glad_glProgramUniform4iEXT;
#define glProgramUniform4iEXT agx_custom_glad_glProgramUniform4iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IVPROC agx_custom_glad_glProgramUniform4iv;
#define glProgramUniform4iv agx_custom_glad_glProgramUniform4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IVEXTPROC agx_custom_glad_glProgramUniform4ivEXT;
#define glProgramUniform4ivEXT agx_custom_glad_glProgramUniform4ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIPROC agx_custom_glad_glProgramUniform4ui;
#define glProgramUniform4ui agx_custom_glad_glProgramUniform4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UI64ARBPROC agx_custom_glad_glProgramUniform4ui64ARB;
#define glProgramUniform4ui64ARB agx_custom_glad_glProgramUniform4ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UI64NVPROC agx_custom_glad_glProgramUniform4ui64NV;
#define glProgramUniform4ui64NV agx_custom_glad_glProgramUniform4ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UI64VARBPROC agx_custom_glad_glProgramUniform4ui64vARB;
#define glProgramUniform4ui64vARB agx_custom_glad_glProgramUniform4ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UI64VNVPROC agx_custom_glad_glProgramUniform4ui64vNV;
#define glProgramUniform4ui64vNV agx_custom_glad_glProgramUniform4ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIEXTPROC agx_custom_glad_glProgramUniform4uiEXT;
#define glProgramUniform4uiEXT agx_custom_glad_glProgramUniform4uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIVPROC agx_custom_glad_glProgramUniform4uiv;
#define glProgramUniform4uiv agx_custom_glad_glProgramUniform4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIVEXTPROC agx_custom_glad_glProgramUniform4uivEXT;
#define glProgramUniform4uivEXT agx_custom_glad_glProgramUniform4uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC agx_custom_glad_glProgramUniformHandleui64ARB;
#define glProgramUniformHandleui64ARB agx_custom_glad_glProgramUniformHandleui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC agx_custom_glad_glProgramUniformHandleui64NV;
#define glProgramUniformHandleui64NV agx_custom_glad_glProgramUniformHandleui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC agx_custom_glad_glProgramUniformHandleui64vARB;
#define glProgramUniformHandleui64vARB agx_custom_glad_glProgramUniformHandleui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC agx_custom_glad_glProgramUniformHandleui64vNV;
#define glProgramUniformHandleui64vNV agx_custom_glad_glProgramUniformHandleui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2DVPROC agx_custom_glad_glProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv agx_custom_glad_glProgramUniformMatrix2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC agx_custom_glad_glProgramUniformMatrix2dvEXT;
#define glProgramUniformMatrix2dvEXT agx_custom_glad_glProgramUniformMatrix2dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2FVPROC agx_custom_glad_glProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv agx_custom_glad_glProgramUniformMatrix2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC agx_custom_glad_glProgramUniformMatrix2fvEXT;
#define glProgramUniformMatrix2fvEXT agx_custom_glad_glProgramUniformMatrix2fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC agx_custom_glad_glProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv agx_custom_glad_glProgramUniformMatrix2x3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC agx_custom_glad_glProgramUniformMatrix2x3dvEXT;
#define glProgramUniformMatrix2x3dvEXT agx_custom_glad_glProgramUniformMatrix2x3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC agx_custom_glad_glProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv agx_custom_glad_glProgramUniformMatrix2x3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC agx_custom_glad_glProgramUniformMatrix2x3fvEXT;
#define glProgramUniformMatrix2x3fvEXT agx_custom_glad_glProgramUniformMatrix2x3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC agx_custom_glad_glProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv agx_custom_glad_glProgramUniformMatrix2x4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC agx_custom_glad_glProgramUniformMatrix2x4dvEXT;
#define glProgramUniformMatrix2x4dvEXT agx_custom_glad_glProgramUniformMatrix2x4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC agx_custom_glad_glProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv agx_custom_glad_glProgramUniformMatrix2x4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC agx_custom_glad_glProgramUniformMatrix2x4fvEXT;
#define glProgramUniformMatrix2x4fvEXT agx_custom_glad_glProgramUniformMatrix2x4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3DVPROC agx_custom_glad_glProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv agx_custom_glad_glProgramUniformMatrix3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC agx_custom_glad_glProgramUniformMatrix3dvEXT;
#define glProgramUniformMatrix3dvEXT agx_custom_glad_glProgramUniformMatrix3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3FVPROC agx_custom_glad_glProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv agx_custom_glad_glProgramUniformMatrix3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC agx_custom_glad_glProgramUniformMatrix3fvEXT;
#define glProgramUniformMatrix3fvEXT agx_custom_glad_glProgramUniformMatrix3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC agx_custom_glad_glProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv agx_custom_glad_glProgramUniformMatrix3x2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC agx_custom_glad_glProgramUniformMatrix3x2dvEXT;
#define glProgramUniformMatrix3x2dvEXT agx_custom_glad_glProgramUniformMatrix3x2dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC agx_custom_glad_glProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv agx_custom_glad_glProgramUniformMatrix3x2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC agx_custom_glad_glProgramUniformMatrix3x2fvEXT;
#define glProgramUniformMatrix3x2fvEXT agx_custom_glad_glProgramUniformMatrix3x2fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC agx_custom_glad_glProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv agx_custom_glad_glProgramUniformMatrix3x4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC agx_custom_glad_glProgramUniformMatrix3x4dvEXT;
#define glProgramUniformMatrix3x4dvEXT agx_custom_glad_glProgramUniformMatrix3x4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC agx_custom_glad_glProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv agx_custom_glad_glProgramUniformMatrix3x4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC agx_custom_glad_glProgramUniformMatrix3x4fvEXT;
#define glProgramUniformMatrix3x4fvEXT agx_custom_glad_glProgramUniformMatrix3x4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4DVPROC agx_custom_glad_glProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv agx_custom_glad_glProgramUniformMatrix4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC agx_custom_glad_glProgramUniformMatrix4dvEXT;
#define glProgramUniformMatrix4dvEXT agx_custom_glad_glProgramUniformMatrix4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4FVPROC agx_custom_glad_glProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv agx_custom_glad_glProgramUniformMatrix4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC agx_custom_glad_glProgramUniformMatrix4fvEXT;
#define glProgramUniformMatrix4fvEXT agx_custom_glad_glProgramUniformMatrix4fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC agx_custom_glad_glProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv agx_custom_glad_glProgramUniformMatrix4x2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC agx_custom_glad_glProgramUniformMatrix4x2dvEXT;
#define glProgramUniformMatrix4x2dvEXT agx_custom_glad_glProgramUniformMatrix4x2dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC agx_custom_glad_glProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv agx_custom_glad_glProgramUniformMatrix4x2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC agx_custom_glad_glProgramUniformMatrix4x2fvEXT;
#define glProgramUniformMatrix4x2fvEXT agx_custom_glad_glProgramUniformMatrix4x2fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC agx_custom_glad_glProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv agx_custom_glad_glProgramUniformMatrix4x3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC agx_custom_glad_glProgramUniformMatrix4x3dvEXT;
#define glProgramUniformMatrix4x3dvEXT agx_custom_glad_glProgramUniformMatrix4x3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC agx_custom_glad_glProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv agx_custom_glad_glProgramUniformMatrix4x3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC agx_custom_glad_glProgramUniformMatrix4x3fvEXT;
#define glProgramUniformMatrix4x3fvEXT agx_custom_glad_glProgramUniformMatrix4x3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMUI64NVPROC agx_custom_glad_glProgramUniformui64NV;
#define glProgramUniformui64NV agx_custom_glad_glProgramUniformui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMUNIFORMUI64VNVPROC agx_custom_glad_glProgramUniformui64vNV;
#define glProgramUniformui64vNV agx_custom_glad_glProgramUniformui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROGRAMVERTEXLIMITNVPROC agx_custom_glad_glProgramVertexLimitNV;
#define glProgramVertexLimitNV agx_custom_glad_glProgramVertexLimitNV
AGX_CUSTOM_GLAD_API_CALL PFNGLPROVOKINGVERTEXPROC agx_custom_glad_glProvokingVertex;
#define glProvokingVertex agx_custom_glad_glProvokingVertex
AGX_CUSTOM_GLAD_API_CALL PFNGLPROVOKINGVERTEXEXTPROC agx_custom_glad_glProvokingVertexEXT;
#define glProvokingVertexEXT agx_custom_glad_glProvokingVertexEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHATTRIBPROC agx_custom_glad_glPushAttrib;
#define glPushAttrib agx_custom_glad_glPushAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHCLIENTATTRIBPROC agx_custom_glad_glPushClientAttrib;
#define glPushClientAttrib agx_custom_glad_glPushClientAttrib
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC agx_custom_glad_glPushClientAttribDefaultEXT;
#define glPushClientAttribDefaultEXT agx_custom_glad_glPushClientAttribDefaultEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHDEBUGGROUPPROC agx_custom_glad_glPushDebugGroup;
#define glPushDebugGroup agx_custom_glad_glPushDebugGroup
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHGROUPMARKEREXTPROC agx_custom_glad_glPushGroupMarkerEXT;
#define glPushGroupMarkerEXT agx_custom_glad_glPushGroupMarkerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHMATRIXPROC agx_custom_glad_glPushMatrix;
#define glPushMatrix agx_custom_glad_glPushMatrix
AGX_CUSTOM_GLAD_API_CALL PFNGLPUSHNAMEPROC agx_custom_glad_glPushName;
#define glPushName agx_custom_glad_glPushName
AGX_CUSTOM_GLAD_API_CALL PFNGLQUERYCOUNTERPROC agx_custom_glad_glQueryCounter;
#define glQueryCounter agx_custom_glad_glQueryCounter
AGX_CUSTOM_GLAD_API_CALL PFNGLQUERYMATRIXXOESPROC agx_custom_glad_glQueryMatrixxOES;
#define glQueryMatrixxOES agx_custom_glad_glQueryMatrixxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLQUERYOBJECTPARAMETERUIAMDPROC agx_custom_glad_glQueryObjectParameteruiAMD;
#define glQueryObjectParameteruiAMD agx_custom_glad_glQueryObjectParameteruiAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLQUERYRESOURCENVPROC agx_custom_glad_glQueryResourceNV;
#define glQueryResourceNV agx_custom_glad_glQueryResourceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLQUERYRESOURCETAGNVPROC agx_custom_glad_glQueryResourceTagNV;
#define glQueryResourceTagNV agx_custom_glad_glQueryResourceTagNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2DPROC agx_custom_glad_glRasterPos2d;
#define glRasterPos2d agx_custom_glad_glRasterPos2d
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2DVPROC agx_custom_glad_glRasterPos2dv;
#define glRasterPos2dv agx_custom_glad_glRasterPos2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2FPROC agx_custom_glad_glRasterPos2f;
#define glRasterPos2f agx_custom_glad_glRasterPos2f
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2FVPROC agx_custom_glad_glRasterPos2fv;
#define glRasterPos2fv agx_custom_glad_glRasterPos2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2IPROC agx_custom_glad_glRasterPos2i;
#define glRasterPos2i agx_custom_glad_glRasterPos2i
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2IVPROC agx_custom_glad_glRasterPos2iv;
#define glRasterPos2iv agx_custom_glad_glRasterPos2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2SPROC agx_custom_glad_glRasterPos2s;
#define glRasterPos2s agx_custom_glad_glRasterPos2s
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2SVPROC agx_custom_glad_glRasterPos2sv;
#define glRasterPos2sv agx_custom_glad_glRasterPos2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2XOESPROC agx_custom_glad_glRasterPos2xOES;
#define glRasterPos2xOES agx_custom_glad_glRasterPos2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS2XVOESPROC agx_custom_glad_glRasterPos2xvOES;
#define glRasterPos2xvOES agx_custom_glad_glRasterPos2xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3DPROC agx_custom_glad_glRasterPos3d;
#define glRasterPos3d agx_custom_glad_glRasterPos3d
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3DVPROC agx_custom_glad_glRasterPos3dv;
#define glRasterPos3dv agx_custom_glad_glRasterPos3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3FPROC agx_custom_glad_glRasterPos3f;
#define glRasterPos3f agx_custom_glad_glRasterPos3f
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3FVPROC agx_custom_glad_glRasterPos3fv;
#define glRasterPos3fv agx_custom_glad_glRasterPos3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3IPROC agx_custom_glad_glRasterPos3i;
#define glRasterPos3i agx_custom_glad_glRasterPos3i
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3IVPROC agx_custom_glad_glRasterPos3iv;
#define glRasterPos3iv agx_custom_glad_glRasterPos3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3SPROC agx_custom_glad_glRasterPos3s;
#define glRasterPos3s agx_custom_glad_glRasterPos3s
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3SVPROC agx_custom_glad_glRasterPos3sv;
#define glRasterPos3sv agx_custom_glad_glRasterPos3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3XOESPROC agx_custom_glad_glRasterPos3xOES;
#define glRasterPos3xOES agx_custom_glad_glRasterPos3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS3XVOESPROC agx_custom_glad_glRasterPos3xvOES;
#define glRasterPos3xvOES agx_custom_glad_glRasterPos3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4DPROC agx_custom_glad_glRasterPos4d;
#define glRasterPos4d agx_custom_glad_glRasterPos4d
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4DVPROC agx_custom_glad_glRasterPos4dv;
#define glRasterPos4dv agx_custom_glad_glRasterPos4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4FPROC agx_custom_glad_glRasterPos4f;
#define glRasterPos4f agx_custom_glad_glRasterPos4f
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4FVPROC agx_custom_glad_glRasterPos4fv;
#define glRasterPos4fv agx_custom_glad_glRasterPos4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4IPROC agx_custom_glad_glRasterPos4i;
#define glRasterPos4i agx_custom_glad_glRasterPos4i
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4IVPROC agx_custom_glad_glRasterPos4iv;
#define glRasterPos4iv agx_custom_glad_glRasterPos4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4SPROC agx_custom_glad_glRasterPos4s;
#define glRasterPos4s agx_custom_glad_glRasterPos4s
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4SVPROC agx_custom_glad_glRasterPos4sv;
#define glRasterPos4sv agx_custom_glad_glRasterPos4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4XOESPROC agx_custom_glad_glRasterPos4xOES;
#define glRasterPos4xOES agx_custom_glad_glRasterPos4xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERPOS4XVOESPROC agx_custom_glad_glRasterPos4xvOES;
#define glRasterPos4xvOES agx_custom_glad_glRasterPos4xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRASTERSAMPLESEXTPROC agx_custom_glad_glRasterSamplesEXT;
#define glRasterSamplesEXT agx_custom_glad_glRasterSamplesEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLREADBUFFERPROC agx_custom_glad_glReadBuffer;
#define glReadBuffer agx_custom_glad_glReadBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLREADINSTRUMENTSSGIXPROC agx_custom_glad_glReadInstrumentsSGIX;
#define glReadInstrumentsSGIX agx_custom_glad_glReadInstrumentsSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLREADPIXELSPROC agx_custom_glad_glReadPixels;
#define glReadPixels agx_custom_glad_glReadPixels
AGX_CUSTOM_GLAD_API_CALL PFNGLREADNPIXELSPROC agx_custom_glad_glReadnPixels;
#define glReadnPixels agx_custom_glad_glReadnPixels
AGX_CUSTOM_GLAD_API_CALL PFNGLREADNPIXELSARBPROC agx_custom_glad_glReadnPixelsARB;
#define glReadnPixelsARB agx_custom_glad_glReadnPixelsARB
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTDPROC agx_custom_glad_glRectd;
#define glRectd agx_custom_glad_glRectd
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTDVPROC agx_custom_glad_glRectdv;
#define glRectdv agx_custom_glad_glRectdv
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTFPROC agx_custom_glad_glRectf;
#define glRectf agx_custom_glad_glRectf
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTFVPROC agx_custom_glad_glRectfv;
#define glRectfv agx_custom_glad_glRectfv
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTIPROC agx_custom_glad_glRecti;
#define glRecti agx_custom_glad_glRecti
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTIVPROC agx_custom_glad_glRectiv;
#define glRectiv agx_custom_glad_glRectiv
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTSPROC agx_custom_glad_glRects;
#define glRects agx_custom_glad_glRects
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTSVPROC agx_custom_glad_glRectsv;
#define glRectsv agx_custom_glad_glRectsv
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTXOESPROC agx_custom_glad_glRectxOES;
#define glRectxOES agx_custom_glad_glRectxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLRECTXVOESPROC agx_custom_glad_glRectxvOES;
#define glRectxvOES agx_custom_glad_glRectxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLREFERENCEPLANESGIXPROC agx_custom_glad_glReferencePlaneSGIX;
#define glReferencePlaneSGIX agx_custom_glad_glReferencePlaneSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC agx_custom_glad_glReleaseKeyedMutexWin32EXT;
#define glReleaseKeyedMutexWin32EXT agx_custom_glad_glReleaseKeyedMutexWin32EXT
AGX_CUSTOM_GLAD_API_CALL PFNGLRELEASESHADERCOMPILERPROC agx_custom_glad_glReleaseShaderCompiler;
#define glReleaseShaderCompiler agx_custom_glad_glReleaseShaderCompiler
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERGPUMASKNVPROC agx_custom_glad_glRenderGpuMaskNV;
#define glRenderGpuMaskNV agx_custom_glad_glRenderGpuMaskNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERMODEPROC agx_custom_glad_glRenderMode;
#define glRenderMode agx_custom_glad_glRenderMode
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEPROC agx_custom_glad_glRenderbufferStorage;
#define glRenderbufferStorage agx_custom_glad_glRenderbufferStorage
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEEXTPROC agx_custom_glad_glRenderbufferStorageEXT;
#define glRenderbufferStorageEXT agx_custom_glad_glRenderbufferStorageEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC agx_custom_glad_glRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample agx_custom_glad_glRenderbufferStorageMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC agx_custom_glad_glRenderbufferStorageMultisampleAdvancedAMD;
#define glRenderbufferStorageMultisampleAdvancedAMD agx_custom_glad_glRenderbufferStorageMultisampleAdvancedAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC agx_custom_glad_glRenderbufferStorageMultisampleCoverageNV;
#define glRenderbufferStorageMultisampleCoverageNV agx_custom_glad_glRenderbufferStorageMultisampleCoverageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC agx_custom_glad_glRenderbufferStorageMultisampleEXT;
#define glRenderbufferStorageMultisampleEXT agx_custom_glad_glRenderbufferStorageMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEPOINTERSUNPROC agx_custom_glad_glReplacementCodePointerSUN;
#define glReplacementCodePointerSUN agx_custom_glad_glReplacementCodePointerSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUBSUNPROC agx_custom_glad_glReplacementCodeubSUN;
#define glReplacementCodeubSUN agx_custom_glad_glReplacementCodeubSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUBVSUNPROC agx_custom_glad_glReplacementCodeubvSUN;
#define glReplacementCodeubvSUN agx_custom_glad_glReplacementCodeubvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor3fVertex3fSUN;
#define glReplacementCodeuiColor3fVertex3fSUN agx_custom_glad_glReplacementCodeuiColor3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor3fVertex3fvSUN;
#define glReplacementCodeuiColor3fVertex3fvSUN agx_custom_glad_glReplacementCodeuiColor3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor4ubVertex3fSUN;
#define glReplacementCodeuiColor4ubVertex3fSUN agx_custom_glad_glReplacementCodeuiColor4ubVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor4ubVertex3fvSUN;
#define glReplacementCodeuiColor4ubVertex3fvSUN agx_custom_glad_glReplacementCodeuiColor4ubVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiNormal3fVertex3fSUN;
#define glReplacementCodeuiNormal3fVertex3fSUN agx_custom_glad_glReplacementCodeuiNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiNormal3fVertex3fvSUN;
#define glReplacementCodeuiNormal3fVertex3fvSUN agx_custom_glad_glReplacementCodeuiNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUISUNPROC agx_custom_glad_glReplacementCodeuiSUN;
#define glReplacementCodeuiSUN agx_custom_glad_glReplacementCodeuiSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fVertex3fSUN agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fVertex3fvSUN agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiVertex3fSUN;
#define glReplacementCodeuiVertex3fSUN agx_custom_glad_glReplacementCodeuiVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiVertex3fvSUN;
#define glReplacementCodeuiVertex3fvSUN agx_custom_glad_glReplacementCodeuiVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUIVSUNPROC agx_custom_glad_glReplacementCodeuivSUN;
#define glReplacementCodeuivSUN agx_custom_glad_glReplacementCodeuivSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUSSUNPROC agx_custom_glad_glReplacementCodeusSUN;
#define glReplacementCodeusSUN agx_custom_glad_glReplacementCodeusSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREPLACEMENTCODEUSVSUNPROC agx_custom_glad_glReplacementCodeusvSUN;
#define glReplacementCodeusvSUN agx_custom_glad_glReplacementCodeusvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLREQUESTRESIDENTPROGRAMSNVPROC agx_custom_glad_glRequestResidentProgramsNV;
#define glRequestResidentProgramsNV agx_custom_glad_glRequestResidentProgramsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRESETHISTOGRAMPROC agx_custom_glad_glResetHistogram;
#define glResetHistogram agx_custom_glad_glResetHistogram
AGX_CUSTOM_GLAD_API_CALL PFNGLRESETHISTOGRAMEXTPROC agx_custom_glad_glResetHistogramEXT;
#define glResetHistogramEXT agx_custom_glad_glResetHistogramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLRESETMEMORYOBJECTPARAMETERNVPROC agx_custom_glad_glResetMemoryObjectParameterNV;
#define glResetMemoryObjectParameterNV agx_custom_glad_glResetMemoryObjectParameterNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRESETMINMAXPROC agx_custom_glad_glResetMinmax;
#define glResetMinmax agx_custom_glad_glResetMinmax
AGX_CUSTOM_GLAD_API_CALL PFNGLRESETMINMAXEXTPROC agx_custom_glad_glResetMinmaxEXT;
#define glResetMinmaxEXT agx_custom_glad_glResetMinmaxEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLRESIZEBUFFERSMESAPROC agx_custom_glad_glResizeBuffersMESA;
#define glResizeBuffersMESA agx_custom_glad_glResizeBuffersMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLRESOLVEDEPTHVALUESNVPROC agx_custom_glad_glResolveDepthValuesNV;
#define glResolveDepthValuesNV agx_custom_glad_glResolveDepthValuesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLRESUMETRANSFORMFEEDBACKPROC agx_custom_glad_glResumeTransformFeedback;
#define glResumeTransformFeedback agx_custom_glad_glResumeTransformFeedback
AGX_CUSTOM_GLAD_API_CALL PFNGLRESUMETRANSFORMFEEDBACKNVPROC agx_custom_glad_glResumeTransformFeedbackNV;
#define glResumeTransformFeedbackNV agx_custom_glad_glResumeTransformFeedbackNV
AGX_CUSTOM_GLAD_API_CALL PFNGLROTATEDPROC agx_custom_glad_glRotated;
#define glRotated agx_custom_glad_glRotated
AGX_CUSTOM_GLAD_API_CALL PFNGLROTATEFPROC agx_custom_glad_glRotatef;
#define glRotatef agx_custom_glad_glRotatef
AGX_CUSTOM_GLAD_API_CALL PFNGLROTATEXOESPROC agx_custom_glad_glRotatexOES;
#define glRotatexOES agx_custom_glad_glRotatexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLECOVERAGEPROC agx_custom_glad_glSampleCoverage;
#define glSampleCoverage agx_custom_glad_glSampleCoverage
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLECOVERAGEARBPROC agx_custom_glad_glSampleCoverageARB;
#define glSampleCoverageARB agx_custom_glad_glSampleCoverageARB
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEMAPATIPROC agx_custom_glad_glSampleMapATI;
#define glSampleMapATI agx_custom_glad_glSampleMapATI
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEMASKEXTPROC agx_custom_glad_glSampleMaskEXT;
#define glSampleMaskEXT agx_custom_glad_glSampleMaskEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEMASKINDEXEDNVPROC agx_custom_glad_glSampleMaskIndexedNV;
#define glSampleMaskIndexedNV agx_custom_glad_glSampleMaskIndexedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEMASKSGISPROC agx_custom_glad_glSampleMaskSGIS;
#define glSampleMaskSGIS agx_custom_glad_glSampleMaskSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEMASKIPROC agx_custom_glad_glSampleMaski;
#define glSampleMaski agx_custom_glad_glSampleMaski
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEPATTERNEXTPROC agx_custom_glad_glSamplePatternEXT;
#define glSamplePatternEXT agx_custom_glad_glSamplePatternEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLEPATTERNSGISPROC agx_custom_glad_glSamplePatternSGIS;
#define glSamplePatternSGIS agx_custom_glad_glSamplePatternSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERIIVPROC agx_custom_glad_glSamplerParameterIiv;
#define glSamplerParameterIiv agx_custom_glad_glSamplerParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERIUIVPROC agx_custom_glad_glSamplerParameterIuiv;
#define glSamplerParameterIuiv agx_custom_glad_glSamplerParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERFPROC agx_custom_glad_glSamplerParameterf;
#define glSamplerParameterf agx_custom_glad_glSamplerParameterf
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERFVPROC agx_custom_glad_glSamplerParameterfv;
#define glSamplerParameterfv agx_custom_glad_glSamplerParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERIPROC agx_custom_glad_glSamplerParameteri;
#define glSamplerParameteri agx_custom_glad_glSamplerParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLSAMPLERPARAMETERIVPROC agx_custom_glad_glSamplerParameteriv;
#define glSamplerParameteriv agx_custom_glad_glSamplerParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLSCALEDPROC agx_custom_glad_glScaled;
#define glScaled agx_custom_glad_glScaled
AGX_CUSTOM_GLAD_API_CALL PFNGLSCALEFPROC agx_custom_glad_glScalef;
#define glScalef agx_custom_glad_glScalef
AGX_CUSTOM_GLAD_API_CALL PFNGLSCALEXOESPROC agx_custom_glad_glScalexOES;
#define glScalexOES agx_custom_glad_glScalexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSORPROC agx_custom_glad_glScissor;
#define glScissor agx_custom_glad_glScissor
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSORARRAYVPROC agx_custom_glad_glScissorArrayv;
#define glScissorArrayv agx_custom_glad_glScissorArrayv
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSOREXCLUSIVEARRAYVNVPROC agx_custom_glad_glScissorExclusiveArrayvNV;
#define glScissorExclusiveArrayvNV agx_custom_glad_glScissorExclusiveArrayvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSOREXCLUSIVENVPROC agx_custom_glad_glScissorExclusiveNV;
#define glScissorExclusiveNV agx_custom_glad_glScissorExclusiveNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSORINDEXEDPROC agx_custom_glad_glScissorIndexed;
#define glScissorIndexed agx_custom_glad_glScissorIndexed
AGX_CUSTOM_GLAD_API_CALL PFNGLSCISSORINDEXEDVPROC agx_custom_glad_glScissorIndexedv;
#define glScissorIndexedv agx_custom_glad_glScissorIndexedv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3BPROC agx_custom_glad_glSecondaryColor3b;
#define glSecondaryColor3b agx_custom_glad_glSecondaryColor3b
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3BEXTPROC agx_custom_glad_glSecondaryColor3bEXT;
#define glSecondaryColor3bEXT agx_custom_glad_glSecondaryColor3bEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3BVPROC agx_custom_glad_glSecondaryColor3bv;
#define glSecondaryColor3bv agx_custom_glad_glSecondaryColor3bv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3BVEXTPROC agx_custom_glad_glSecondaryColor3bvEXT;
#define glSecondaryColor3bvEXT agx_custom_glad_glSecondaryColor3bvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3DPROC agx_custom_glad_glSecondaryColor3d;
#define glSecondaryColor3d agx_custom_glad_glSecondaryColor3d
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3DEXTPROC agx_custom_glad_glSecondaryColor3dEXT;
#define glSecondaryColor3dEXT agx_custom_glad_glSecondaryColor3dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3DVPROC agx_custom_glad_glSecondaryColor3dv;
#define glSecondaryColor3dv agx_custom_glad_glSecondaryColor3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3DVEXTPROC agx_custom_glad_glSecondaryColor3dvEXT;
#define glSecondaryColor3dvEXT agx_custom_glad_glSecondaryColor3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3FPROC agx_custom_glad_glSecondaryColor3f;
#define glSecondaryColor3f agx_custom_glad_glSecondaryColor3f
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3FEXTPROC agx_custom_glad_glSecondaryColor3fEXT;
#define glSecondaryColor3fEXT agx_custom_glad_glSecondaryColor3fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3FVPROC agx_custom_glad_glSecondaryColor3fv;
#define glSecondaryColor3fv agx_custom_glad_glSecondaryColor3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3FVEXTPROC agx_custom_glad_glSecondaryColor3fvEXT;
#define glSecondaryColor3fvEXT agx_custom_glad_glSecondaryColor3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3HNVPROC agx_custom_glad_glSecondaryColor3hNV;
#define glSecondaryColor3hNV agx_custom_glad_glSecondaryColor3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3HVNVPROC agx_custom_glad_glSecondaryColor3hvNV;
#define glSecondaryColor3hvNV agx_custom_glad_glSecondaryColor3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3IPROC agx_custom_glad_glSecondaryColor3i;
#define glSecondaryColor3i agx_custom_glad_glSecondaryColor3i
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3IEXTPROC agx_custom_glad_glSecondaryColor3iEXT;
#define glSecondaryColor3iEXT agx_custom_glad_glSecondaryColor3iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3IVPROC agx_custom_glad_glSecondaryColor3iv;
#define glSecondaryColor3iv agx_custom_glad_glSecondaryColor3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3IVEXTPROC agx_custom_glad_glSecondaryColor3ivEXT;
#define glSecondaryColor3ivEXT agx_custom_glad_glSecondaryColor3ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3SPROC agx_custom_glad_glSecondaryColor3s;
#define glSecondaryColor3s agx_custom_glad_glSecondaryColor3s
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3SEXTPROC agx_custom_glad_glSecondaryColor3sEXT;
#define glSecondaryColor3sEXT agx_custom_glad_glSecondaryColor3sEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3SVPROC agx_custom_glad_glSecondaryColor3sv;
#define glSecondaryColor3sv agx_custom_glad_glSecondaryColor3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3SVEXTPROC agx_custom_glad_glSecondaryColor3svEXT;
#define glSecondaryColor3svEXT agx_custom_glad_glSecondaryColor3svEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UBPROC agx_custom_glad_glSecondaryColor3ub;
#define glSecondaryColor3ub agx_custom_glad_glSecondaryColor3ub
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UBEXTPROC agx_custom_glad_glSecondaryColor3ubEXT;
#define glSecondaryColor3ubEXT agx_custom_glad_glSecondaryColor3ubEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UBVPROC agx_custom_glad_glSecondaryColor3ubv;
#define glSecondaryColor3ubv agx_custom_glad_glSecondaryColor3ubv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UBVEXTPROC agx_custom_glad_glSecondaryColor3ubvEXT;
#define glSecondaryColor3ubvEXT agx_custom_glad_glSecondaryColor3ubvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UIPROC agx_custom_glad_glSecondaryColor3ui;
#define glSecondaryColor3ui agx_custom_glad_glSecondaryColor3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UIEXTPROC agx_custom_glad_glSecondaryColor3uiEXT;
#define glSecondaryColor3uiEXT agx_custom_glad_glSecondaryColor3uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UIVPROC agx_custom_glad_glSecondaryColor3uiv;
#define glSecondaryColor3uiv agx_custom_glad_glSecondaryColor3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3UIVEXTPROC agx_custom_glad_glSecondaryColor3uivEXT;
#define glSecondaryColor3uivEXT agx_custom_glad_glSecondaryColor3uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3USPROC agx_custom_glad_glSecondaryColor3us;
#define glSecondaryColor3us agx_custom_glad_glSecondaryColor3us
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3USEXTPROC agx_custom_glad_glSecondaryColor3usEXT;
#define glSecondaryColor3usEXT agx_custom_glad_glSecondaryColor3usEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3USVPROC agx_custom_glad_glSecondaryColor3usv;
#define glSecondaryColor3usv agx_custom_glad_glSecondaryColor3usv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLOR3USVEXTPROC agx_custom_glad_glSecondaryColor3usvEXT;
#define glSecondaryColor3usvEXT agx_custom_glad_glSecondaryColor3usvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORFORMATNVPROC agx_custom_glad_glSecondaryColorFormatNV;
#define glSecondaryColorFormatNV agx_custom_glad_glSecondaryColorFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORP3UIPROC agx_custom_glad_glSecondaryColorP3ui;
#define glSecondaryColorP3ui agx_custom_glad_glSecondaryColorP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORP3UIVPROC agx_custom_glad_glSecondaryColorP3uiv;
#define glSecondaryColorP3uiv agx_custom_glad_glSecondaryColorP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORPOINTERPROC agx_custom_glad_glSecondaryColorPointer;
#define glSecondaryColorPointer agx_custom_glad_glSecondaryColorPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORPOINTEREXTPROC agx_custom_glad_glSecondaryColorPointerEXT;
#define glSecondaryColorPointerEXT agx_custom_glad_glSecondaryColorPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSECONDARYCOLORPOINTERLISTIBMPROC agx_custom_glad_glSecondaryColorPointerListIBM;
#define glSecondaryColorPointerListIBM agx_custom_glad_glSecondaryColorPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLSELECTBUFFERPROC agx_custom_glad_glSelectBuffer;
#define glSelectBuffer agx_custom_glad_glSelectBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLSELECTPERFMONITORCOUNTERSAMDPROC agx_custom_glad_glSelectPerfMonitorCountersAMD;
#define glSelectPerfMonitorCountersAMD agx_custom_glad_glSelectPerfMonitorCountersAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLSEMAPHOREPARAMETERIVNVPROC agx_custom_glad_glSemaphoreParameterivNV;
#define glSemaphoreParameterivNV agx_custom_glad_glSemaphoreParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSEMAPHOREPARAMETERUI64VEXTPROC agx_custom_glad_glSemaphoreParameterui64vEXT;
#define glSemaphoreParameterui64vEXT agx_custom_glad_glSemaphoreParameterui64vEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSEPARABLEFILTER2DPROC agx_custom_glad_glSeparableFilter2D;
#define glSeparableFilter2D agx_custom_glad_glSeparableFilter2D
AGX_CUSTOM_GLAD_API_CALL PFNGLSEPARABLEFILTER2DEXTPROC agx_custom_glad_glSeparableFilter2DEXT;
#define glSeparableFilter2DEXT agx_custom_glad_glSeparableFilter2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSETFENCEAPPLEPROC agx_custom_glad_glSetFenceAPPLE;
#define glSetFenceAPPLE agx_custom_glad_glSetFenceAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLSETFENCENVPROC agx_custom_glad_glSetFenceNV;
#define glSetFenceNV agx_custom_glad_glSetFenceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSETFRAGMENTSHADERCONSTANTATIPROC agx_custom_glad_glSetFragmentShaderConstantATI;
#define glSetFragmentShaderConstantATI agx_custom_glad_glSetFragmentShaderConstantATI
AGX_CUSTOM_GLAD_API_CALL PFNGLSETINVARIANTEXTPROC agx_custom_glad_glSetInvariantEXT;
#define glSetInvariantEXT agx_custom_glad_glSetInvariantEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSETLOCALCONSTANTEXTPROC agx_custom_glad_glSetLocalConstantEXT;
#define glSetLocalConstantEXT agx_custom_glad_glSetLocalConstantEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSETMULTISAMPLEFVAMDPROC agx_custom_glad_glSetMultisamplefvAMD;
#define glSetMultisamplefvAMD agx_custom_glad_glSetMultisamplefvAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADEMODELPROC agx_custom_glad_glShadeModel;
#define glShadeModel agx_custom_glad_glShadeModel
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADERBINARYPROC agx_custom_glad_glShaderBinary;
#define glShaderBinary agx_custom_glad_glShaderBinary
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADEROP1EXTPROC agx_custom_glad_glShaderOp1EXT;
#define glShaderOp1EXT agx_custom_glad_glShaderOp1EXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADEROP2EXTPROC agx_custom_glad_glShaderOp2EXT;
#define glShaderOp2EXT agx_custom_glad_glShaderOp2EXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADEROP3EXTPROC agx_custom_glad_glShaderOp3EXT;
#define glShaderOp3EXT agx_custom_glad_glShaderOp3EXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADERSOURCEPROC agx_custom_glad_glShaderSource;
#define glShaderSource agx_custom_glad_glShaderSource
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADERSOURCEARBPROC agx_custom_glad_glShaderSourceARB;
#define glShaderSourceARB agx_custom_glad_glShaderSourceARB
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADERSTORAGEBLOCKBINDINGPROC agx_custom_glad_glShaderStorageBlockBinding;
#define glShaderStorageBlockBinding agx_custom_glad_glShaderStorageBlockBinding
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADINGRATEIMAGEBARRIERNVPROC agx_custom_glad_glShadingRateImageBarrierNV;
#define glShadingRateImageBarrierNV agx_custom_glad_glShadingRateImageBarrierNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADINGRATEIMAGEPALETTENVPROC agx_custom_glad_glShadingRateImagePaletteNV;
#define glShadingRateImagePaletteNV agx_custom_glad_glShadingRateImagePaletteNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC agx_custom_glad_glShadingRateSampleOrderCustomNV;
#define glShadingRateSampleOrderCustomNV agx_custom_glad_glShadingRateSampleOrderCustomNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSHADINGRATESAMPLEORDERNVPROC agx_custom_glad_glShadingRateSampleOrderNV;
#define glShadingRateSampleOrderNV agx_custom_glad_glShadingRateSampleOrderNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSHARPENTEXFUNCSGISPROC agx_custom_glad_glSharpenTexFuncSGIS;
#define glSharpenTexFuncSGIS agx_custom_glad_glSharpenTexFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLSIGNALSEMAPHOREEXTPROC agx_custom_glad_glSignalSemaphoreEXT;
#define glSignalSemaphoreEXT agx_custom_glad_glSignalSemaphoreEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSIGNALSEMAPHOREUI64NVXPROC agx_custom_glad_glSignalSemaphoreui64NVX;
#define glSignalSemaphoreui64NVX agx_custom_glad_glSignalSemaphoreui64NVX
AGX_CUSTOM_GLAD_API_CALL PFNGLSIGNALVKFENCENVPROC agx_custom_glad_glSignalVkFenceNV;
#define glSignalVkFenceNV agx_custom_glad_glSignalVkFenceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSIGNALVKSEMAPHORENVPROC agx_custom_glad_glSignalVkSemaphoreNV;
#define glSignalVkSemaphoreNV agx_custom_glad_glSignalVkSemaphoreNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSPECIALIZESHADERPROC agx_custom_glad_glSpecializeShader;
#define glSpecializeShader agx_custom_glad_glSpecializeShader
AGX_CUSTOM_GLAD_API_CALL PFNGLSPECIALIZESHADERARBPROC agx_custom_glad_glSpecializeShaderARB;
#define glSpecializeShaderARB agx_custom_glad_glSpecializeShaderARB
AGX_CUSTOM_GLAD_API_CALL PFNGLSPRITEPARAMETERFSGIXPROC agx_custom_glad_glSpriteParameterfSGIX;
#define glSpriteParameterfSGIX agx_custom_glad_glSpriteParameterfSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSPRITEPARAMETERFVSGIXPROC agx_custom_glad_glSpriteParameterfvSGIX;
#define glSpriteParameterfvSGIX agx_custom_glad_glSpriteParameterfvSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSPRITEPARAMETERISGIXPROC agx_custom_glad_glSpriteParameteriSGIX;
#define glSpriteParameteriSGIX agx_custom_glad_glSpriteParameteriSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSPRITEPARAMETERIVSGIXPROC agx_custom_glad_glSpriteParameterivSGIX;
#define glSpriteParameterivSGIX agx_custom_glad_glSpriteParameterivSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSTARTINSTRUMENTSSGIXPROC agx_custom_glad_glStartInstrumentsSGIX;
#define glStartInstrumentsSGIX agx_custom_glad_glStartInstrumentsSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSTATECAPTURENVPROC agx_custom_glad_glStateCaptureNV;
#define glStateCaptureNV agx_custom_glad_glStateCaptureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILCLEARTAGEXTPROC agx_custom_glad_glStencilClearTagEXT;
#define glStencilClearTagEXT agx_custom_glad_glStencilClearTagEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILFILLPATHINSTANCEDNVPROC agx_custom_glad_glStencilFillPathInstancedNV;
#define glStencilFillPathInstancedNV agx_custom_glad_glStencilFillPathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILFILLPATHNVPROC agx_custom_glad_glStencilFillPathNV;
#define glStencilFillPathNV agx_custom_glad_glStencilFillPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILFUNCPROC agx_custom_glad_glStencilFunc;
#define glStencilFunc agx_custom_glad_glStencilFunc
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILFUNCSEPARATEPROC agx_custom_glad_glStencilFuncSeparate;
#define glStencilFuncSeparate agx_custom_glad_glStencilFuncSeparate
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILFUNCSEPARATEATIPROC agx_custom_glad_glStencilFuncSeparateATI;
#define glStencilFuncSeparateATI agx_custom_glad_glStencilFuncSeparateATI
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILMASKPROC agx_custom_glad_glStencilMask;
#define glStencilMask agx_custom_glad_glStencilMask
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILMASKSEPARATEPROC agx_custom_glad_glStencilMaskSeparate;
#define glStencilMaskSeparate agx_custom_glad_glStencilMaskSeparate
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILOPPROC agx_custom_glad_glStencilOp;
#define glStencilOp agx_custom_glad_glStencilOp
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILOPSEPARATEPROC agx_custom_glad_glStencilOpSeparate;
#define glStencilOpSeparate agx_custom_glad_glStencilOpSeparate
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILOPSEPARATEATIPROC agx_custom_glad_glStencilOpSeparateATI;
#define glStencilOpSeparateATI agx_custom_glad_glStencilOpSeparateATI
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILOPVALUEAMDPROC agx_custom_glad_glStencilOpValueAMD;
#define glStencilOpValueAMD agx_custom_glad_glStencilOpValueAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glStencilStrokePathInstancedNV;
#define glStencilStrokePathInstancedNV agx_custom_glad_glStencilStrokePathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILSTROKEPATHNVPROC agx_custom_glad_glStencilStrokePathNV;
#define glStencilStrokePathNV agx_custom_glad_glStencilStrokePathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC agx_custom_glad_glStencilThenCoverFillPathInstancedNV;
#define glStencilThenCoverFillPathInstancedNV agx_custom_glad_glStencilThenCoverFillPathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILTHENCOVERFILLPATHNVPROC agx_custom_glad_glStencilThenCoverFillPathNV;
#define glStencilThenCoverFillPathNV agx_custom_glad_glStencilThenCoverFillPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glStencilThenCoverStrokePathInstancedNV;
#define glStencilThenCoverStrokePathInstancedNV agx_custom_glad_glStencilThenCoverStrokePathInstancedNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC agx_custom_glad_glStencilThenCoverStrokePathNV;
#define glStencilThenCoverStrokePathNV agx_custom_glad_glStencilThenCoverStrokePathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSTOPINSTRUMENTSSGIXPROC agx_custom_glad_glStopInstrumentsSGIX;
#define glStopInstrumentsSGIX agx_custom_glad_glStopInstrumentsSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLSTRINGMARKERGREMEDYPROC agx_custom_glad_glStringMarkerGREMEDY;
#define glStringMarkerGREMEDY agx_custom_glad_glStringMarkerGREMEDY
AGX_CUSTOM_GLAD_API_CALL PFNGLSUBPIXELPRECISIONBIASNVPROC agx_custom_glad_glSubpixelPrecisionBiasNV;
#define glSubpixelPrecisionBiasNV agx_custom_glad_glSubpixelPrecisionBiasNV
AGX_CUSTOM_GLAD_API_CALL PFNGLSWIZZLEEXTPROC agx_custom_glad_glSwizzleEXT;
#define glSwizzleEXT agx_custom_glad_glSwizzleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLSYNCTEXTUREINTELPROC agx_custom_glad_glSyncTextureINTEL;
#define glSyncTextureINTEL agx_custom_glad_glSyncTextureINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLTAGSAMPLEBUFFERSGIXPROC agx_custom_glad_glTagSampleBufferSGIX;
#define glTagSampleBufferSGIX agx_custom_glad_glTagSampleBufferSGIX
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3BEXTPROC agx_custom_glad_glTangent3bEXT;
#define glTangent3bEXT agx_custom_glad_glTangent3bEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3BVEXTPROC agx_custom_glad_glTangent3bvEXT;
#define glTangent3bvEXT agx_custom_glad_glTangent3bvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3DEXTPROC agx_custom_glad_glTangent3dEXT;
#define glTangent3dEXT agx_custom_glad_glTangent3dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3DVEXTPROC agx_custom_glad_glTangent3dvEXT;
#define glTangent3dvEXT agx_custom_glad_glTangent3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3FEXTPROC agx_custom_glad_glTangent3fEXT;
#define glTangent3fEXT agx_custom_glad_glTangent3fEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3FVEXTPROC agx_custom_glad_glTangent3fvEXT;
#define glTangent3fvEXT agx_custom_glad_glTangent3fvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3IEXTPROC agx_custom_glad_glTangent3iEXT;
#define glTangent3iEXT agx_custom_glad_glTangent3iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3IVEXTPROC agx_custom_glad_glTangent3ivEXT;
#define glTangent3ivEXT agx_custom_glad_glTangent3ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3SEXTPROC agx_custom_glad_glTangent3sEXT;
#define glTangent3sEXT agx_custom_glad_glTangent3sEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENT3SVEXTPROC agx_custom_glad_glTangent3svEXT;
#define glTangent3svEXT agx_custom_glad_glTangent3svEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTANGENTPOINTEREXTPROC agx_custom_glad_glTangentPointerEXT;
#define glTangentPointerEXT agx_custom_glad_glTangentPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTBUFFERMASK3DFXPROC agx_custom_glad_glTbufferMask3DFX;
#define glTbufferMask3DFX agx_custom_glad_glTbufferMask3DFX
AGX_CUSTOM_GLAD_API_CALL PFNGLTESSELLATIONFACTORAMDPROC agx_custom_glad_glTessellationFactorAMD;
#define glTessellationFactorAMD agx_custom_glad_glTessellationFactorAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLTESSELLATIONMODEAMDPROC agx_custom_glad_glTessellationModeAMD;
#define glTessellationModeAMD agx_custom_glad_glTessellationModeAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLTESTFENCEAPPLEPROC agx_custom_glad_glTestFenceAPPLE;
#define glTestFenceAPPLE agx_custom_glad_glTestFenceAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLTESTFENCENVPROC agx_custom_glad_glTestFenceNV;
#define glTestFenceNV agx_custom_glad_glTestFenceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTESTOBJECTAPPLEPROC agx_custom_glad_glTestObjectAPPLE;
#define glTestObjectAPPLE agx_custom_glad_glTestObjectAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXATTACHMEMORYNVPROC agx_custom_glad_glTexAttachMemoryNV;
#define glTexAttachMemoryNV agx_custom_glad_glTexAttachMemoryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUFFERPROC agx_custom_glad_glTexBuffer;
#define glTexBuffer agx_custom_glad_glTexBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUFFERARBPROC agx_custom_glad_glTexBufferARB;
#define glTexBufferARB agx_custom_glad_glTexBufferARB
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUFFEREXTPROC agx_custom_glad_glTexBufferEXT;
#define glTexBufferEXT agx_custom_glad_glTexBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUFFERRANGEPROC agx_custom_glad_glTexBufferRange;
#define glTexBufferRange agx_custom_glad_glTexBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUMPPARAMETERFVATIPROC agx_custom_glad_glTexBumpParameterfvATI;
#define glTexBumpParameterfvATI agx_custom_glad_glTexBumpParameterfvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXBUMPPARAMETERIVATIPROC agx_custom_glad_glTexBumpParameterivATI;
#define glTexBumpParameterivATI agx_custom_glad_glTexBumpParameterivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1BOESPROC agx_custom_glad_glTexCoord1bOES;
#define glTexCoord1bOES agx_custom_glad_glTexCoord1bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1BVOESPROC agx_custom_glad_glTexCoord1bvOES;
#define glTexCoord1bvOES agx_custom_glad_glTexCoord1bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1DPROC agx_custom_glad_glTexCoord1d;
#define glTexCoord1d agx_custom_glad_glTexCoord1d
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1DVPROC agx_custom_glad_glTexCoord1dv;
#define glTexCoord1dv agx_custom_glad_glTexCoord1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1FPROC agx_custom_glad_glTexCoord1f;
#define glTexCoord1f agx_custom_glad_glTexCoord1f
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1FVPROC agx_custom_glad_glTexCoord1fv;
#define glTexCoord1fv agx_custom_glad_glTexCoord1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1HNVPROC agx_custom_glad_glTexCoord1hNV;
#define glTexCoord1hNV agx_custom_glad_glTexCoord1hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1HVNVPROC agx_custom_glad_glTexCoord1hvNV;
#define glTexCoord1hvNV agx_custom_glad_glTexCoord1hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1IPROC agx_custom_glad_glTexCoord1i;
#define glTexCoord1i agx_custom_glad_glTexCoord1i
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1IVPROC agx_custom_glad_glTexCoord1iv;
#define glTexCoord1iv agx_custom_glad_glTexCoord1iv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1SPROC agx_custom_glad_glTexCoord1s;
#define glTexCoord1s agx_custom_glad_glTexCoord1s
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1SVPROC agx_custom_glad_glTexCoord1sv;
#define glTexCoord1sv agx_custom_glad_glTexCoord1sv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1XOESPROC agx_custom_glad_glTexCoord1xOES;
#define glTexCoord1xOES agx_custom_glad_glTexCoord1xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD1XVOESPROC agx_custom_glad_glTexCoord1xvOES;
#define glTexCoord1xvOES agx_custom_glad_glTexCoord1xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2BOESPROC agx_custom_glad_glTexCoord2bOES;
#define glTexCoord2bOES agx_custom_glad_glTexCoord2bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2BVOESPROC agx_custom_glad_glTexCoord2bvOES;
#define glTexCoord2bvOES agx_custom_glad_glTexCoord2bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2DPROC agx_custom_glad_glTexCoord2d;
#define glTexCoord2d agx_custom_glad_glTexCoord2d
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2DVPROC agx_custom_glad_glTexCoord2dv;
#define glTexCoord2dv agx_custom_glad_glTexCoord2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FPROC agx_custom_glad_glTexCoord2f;
#define glTexCoord2f agx_custom_glad_glTexCoord2f
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor3fVertex3fSUN;
#define glTexCoord2fColor3fVertex3fSUN agx_custom_glad_glTexCoord2fColor3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor3fVertex3fvSUN;
#define glTexCoord2fColor3fVertex3fvSUN agx_custom_glad_glTexCoord2fColor3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fSUN;
#define glTexCoord2fColor4fNormal3fVertex3fSUN agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glTexCoord2fColor4fNormal3fVertex3fvSUN agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor4ubVertex3fSUN;
#define glTexCoord2fColor4ubVertex3fSUN agx_custom_glad_glTexCoord2fColor4ubVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor4ubVertex3fvSUN;
#define glTexCoord2fColor4ubVertex3fvSUN agx_custom_glad_glTexCoord2fColor4ubVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fNormal3fVertex3fSUN;
#define glTexCoord2fNormal3fVertex3fSUN agx_custom_glad_glTexCoord2fNormal3fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fNormal3fVertex3fvSUN;
#define glTexCoord2fNormal3fVertex3fvSUN agx_custom_glad_glTexCoord2fNormal3fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fVertex3fSUN;
#define glTexCoord2fVertex3fSUN agx_custom_glad_glTexCoord2fVertex3fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fVertex3fvSUN;
#define glTexCoord2fVertex3fvSUN agx_custom_glad_glTexCoord2fVertex3fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2FVPROC agx_custom_glad_glTexCoord2fv;
#define glTexCoord2fv agx_custom_glad_glTexCoord2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2HNVPROC agx_custom_glad_glTexCoord2hNV;
#define glTexCoord2hNV agx_custom_glad_glTexCoord2hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2HVNVPROC agx_custom_glad_glTexCoord2hvNV;
#define glTexCoord2hvNV agx_custom_glad_glTexCoord2hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2IPROC agx_custom_glad_glTexCoord2i;
#define glTexCoord2i agx_custom_glad_glTexCoord2i
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2IVPROC agx_custom_glad_glTexCoord2iv;
#define glTexCoord2iv agx_custom_glad_glTexCoord2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2SPROC agx_custom_glad_glTexCoord2s;
#define glTexCoord2s agx_custom_glad_glTexCoord2s
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2SVPROC agx_custom_glad_glTexCoord2sv;
#define glTexCoord2sv agx_custom_glad_glTexCoord2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2XOESPROC agx_custom_glad_glTexCoord2xOES;
#define glTexCoord2xOES agx_custom_glad_glTexCoord2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD2XVOESPROC agx_custom_glad_glTexCoord2xvOES;
#define glTexCoord2xvOES agx_custom_glad_glTexCoord2xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3BOESPROC agx_custom_glad_glTexCoord3bOES;
#define glTexCoord3bOES agx_custom_glad_glTexCoord3bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3BVOESPROC agx_custom_glad_glTexCoord3bvOES;
#define glTexCoord3bvOES agx_custom_glad_glTexCoord3bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3DPROC agx_custom_glad_glTexCoord3d;
#define glTexCoord3d agx_custom_glad_glTexCoord3d
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3DVPROC agx_custom_glad_glTexCoord3dv;
#define glTexCoord3dv agx_custom_glad_glTexCoord3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3FPROC agx_custom_glad_glTexCoord3f;
#define glTexCoord3f agx_custom_glad_glTexCoord3f
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3FVPROC agx_custom_glad_glTexCoord3fv;
#define glTexCoord3fv agx_custom_glad_glTexCoord3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3HNVPROC agx_custom_glad_glTexCoord3hNV;
#define glTexCoord3hNV agx_custom_glad_glTexCoord3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3HVNVPROC agx_custom_glad_glTexCoord3hvNV;
#define glTexCoord3hvNV agx_custom_glad_glTexCoord3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3IPROC agx_custom_glad_glTexCoord3i;
#define glTexCoord3i agx_custom_glad_glTexCoord3i
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3IVPROC agx_custom_glad_glTexCoord3iv;
#define glTexCoord3iv agx_custom_glad_glTexCoord3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3SPROC agx_custom_glad_glTexCoord3s;
#define glTexCoord3s agx_custom_glad_glTexCoord3s
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3SVPROC agx_custom_glad_glTexCoord3sv;
#define glTexCoord3sv agx_custom_glad_glTexCoord3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3XOESPROC agx_custom_glad_glTexCoord3xOES;
#define glTexCoord3xOES agx_custom_glad_glTexCoord3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD3XVOESPROC agx_custom_glad_glTexCoord3xvOES;
#define glTexCoord3xvOES agx_custom_glad_glTexCoord3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4BOESPROC agx_custom_glad_glTexCoord4bOES;
#define glTexCoord4bOES agx_custom_glad_glTexCoord4bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4BVOESPROC agx_custom_glad_glTexCoord4bvOES;
#define glTexCoord4bvOES agx_custom_glad_glTexCoord4bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4DPROC agx_custom_glad_glTexCoord4d;
#define glTexCoord4d agx_custom_glad_glTexCoord4d
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4DVPROC agx_custom_glad_glTexCoord4dv;
#define glTexCoord4dv agx_custom_glad_glTexCoord4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FPROC agx_custom_glad_glTexCoord4f;
#define glTexCoord4f agx_custom_glad_glTexCoord4f
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fSUN;
#define glTexCoord4fColor4fNormal3fVertex4fSUN agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fvSUN;
#define glTexCoord4fColor4fNormal3fVertex4fvSUN agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FVERTEX4FSUNPROC agx_custom_glad_glTexCoord4fVertex4fSUN;
#define glTexCoord4fVertex4fSUN agx_custom_glad_glTexCoord4fVertex4fSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FVERTEX4FVSUNPROC agx_custom_glad_glTexCoord4fVertex4fvSUN;
#define glTexCoord4fVertex4fvSUN agx_custom_glad_glTexCoord4fVertex4fvSUN
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4FVPROC agx_custom_glad_glTexCoord4fv;
#define glTexCoord4fv agx_custom_glad_glTexCoord4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4HNVPROC agx_custom_glad_glTexCoord4hNV;
#define glTexCoord4hNV agx_custom_glad_glTexCoord4hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4HVNVPROC agx_custom_glad_glTexCoord4hvNV;
#define glTexCoord4hvNV agx_custom_glad_glTexCoord4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4IPROC agx_custom_glad_glTexCoord4i;
#define glTexCoord4i agx_custom_glad_glTexCoord4i
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4IVPROC agx_custom_glad_glTexCoord4iv;
#define glTexCoord4iv agx_custom_glad_glTexCoord4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4SPROC agx_custom_glad_glTexCoord4s;
#define glTexCoord4s agx_custom_glad_glTexCoord4s
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4SVPROC agx_custom_glad_glTexCoord4sv;
#define glTexCoord4sv agx_custom_glad_glTexCoord4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4XOESPROC agx_custom_glad_glTexCoord4xOES;
#define glTexCoord4xOES agx_custom_glad_glTexCoord4xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORD4XVOESPROC agx_custom_glad_glTexCoord4xvOES;
#define glTexCoord4xvOES agx_custom_glad_glTexCoord4xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDFORMATNVPROC agx_custom_glad_glTexCoordFormatNV;
#define glTexCoordFormatNV agx_custom_glad_glTexCoordFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP1UIPROC agx_custom_glad_glTexCoordP1ui;
#define glTexCoordP1ui agx_custom_glad_glTexCoordP1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP1UIVPROC agx_custom_glad_glTexCoordP1uiv;
#define glTexCoordP1uiv agx_custom_glad_glTexCoordP1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP2UIPROC agx_custom_glad_glTexCoordP2ui;
#define glTexCoordP2ui agx_custom_glad_glTexCoordP2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP2UIVPROC agx_custom_glad_glTexCoordP2uiv;
#define glTexCoordP2uiv agx_custom_glad_glTexCoordP2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP3UIPROC agx_custom_glad_glTexCoordP3ui;
#define glTexCoordP3ui agx_custom_glad_glTexCoordP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP3UIVPROC agx_custom_glad_glTexCoordP3uiv;
#define glTexCoordP3uiv agx_custom_glad_glTexCoordP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP4UIPROC agx_custom_glad_glTexCoordP4ui;
#define glTexCoordP4ui agx_custom_glad_glTexCoordP4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDP4UIVPROC agx_custom_glad_glTexCoordP4uiv;
#define glTexCoordP4uiv agx_custom_glad_glTexCoordP4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDPOINTERPROC agx_custom_glad_glTexCoordPointer;
#define glTexCoordPointer agx_custom_glad_glTexCoordPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDPOINTEREXTPROC agx_custom_glad_glTexCoordPointerEXT;
#define glTexCoordPointerEXT agx_custom_glad_glTexCoordPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDPOINTERLISTIBMPROC agx_custom_glad_glTexCoordPointerListIBM;
#define glTexCoordPointerListIBM agx_custom_glad_glTexCoordPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXCOORDPOINTERVINTELPROC agx_custom_glad_glTexCoordPointervINTEL;
#define glTexCoordPointervINTEL agx_custom_glad_glTexCoordPointervINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVFPROC agx_custom_glad_glTexEnvf;
#define glTexEnvf agx_custom_glad_glTexEnvf
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVFVPROC agx_custom_glad_glTexEnvfv;
#define glTexEnvfv agx_custom_glad_glTexEnvfv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVIPROC agx_custom_glad_glTexEnvi;
#define glTexEnvi agx_custom_glad_glTexEnvi
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVIVPROC agx_custom_glad_glTexEnviv;
#define glTexEnviv agx_custom_glad_glTexEnviv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVXOESPROC agx_custom_glad_glTexEnvxOES;
#define glTexEnvxOES agx_custom_glad_glTexEnvxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXENVXVOESPROC agx_custom_glad_glTexEnvxvOES;
#define glTexEnvxvOES agx_custom_glad_glTexEnvxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXFILTERFUNCSGISPROC agx_custom_glad_glTexFilterFuncSGIS;
#define glTexFilterFuncSGIS agx_custom_glad_glTexFilterFuncSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENDPROC agx_custom_glad_glTexGend;
#define glTexGend agx_custom_glad_glTexGend
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENDVPROC agx_custom_glad_glTexGendv;
#define glTexGendv agx_custom_glad_glTexGendv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENFPROC agx_custom_glad_glTexGenf;
#define glTexGenf agx_custom_glad_glTexGenf
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENFVPROC agx_custom_glad_glTexGenfv;
#define glTexGenfv agx_custom_glad_glTexGenfv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENIPROC agx_custom_glad_glTexGeni;
#define glTexGeni agx_custom_glad_glTexGeni
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENIVPROC agx_custom_glad_glTexGeniv;
#define glTexGeniv agx_custom_glad_glTexGeniv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENXOESPROC agx_custom_glad_glTexGenxOES;
#define glTexGenxOES agx_custom_glad_glTexGenxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXGENXVOESPROC agx_custom_glad_glTexGenxvOES;
#define glTexGenxvOES agx_custom_glad_glTexGenxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE1DPROC agx_custom_glad_glTexImage1D;
#define glTexImage1D agx_custom_glad_glTexImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE2DPROC agx_custom_glad_glTexImage2D;
#define glTexImage2D agx_custom_glad_glTexImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE2DMULTISAMPLEPROC agx_custom_glad_glTexImage2DMultisample;
#define glTexImage2DMultisample agx_custom_glad_glTexImage2DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTexImage2DMultisampleCoverageNV;
#define glTexImage2DMultisampleCoverageNV agx_custom_glad_glTexImage2DMultisampleCoverageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE3DPROC agx_custom_glad_glTexImage3D;
#define glTexImage3D agx_custom_glad_glTexImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE3DEXTPROC agx_custom_glad_glTexImage3DEXT;
#define glTexImage3DEXT agx_custom_glad_glTexImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE3DMULTISAMPLEPROC agx_custom_glad_glTexImage3DMultisample;
#define glTexImage3DMultisample agx_custom_glad_glTexImage3DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTexImage3DMultisampleCoverageNV;
#define glTexImage3DMultisampleCoverageNV agx_custom_glad_glTexImage3DMultisampleCoverageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXIMAGE4DSGISPROC agx_custom_glad_glTexImage4DSGIS;
#define glTexImage4DSGIS agx_custom_glad_glTexImage4DSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPAGECOMMITMENTARBPROC agx_custom_glad_glTexPageCommitmentARB;
#define glTexPageCommitmentARB agx_custom_glad_glTexPageCommitmentARB
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPAGECOMMITMENTMEMNVPROC agx_custom_glad_glTexPageCommitmentMemNV;
#define glTexPageCommitmentMemNV agx_custom_glad_glTexPageCommitmentMemNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIIVPROC agx_custom_glad_glTexParameterIiv;
#define glTexParameterIiv agx_custom_glad_glTexParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIIVEXTPROC agx_custom_glad_glTexParameterIivEXT;
#define glTexParameterIivEXT agx_custom_glad_glTexParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIUIVPROC agx_custom_glad_glTexParameterIuiv;
#define glTexParameterIuiv agx_custom_glad_glTexParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIUIVEXTPROC agx_custom_glad_glTexParameterIuivEXT;
#define glTexParameterIuivEXT agx_custom_glad_glTexParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERFPROC agx_custom_glad_glTexParameterf;
#define glTexParameterf agx_custom_glad_glTexParameterf
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERFVPROC agx_custom_glad_glTexParameterfv;
#define glTexParameterfv agx_custom_glad_glTexParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIPROC agx_custom_glad_glTexParameteri;
#define glTexParameteri agx_custom_glad_glTexParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERIVPROC agx_custom_glad_glTexParameteriv;
#define glTexParameteriv agx_custom_glad_glTexParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERXOESPROC agx_custom_glad_glTexParameterxOES;
#define glTexParameterxOES agx_custom_glad_glTexParameterxOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXPARAMETERXVOESPROC agx_custom_glad_glTexParameterxvOES;
#define glTexParameterxvOES agx_custom_glad_glTexParameterxvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXRENDERBUFFERNVPROC agx_custom_glad_glTexRenderbufferNV;
#define glTexRenderbufferNV agx_custom_glad_glTexRenderbufferNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGE1DPROC agx_custom_glad_glTexStorage1D;
#define glTexStorage1D agx_custom_glad_glTexStorage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGE2DPROC agx_custom_glad_glTexStorage2D;
#define glTexStorage2D agx_custom_glad_glTexStorage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGE2DMULTISAMPLEPROC agx_custom_glad_glTexStorage2DMultisample;
#define glTexStorage2DMultisample agx_custom_glad_glTexStorage2DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGE3DPROC agx_custom_glad_glTexStorage3D;
#define glTexStorage3D agx_custom_glad_glTexStorage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGE3DMULTISAMPLEPROC agx_custom_glad_glTexStorage3DMultisample;
#define glTexStorage3DMultisample agx_custom_glad_glTexStorage3DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGEMEM1DEXTPROC agx_custom_glad_glTexStorageMem1DEXT;
#define glTexStorageMem1DEXT agx_custom_glad_glTexStorageMem1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGEMEM2DEXTPROC agx_custom_glad_glTexStorageMem2DEXT;
#define glTexStorageMem2DEXT agx_custom_glad_glTexStorageMem2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC agx_custom_glad_glTexStorageMem2DMultisampleEXT;
#define glTexStorageMem2DMultisampleEXT agx_custom_glad_glTexStorageMem2DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGEMEM3DEXTPROC agx_custom_glad_glTexStorageMem3DEXT;
#define glTexStorageMem3DEXT agx_custom_glad_glTexStorageMem3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC agx_custom_glad_glTexStorageMem3DMultisampleEXT;
#define glTexStorageMem3DMultisampleEXT agx_custom_glad_glTexStorageMem3DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSTORAGESPARSEAMDPROC agx_custom_glad_glTexStorageSparseAMD;
#define glTexStorageSparseAMD agx_custom_glad_glTexStorageSparseAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE1DPROC agx_custom_glad_glTexSubImage1D;
#define glTexSubImage1D agx_custom_glad_glTexSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE1DEXTPROC agx_custom_glad_glTexSubImage1DEXT;
#define glTexSubImage1DEXT agx_custom_glad_glTexSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE2DPROC agx_custom_glad_glTexSubImage2D;
#define glTexSubImage2D agx_custom_glad_glTexSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE2DEXTPROC agx_custom_glad_glTexSubImage2DEXT;
#define glTexSubImage2DEXT agx_custom_glad_glTexSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE3DPROC agx_custom_glad_glTexSubImage3D;
#define glTexSubImage3D agx_custom_glad_glTexSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE3DEXTPROC agx_custom_glad_glTexSubImage3DEXT;
#define glTexSubImage3DEXT agx_custom_glad_glTexSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXSUBIMAGE4DSGISPROC agx_custom_glad_glTexSubImage4DSGIS;
#define glTexSubImage4DSGIS agx_custom_glad_glTexSubImage4DSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREATTACHMEMORYNVPROC agx_custom_glad_glTextureAttachMemoryNV;
#define glTextureAttachMemoryNV agx_custom_glad_glTextureAttachMemoryNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBARRIERPROC agx_custom_glad_glTextureBarrier;
#define glTextureBarrier agx_custom_glad_glTextureBarrier
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBARRIERNVPROC agx_custom_glad_glTextureBarrierNV;
#define glTextureBarrierNV agx_custom_glad_glTextureBarrierNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBUFFERPROC agx_custom_glad_glTextureBuffer;
#define glTextureBuffer agx_custom_glad_glTextureBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBUFFEREXTPROC agx_custom_glad_glTextureBufferEXT;
#define glTextureBufferEXT agx_custom_glad_glTextureBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBUFFERRANGEPROC agx_custom_glad_glTextureBufferRange;
#define glTextureBufferRange agx_custom_glad_glTextureBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREBUFFERRANGEEXTPROC agx_custom_glad_glTextureBufferRangeEXT;
#define glTextureBufferRangeEXT agx_custom_glad_glTextureBufferRangeEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURECOLORMASKSGISPROC agx_custom_glad_glTextureColorMaskSGIS;
#define glTextureColorMaskSGIS agx_custom_glad_glTextureColorMaskSGIS
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE1DEXTPROC agx_custom_glad_glTextureImage1DEXT;
#define glTextureImage1DEXT agx_custom_glad_glTextureImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE2DEXTPROC agx_custom_glad_glTextureImage2DEXT;
#define glTextureImage2DEXT agx_custom_glad_glTextureImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTextureImage2DMultisampleCoverageNV;
#define glTextureImage2DMultisampleCoverageNV agx_custom_glad_glTextureImage2DMultisampleCoverageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC agx_custom_glad_glTextureImage2DMultisampleNV;
#define glTextureImage2DMultisampleNV agx_custom_glad_glTextureImage2DMultisampleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE3DEXTPROC agx_custom_glad_glTextureImage3DEXT;
#define glTextureImage3DEXT agx_custom_glad_glTextureImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTextureImage3DMultisampleCoverageNV;
#define glTextureImage3DMultisampleCoverageNV agx_custom_glad_glTextureImage3DMultisampleCoverageNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC agx_custom_glad_glTextureImage3DMultisampleNV;
#define glTextureImage3DMultisampleNV agx_custom_glad_glTextureImage3DMultisampleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURELIGHTEXTPROC agx_custom_glad_glTextureLightEXT;
#define glTextureLightEXT agx_custom_glad_glTextureLightEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREMATERIALEXTPROC agx_custom_glad_glTextureMaterialEXT;
#define glTextureMaterialEXT agx_custom_glad_glTextureMaterialEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURENORMALEXTPROC agx_custom_glad_glTextureNormalEXT;
#define glTextureNormalEXT agx_custom_glad_glTextureNormalEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPAGECOMMITMENTEXTPROC agx_custom_glad_glTexturePageCommitmentEXT;
#define glTexturePageCommitmentEXT agx_custom_glad_glTexturePageCommitmentEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC agx_custom_glad_glTexturePageCommitmentMemNV;
#define glTexturePageCommitmentMemNV agx_custom_glad_glTexturePageCommitmentMemNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIIVPROC agx_custom_glad_glTextureParameterIiv;
#define glTextureParameterIiv agx_custom_glad_glTextureParameterIiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIIVEXTPROC agx_custom_glad_glTextureParameterIivEXT;
#define glTextureParameterIivEXT agx_custom_glad_glTextureParameterIivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIUIVPROC agx_custom_glad_glTextureParameterIuiv;
#define glTextureParameterIuiv agx_custom_glad_glTextureParameterIuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIUIVEXTPROC agx_custom_glad_glTextureParameterIuivEXT;
#define glTextureParameterIuivEXT agx_custom_glad_glTextureParameterIuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERFPROC agx_custom_glad_glTextureParameterf;
#define glTextureParameterf agx_custom_glad_glTextureParameterf
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERFEXTPROC agx_custom_glad_glTextureParameterfEXT;
#define glTextureParameterfEXT agx_custom_glad_glTextureParameterfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERFVPROC agx_custom_glad_glTextureParameterfv;
#define glTextureParameterfv agx_custom_glad_glTextureParameterfv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERFVEXTPROC agx_custom_glad_glTextureParameterfvEXT;
#define glTextureParameterfvEXT agx_custom_glad_glTextureParameterfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIPROC agx_custom_glad_glTextureParameteri;
#define glTextureParameteri agx_custom_glad_glTextureParameteri
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIEXTPROC agx_custom_glad_glTextureParameteriEXT;
#define glTextureParameteriEXT agx_custom_glad_glTextureParameteriEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIVPROC agx_custom_glad_glTextureParameteriv;
#define glTextureParameteriv agx_custom_glad_glTextureParameteriv
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREPARAMETERIVEXTPROC agx_custom_glad_glTextureParameterivEXT;
#define glTextureParameterivEXT agx_custom_glad_glTextureParameterivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURERANGEAPPLEPROC agx_custom_glad_glTextureRangeAPPLE;
#define glTextureRangeAPPLE agx_custom_glad_glTextureRangeAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURERENDERBUFFEREXTPROC agx_custom_glad_glTextureRenderbufferEXT;
#define glTextureRenderbufferEXT agx_custom_glad_glTextureRenderbufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE1DPROC agx_custom_glad_glTextureStorage1D;
#define glTextureStorage1D agx_custom_glad_glTextureStorage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE1DEXTPROC agx_custom_glad_glTextureStorage1DEXT;
#define glTextureStorage1DEXT agx_custom_glad_glTextureStorage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE2DPROC agx_custom_glad_glTextureStorage2D;
#define glTextureStorage2D agx_custom_glad_glTextureStorage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE2DEXTPROC agx_custom_glad_glTextureStorage2DEXT;
#define glTextureStorage2DEXT agx_custom_glad_glTextureStorage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC agx_custom_glad_glTextureStorage2DMultisample;
#define glTextureStorage2DMultisample agx_custom_glad_glTextureStorage2DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorage2DMultisampleEXT;
#define glTextureStorage2DMultisampleEXT agx_custom_glad_glTextureStorage2DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE3DPROC agx_custom_glad_glTextureStorage3D;
#define glTextureStorage3D agx_custom_glad_glTextureStorage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE3DEXTPROC agx_custom_glad_glTextureStorage3DEXT;
#define glTextureStorage3DEXT agx_custom_glad_glTextureStorage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC agx_custom_glad_glTextureStorage3DMultisample;
#define glTextureStorage3DMultisample agx_custom_glad_glTextureStorage3DMultisample
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorage3DMultisampleEXT;
#define glTextureStorage3DMultisampleEXT agx_custom_glad_glTextureStorage3DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM1DEXTPROC agx_custom_glad_glTextureStorageMem1DEXT;
#define glTextureStorageMem1DEXT agx_custom_glad_glTextureStorageMem1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM2DEXTPROC agx_custom_glad_glTextureStorageMem2DEXT;
#define glTextureStorageMem2DEXT agx_custom_glad_glTextureStorageMem2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorageMem2DMultisampleEXT;
#define glTextureStorageMem2DMultisampleEXT agx_custom_glad_glTextureStorageMem2DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM3DEXTPROC agx_custom_glad_glTextureStorageMem3DEXT;
#define glTextureStorageMem3DEXT agx_custom_glad_glTextureStorageMem3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorageMem3DMultisampleEXT;
#define glTextureStorageMem3DMultisampleEXT agx_custom_glad_glTextureStorageMem3DMultisampleEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESTORAGESPARSEAMDPROC agx_custom_glad_glTextureStorageSparseAMD;
#define glTextureStorageSparseAMD agx_custom_glad_glTextureStorageSparseAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE1DPROC agx_custom_glad_glTextureSubImage1D;
#define glTextureSubImage1D agx_custom_glad_glTextureSubImage1D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glTextureSubImage1DEXT;
#define glTextureSubImage1DEXT agx_custom_glad_glTextureSubImage1DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE2DPROC agx_custom_glad_glTextureSubImage2D;
#define glTextureSubImage2D agx_custom_glad_glTextureSubImage2D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glTextureSubImage2DEXT;
#define glTextureSubImage2DEXT agx_custom_glad_glTextureSubImage2DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE3DPROC agx_custom_glad_glTextureSubImage3D;
#define glTextureSubImage3D agx_custom_glad_glTextureSubImage3D
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glTextureSubImage3DEXT;
#define glTextureSubImage3DEXT agx_custom_glad_glTextureSubImage3DEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTEXTUREVIEWPROC agx_custom_glad_glTextureView;
#define glTextureView agx_custom_glad_glTextureView
AGX_CUSTOM_GLAD_API_CALL PFNGLTRACKMATRIXNVPROC agx_custom_glad_glTrackMatrixNV;
#define glTrackMatrixNV agx_custom_glad_glTrackMatrixNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC agx_custom_glad_glTransformFeedbackAttribsNV;
#define glTransformFeedbackAttribsNV agx_custom_glad_glTransformFeedbackAttribsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC agx_custom_glad_glTransformFeedbackBufferBase;
#define glTransformFeedbackBufferBase agx_custom_glad_glTransformFeedbackBufferBase
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC agx_custom_glad_glTransformFeedbackBufferRange;
#define glTransformFeedbackBufferRange agx_custom_glad_glTransformFeedbackBufferRange
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC agx_custom_glad_glTransformFeedbackStreamAttribsNV;
#define glTransformFeedbackStreamAttribsNV agx_custom_glad_glTransformFeedbackStreamAttribsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSPROC agx_custom_glad_glTransformFeedbackVaryings;
#define glTransformFeedbackVaryings agx_custom_glad_glTransformFeedbackVaryings
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC agx_custom_glad_glTransformFeedbackVaryingsEXT;
#define glTransformFeedbackVaryingsEXT agx_custom_glad_glTransformFeedbackVaryingsEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC agx_custom_glad_glTransformFeedbackVaryingsNV;
#define glTransformFeedbackVaryingsNV agx_custom_glad_glTransformFeedbackVaryingsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSFORMPATHNVPROC agx_custom_glad_glTransformPathNV;
#define glTransformPathNV agx_custom_glad_glTransformPathNV
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSLATEDPROC agx_custom_glad_glTranslated;
#define glTranslated agx_custom_glad_glTranslated
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSLATEFPROC agx_custom_glad_glTranslatef;
#define glTranslatef agx_custom_glad_glTranslatef
AGX_CUSTOM_GLAD_API_CALL PFNGLTRANSLATEXOESPROC agx_custom_glad_glTranslatexOES;
#define glTranslatexOES agx_custom_glad_glTranslatexOES
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1DPROC agx_custom_glad_glUniform1d;
#define glUniform1d agx_custom_glad_glUniform1d
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1DVPROC agx_custom_glad_glUniform1dv;
#define glUniform1dv agx_custom_glad_glUniform1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1FPROC agx_custom_glad_glUniform1f;
#define glUniform1f agx_custom_glad_glUniform1f
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1FARBPROC agx_custom_glad_glUniform1fARB;
#define glUniform1fARB agx_custom_glad_glUniform1fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1FVPROC agx_custom_glad_glUniform1fv;
#define glUniform1fv agx_custom_glad_glUniform1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1FVARBPROC agx_custom_glad_glUniform1fvARB;
#define glUniform1fvARB agx_custom_glad_glUniform1fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1IPROC agx_custom_glad_glUniform1i;
#define glUniform1i agx_custom_glad_glUniform1i
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1I64ARBPROC agx_custom_glad_glUniform1i64ARB;
#define glUniform1i64ARB agx_custom_glad_glUniform1i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1I64NVPROC agx_custom_glad_glUniform1i64NV;
#define glUniform1i64NV agx_custom_glad_glUniform1i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1I64VARBPROC agx_custom_glad_glUniform1i64vARB;
#define glUniform1i64vARB agx_custom_glad_glUniform1i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1I64VNVPROC agx_custom_glad_glUniform1i64vNV;
#define glUniform1i64vNV agx_custom_glad_glUniform1i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1IARBPROC agx_custom_glad_glUniform1iARB;
#define glUniform1iARB agx_custom_glad_glUniform1iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1IVPROC agx_custom_glad_glUniform1iv;
#define glUniform1iv agx_custom_glad_glUniform1iv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1IVARBPROC agx_custom_glad_glUniform1ivARB;
#define glUniform1ivARB agx_custom_glad_glUniform1ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UIPROC agx_custom_glad_glUniform1ui;
#define glUniform1ui agx_custom_glad_glUniform1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UI64ARBPROC agx_custom_glad_glUniform1ui64ARB;
#define glUniform1ui64ARB agx_custom_glad_glUniform1ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UI64NVPROC agx_custom_glad_glUniform1ui64NV;
#define glUniform1ui64NV agx_custom_glad_glUniform1ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UI64VARBPROC agx_custom_glad_glUniform1ui64vARB;
#define glUniform1ui64vARB agx_custom_glad_glUniform1ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UI64VNVPROC agx_custom_glad_glUniform1ui64vNV;
#define glUniform1ui64vNV agx_custom_glad_glUniform1ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UIEXTPROC agx_custom_glad_glUniform1uiEXT;
#define glUniform1uiEXT agx_custom_glad_glUniform1uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UIVPROC agx_custom_glad_glUniform1uiv;
#define glUniform1uiv agx_custom_glad_glUniform1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM1UIVEXTPROC agx_custom_glad_glUniform1uivEXT;
#define glUniform1uivEXT agx_custom_glad_glUniform1uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2DPROC agx_custom_glad_glUniform2d;
#define glUniform2d agx_custom_glad_glUniform2d
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2DVPROC agx_custom_glad_glUniform2dv;
#define glUniform2dv agx_custom_glad_glUniform2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2FPROC agx_custom_glad_glUniform2f;
#define glUniform2f agx_custom_glad_glUniform2f
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2FARBPROC agx_custom_glad_glUniform2fARB;
#define glUniform2fARB agx_custom_glad_glUniform2fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2FVPROC agx_custom_glad_glUniform2fv;
#define glUniform2fv agx_custom_glad_glUniform2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2FVARBPROC agx_custom_glad_glUniform2fvARB;
#define glUniform2fvARB agx_custom_glad_glUniform2fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2IPROC agx_custom_glad_glUniform2i;
#define glUniform2i agx_custom_glad_glUniform2i
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2I64ARBPROC agx_custom_glad_glUniform2i64ARB;
#define glUniform2i64ARB agx_custom_glad_glUniform2i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2I64NVPROC agx_custom_glad_glUniform2i64NV;
#define glUniform2i64NV agx_custom_glad_glUniform2i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2I64VARBPROC agx_custom_glad_glUniform2i64vARB;
#define glUniform2i64vARB agx_custom_glad_glUniform2i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2I64VNVPROC agx_custom_glad_glUniform2i64vNV;
#define glUniform2i64vNV agx_custom_glad_glUniform2i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2IARBPROC agx_custom_glad_glUniform2iARB;
#define glUniform2iARB agx_custom_glad_glUniform2iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2IVPROC agx_custom_glad_glUniform2iv;
#define glUniform2iv agx_custom_glad_glUniform2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2IVARBPROC agx_custom_glad_glUniform2ivARB;
#define glUniform2ivARB agx_custom_glad_glUniform2ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UIPROC agx_custom_glad_glUniform2ui;
#define glUniform2ui agx_custom_glad_glUniform2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UI64ARBPROC agx_custom_glad_glUniform2ui64ARB;
#define glUniform2ui64ARB agx_custom_glad_glUniform2ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UI64NVPROC agx_custom_glad_glUniform2ui64NV;
#define glUniform2ui64NV agx_custom_glad_glUniform2ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UI64VARBPROC agx_custom_glad_glUniform2ui64vARB;
#define glUniform2ui64vARB agx_custom_glad_glUniform2ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UI64VNVPROC agx_custom_glad_glUniform2ui64vNV;
#define glUniform2ui64vNV agx_custom_glad_glUniform2ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UIEXTPROC agx_custom_glad_glUniform2uiEXT;
#define glUniform2uiEXT agx_custom_glad_glUniform2uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UIVPROC agx_custom_glad_glUniform2uiv;
#define glUniform2uiv agx_custom_glad_glUniform2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM2UIVEXTPROC agx_custom_glad_glUniform2uivEXT;
#define glUniform2uivEXT agx_custom_glad_glUniform2uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3DPROC agx_custom_glad_glUniform3d;
#define glUniform3d agx_custom_glad_glUniform3d
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3DVPROC agx_custom_glad_glUniform3dv;
#define glUniform3dv agx_custom_glad_glUniform3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3FPROC agx_custom_glad_glUniform3f;
#define glUniform3f agx_custom_glad_glUniform3f
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3FARBPROC agx_custom_glad_glUniform3fARB;
#define glUniform3fARB agx_custom_glad_glUniform3fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3FVPROC agx_custom_glad_glUniform3fv;
#define glUniform3fv agx_custom_glad_glUniform3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3FVARBPROC agx_custom_glad_glUniform3fvARB;
#define glUniform3fvARB agx_custom_glad_glUniform3fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3IPROC agx_custom_glad_glUniform3i;
#define glUniform3i agx_custom_glad_glUniform3i
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3I64ARBPROC agx_custom_glad_glUniform3i64ARB;
#define glUniform3i64ARB agx_custom_glad_glUniform3i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3I64NVPROC agx_custom_glad_glUniform3i64NV;
#define glUniform3i64NV agx_custom_glad_glUniform3i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3I64VARBPROC agx_custom_glad_glUniform3i64vARB;
#define glUniform3i64vARB agx_custom_glad_glUniform3i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3I64VNVPROC agx_custom_glad_glUniform3i64vNV;
#define glUniform3i64vNV agx_custom_glad_glUniform3i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3IARBPROC agx_custom_glad_glUniform3iARB;
#define glUniform3iARB agx_custom_glad_glUniform3iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3IVPROC agx_custom_glad_glUniform3iv;
#define glUniform3iv agx_custom_glad_glUniform3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3IVARBPROC agx_custom_glad_glUniform3ivARB;
#define glUniform3ivARB agx_custom_glad_glUniform3ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UIPROC agx_custom_glad_glUniform3ui;
#define glUniform3ui agx_custom_glad_glUniform3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UI64ARBPROC agx_custom_glad_glUniform3ui64ARB;
#define glUniform3ui64ARB agx_custom_glad_glUniform3ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UI64NVPROC agx_custom_glad_glUniform3ui64NV;
#define glUniform3ui64NV agx_custom_glad_glUniform3ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UI64VARBPROC agx_custom_glad_glUniform3ui64vARB;
#define glUniform3ui64vARB agx_custom_glad_glUniform3ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UI64VNVPROC agx_custom_glad_glUniform3ui64vNV;
#define glUniform3ui64vNV agx_custom_glad_glUniform3ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UIEXTPROC agx_custom_glad_glUniform3uiEXT;
#define glUniform3uiEXT agx_custom_glad_glUniform3uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UIVPROC agx_custom_glad_glUniform3uiv;
#define glUniform3uiv agx_custom_glad_glUniform3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM3UIVEXTPROC agx_custom_glad_glUniform3uivEXT;
#define glUniform3uivEXT agx_custom_glad_glUniform3uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4DPROC agx_custom_glad_glUniform4d;
#define glUniform4d agx_custom_glad_glUniform4d
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4DVPROC agx_custom_glad_glUniform4dv;
#define glUniform4dv agx_custom_glad_glUniform4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4FPROC agx_custom_glad_glUniform4f;
#define glUniform4f agx_custom_glad_glUniform4f
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4FARBPROC agx_custom_glad_glUniform4fARB;
#define glUniform4fARB agx_custom_glad_glUniform4fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4FVPROC agx_custom_glad_glUniform4fv;
#define glUniform4fv agx_custom_glad_glUniform4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4FVARBPROC agx_custom_glad_glUniform4fvARB;
#define glUniform4fvARB agx_custom_glad_glUniform4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4IPROC agx_custom_glad_glUniform4i;
#define glUniform4i agx_custom_glad_glUniform4i
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4I64ARBPROC agx_custom_glad_glUniform4i64ARB;
#define glUniform4i64ARB agx_custom_glad_glUniform4i64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4I64NVPROC agx_custom_glad_glUniform4i64NV;
#define glUniform4i64NV agx_custom_glad_glUniform4i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4I64VARBPROC agx_custom_glad_glUniform4i64vARB;
#define glUniform4i64vARB agx_custom_glad_glUniform4i64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4I64VNVPROC agx_custom_glad_glUniform4i64vNV;
#define glUniform4i64vNV agx_custom_glad_glUniform4i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4IARBPROC agx_custom_glad_glUniform4iARB;
#define glUniform4iARB agx_custom_glad_glUniform4iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4IVPROC agx_custom_glad_glUniform4iv;
#define glUniform4iv agx_custom_glad_glUniform4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4IVARBPROC agx_custom_glad_glUniform4ivARB;
#define glUniform4ivARB agx_custom_glad_glUniform4ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UIPROC agx_custom_glad_glUniform4ui;
#define glUniform4ui agx_custom_glad_glUniform4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UI64ARBPROC agx_custom_glad_glUniform4ui64ARB;
#define glUniform4ui64ARB agx_custom_glad_glUniform4ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UI64NVPROC agx_custom_glad_glUniform4ui64NV;
#define glUniform4ui64NV agx_custom_glad_glUniform4ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UI64VARBPROC agx_custom_glad_glUniform4ui64vARB;
#define glUniform4ui64vARB agx_custom_glad_glUniform4ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UI64VNVPROC agx_custom_glad_glUniform4ui64vNV;
#define glUniform4ui64vNV agx_custom_glad_glUniform4ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UIEXTPROC agx_custom_glad_glUniform4uiEXT;
#define glUniform4uiEXT agx_custom_glad_glUniform4uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UIVPROC agx_custom_glad_glUniform4uiv;
#define glUniform4uiv agx_custom_glad_glUniform4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORM4UIVEXTPROC agx_custom_glad_glUniform4uivEXT;
#define glUniform4uivEXT agx_custom_glad_glUniform4uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMBLOCKBINDINGPROC agx_custom_glad_glUniformBlockBinding;
#define glUniformBlockBinding agx_custom_glad_glUniformBlockBinding
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMBUFFEREXTPROC agx_custom_glad_glUniformBufferEXT;
#define glUniformBufferEXT agx_custom_glad_glUniformBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMHANDLEUI64ARBPROC agx_custom_glad_glUniformHandleui64ARB;
#define glUniformHandleui64ARB agx_custom_glad_glUniformHandleui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMHANDLEUI64NVPROC agx_custom_glad_glUniformHandleui64NV;
#define glUniformHandleui64NV agx_custom_glad_glUniformHandleui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMHANDLEUI64VARBPROC agx_custom_glad_glUniformHandleui64vARB;
#define glUniformHandleui64vARB agx_custom_glad_glUniformHandleui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMHANDLEUI64VNVPROC agx_custom_glad_glUniformHandleui64vNV;
#define glUniformHandleui64vNV agx_custom_glad_glUniformHandleui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2DVPROC agx_custom_glad_glUniformMatrix2dv;
#define glUniformMatrix2dv agx_custom_glad_glUniformMatrix2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2FVPROC agx_custom_glad_glUniformMatrix2fv;
#define glUniformMatrix2fv agx_custom_glad_glUniformMatrix2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2FVARBPROC agx_custom_glad_glUniformMatrix2fvARB;
#define glUniformMatrix2fvARB agx_custom_glad_glUniformMatrix2fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2X3DVPROC agx_custom_glad_glUniformMatrix2x3dv;
#define glUniformMatrix2x3dv agx_custom_glad_glUniformMatrix2x3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2X3FVPROC agx_custom_glad_glUniformMatrix2x3fv;
#define glUniformMatrix2x3fv agx_custom_glad_glUniformMatrix2x3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2X4DVPROC agx_custom_glad_glUniformMatrix2x4dv;
#define glUniformMatrix2x4dv agx_custom_glad_glUniformMatrix2x4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX2X4FVPROC agx_custom_glad_glUniformMatrix2x4fv;
#define glUniformMatrix2x4fv agx_custom_glad_glUniformMatrix2x4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3DVPROC agx_custom_glad_glUniformMatrix3dv;
#define glUniformMatrix3dv agx_custom_glad_glUniformMatrix3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3FVPROC agx_custom_glad_glUniformMatrix3fv;
#define glUniformMatrix3fv agx_custom_glad_glUniformMatrix3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3FVARBPROC agx_custom_glad_glUniformMatrix3fvARB;
#define glUniformMatrix3fvARB agx_custom_glad_glUniformMatrix3fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3X2DVPROC agx_custom_glad_glUniformMatrix3x2dv;
#define glUniformMatrix3x2dv agx_custom_glad_glUniformMatrix3x2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3X2FVPROC agx_custom_glad_glUniformMatrix3x2fv;
#define glUniformMatrix3x2fv agx_custom_glad_glUniformMatrix3x2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3X4DVPROC agx_custom_glad_glUniformMatrix3x4dv;
#define glUniformMatrix3x4dv agx_custom_glad_glUniformMatrix3x4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX3X4FVPROC agx_custom_glad_glUniformMatrix3x4fv;
#define glUniformMatrix3x4fv agx_custom_glad_glUniformMatrix3x4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4DVPROC agx_custom_glad_glUniformMatrix4dv;
#define glUniformMatrix4dv agx_custom_glad_glUniformMatrix4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4FVPROC agx_custom_glad_glUniformMatrix4fv;
#define glUniformMatrix4fv agx_custom_glad_glUniformMatrix4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4FVARBPROC agx_custom_glad_glUniformMatrix4fvARB;
#define glUniformMatrix4fvARB agx_custom_glad_glUniformMatrix4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4X2DVPROC agx_custom_glad_glUniformMatrix4x2dv;
#define glUniformMatrix4x2dv agx_custom_glad_glUniformMatrix4x2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4X2FVPROC agx_custom_glad_glUniformMatrix4x2fv;
#define glUniformMatrix4x2fv agx_custom_glad_glUniformMatrix4x2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4X3DVPROC agx_custom_glad_glUniformMatrix4x3dv;
#define glUniformMatrix4x3dv agx_custom_glad_glUniformMatrix4x3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMMATRIX4X3FVPROC agx_custom_glad_glUniformMatrix4x3fv;
#define glUniformMatrix4x3fv agx_custom_glad_glUniformMatrix4x3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMSUBROUTINESUIVPROC agx_custom_glad_glUniformSubroutinesuiv;
#define glUniformSubroutinesuiv agx_custom_glad_glUniformSubroutinesuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMUI64NVPROC agx_custom_glad_glUniformui64NV;
#define glUniformui64NV agx_custom_glad_glUniformui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNIFORMUI64VNVPROC agx_custom_glad_glUniformui64vNV;
#define glUniformui64vNV agx_custom_glad_glUniformui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLUNLOCKARRAYSEXTPROC agx_custom_glad_glUnlockArraysEXT;
#define glUnlockArraysEXT agx_custom_glad_glUnlockArraysEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPBUFFERPROC agx_custom_glad_glUnmapBuffer;
#define glUnmapBuffer agx_custom_glad_glUnmapBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPBUFFERARBPROC agx_custom_glad_glUnmapBufferARB;
#define glUnmapBufferARB agx_custom_glad_glUnmapBufferARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPNAMEDBUFFERPROC agx_custom_glad_glUnmapNamedBuffer;
#define glUnmapNamedBuffer agx_custom_glad_glUnmapNamedBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPNAMEDBUFFEREXTPROC agx_custom_glad_glUnmapNamedBufferEXT;
#define glUnmapNamedBufferEXT agx_custom_glad_glUnmapNamedBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPOBJECTBUFFERATIPROC agx_custom_glad_glUnmapObjectBufferATI;
#define glUnmapObjectBufferATI agx_custom_glad_glUnmapObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLUNMAPTEXTURE2DINTELPROC agx_custom_glad_glUnmapTexture2DINTEL;
#define glUnmapTexture2DINTEL agx_custom_glad_glUnmapTexture2DINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLUPDATEOBJECTBUFFERATIPROC agx_custom_glad_glUpdateObjectBufferATI;
#define glUpdateObjectBufferATI agx_custom_glad_glUpdateObjectBufferATI
AGX_CUSTOM_GLAD_API_CALL PFNGLUPLOADGPUMASKNVXPROC agx_custom_glad_glUploadGpuMaskNVX;
#define glUploadGpuMaskNVX agx_custom_glad_glUploadGpuMaskNVX
AGX_CUSTOM_GLAD_API_CALL PFNGLUSEPROGRAMPROC agx_custom_glad_glUseProgram;
#define glUseProgram agx_custom_glad_glUseProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLUSEPROGRAMOBJECTARBPROC agx_custom_glad_glUseProgramObjectARB;
#define glUseProgramObjectARB agx_custom_glad_glUseProgramObjectARB
AGX_CUSTOM_GLAD_API_CALL PFNGLUSEPROGRAMSTAGESPROC agx_custom_glad_glUseProgramStages;
#define glUseProgramStages agx_custom_glad_glUseProgramStages
AGX_CUSTOM_GLAD_API_CALL PFNGLUSESHADERPROGRAMEXTPROC agx_custom_glad_glUseShaderProgramEXT;
#define glUseShaderProgramEXT agx_custom_glad_glUseShaderProgramEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUFININVPROC agx_custom_glad_glVDPAUFiniNV;
#define glVDPAUFiniNV agx_custom_glad_glVDPAUFiniNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUGETSURFACEIVNVPROC agx_custom_glad_glVDPAUGetSurfaceivNV;
#define glVDPAUGetSurfaceivNV agx_custom_glad_glVDPAUGetSurfaceivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUINITNVPROC agx_custom_glad_glVDPAUInitNV;
#define glVDPAUInitNV agx_custom_glad_glVDPAUInitNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUISSURFACENVPROC agx_custom_glad_glVDPAUIsSurfaceNV;
#define glVDPAUIsSurfaceNV agx_custom_glad_glVDPAUIsSurfaceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUMAPSURFACESNVPROC agx_custom_glad_glVDPAUMapSurfacesNV;
#define glVDPAUMapSurfacesNV agx_custom_glad_glVDPAUMapSurfacesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC agx_custom_glad_glVDPAURegisterOutputSurfaceNV;
#define glVDPAURegisterOutputSurfaceNV agx_custom_glad_glVDPAURegisterOutputSurfaceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUREGISTERVIDEOSURFACENVPROC agx_custom_glad_glVDPAURegisterVideoSurfaceNV;
#define glVDPAURegisterVideoSurfaceNV agx_custom_glad_glVDPAURegisterVideoSurfaceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC agx_custom_glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV;
#define glVDPAURegisterVideoSurfaceWithPictureStructureNV agx_custom_glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUSURFACEACCESSNVPROC agx_custom_glad_glVDPAUSurfaceAccessNV;
#define glVDPAUSurfaceAccessNV agx_custom_glad_glVDPAUSurfaceAccessNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUUNMAPSURFACESNVPROC agx_custom_glad_glVDPAUUnmapSurfacesNV;
#define glVDPAUUnmapSurfacesNV agx_custom_glad_glVDPAUUnmapSurfacesNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVDPAUUNREGISTERSURFACENVPROC agx_custom_glad_glVDPAUUnregisterSurfaceNV;
#define glVDPAUUnregisterSurfaceNV agx_custom_glad_glVDPAUUnregisterSurfaceNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVALIDATEPROGRAMPROC agx_custom_glad_glValidateProgram;
#define glValidateProgram agx_custom_glad_glValidateProgram
AGX_CUSTOM_GLAD_API_CALL PFNGLVALIDATEPROGRAMARBPROC agx_custom_glad_glValidateProgramARB;
#define glValidateProgramARB agx_custom_glad_glValidateProgramARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVALIDATEPROGRAMPIPELINEPROC agx_custom_glad_glValidateProgramPipeline;
#define glValidateProgramPipeline agx_custom_glad_glValidateProgramPipeline
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTARRAYOBJECTATIPROC agx_custom_glad_glVariantArrayObjectATI;
#define glVariantArrayObjectATI agx_custom_glad_glVariantArrayObjectATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTPOINTEREXTPROC agx_custom_glad_glVariantPointerEXT;
#define glVariantPointerEXT agx_custom_glad_glVariantPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTBVEXTPROC agx_custom_glad_glVariantbvEXT;
#define glVariantbvEXT agx_custom_glad_glVariantbvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTDVEXTPROC agx_custom_glad_glVariantdvEXT;
#define glVariantdvEXT agx_custom_glad_glVariantdvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTFVEXTPROC agx_custom_glad_glVariantfvEXT;
#define glVariantfvEXT agx_custom_glad_glVariantfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTIVEXTPROC agx_custom_glad_glVariantivEXT;
#define glVariantivEXT agx_custom_glad_glVariantivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTSVEXTPROC agx_custom_glad_glVariantsvEXT;
#define glVariantsvEXT agx_custom_glad_glVariantsvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTUBVEXTPROC agx_custom_glad_glVariantubvEXT;
#define glVariantubvEXT agx_custom_glad_glVariantubvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTUIVEXTPROC agx_custom_glad_glVariantuivEXT;
#define glVariantuivEXT agx_custom_glad_glVariantuivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVARIANTUSVEXTPROC agx_custom_glad_glVariantusvEXT;
#define glVariantusvEXT agx_custom_glad_glVariantusvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2BOESPROC agx_custom_glad_glVertex2bOES;
#define glVertex2bOES agx_custom_glad_glVertex2bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2BVOESPROC agx_custom_glad_glVertex2bvOES;
#define glVertex2bvOES agx_custom_glad_glVertex2bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2DPROC agx_custom_glad_glVertex2d;
#define glVertex2d agx_custom_glad_glVertex2d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2DVPROC agx_custom_glad_glVertex2dv;
#define glVertex2dv agx_custom_glad_glVertex2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2FPROC agx_custom_glad_glVertex2f;
#define glVertex2f agx_custom_glad_glVertex2f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2FVPROC agx_custom_glad_glVertex2fv;
#define glVertex2fv agx_custom_glad_glVertex2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2HNVPROC agx_custom_glad_glVertex2hNV;
#define glVertex2hNV agx_custom_glad_glVertex2hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2HVNVPROC agx_custom_glad_glVertex2hvNV;
#define glVertex2hvNV agx_custom_glad_glVertex2hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2IPROC agx_custom_glad_glVertex2i;
#define glVertex2i agx_custom_glad_glVertex2i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2IVPROC agx_custom_glad_glVertex2iv;
#define glVertex2iv agx_custom_glad_glVertex2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2SPROC agx_custom_glad_glVertex2s;
#define glVertex2s agx_custom_glad_glVertex2s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2SVPROC agx_custom_glad_glVertex2sv;
#define glVertex2sv agx_custom_glad_glVertex2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2XOESPROC agx_custom_glad_glVertex2xOES;
#define glVertex2xOES agx_custom_glad_glVertex2xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX2XVOESPROC agx_custom_glad_glVertex2xvOES;
#define glVertex2xvOES agx_custom_glad_glVertex2xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3BOESPROC agx_custom_glad_glVertex3bOES;
#define glVertex3bOES agx_custom_glad_glVertex3bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3BVOESPROC agx_custom_glad_glVertex3bvOES;
#define glVertex3bvOES agx_custom_glad_glVertex3bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3DPROC agx_custom_glad_glVertex3d;
#define glVertex3d agx_custom_glad_glVertex3d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3DVPROC agx_custom_glad_glVertex3dv;
#define glVertex3dv agx_custom_glad_glVertex3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3FPROC agx_custom_glad_glVertex3f;
#define glVertex3f agx_custom_glad_glVertex3f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3FVPROC agx_custom_glad_glVertex3fv;
#define glVertex3fv agx_custom_glad_glVertex3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3HNVPROC agx_custom_glad_glVertex3hNV;
#define glVertex3hNV agx_custom_glad_glVertex3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3HVNVPROC agx_custom_glad_glVertex3hvNV;
#define glVertex3hvNV agx_custom_glad_glVertex3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3IPROC agx_custom_glad_glVertex3i;
#define glVertex3i agx_custom_glad_glVertex3i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3IVPROC agx_custom_glad_glVertex3iv;
#define glVertex3iv agx_custom_glad_glVertex3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3SPROC agx_custom_glad_glVertex3s;
#define glVertex3s agx_custom_glad_glVertex3s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3SVPROC agx_custom_glad_glVertex3sv;
#define glVertex3sv agx_custom_glad_glVertex3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3XOESPROC agx_custom_glad_glVertex3xOES;
#define glVertex3xOES agx_custom_glad_glVertex3xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX3XVOESPROC agx_custom_glad_glVertex3xvOES;
#define glVertex3xvOES agx_custom_glad_glVertex3xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4BOESPROC agx_custom_glad_glVertex4bOES;
#define glVertex4bOES agx_custom_glad_glVertex4bOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4BVOESPROC agx_custom_glad_glVertex4bvOES;
#define glVertex4bvOES agx_custom_glad_glVertex4bvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4DPROC agx_custom_glad_glVertex4d;
#define glVertex4d agx_custom_glad_glVertex4d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4DVPROC agx_custom_glad_glVertex4dv;
#define glVertex4dv agx_custom_glad_glVertex4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4FPROC agx_custom_glad_glVertex4f;
#define glVertex4f agx_custom_glad_glVertex4f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4FVPROC agx_custom_glad_glVertex4fv;
#define glVertex4fv agx_custom_glad_glVertex4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4HNVPROC agx_custom_glad_glVertex4hNV;
#define glVertex4hNV agx_custom_glad_glVertex4hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4HVNVPROC agx_custom_glad_glVertex4hvNV;
#define glVertex4hvNV agx_custom_glad_glVertex4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4IPROC agx_custom_glad_glVertex4i;
#define glVertex4i agx_custom_glad_glVertex4i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4IVPROC agx_custom_glad_glVertex4iv;
#define glVertex4iv agx_custom_glad_glVertex4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4SPROC agx_custom_glad_glVertex4s;
#define glVertex4s agx_custom_glad_glVertex4s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4SVPROC agx_custom_glad_glVertex4sv;
#define glVertex4sv agx_custom_glad_glVertex4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4XOESPROC agx_custom_glad_glVertex4xOES;
#define glVertex4xOES agx_custom_glad_glVertex4xOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEX4XVOESPROC agx_custom_glad_glVertex4xvOES;
#define glVertex4xvOES agx_custom_glad_glVertex4xvOES
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYATTRIBBINDINGPROC agx_custom_glad_glVertexArrayAttribBinding;
#define glVertexArrayAttribBinding agx_custom_glad_glVertexArrayAttribBinding
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYATTRIBFORMATPROC agx_custom_glad_glVertexArrayAttribFormat;
#define glVertexArrayAttribFormat agx_custom_glad_glVertexArrayAttribFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYATTRIBIFORMATPROC agx_custom_glad_glVertexArrayAttribIFormat;
#define glVertexArrayAttribIFormat agx_custom_glad_glVertexArrayAttribIFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYATTRIBLFORMATPROC agx_custom_glad_glVertexArrayAttribLFormat;
#define glVertexArrayAttribLFormat agx_custom_glad_glVertexArrayAttribLFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC agx_custom_glad_glVertexArrayBindVertexBufferEXT;
#define glVertexArrayBindVertexBufferEXT agx_custom_glad_glVertexArrayBindVertexBufferEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYBINDINGDIVISORPROC agx_custom_glad_glVertexArrayBindingDivisor;
#define glVertexArrayBindingDivisor agx_custom_glad_glVertexArrayBindingDivisor
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYCOLOROFFSETEXTPROC agx_custom_glad_glVertexArrayColorOffsetEXT;
#define glVertexArrayColorOffsetEXT agx_custom_glad_glVertexArrayColorOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC agx_custom_glad_glVertexArrayEdgeFlagOffsetEXT;
#define glVertexArrayEdgeFlagOffsetEXT agx_custom_glad_glVertexArrayEdgeFlagOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYELEMENTBUFFERPROC agx_custom_glad_glVertexArrayElementBuffer;
#define glVertexArrayElementBuffer agx_custom_glad_glVertexArrayElementBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayFogCoordOffsetEXT;
#define glVertexArrayFogCoordOffsetEXT agx_custom_glad_glVertexArrayFogCoordOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYINDEXOFFSETEXTPROC agx_custom_glad_glVertexArrayIndexOffsetEXT;
#define glVertexArrayIndexOffsetEXT agx_custom_glad_glVertexArrayIndexOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayMultiTexCoordOffsetEXT;
#define glVertexArrayMultiTexCoordOffsetEXT agx_custom_glad_glVertexArrayMultiTexCoordOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYNORMALOFFSETEXTPROC agx_custom_glad_glVertexArrayNormalOffsetEXT;
#define glVertexArrayNormalOffsetEXT agx_custom_glad_glVertexArrayNormalOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYPARAMETERIAPPLEPROC agx_custom_glad_glVertexArrayParameteriAPPLE;
#define glVertexArrayParameteriAPPLE agx_custom_glad_glVertexArrayParameteriAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYRANGEAPPLEPROC agx_custom_glad_glVertexArrayRangeAPPLE;
#define glVertexArrayRangeAPPLE agx_custom_glad_glVertexArrayRangeAPPLE
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYRANGENVPROC agx_custom_glad_glVertexArrayRangeNV;
#define glVertexArrayRangeNV agx_custom_glad_glVertexArrayRangeNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC agx_custom_glad_glVertexArraySecondaryColorOffsetEXT;
#define glVertexArraySecondaryColorOffsetEXT agx_custom_glad_glVertexArraySecondaryColorOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayTexCoordOffsetEXT;
#define glVertexArrayTexCoordOffsetEXT agx_custom_glad_glVertexArrayTexCoordOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC agx_custom_glad_glVertexArrayVertexAttribBindingEXT;
#define glVertexArrayVertexAttribBindingEXT agx_custom_glad_glVertexArrayVertexAttribBindingEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC agx_custom_glad_glVertexArrayVertexAttribDivisorEXT;
#define glVertexArrayVertexAttribDivisorEXT agx_custom_glad_glVertexArrayVertexAttribDivisorEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribFormatEXT;
#define glVertexArrayVertexAttribFormatEXT agx_custom_glad_glVertexArrayVertexAttribFormatEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribIFormatEXT;
#define glVertexArrayVertexAttribIFormatEXT agx_custom_glad_glVertexArrayVertexAttribIFormatEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribIOffsetEXT;
#define glVertexArrayVertexAttribIOffsetEXT agx_custom_glad_glVertexArrayVertexAttribIOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribLFormatEXT;
#define glVertexArrayVertexAttribLFormatEXT agx_custom_glad_glVertexArrayVertexAttribLFormatEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribLOffsetEXT;
#define glVertexArrayVertexAttribLOffsetEXT agx_custom_glad_glVertexArrayVertexAttribLOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribOffsetEXT;
#define glVertexArrayVertexAttribOffsetEXT agx_custom_glad_glVertexArrayVertexAttribOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC agx_custom_glad_glVertexArrayVertexBindingDivisorEXT;
#define glVertexArrayVertexBindingDivisorEXT agx_custom_glad_glVertexArrayVertexBindingDivisorEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXBUFFERPROC agx_custom_glad_glVertexArrayVertexBuffer;
#define glVertexArrayVertexBuffer agx_custom_glad_glVertexArrayVertexBuffer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXBUFFERSPROC agx_custom_glad_glVertexArrayVertexBuffers;
#define glVertexArrayVertexBuffers agx_custom_glad_glVertexArrayVertexBuffers
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexOffsetEXT;
#define glVertexArrayVertexOffsetEXT agx_custom_glad_glVertexArrayVertexOffsetEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DPROC agx_custom_glad_glVertexAttrib1d;
#define glVertexAttrib1d agx_custom_glad_glVertexAttrib1d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DARBPROC agx_custom_glad_glVertexAttrib1dARB;
#define glVertexAttrib1dARB agx_custom_glad_glVertexAttrib1dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DNVPROC agx_custom_glad_glVertexAttrib1dNV;
#define glVertexAttrib1dNV agx_custom_glad_glVertexAttrib1dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DVPROC agx_custom_glad_glVertexAttrib1dv;
#define glVertexAttrib1dv agx_custom_glad_glVertexAttrib1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DVARBPROC agx_custom_glad_glVertexAttrib1dvARB;
#define glVertexAttrib1dvARB agx_custom_glad_glVertexAttrib1dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1DVNVPROC agx_custom_glad_glVertexAttrib1dvNV;
#define glVertexAttrib1dvNV agx_custom_glad_glVertexAttrib1dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FPROC agx_custom_glad_glVertexAttrib1f;
#define glVertexAttrib1f agx_custom_glad_glVertexAttrib1f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FARBPROC agx_custom_glad_glVertexAttrib1fARB;
#define glVertexAttrib1fARB agx_custom_glad_glVertexAttrib1fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FNVPROC agx_custom_glad_glVertexAttrib1fNV;
#define glVertexAttrib1fNV agx_custom_glad_glVertexAttrib1fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FVPROC agx_custom_glad_glVertexAttrib1fv;
#define glVertexAttrib1fv agx_custom_glad_glVertexAttrib1fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FVARBPROC agx_custom_glad_glVertexAttrib1fvARB;
#define glVertexAttrib1fvARB agx_custom_glad_glVertexAttrib1fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1FVNVPROC agx_custom_glad_glVertexAttrib1fvNV;
#define glVertexAttrib1fvNV agx_custom_glad_glVertexAttrib1fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1HNVPROC agx_custom_glad_glVertexAttrib1hNV;
#define glVertexAttrib1hNV agx_custom_glad_glVertexAttrib1hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1HVNVPROC agx_custom_glad_glVertexAttrib1hvNV;
#define glVertexAttrib1hvNV agx_custom_glad_glVertexAttrib1hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SPROC agx_custom_glad_glVertexAttrib1s;
#define glVertexAttrib1s agx_custom_glad_glVertexAttrib1s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SARBPROC agx_custom_glad_glVertexAttrib1sARB;
#define glVertexAttrib1sARB agx_custom_glad_glVertexAttrib1sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SNVPROC agx_custom_glad_glVertexAttrib1sNV;
#define glVertexAttrib1sNV agx_custom_glad_glVertexAttrib1sNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SVPROC agx_custom_glad_glVertexAttrib1sv;
#define glVertexAttrib1sv agx_custom_glad_glVertexAttrib1sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SVARBPROC agx_custom_glad_glVertexAttrib1svARB;
#define glVertexAttrib1svARB agx_custom_glad_glVertexAttrib1svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB1SVNVPROC agx_custom_glad_glVertexAttrib1svNV;
#define glVertexAttrib1svNV agx_custom_glad_glVertexAttrib1svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DPROC agx_custom_glad_glVertexAttrib2d;
#define glVertexAttrib2d agx_custom_glad_glVertexAttrib2d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DARBPROC agx_custom_glad_glVertexAttrib2dARB;
#define glVertexAttrib2dARB agx_custom_glad_glVertexAttrib2dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DNVPROC agx_custom_glad_glVertexAttrib2dNV;
#define glVertexAttrib2dNV agx_custom_glad_glVertexAttrib2dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DVPROC agx_custom_glad_glVertexAttrib2dv;
#define glVertexAttrib2dv agx_custom_glad_glVertexAttrib2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DVARBPROC agx_custom_glad_glVertexAttrib2dvARB;
#define glVertexAttrib2dvARB agx_custom_glad_glVertexAttrib2dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2DVNVPROC agx_custom_glad_glVertexAttrib2dvNV;
#define glVertexAttrib2dvNV agx_custom_glad_glVertexAttrib2dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FPROC agx_custom_glad_glVertexAttrib2f;
#define glVertexAttrib2f agx_custom_glad_glVertexAttrib2f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FARBPROC agx_custom_glad_glVertexAttrib2fARB;
#define glVertexAttrib2fARB agx_custom_glad_glVertexAttrib2fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FNVPROC agx_custom_glad_glVertexAttrib2fNV;
#define glVertexAttrib2fNV agx_custom_glad_glVertexAttrib2fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FVPROC agx_custom_glad_glVertexAttrib2fv;
#define glVertexAttrib2fv agx_custom_glad_glVertexAttrib2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FVARBPROC agx_custom_glad_glVertexAttrib2fvARB;
#define glVertexAttrib2fvARB agx_custom_glad_glVertexAttrib2fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2FVNVPROC agx_custom_glad_glVertexAttrib2fvNV;
#define glVertexAttrib2fvNV agx_custom_glad_glVertexAttrib2fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2HNVPROC agx_custom_glad_glVertexAttrib2hNV;
#define glVertexAttrib2hNV agx_custom_glad_glVertexAttrib2hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2HVNVPROC agx_custom_glad_glVertexAttrib2hvNV;
#define glVertexAttrib2hvNV agx_custom_glad_glVertexAttrib2hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SPROC agx_custom_glad_glVertexAttrib2s;
#define glVertexAttrib2s agx_custom_glad_glVertexAttrib2s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SARBPROC agx_custom_glad_glVertexAttrib2sARB;
#define glVertexAttrib2sARB agx_custom_glad_glVertexAttrib2sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SNVPROC agx_custom_glad_glVertexAttrib2sNV;
#define glVertexAttrib2sNV agx_custom_glad_glVertexAttrib2sNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SVPROC agx_custom_glad_glVertexAttrib2sv;
#define glVertexAttrib2sv agx_custom_glad_glVertexAttrib2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SVARBPROC agx_custom_glad_glVertexAttrib2svARB;
#define glVertexAttrib2svARB agx_custom_glad_glVertexAttrib2svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB2SVNVPROC agx_custom_glad_glVertexAttrib2svNV;
#define glVertexAttrib2svNV agx_custom_glad_glVertexAttrib2svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DPROC agx_custom_glad_glVertexAttrib3d;
#define glVertexAttrib3d agx_custom_glad_glVertexAttrib3d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DARBPROC agx_custom_glad_glVertexAttrib3dARB;
#define glVertexAttrib3dARB agx_custom_glad_glVertexAttrib3dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DNVPROC agx_custom_glad_glVertexAttrib3dNV;
#define glVertexAttrib3dNV agx_custom_glad_glVertexAttrib3dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DVPROC agx_custom_glad_glVertexAttrib3dv;
#define glVertexAttrib3dv agx_custom_glad_glVertexAttrib3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DVARBPROC agx_custom_glad_glVertexAttrib3dvARB;
#define glVertexAttrib3dvARB agx_custom_glad_glVertexAttrib3dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3DVNVPROC agx_custom_glad_glVertexAttrib3dvNV;
#define glVertexAttrib3dvNV agx_custom_glad_glVertexAttrib3dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FPROC agx_custom_glad_glVertexAttrib3f;
#define glVertexAttrib3f agx_custom_glad_glVertexAttrib3f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FARBPROC agx_custom_glad_glVertexAttrib3fARB;
#define glVertexAttrib3fARB agx_custom_glad_glVertexAttrib3fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FNVPROC agx_custom_glad_glVertexAttrib3fNV;
#define glVertexAttrib3fNV agx_custom_glad_glVertexAttrib3fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FVPROC agx_custom_glad_glVertexAttrib3fv;
#define glVertexAttrib3fv agx_custom_glad_glVertexAttrib3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FVARBPROC agx_custom_glad_glVertexAttrib3fvARB;
#define glVertexAttrib3fvARB agx_custom_glad_glVertexAttrib3fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3FVNVPROC agx_custom_glad_glVertexAttrib3fvNV;
#define glVertexAttrib3fvNV agx_custom_glad_glVertexAttrib3fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3HNVPROC agx_custom_glad_glVertexAttrib3hNV;
#define glVertexAttrib3hNV agx_custom_glad_glVertexAttrib3hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3HVNVPROC agx_custom_glad_glVertexAttrib3hvNV;
#define glVertexAttrib3hvNV agx_custom_glad_glVertexAttrib3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SPROC agx_custom_glad_glVertexAttrib3s;
#define glVertexAttrib3s agx_custom_glad_glVertexAttrib3s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SARBPROC agx_custom_glad_glVertexAttrib3sARB;
#define glVertexAttrib3sARB agx_custom_glad_glVertexAttrib3sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SNVPROC agx_custom_glad_glVertexAttrib3sNV;
#define glVertexAttrib3sNV agx_custom_glad_glVertexAttrib3sNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SVPROC agx_custom_glad_glVertexAttrib3sv;
#define glVertexAttrib3sv agx_custom_glad_glVertexAttrib3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SVARBPROC agx_custom_glad_glVertexAttrib3svARB;
#define glVertexAttrib3svARB agx_custom_glad_glVertexAttrib3svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB3SVNVPROC agx_custom_glad_glVertexAttrib3svNV;
#define glVertexAttrib3svNV agx_custom_glad_glVertexAttrib3svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NBVPROC agx_custom_glad_glVertexAttrib4Nbv;
#define glVertexAttrib4Nbv agx_custom_glad_glVertexAttrib4Nbv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NBVARBPROC agx_custom_glad_glVertexAttrib4NbvARB;
#define glVertexAttrib4NbvARB agx_custom_glad_glVertexAttrib4NbvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NIVPROC agx_custom_glad_glVertexAttrib4Niv;
#define glVertexAttrib4Niv agx_custom_glad_glVertexAttrib4Niv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NIVARBPROC agx_custom_glad_glVertexAttrib4NivARB;
#define glVertexAttrib4NivARB agx_custom_glad_glVertexAttrib4NivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NSVPROC agx_custom_glad_glVertexAttrib4Nsv;
#define glVertexAttrib4Nsv agx_custom_glad_glVertexAttrib4Nsv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NSVARBPROC agx_custom_glad_glVertexAttrib4NsvARB;
#define glVertexAttrib4NsvARB agx_custom_glad_glVertexAttrib4NsvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBPROC agx_custom_glad_glVertexAttrib4Nub;
#define glVertexAttrib4Nub agx_custom_glad_glVertexAttrib4Nub
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBARBPROC agx_custom_glad_glVertexAttrib4NubARB;
#define glVertexAttrib4NubARB agx_custom_glad_glVertexAttrib4NubARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBVPROC agx_custom_glad_glVertexAttrib4Nubv;
#define glVertexAttrib4Nubv agx_custom_glad_glVertexAttrib4Nubv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBVARBPROC agx_custom_glad_glVertexAttrib4NubvARB;
#define glVertexAttrib4NubvARB agx_custom_glad_glVertexAttrib4NubvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUIVPROC agx_custom_glad_glVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv agx_custom_glad_glVertexAttrib4Nuiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUIVARBPROC agx_custom_glad_glVertexAttrib4NuivARB;
#define glVertexAttrib4NuivARB agx_custom_glad_glVertexAttrib4NuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUSVPROC agx_custom_glad_glVertexAttrib4Nusv;
#define glVertexAttrib4Nusv agx_custom_glad_glVertexAttrib4Nusv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4NUSVARBPROC agx_custom_glad_glVertexAttrib4NusvARB;
#define glVertexAttrib4NusvARB agx_custom_glad_glVertexAttrib4NusvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4BVPROC agx_custom_glad_glVertexAttrib4bv;
#define glVertexAttrib4bv agx_custom_glad_glVertexAttrib4bv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4BVARBPROC agx_custom_glad_glVertexAttrib4bvARB;
#define glVertexAttrib4bvARB agx_custom_glad_glVertexAttrib4bvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DPROC agx_custom_glad_glVertexAttrib4d;
#define glVertexAttrib4d agx_custom_glad_glVertexAttrib4d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DARBPROC agx_custom_glad_glVertexAttrib4dARB;
#define glVertexAttrib4dARB agx_custom_glad_glVertexAttrib4dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DNVPROC agx_custom_glad_glVertexAttrib4dNV;
#define glVertexAttrib4dNV agx_custom_glad_glVertexAttrib4dNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DVPROC agx_custom_glad_glVertexAttrib4dv;
#define glVertexAttrib4dv agx_custom_glad_glVertexAttrib4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DVARBPROC agx_custom_glad_glVertexAttrib4dvARB;
#define glVertexAttrib4dvARB agx_custom_glad_glVertexAttrib4dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4DVNVPROC agx_custom_glad_glVertexAttrib4dvNV;
#define glVertexAttrib4dvNV agx_custom_glad_glVertexAttrib4dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FPROC agx_custom_glad_glVertexAttrib4f;
#define glVertexAttrib4f agx_custom_glad_glVertexAttrib4f
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FARBPROC agx_custom_glad_glVertexAttrib4fARB;
#define glVertexAttrib4fARB agx_custom_glad_glVertexAttrib4fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FNVPROC agx_custom_glad_glVertexAttrib4fNV;
#define glVertexAttrib4fNV agx_custom_glad_glVertexAttrib4fNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FVPROC agx_custom_glad_glVertexAttrib4fv;
#define glVertexAttrib4fv agx_custom_glad_glVertexAttrib4fv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FVARBPROC agx_custom_glad_glVertexAttrib4fvARB;
#define glVertexAttrib4fvARB agx_custom_glad_glVertexAttrib4fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4FVNVPROC agx_custom_glad_glVertexAttrib4fvNV;
#define glVertexAttrib4fvNV agx_custom_glad_glVertexAttrib4fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4HNVPROC agx_custom_glad_glVertexAttrib4hNV;
#define glVertexAttrib4hNV agx_custom_glad_glVertexAttrib4hNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4HVNVPROC agx_custom_glad_glVertexAttrib4hvNV;
#define glVertexAttrib4hvNV agx_custom_glad_glVertexAttrib4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4IVPROC agx_custom_glad_glVertexAttrib4iv;
#define glVertexAttrib4iv agx_custom_glad_glVertexAttrib4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4IVARBPROC agx_custom_glad_glVertexAttrib4ivARB;
#define glVertexAttrib4ivARB agx_custom_glad_glVertexAttrib4ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SPROC agx_custom_glad_glVertexAttrib4s;
#define glVertexAttrib4s agx_custom_glad_glVertexAttrib4s
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SARBPROC agx_custom_glad_glVertexAttrib4sARB;
#define glVertexAttrib4sARB agx_custom_glad_glVertexAttrib4sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SNVPROC agx_custom_glad_glVertexAttrib4sNV;
#define glVertexAttrib4sNV agx_custom_glad_glVertexAttrib4sNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SVPROC agx_custom_glad_glVertexAttrib4sv;
#define glVertexAttrib4sv agx_custom_glad_glVertexAttrib4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SVARBPROC agx_custom_glad_glVertexAttrib4svARB;
#define glVertexAttrib4svARB agx_custom_glad_glVertexAttrib4svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4SVNVPROC agx_custom_glad_glVertexAttrib4svNV;
#define glVertexAttrib4svNV agx_custom_glad_glVertexAttrib4svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UBNVPROC agx_custom_glad_glVertexAttrib4ubNV;
#define glVertexAttrib4ubNV agx_custom_glad_glVertexAttrib4ubNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UBVPROC agx_custom_glad_glVertexAttrib4ubv;
#define glVertexAttrib4ubv agx_custom_glad_glVertexAttrib4ubv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UBVARBPROC agx_custom_glad_glVertexAttrib4ubvARB;
#define glVertexAttrib4ubvARB agx_custom_glad_glVertexAttrib4ubvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UBVNVPROC agx_custom_glad_glVertexAttrib4ubvNV;
#define glVertexAttrib4ubvNV agx_custom_glad_glVertexAttrib4ubvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UIVPROC agx_custom_glad_glVertexAttrib4uiv;
#define glVertexAttrib4uiv agx_custom_glad_glVertexAttrib4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4UIVARBPROC agx_custom_glad_glVertexAttrib4uivARB;
#define glVertexAttrib4uivARB agx_custom_glad_glVertexAttrib4uivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4USVPROC agx_custom_glad_glVertexAttrib4usv;
#define glVertexAttrib4usv agx_custom_glad_glVertexAttrib4usv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIB4USVARBPROC agx_custom_glad_glVertexAttrib4usvARB;
#define glVertexAttrib4usvARB agx_custom_glad_glVertexAttrib4usvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBARRAYOBJECTATIPROC agx_custom_glad_glVertexAttribArrayObjectATI;
#define glVertexAttribArrayObjectATI agx_custom_glad_glVertexAttribArrayObjectATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBBINDINGPROC agx_custom_glad_glVertexAttribBinding;
#define glVertexAttribBinding agx_custom_glad_glVertexAttribBinding
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBDIVISORPROC agx_custom_glad_glVertexAttribDivisor;
#define glVertexAttribDivisor agx_custom_glad_glVertexAttribDivisor
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBDIVISORARBPROC agx_custom_glad_glVertexAttribDivisorARB;
#define glVertexAttribDivisorARB agx_custom_glad_glVertexAttribDivisorARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBFORMATPROC agx_custom_glad_glVertexAttribFormat;
#define glVertexAttribFormat agx_custom_glad_glVertexAttribFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBFORMATNVPROC agx_custom_glad_glVertexAttribFormatNV;
#define glVertexAttribFormatNV agx_custom_glad_glVertexAttribFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1IPROC agx_custom_glad_glVertexAttribI1i;
#define glVertexAttribI1i agx_custom_glad_glVertexAttribI1i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1IEXTPROC agx_custom_glad_glVertexAttribI1iEXT;
#define glVertexAttribI1iEXT agx_custom_glad_glVertexAttribI1iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1IVPROC agx_custom_glad_glVertexAttribI1iv;
#define glVertexAttribI1iv agx_custom_glad_glVertexAttribI1iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1IVEXTPROC agx_custom_glad_glVertexAttribI1ivEXT;
#define glVertexAttribI1ivEXT agx_custom_glad_glVertexAttribI1ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIPROC agx_custom_glad_glVertexAttribI1ui;
#define glVertexAttribI1ui agx_custom_glad_glVertexAttribI1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIEXTPROC agx_custom_glad_glVertexAttribI1uiEXT;
#define glVertexAttribI1uiEXT agx_custom_glad_glVertexAttribI1uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIVPROC agx_custom_glad_glVertexAttribI1uiv;
#define glVertexAttribI1uiv agx_custom_glad_glVertexAttribI1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIVEXTPROC agx_custom_glad_glVertexAttribI1uivEXT;
#define glVertexAttribI1uivEXT agx_custom_glad_glVertexAttribI1uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2IPROC agx_custom_glad_glVertexAttribI2i;
#define glVertexAttribI2i agx_custom_glad_glVertexAttribI2i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2IEXTPROC agx_custom_glad_glVertexAttribI2iEXT;
#define glVertexAttribI2iEXT agx_custom_glad_glVertexAttribI2iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2IVPROC agx_custom_glad_glVertexAttribI2iv;
#define glVertexAttribI2iv agx_custom_glad_glVertexAttribI2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2IVEXTPROC agx_custom_glad_glVertexAttribI2ivEXT;
#define glVertexAttribI2ivEXT agx_custom_glad_glVertexAttribI2ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIPROC agx_custom_glad_glVertexAttribI2ui;
#define glVertexAttribI2ui agx_custom_glad_glVertexAttribI2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIEXTPROC agx_custom_glad_glVertexAttribI2uiEXT;
#define glVertexAttribI2uiEXT agx_custom_glad_glVertexAttribI2uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIVPROC agx_custom_glad_glVertexAttribI2uiv;
#define glVertexAttribI2uiv agx_custom_glad_glVertexAttribI2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIVEXTPROC agx_custom_glad_glVertexAttribI2uivEXT;
#define glVertexAttribI2uivEXT agx_custom_glad_glVertexAttribI2uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3IPROC agx_custom_glad_glVertexAttribI3i;
#define glVertexAttribI3i agx_custom_glad_glVertexAttribI3i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3IEXTPROC agx_custom_glad_glVertexAttribI3iEXT;
#define glVertexAttribI3iEXT agx_custom_glad_glVertexAttribI3iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3IVPROC agx_custom_glad_glVertexAttribI3iv;
#define glVertexAttribI3iv agx_custom_glad_glVertexAttribI3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3IVEXTPROC agx_custom_glad_glVertexAttribI3ivEXT;
#define glVertexAttribI3ivEXT agx_custom_glad_glVertexAttribI3ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIPROC agx_custom_glad_glVertexAttribI3ui;
#define glVertexAttribI3ui agx_custom_glad_glVertexAttribI3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIEXTPROC agx_custom_glad_glVertexAttribI3uiEXT;
#define glVertexAttribI3uiEXT agx_custom_glad_glVertexAttribI3uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIVPROC agx_custom_glad_glVertexAttribI3uiv;
#define glVertexAttribI3uiv agx_custom_glad_glVertexAttribI3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIVEXTPROC agx_custom_glad_glVertexAttribI3uivEXT;
#define glVertexAttribI3uivEXT agx_custom_glad_glVertexAttribI3uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4BVPROC agx_custom_glad_glVertexAttribI4bv;
#define glVertexAttribI4bv agx_custom_glad_glVertexAttribI4bv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4BVEXTPROC agx_custom_glad_glVertexAttribI4bvEXT;
#define glVertexAttribI4bvEXT agx_custom_glad_glVertexAttribI4bvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4IPROC agx_custom_glad_glVertexAttribI4i;
#define glVertexAttribI4i agx_custom_glad_glVertexAttribI4i
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4IEXTPROC agx_custom_glad_glVertexAttribI4iEXT;
#define glVertexAttribI4iEXT agx_custom_glad_glVertexAttribI4iEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4IVPROC agx_custom_glad_glVertexAttribI4iv;
#define glVertexAttribI4iv agx_custom_glad_glVertexAttribI4iv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4IVEXTPROC agx_custom_glad_glVertexAttribI4ivEXT;
#define glVertexAttribI4ivEXT agx_custom_glad_glVertexAttribI4ivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4SVPROC agx_custom_glad_glVertexAttribI4sv;
#define glVertexAttribI4sv agx_custom_glad_glVertexAttribI4sv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4SVEXTPROC agx_custom_glad_glVertexAttribI4svEXT;
#define glVertexAttribI4svEXT agx_custom_glad_glVertexAttribI4svEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UBVPROC agx_custom_glad_glVertexAttribI4ubv;
#define glVertexAttribI4ubv agx_custom_glad_glVertexAttribI4ubv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UBVEXTPROC agx_custom_glad_glVertexAttribI4ubvEXT;
#define glVertexAttribI4ubvEXT agx_custom_glad_glVertexAttribI4ubvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIPROC agx_custom_glad_glVertexAttribI4ui;
#define glVertexAttribI4ui agx_custom_glad_glVertexAttribI4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIEXTPROC agx_custom_glad_glVertexAttribI4uiEXT;
#define glVertexAttribI4uiEXT agx_custom_glad_glVertexAttribI4uiEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIVPROC agx_custom_glad_glVertexAttribI4uiv;
#define glVertexAttribI4uiv agx_custom_glad_glVertexAttribI4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIVEXTPROC agx_custom_glad_glVertexAttribI4uivEXT;
#define glVertexAttribI4uivEXT agx_custom_glad_glVertexAttribI4uivEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4USVPROC agx_custom_glad_glVertexAttribI4usv;
#define glVertexAttribI4usv agx_custom_glad_glVertexAttribI4usv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBI4USVEXTPROC agx_custom_glad_glVertexAttribI4usvEXT;
#define glVertexAttribI4usvEXT agx_custom_glad_glVertexAttribI4usvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBIFORMATPROC agx_custom_glad_glVertexAttribIFormat;
#define glVertexAttribIFormat agx_custom_glad_glVertexAttribIFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBIFORMATNVPROC agx_custom_glad_glVertexAttribIFormatNV;
#define glVertexAttribIFormatNV agx_custom_glad_glVertexAttribIFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBIPOINTERPROC agx_custom_glad_glVertexAttribIPointer;
#define glVertexAttribIPointer agx_custom_glad_glVertexAttribIPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBIPOINTEREXTPROC agx_custom_glad_glVertexAttribIPointerEXT;
#define glVertexAttribIPointerEXT agx_custom_glad_glVertexAttribIPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1DPROC agx_custom_glad_glVertexAttribL1d;
#define glVertexAttribL1d agx_custom_glad_glVertexAttribL1d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1DEXTPROC agx_custom_glad_glVertexAttribL1dEXT;
#define glVertexAttribL1dEXT agx_custom_glad_glVertexAttribL1dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1DVPROC agx_custom_glad_glVertexAttribL1dv;
#define glVertexAttribL1dv agx_custom_glad_glVertexAttribL1dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1DVEXTPROC agx_custom_glad_glVertexAttribL1dvEXT;
#define glVertexAttribL1dvEXT agx_custom_glad_glVertexAttribL1dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1I64NVPROC agx_custom_glad_glVertexAttribL1i64NV;
#define glVertexAttribL1i64NV agx_custom_glad_glVertexAttribL1i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1I64VNVPROC agx_custom_glad_glVertexAttribL1i64vNV;
#define glVertexAttribL1i64vNV agx_custom_glad_glVertexAttribL1i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1UI64ARBPROC agx_custom_glad_glVertexAttribL1ui64ARB;
#define glVertexAttribL1ui64ARB agx_custom_glad_glVertexAttribL1ui64ARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1UI64NVPROC agx_custom_glad_glVertexAttribL1ui64NV;
#define glVertexAttribL1ui64NV agx_custom_glad_glVertexAttribL1ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1UI64VARBPROC agx_custom_glad_glVertexAttribL1ui64vARB;
#define glVertexAttribL1ui64vARB agx_custom_glad_glVertexAttribL1ui64vARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL1UI64VNVPROC agx_custom_glad_glVertexAttribL1ui64vNV;
#define glVertexAttribL1ui64vNV agx_custom_glad_glVertexAttribL1ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2DPROC agx_custom_glad_glVertexAttribL2d;
#define glVertexAttribL2d agx_custom_glad_glVertexAttribL2d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2DEXTPROC agx_custom_glad_glVertexAttribL2dEXT;
#define glVertexAttribL2dEXT agx_custom_glad_glVertexAttribL2dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2DVPROC agx_custom_glad_glVertexAttribL2dv;
#define glVertexAttribL2dv agx_custom_glad_glVertexAttribL2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2DVEXTPROC agx_custom_glad_glVertexAttribL2dvEXT;
#define glVertexAttribL2dvEXT agx_custom_glad_glVertexAttribL2dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2I64NVPROC agx_custom_glad_glVertexAttribL2i64NV;
#define glVertexAttribL2i64NV agx_custom_glad_glVertexAttribL2i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2I64VNVPROC agx_custom_glad_glVertexAttribL2i64vNV;
#define glVertexAttribL2i64vNV agx_custom_glad_glVertexAttribL2i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2UI64NVPROC agx_custom_glad_glVertexAttribL2ui64NV;
#define glVertexAttribL2ui64NV agx_custom_glad_glVertexAttribL2ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL2UI64VNVPROC agx_custom_glad_glVertexAttribL2ui64vNV;
#define glVertexAttribL2ui64vNV agx_custom_glad_glVertexAttribL2ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3DPROC agx_custom_glad_glVertexAttribL3d;
#define glVertexAttribL3d agx_custom_glad_glVertexAttribL3d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3DEXTPROC agx_custom_glad_glVertexAttribL3dEXT;
#define glVertexAttribL3dEXT agx_custom_glad_glVertexAttribL3dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3DVPROC agx_custom_glad_glVertexAttribL3dv;
#define glVertexAttribL3dv agx_custom_glad_glVertexAttribL3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3DVEXTPROC agx_custom_glad_glVertexAttribL3dvEXT;
#define glVertexAttribL3dvEXT agx_custom_glad_glVertexAttribL3dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3I64NVPROC agx_custom_glad_glVertexAttribL3i64NV;
#define glVertexAttribL3i64NV agx_custom_glad_glVertexAttribL3i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3I64VNVPROC agx_custom_glad_glVertexAttribL3i64vNV;
#define glVertexAttribL3i64vNV agx_custom_glad_glVertexAttribL3i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3UI64NVPROC agx_custom_glad_glVertexAttribL3ui64NV;
#define glVertexAttribL3ui64NV agx_custom_glad_glVertexAttribL3ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL3UI64VNVPROC agx_custom_glad_glVertexAttribL3ui64vNV;
#define glVertexAttribL3ui64vNV agx_custom_glad_glVertexAttribL3ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4DPROC agx_custom_glad_glVertexAttribL4d;
#define glVertexAttribL4d agx_custom_glad_glVertexAttribL4d
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4DEXTPROC agx_custom_glad_glVertexAttribL4dEXT;
#define glVertexAttribL4dEXT agx_custom_glad_glVertexAttribL4dEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4DVPROC agx_custom_glad_glVertexAttribL4dv;
#define glVertexAttribL4dv agx_custom_glad_glVertexAttribL4dv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4DVEXTPROC agx_custom_glad_glVertexAttribL4dvEXT;
#define glVertexAttribL4dvEXT agx_custom_glad_glVertexAttribL4dvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4I64NVPROC agx_custom_glad_glVertexAttribL4i64NV;
#define glVertexAttribL4i64NV agx_custom_glad_glVertexAttribL4i64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4I64VNVPROC agx_custom_glad_glVertexAttribL4i64vNV;
#define glVertexAttribL4i64vNV agx_custom_glad_glVertexAttribL4i64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4UI64NVPROC agx_custom_glad_glVertexAttribL4ui64NV;
#define glVertexAttribL4ui64NV agx_custom_glad_glVertexAttribL4ui64NV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBL4UI64VNVPROC agx_custom_glad_glVertexAttribL4ui64vNV;
#define glVertexAttribL4ui64vNV agx_custom_glad_glVertexAttribL4ui64vNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBLFORMATPROC agx_custom_glad_glVertexAttribLFormat;
#define glVertexAttribLFormat agx_custom_glad_glVertexAttribLFormat
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBLFORMATNVPROC agx_custom_glad_glVertexAttribLFormatNV;
#define glVertexAttribLFormatNV agx_custom_glad_glVertexAttribLFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBLPOINTERPROC agx_custom_glad_glVertexAttribLPointer;
#define glVertexAttribLPointer agx_custom_glad_glVertexAttribLPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBLPOINTEREXTPROC agx_custom_glad_glVertexAttribLPointerEXT;
#define glVertexAttribLPointerEXT agx_custom_glad_glVertexAttribLPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP1UIPROC agx_custom_glad_glVertexAttribP1ui;
#define glVertexAttribP1ui agx_custom_glad_glVertexAttribP1ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP1UIVPROC agx_custom_glad_glVertexAttribP1uiv;
#define glVertexAttribP1uiv agx_custom_glad_glVertexAttribP1uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP2UIPROC agx_custom_glad_glVertexAttribP2ui;
#define glVertexAttribP2ui agx_custom_glad_glVertexAttribP2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP2UIVPROC agx_custom_glad_glVertexAttribP2uiv;
#define glVertexAttribP2uiv agx_custom_glad_glVertexAttribP2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP3UIPROC agx_custom_glad_glVertexAttribP3ui;
#define glVertexAttribP3ui agx_custom_glad_glVertexAttribP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP3UIVPROC agx_custom_glad_glVertexAttribP3uiv;
#define glVertexAttribP3uiv agx_custom_glad_glVertexAttribP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP4UIPROC agx_custom_glad_glVertexAttribP4ui;
#define glVertexAttribP4ui agx_custom_glad_glVertexAttribP4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBP4UIVPROC agx_custom_glad_glVertexAttribP4uiv;
#define glVertexAttribP4uiv agx_custom_glad_glVertexAttribP4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBPARAMETERIAMDPROC agx_custom_glad_glVertexAttribParameteriAMD;
#define glVertexAttribParameteriAMD agx_custom_glad_glVertexAttribParameteriAMD
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERPROC agx_custom_glad_glVertexAttribPointer;
#define glVertexAttribPointer agx_custom_glad_glVertexAttribPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERARBPROC agx_custom_glad_glVertexAttribPointerARB;
#define glVertexAttribPointerARB agx_custom_glad_glVertexAttribPointerARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERNVPROC agx_custom_glad_glVertexAttribPointerNV;
#define glVertexAttribPointerNV agx_custom_glad_glVertexAttribPointerNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS1DVNVPROC agx_custom_glad_glVertexAttribs1dvNV;
#define glVertexAttribs1dvNV agx_custom_glad_glVertexAttribs1dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS1FVNVPROC agx_custom_glad_glVertexAttribs1fvNV;
#define glVertexAttribs1fvNV agx_custom_glad_glVertexAttribs1fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS1HVNVPROC agx_custom_glad_glVertexAttribs1hvNV;
#define glVertexAttribs1hvNV agx_custom_glad_glVertexAttribs1hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS1SVNVPROC agx_custom_glad_glVertexAttribs1svNV;
#define glVertexAttribs1svNV agx_custom_glad_glVertexAttribs1svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS2DVNVPROC agx_custom_glad_glVertexAttribs2dvNV;
#define glVertexAttribs2dvNV agx_custom_glad_glVertexAttribs2dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS2FVNVPROC agx_custom_glad_glVertexAttribs2fvNV;
#define glVertexAttribs2fvNV agx_custom_glad_glVertexAttribs2fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS2HVNVPROC agx_custom_glad_glVertexAttribs2hvNV;
#define glVertexAttribs2hvNV agx_custom_glad_glVertexAttribs2hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS2SVNVPROC agx_custom_glad_glVertexAttribs2svNV;
#define glVertexAttribs2svNV agx_custom_glad_glVertexAttribs2svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS3DVNVPROC agx_custom_glad_glVertexAttribs3dvNV;
#define glVertexAttribs3dvNV agx_custom_glad_glVertexAttribs3dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS3FVNVPROC agx_custom_glad_glVertexAttribs3fvNV;
#define glVertexAttribs3fvNV agx_custom_glad_glVertexAttribs3fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS3HVNVPROC agx_custom_glad_glVertexAttribs3hvNV;
#define glVertexAttribs3hvNV agx_custom_glad_glVertexAttribs3hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS3SVNVPROC agx_custom_glad_glVertexAttribs3svNV;
#define glVertexAttribs3svNV agx_custom_glad_glVertexAttribs3svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS4DVNVPROC agx_custom_glad_glVertexAttribs4dvNV;
#define glVertexAttribs4dvNV agx_custom_glad_glVertexAttribs4dvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS4FVNVPROC agx_custom_glad_glVertexAttribs4fvNV;
#define glVertexAttribs4fvNV agx_custom_glad_glVertexAttribs4fvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS4HVNVPROC agx_custom_glad_glVertexAttribs4hvNV;
#define glVertexAttribs4hvNV agx_custom_glad_glVertexAttribs4hvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS4SVNVPROC agx_custom_glad_glVertexAttribs4svNV;
#define glVertexAttribs4svNV agx_custom_glad_glVertexAttribs4svNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXATTRIBS4UBVNVPROC agx_custom_glad_glVertexAttribs4ubvNV;
#define glVertexAttribs4ubvNV agx_custom_glad_glVertexAttribs4ubvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXBINDINGDIVISORPROC agx_custom_glad_glVertexBindingDivisor;
#define glVertexBindingDivisor agx_custom_glad_glVertexBindingDivisor
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXBLENDARBPROC agx_custom_glad_glVertexBlendARB;
#define glVertexBlendARB agx_custom_glad_glVertexBlendARB
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXBLENDENVFATIPROC agx_custom_glad_glVertexBlendEnvfATI;
#define glVertexBlendEnvfATI agx_custom_glad_glVertexBlendEnvfATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXBLENDENVIATIPROC agx_custom_glad_glVertexBlendEnviATI;
#define glVertexBlendEnviATI agx_custom_glad_glVertexBlendEnviATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXFORMATNVPROC agx_custom_glad_glVertexFormatNV;
#define glVertexFormatNV agx_custom_glad_glVertexFormatNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP2UIPROC agx_custom_glad_glVertexP2ui;
#define glVertexP2ui agx_custom_glad_glVertexP2ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP2UIVPROC agx_custom_glad_glVertexP2uiv;
#define glVertexP2uiv agx_custom_glad_glVertexP2uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP3UIPROC agx_custom_glad_glVertexP3ui;
#define glVertexP3ui agx_custom_glad_glVertexP3ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP3UIVPROC agx_custom_glad_glVertexP3uiv;
#define glVertexP3uiv agx_custom_glad_glVertexP3uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP4UIPROC agx_custom_glad_glVertexP4ui;
#define glVertexP4ui agx_custom_glad_glVertexP4ui
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXP4UIVPROC agx_custom_glad_glVertexP4uiv;
#define glVertexP4uiv agx_custom_glad_glVertexP4uiv
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXPOINTERPROC agx_custom_glad_glVertexPointer;
#define glVertexPointer agx_custom_glad_glVertexPointer
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXPOINTEREXTPROC agx_custom_glad_glVertexPointerEXT;
#define glVertexPointerEXT agx_custom_glad_glVertexPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXPOINTERLISTIBMPROC agx_custom_glad_glVertexPointerListIBM;
#define glVertexPointerListIBM agx_custom_glad_glVertexPointerListIBM
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXPOINTERVINTELPROC agx_custom_glad_glVertexPointervINTEL;
#define glVertexPointervINTEL agx_custom_glad_glVertexPointervINTEL
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1DATIPROC agx_custom_glad_glVertexStream1dATI;
#define glVertexStream1dATI agx_custom_glad_glVertexStream1dATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1DVATIPROC agx_custom_glad_glVertexStream1dvATI;
#define glVertexStream1dvATI agx_custom_glad_glVertexStream1dvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1FATIPROC agx_custom_glad_glVertexStream1fATI;
#define glVertexStream1fATI agx_custom_glad_glVertexStream1fATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1FVATIPROC agx_custom_glad_glVertexStream1fvATI;
#define glVertexStream1fvATI agx_custom_glad_glVertexStream1fvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1IATIPROC agx_custom_glad_glVertexStream1iATI;
#define glVertexStream1iATI agx_custom_glad_glVertexStream1iATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1IVATIPROC agx_custom_glad_glVertexStream1ivATI;
#define glVertexStream1ivATI agx_custom_glad_glVertexStream1ivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1SATIPROC agx_custom_glad_glVertexStream1sATI;
#define glVertexStream1sATI agx_custom_glad_glVertexStream1sATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM1SVATIPROC agx_custom_glad_glVertexStream1svATI;
#define glVertexStream1svATI agx_custom_glad_glVertexStream1svATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2DATIPROC agx_custom_glad_glVertexStream2dATI;
#define glVertexStream2dATI agx_custom_glad_glVertexStream2dATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2DVATIPROC agx_custom_glad_glVertexStream2dvATI;
#define glVertexStream2dvATI agx_custom_glad_glVertexStream2dvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2FATIPROC agx_custom_glad_glVertexStream2fATI;
#define glVertexStream2fATI agx_custom_glad_glVertexStream2fATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2FVATIPROC agx_custom_glad_glVertexStream2fvATI;
#define glVertexStream2fvATI agx_custom_glad_glVertexStream2fvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2IATIPROC agx_custom_glad_glVertexStream2iATI;
#define glVertexStream2iATI agx_custom_glad_glVertexStream2iATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2IVATIPROC agx_custom_glad_glVertexStream2ivATI;
#define glVertexStream2ivATI agx_custom_glad_glVertexStream2ivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2SATIPROC agx_custom_glad_glVertexStream2sATI;
#define glVertexStream2sATI agx_custom_glad_glVertexStream2sATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM2SVATIPROC agx_custom_glad_glVertexStream2svATI;
#define glVertexStream2svATI agx_custom_glad_glVertexStream2svATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3DATIPROC agx_custom_glad_glVertexStream3dATI;
#define glVertexStream3dATI agx_custom_glad_glVertexStream3dATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3DVATIPROC agx_custom_glad_glVertexStream3dvATI;
#define glVertexStream3dvATI agx_custom_glad_glVertexStream3dvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3FATIPROC agx_custom_glad_glVertexStream3fATI;
#define glVertexStream3fATI agx_custom_glad_glVertexStream3fATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3FVATIPROC agx_custom_glad_glVertexStream3fvATI;
#define glVertexStream3fvATI agx_custom_glad_glVertexStream3fvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3IATIPROC agx_custom_glad_glVertexStream3iATI;
#define glVertexStream3iATI agx_custom_glad_glVertexStream3iATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3IVATIPROC agx_custom_glad_glVertexStream3ivATI;
#define glVertexStream3ivATI agx_custom_glad_glVertexStream3ivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3SATIPROC agx_custom_glad_glVertexStream3sATI;
#define glVertexStream3sATI agx_custom_glad_glVertexStream3sATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM3SVATIPROC agx_custom_glad_glVertexStream3svATI;
#define glVertexStream3svATI agx_custom_glad_glVertexStream3svATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4DATIPROC agx_custom_glad_glVertexStream4dATI;
#define glVertexStream4dATI agx_custom_glad_glVertexStream4dATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4DVATIPROC agx_custom_glad_glVertexStream4dvATI;
#define glVertexStream4dvATI agx_custom_glad_glVertexStream4dvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4FATIPROC agx_custom_glad_glVertexStream4fATI;
#define glVertexStream4fATI agx_custom_glad_glVertexStream4fATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4FVATIPROC agx_custom_glad_glVertexStream4fvATI;
#define glVertexStream4fvATI agx_custom_glad_glVertexStream4fvATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4IATIPROC agx_custom_glad_glVertexStream4iATI;
#define glVertexStream4iATI agx_custom_glad_glVertexStream4iATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4IVATIPROC agx_custom_glad_glVertexStream4ivATI;
#define glVertexStream4ivATI agx_custom_glad_glVertexStream4ivATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4SATIPROC agx_custom_glad_glVertexStream4sATI;
#define glVertexStream4sATI agx_custom_glad_glVertexStream4sATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXSTREAM4SVATIPROC agx_custom_glad_glVertexStream4svATI;
#define glVertexStream4svATI agx_custom_glad_glVertexStream4svATI
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXWEIGHTPOINTEREXTPROC agx_custom_glad_glVertexWeightPointerEXT;
#define glVertexWeightPointerEXT agx_custom_glad_glVertexWeightPointerEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXWEIGHTFEXTPROC agx_custom_glad_glVertexWeightfEXT;
#define glVertexWeightfEXT agx_custom_glad_glVertexWeightfEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXWEIGHTFVEXTPROC agx_custom_glad_glVertexWeightfvEXT;
#define glVertexWeightfvEXT agx_custom_glad_glVertexWeightfvEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXWEIGHTHNVPROC agx_custom_glad_glVertexWeighthNV;
#define glVertexWeighthNV agx_custom_glad_glVertexWeighthNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVERTEXWEIGHTHVNVPROC agx_custom_glad_glVertexWeighthvNV;
#define glVertexWeighthvNV agx_custom_glad_glVertexWeighthvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIDEOCAPTURENVPROC agx_custom_glad_glVideoCaptureNV;
#define glVideoCaptureNV agx_custom_glad_glVideoCaptureNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC agx_custom_glad_glVideoCaptureStreamParameterdvNV;
#define glVideoCaptureStreamParameterdvNV agx_custom_glad_glVideoCaptureStreamParameterdvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC agx_custom_glad_glVideoCaptureStreamParameterfvNV;
#define glVideoCaptureStreamParameterfvNV agx_custom_glad_glVideoCaptureStreamParameterfvNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC agx_custom_glad_glVideoCaptureStreamParameterivNV;
#define glVideoCaptureStreamParameterivNV agx_custom_glad_glVideoCaptureStreamParameterivNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTPROC agx_custom_glad_glViewport;
#define glViewport agx_custom_glad_glViewport
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTARRAYVPROC agx_custom_glad_glViewportArrayv;
#define glViewportArrayv agx_custom_glad_glViewportArrayv
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTINDEXEDFPROC agx_custom_glad_glViewportIndexedf;
#define glViewportIndexedf agx_custom_glad_glViewportIndexedf
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTINDEXEDFVPROC agx_custom_glad_glViewportIndexedfv;
#define glViewportIndexedfv agx_custom_glad_glViewportIndexedfv
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTPOSITIONWSCALENVPROC agx_custom_glad_glViewportPositionWScaleNV;
#define glViewportPositionWScaleNV agx_custom_glad_glViewportPositionWScaleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLVIEWPORTSWIZZLENVPROC agx_custom_glad_glViewportSwizzleNV;
#define glViewportSwizzleNV agx_custom_glad_glViewportSwizzleNV
AGX_CUSTOM_GLAD_API_CALL PFNGLWAITSEMAPHOREEXTPROC agx_custom_glad_glWaitSemaphoreEXT;
#define glWaitSemaphoreEXT agx_custom_glad_glWaitSemaphoreEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLWAITSEMAPHOREUI64NVXPROC agx_custom_glad_glWaitSemaphoreui64NVX;
#define glWaitSemaphoreui64NVX agx_custom_glad_glWaitSemaphoreui64NVX
AGX_CUSTOM_GLAD_API_CALL PFNGLWAITSYNCPROC agx_custom_glad_glWaitSync;
#define glWaitSync agx_custom_glad_glWaitSync
AGX_CUSTOM_GLAD_API_CALL PFNGLWAITVKSEMAPHORENVPROC agx_custom_glad_glWaitVkSemaphoreNV;
#define glWaitVkSemaphoreNV agx_custom_glad_glWaitVkSemaphoreNV
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTPATHSNVPROC agx_custom_glad_glWeightPathsNV;
#define glWeightPathsNV agx_custom_glad_glWeightPathsNV
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTPOINTERARBPROC agx_custom_glad_glWeightPointerARB;
#define glWeightPointerARB agx_custom_glad_glWeightPointerARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTBVARBPROC agx_custom_glad_glWeightbvARB;
#define glWeightbvARB agx_custom_glad_glWeightbvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTDVARBPROC agx_custom_glad_glWeightdvARB;
#define glWeightdvARB agx_custom_glad_glWeightdvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTFVARBPROC agx_custom_glad_glWeightfvARB;
#define glWeightfvARB agx_custom_glad_glWeightfvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTIVARBPROC agx_custom_glad_glWeightivARB;
#define glWeightivARB agx_custom_glad_glWeightivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTSVARBPROC agx_custom_glad_glWeightsvARB;
#define glWeightsvARB agx_custom_glad_glWeightsvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTUBVARBPROC agx_custom_glad_glWeightubvARB;
#define glWeightubvARB agx_custom_glad_glWeightubvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTUIVARBPROC agx_custom_glad_glWeightuivARB;
#define glWeightuivARB agx_custom_glad_glWeightuivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWEIGHTUSVARBPROC agx_custom_glad_glWeightusvARB;
#define glWeightusvARB agx_custom_glad_glWeightusvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DPROC agx_custom_glad_glWindowPos2d;
#define glWindowPos2d agx_custom_glad_glWindowPos2d
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DARBPROC agx_custom_glad_glWindowPos2dARB;
#define glWindowPos2dARB agx_custom_glad_glWindowPos2dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DMESAPROC agx_custom_glad_glWindowPos2dMESA;
#define glWindowPos2dMESA agx_custom_glad_glWindowPos2dMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DVPROC agx_custom_glad_glWindowPos2dv;
#define glWindowPos2dv agx_custom_glad_glWindowPos2dv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DVARBPROC agx_custom_glad_glWindowPos2dvARB;
#define glWindowPos2dvARB agx_custom_glad_glWindowPos2dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2DVMESAPROC agx_custom_glad_glWindowPos2dvMESA;
#define glWindowPos2dvMESA agx_custom_glad_glWindowPos2dvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FPROC agx_custom_glad_glWindowPos2f;
#define glWindowPos2f agx_custom_glad_glWindowPos2f
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FARBPROC agx_custom_glad_glWindowPos2fARB;
#define glWindowPos2fARB agx_custom_glad_glWindowPos2fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FMESAPROC agx_custom_glad_glWindowPos2fMESA;
#define glWindowPos2fMESA agx_custom_glad_glWindowPos2fMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FVPROC agx_custom_glad_glWindowPos2fv;
#define glWindowPos2fv agx_custom_glad_glWindowPos2fv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FVARBPROC agx_custom_glad_glWindowPos2fvARB;
#define glWindowPos2fvARB agx_custom_glad_glWindowPos2fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2FVMESAPROC agx_custom_glad_glWindowPos2fvMESA;
#define glWindowPos2fvMESA agx_custom_glad_glWindowPos2fvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IPROC agx_custom_glad_glWindowPos2i;
#define glWindowPos2i agx_custom_glad_glWindowPos2i
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IARBPROC agx_custom_glad_glWindowPos2iARB;
#define glWindowPos2iARB agx_custom_glad_glWindowPos2iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IMESAPROC agx_custom_glad_glWindowPos2iMESA;
#define glWindowPos2iMESA agx_custom_glad_glWindowPos2iMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IVPROC agx_custom_glad_glWindowPos2iv;
#define glWindowPos2iv agx_custom_glad_glWindowPos2iv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IVARBPROC agx_custom_glad_glWindowPos2ivARB;
#define glWindowPos2ivARB agx_custom_glad_glWindowPos2ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2IVMESAPROC agx_custom_glad_glWindowPos2ivMESA;
#define glWindowPos2ivMESA agx_custom_glad_glWindowPos2ivMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SPROC agx_custom_glad_glWindowPos2s;
#define glWindowPos2s agx_custom_glad_glWindowPos2s
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SARBPROC agx_custom_glad_glWindowPos2sARB;
#define glWindowPos2sARB agx_custom_glad_glWindowPos2sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SMESAPROC agx_custom_glad_glWindowPos2sMESA;
#define glWindowPos2sMESA agx_custom_glad_glWindowPos2sMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SVPROC agx_custom_glad_glWindowPos2sv;
#define glWindowPos2sv agx_custom_glad_glWindowPos2sv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SVARBPROC agx_custom_glad_glWindowPos2svARB;
#define glWindowPos2svARB agx_custom_glad_glWindowPos2svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS2SVMESAPROC agx_custom_glad_glWindowPos2svMESA;
#define glWindowPos2svMESA agx_custom_glad_glWindowPos2svMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DPROC agx_custom_glad_glWindowPos3d;
#define glWindowPos3d agx_custom_glad_glWindowPos3d
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DARBPROC agx_custom_glad_glWindowPos3dARB;
#define glWindowPos3dARB agx_custom_glad_glWindowPos3dARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DMESAPROC agx_custom_glad_glWindowPos3dMESA;
#define glWindowPos3dMESA agx_custom_glad_glWindowPos3dMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DVPROC agx_custom_glad_glWindowPos3dv;
#define glWindowPos3dv agx_custom_glad_glWindowPos3dv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DVARBPROC agx_custom_glad_glWindowPos3dvARB;
#define glWindowPos3dvARB agx_custom_glad_glWindowPos3dvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3DVMESAPROC agx_custom_glad_glWindowPos3dvMESA;
#define glWindowPos3dvMESA agx_custom_glad_glWindowPos3dvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FPROC agx_custom_glad_glWindowPos3f;
#define glWindowPos3f agx_custom_glad_glWindowPos3f
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FARBPROC agx_custom_glad_glWindowPos3fARB;
#define glWindowPos3fARB agx_custom_glad_glWindowPos3fARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FMESAPROC agx_custom_glad_glWindowPos3fMESA;
#define glWindowPos3fMESA agx_custom_glad_glWindowPos3fMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FVPROC agx_custom_glad_glWindowPos3fv;
#define glWindowPos3fv agx_custom_glad_glWindowPos3fv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FVARBPROC agx_custom_glad_glWindowPos3fvARB;
#define glWindowPos3fvARB agx_custom_glad_glWindowPos3fvARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3FVMESAPROC agx_custom_glad_glWindowPos3fvMESA;
#define glWindowPos3fvMESA agx_custom_glad_glWindowPos3fvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IPROC agx_custom_glad_glWindowPos3i;
#define glWindowPos3i agx_custom_glad_glWindowPos3i
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IARBPROC agx_custom_glad_glWindowPos3iARB;
#define glWindowPos3iARB agx_custom_glad_glWindowPos3iARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IMESAPROC agx_custom_glad_glWindowPos3iMESA;
#define glWindowPos3iMESA agx_custom_glad_glWindowPos3iMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IVPROC agx_custom_glad_glWindowPos3iv;
#define glWindowPos3iv agx_custom_glad_glWindowPos3iv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IVARBPROC agx_custom_glad_glWindowPos3ivARB;
#define glWindowPos3ivARB agx_custom_glad_glWindowPos3ivARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3IVMESAPROC agx_custom_glad_glWindowPos3ivMESA;
#define glWindowPos3ivMESA agx_custom_glad_glWindowPos3ivMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SPROC agx_custom_glad_glWindowPos3s;
#define glWindowPos3s agx_custom_glad_glWindowPos3s
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SARBPROC agx_custom_glad_glWindowPos3sARB;
#define glWindowPos3sARB agx_custom_glad_glWindowPos3sARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SMESAPROC agx_custom_glad_glWindowPos3sMESA;
#define glWindowPos3sMESA agx_custom_glad_glWindowPos3sMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SVPROC agx_custom_glad_glWindowPos3sv;
#define glWindowPos3sv agx_custom_glad_glWindowPos3sv
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SVARBPROC agx_custom_glad_glWindowPos3svARB;
#define glWindowPos3svARB agx_custom_glad_glWindowPos3svARB
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS3SVMESAPROC agx_custom_glad_glWindowPos3svMESA;
#define glWindowPos3svMESA agx_custom_glad_glWindowPos3svMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4DMESAPROC agx_custom_glad_glWindowPos4dMESA;
#define glWindowPos4dMESA agx_custom_glad_glWindowPos4dMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4DVMESAPROC agx_custom_glad_glWindowPos4dvMESA;
#define glWindowPos4dvMESA agx_custom_glad_glWindowPos4dvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4FMESAPROC agx_custom_glad_glWindowPos4fMESA;
#define glWindowPos4fMESA agx_custom_glad_glWindowPos4fMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4FVMESAPROC agx_custom_glad_glWindowPos4fvMESA;
#define glWindowPos4fvMESA agx_custom_glad_glWindowPos4fvMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4IMESAPROC agx_custom_glad_glWindowPos4iMESA;
#define glWindowPos4iMESA agx_custom_glad_glWindowPos4iMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4IVMESAPROC agx_custom_glad_glWindowPos4ivMESA;
#define glWindowPos4ivMESA agx_custom_glad_glWindowPos4ivMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4SMESAPROC agx_custom_glad_glWindowPos4sMESA;
#define glWindowPos4sMESA agx_custom_glad_glWindowPos4sMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWPOS4SVMESAPROC agx_custom_glad_glWindowPos4svMESA;
#define glWindowPos4svMESA agx_custom_glad_glWindowPos4svMESA
AGX_CUSTOM_GLAD_API_CALL PFNGLWINDOWRECTANGLESEXTPROC agx_custom_glad_glWindowRectanglesEXT;
#define glWindowRectanglesEXT agx_custom_glad_glWindowRectanglesEXT
AGX_CUSTOM_GLAD_API_CALL PFNGLWRITEMASKEXTPROC agx_custom_glad_glWriteMaskEXT;
#define glWriteMaskEXT agx_custom_glad_glWriteMaskEXT





AGX_CUSTOM_GLAD_API_CALL int agx_customGladLoadGLUserPtr( AGX_CUSTOMGLADuserptrloadfunc load, void *userptr);
AGX_CUSTOM_GLAD_API_CALL int agx_customGladLoadGL( AGX_CUSTOMGLADloadfunc load);



#ifdef __cplusplus
}
#endif
#endif

/* Source */
#ifdef AGX_CUSTOM_GLAD_GL_IMPLEMENTATION
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifndef AGX_CUSTOM_GLAD_IMPL_UTIL_C_
#define AGX_CUSTOM_GLAD_IMPL_UTIL_C_

#ifdef _MSC_VER
#define AGX_CUSTOM_GLAD_IMPL_UTIL_SSCANF sscanf_s
#else
#define AGX_CUSTOM_GLAD_IMPL_UTIL_SSCANF sscanf
#endif

#endif /* AGX_CUSTOM_GLAD_IMPL_UTIL_C_ */

#ifdef __cplusplus
extern "C" {
#endif



int AGX_CUSTOM_GLAD_GL_VERSION_1_0 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_1_1 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_1_2 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_1_3 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_1_4 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_1_5 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_2_0 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_2_1 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_3_0 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_3_1 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_3_2 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_3_3 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_0 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_1 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_2 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_3 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_4 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_5 = 0;
int AGX_CUSTOM_GLAD_GL_VERSION_4_6 = 0;
int AGX_CUSTOM_GLAD_GL_3DFX_multisample = 0;
int AGX_CUSTOM_GLAD_GL_3DFX_tbuffer = 0;
int AGX_CUSTOM_GLAD_GL_3DFX_texture_compression_FXT1 = 0;
int AGX_CUSTOM_GLAD_GL_AMD_blend_minmax_factor = 0;
int AGX_CUSTOM_GLAD_GL_AMD_conservative_depth = 0;
int AGX_CUSTOM_GLAD_GL_AMD_debug_output = 0;
int AGX_CUSTOM_GLAD_GL_AMD_depth_clamp_separate = 0;
int AGX_CUSTOM_GLAD_GL_AMD_draw_buffers_blend = 0;
int AGX_CUSTOM_GLAD_GL_AMD_framebuffer_multisample_advanced = 0;
int AGX_CUSTOM_GLAD_GL_AMD_framebuffer_sample_positions = 0;
int AGX_CUSTOM_GLAD_GL_AMD_gcn_shader = 0;
int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_half_float = 0;
int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int16 = 0;
int AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int64 = 0;
int AGX_CUSTOM_GLAD_GL_AMD_interleaved_elements = 0;
int AGX_CUSTOM_GLAD_GL_AMD_multi_draw_indirect = 0;
int AGX_CUSTOM_GLAD_GL_AMD_name_gen_delete = 0;
int AGX_CUSTOM_GLAD_GL_AMD_occlusion_query_event = 0;
int AGX_CUSTOM_GLAD_GL_AMD_performance_monitor = 0;
int AGX_CUSTOM_GLAD_GL_AMD_pinned_memory = 0;
int AGX_CUSTOM_GLAD_GL_AMD_query_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_AMD_sample_positions = 0;
int AGX_CUSTOM_GLAD_GL_AMD_seamless_cubemap_per_texture = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_atomic_counter_ops = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_ballot = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_explicit_vertex_parameter = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_gpu_shader_half_float_fetch = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_image_load_store_lod = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_stencil_export = 0;
int AGX_CUSTOM_GLAD_GL_AMD_shader_trinary_minmax = 0;
int AGX_CUSTOM_GLAD_GL_AMD_sparse_texture = 0;
int AGX_CUSTOM_GLAD_GL_AMD_stencil_operation_extended = 0;
int AGX_CUSTOM_GLAD_GL_AMD_texture_gather_bias_lod = 0;
int AGX_CUSTOM_GLAD_GL_AMD_texture_texture4 = 0;
int AGX_CUSTOM_GLAD_GL_AMD_transform_feedback3_lines_triangles = 0;
int AGX_CUSTOM_GLAD_GL_AMD_transform_feedback4 = 0;
int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_layer = 0;
int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_tessellator = 0;
int AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_viewport_index = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_aux_depth_stencil = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_client_storage = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_element_array = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_fence = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_float_pixels = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_flush_buffer_range = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_object_purgeable = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_rgb_422 = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_row_bytes = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_specular_vector = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_texture_range = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_transform_hint = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_object = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_range = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_vertex_program_evaluators = 0;
int AGX_CUSTOM_GLAD_GL_APPLE_ycbcr_422 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_ES2_compatibility = 0;
int AGX_CUSTOM_GLAD_GL_ARB_ES3_1_compatibility = 0;
int AGX_CUSTOM_GLAD_GL_ARB_ES3_2_compatibility = 0;
int AGX_CUSTOM_GLAD_GL_ARB_ES3_compatibility = 0;
int AGX_CUSTOM_GLAD_GL_ARB_arrays_of_arrays = 0;
int AGX_CUSTOM_GLAD_GL_ARB_base_instance = 0;
int AGX_CUSTOM_GLAD_GL_ARB_bindless_texture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_blend_func_extended = 0;
int AGX_CUSTOM_GLAD_GL_ARB_buffer_storage = 0;
int AGX_CUSTOM_GLAD_GL_ARB_cl_event = 0;
int AGX_CUSTOM_GLAD_GL_ARB_clear_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_clear_texture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_clip_control = 0;
int AGX_CUSTOM_GLAD_GL_ARB_color_buffer_float = 0;
int AGX_CUSTOM_GLAD_GL_ARB_compatibility = 0;
int AGX_CUSTOM_GLAD_GL_ARB_compressed_texture_pixel_storage = 0;
int AGX_CUSTOM_GLAD_GL_ARB_compute_shader = 0;
int AGX_CUSTOM_GLAD_GL_ARB_compute_variable_group_size = 0;
int AGX_CUSTOM_GLAD_GL_ARB_conditional_render_inverted = 0;
int AGX_CUSTOM_GLAD_GL_ARB_conservative_depth = 0;
int AGX_CUSTOM_GLAD_GL_ARB_copy_buffer = 0;
int AGX_CUSTOM_GLAD_GL_ARB_copy_image = 0;
int AGX_CUSTOM_GLAD_GL_ARB_cull_distance = 0;
int AGX_CUSTOM_GLAD_GL_ARB_debug_output = 0;
int AGX_CUSTOM_GLAD_GL_ARB_depth_buffer_float = 0;
int AGX_CUSTOM_GLAD_GL_ARB_depth_clamp = 0;
int AGX_CUSTOM_GLAD_GL_ARB_depth_texture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_derivative_control = 0;
int AGX_CUSTOM_GLAD_GL_ARB_direct_state_access = 0;
int AGX_CUSTOM_GLAD_GL_ARB_draw_buffers = 0;
int AGX_CUSTOM_GLAD_GL_ARB_draw_buffers_blend = 0;
int AGX_CUSTOM_GLAD_GL_ARB_draw_elements_base_vertex = 0;
int AGX_CUSTOM_GLAD_GL_ARB_draw_indirect = 0;
int AGX_CUSTOM_GLAD_GL_ARB_draw_instanced = 0;
int AGX_CUSTOM_GLAD_GL_ARB_enhanced_layouts = 0;
int AGX_CUSTOM_GLAD_GL_ARB_explicit_attrib_location = 0;
int AGX_CUSTOM_GLAD_GL_ARB_explicit_uniform_location = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_coord_conventions = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_layer_viewport = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_program = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_program_shadow = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_shader = 0;
int AGX_CUSTOM_GLAD_GL_ARB_fragment_shader_interlock = 0;
int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_no_attachments = 0;
int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_framebuffer_sRGB = 0;
int AGX_CUSTOM_GLAD_GL_ARB_geometry_shader4 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_get_program_binary = 0;
int AGX_CUSTOM_GLAD_GL_ARB_get_texture_sub_image = 0;
int AGX_CUSTOM_GLAD_GL_ARB_gl_spirv = 0;
int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader5 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_fp64 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_int64 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_half_float_pixel = 0;
int AGX_CUSTOM_GLAD_GL_ARB_half_float_vertex = 0;
int AGX_CUSTOM_GLAD_GL_ARB_imaging = 0;
int AGX_CUSTOM_GLAD_GL_ARB_indirect_parameters = 0;
int AGX_CUSTOM_GLAD_GL_ARB_instanced_arrays = 0;
int AGX_CUSTOM_GLAD_GL_ARB_internalformat_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_internalformat_query2 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_invalidate_subdata = 0;
int AGX_CUSTOM_GLAD_GL_ARB_map_buffer_alignment = 0;
int AGX_CUSTOM_GLAD_GL_ARB_map_buffer_range = 0;
int AGX_CUSTOM_GLAD_GL_ARB_matrix_palette = 0;
int AGX_CUSTOM_GLAD_GL_ARB_multi_bind = 0;
int AGX_CUSTOM_GLAD_GL_ARB_multi_draw_indirect = 0;
int AGX_CUSTOM_GLAD_GL_ARB_multisample = 0;
int AGX_CUSTOM_GLAD_GL_ARB_multitexture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_occlusion_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_occlusion_query2 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_parallel_shader_compile = 0;
int AGX_CUSTOM_GLAD_GL_ARB_pipeline_statistics_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_pixel_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_point_parameters = 0;
int AGX_CUSTOM_GLAD_GL_ARB_point_sprite = 0;
int AGX_CUSTOM_GLAD_GL_ARB_polygon_offset_clamp = 0;
int AGX_CUSTOM_GLAD_GL_ARB_post_depth_coverage = 0;
int AGX_CUSTOM_GLAD_GL_ARB_program_interface_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_provoking_vertex = 0;
int AGX_CUSTOM_GLAD_GL_ARB_query_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_robust_buffer_access_behavior = 0;
int AGX_CUSTOM_GLAD_GL_ARB_robustness = 0;
int AGX_CUSTOM_GLAD_GL_ARB_robustness_isolation = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sample_locations = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sample_shading = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sampler_objects = 0;
int AGX_CUSTOM_GLAD_GL_ARB_seamless_cube_map = 0;
int AGX_CUSTOM_GLAD_GL_ARB_seamless_cubemap_per_texture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_separate_shader_objects = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counter_ops = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counters = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_ballot = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_bit_encoding = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_clock = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_draw_parameters = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_group_vote = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_image_load_store = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_image_size = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_objects = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_precision = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_stencil_export = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_storage_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_subroutine = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_texture_image_samples = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_texture_lod = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shader_viewport_layer_array = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shading_language_100 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shading_language_420pack = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shading_language_include = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shading_language_packing = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shadow = 0;
int AGX_CUSTOM_GLAD_GL_ARB_shadow_ambient = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sparse_buffer = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture2 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sparse_texture_clamp = 0;
int AGX_CUSTOM_GLAD_GL_ARB_spirv_extensions = 0;
int AGX_CUSTOM_GLAD_GL_ARB_stencil_texturing = 0;
int AGX_CUSTOM_GLAD_GL_ARB_sync = 0;
int AGX_CUSTOM_GLAD_GL_ARB_tessellation_shader = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_barrier = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_border_clamp = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object_rgb32 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_range = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_compression = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_compression_bptc = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_compression_rgtc = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map_array = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_env_add = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_env_combine = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_env_crossbar = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_env_dot3 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_filter_anisotropic = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_filter_minmax = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_float = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_gather = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_mirror_clamp_to_edge = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_mirrored_repeat = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_multisample = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_non_power_of_two = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_query_levels = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_query_lod = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_rectangle = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_rg = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_rgb10_a2ui = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_stencil8 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_storage = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_storage_multisample = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_swizzle = 0;
int AGX_CUSTOM_GLAD_GL_ARB_texture_view = 0;
int AGX_CUSTOM_GLAD_GL_ARB_timer_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback2 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback3 = 0;
int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_instanced = 0;
int AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_overflow_query = 0;
int AGX_CUSTOM_GLAD_GL_ARB_transpose_matrix = 0;
int AGX_CUSTOM_GLAD_GL_ARB_uniform_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_array_bgra = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_array_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_64bit = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_binding = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_blend = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_program = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_shader = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_type_10f_11f_11f_rev = 0;
int AGX_CUSTOM_GLAD_GL_ARB_vertex_type_2_10_10_10_rev = 0;
int AGX_CUSTOM_GLAD_GL_ARB_viewport_array = 0;
int AGX_CUSTOM_GLAD_GL_ARB_window_pos = 0;
int AGX_CUSTOM_GLAD_GL_ATI_draw_buffers = 0;
int AGX_CUSTOM_GLAD_GL_ATI_element_array = 0;
int AGX_CUSTOM_GLAD_GL_ATI_envmap_bumpmap = 0;
int AGX_CUSTOM_GLAD_GL_ATI_fragment_shader = 0;
int AGX_CUSTOM_GLAD_GL_ATI_map_object_buffer = 0;
int AGX_CUSTOM_GLAD_GL_ATI_meminfo = 0;
int AGX_CUSTOM_GLAD_GL_ATI_pixel_format_float = 0;
int AGX_CUSTOM_GLAD_GL_ATI_pn_triangles = 0;
int AGX_CUSTOM_GLAD_GL_ATI_separate_stencil = 0;
int AGX_CUSTOM_GLAD_GL_ATI_text_fragment_shader = 0;
int AGX_CUSTOM_GLAD_GL_ATI_texture_env_combine3 = 0;
int AGX_CUSTOM_GLAD_GL_ATI_texture_float = 0;
int AGX_CUSTOM_GLAD_GL_ATI_texture_mirror_once = 0;
int AGX_CUSTOM_GLAD_GL_ATI_vertex_array_object = 0;
int AGX_CUSTOM_GLAD_GL_ATI_vertex_attrib_array_object = 0;
int AGX_CUSTOM_GLAD_GL_ATI_vertex_streams = 0;
int AGX_CUSTOM_GLAD_GL_EXT_422_pixels = 0;
int AGX_CUSTOM_GLAD_GL_EXT_EGL_image_storage = 0;
int AGX_CUSTOM_GLAD_GL_EXT_EGL_sync = 0;
int AGX_CUSTOM_GLAD_GL_EXT_abgr = 0;
int AGX_CUSTOM_GLAD_GL_EXT_bgra = 0;
int AGX_CUSTOM_GLAD_GL_EXT_bindable_uniform = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_color = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_equation_separate = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_func_separate = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_logic_op = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_minmax = 0;
int AGX_CUSTOM_GLAD_GL_EXT_blend_subtract = 0;
int AGX_CUSTOM_GLAD_GL_EXT_clip_volume_hint = 0;
int AGX_CUSTOM_GLAD_GL_EXT_cmyka = 0;
int AGX_CUSTOM_GLAD_GL_EXT_color_subtable = 0;
int AGX_CUSTOM_GLAD_GL_EXT_compiled_vertex_array = 0;
int AGX_CUSTOM_GLAD_GL_EXT_convolution = 0;
int AGX_CUSTOM_GLAD_GL_EXT_coordinate_frame = 0;
int AGX_CUSTOM_GLAD_GL_EXT_copy_texture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_cull_vertex = 0;
int AGX_CUSTOM_GLAD_GL_EXT_debug_label = 0;
int AGX_CUSTOM_GLAD_GL_EXT_debug_marker = 0;
int AGX_CUSTOM_GLAD_GL_EXT_depth_bounds_test = 0;
int AGX_CUSTOM_GLAD_GL_EXT_direct_state_access = 0;
int AGX_CUSTOM_GLAD_GL_EXT_draw_buffers2 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_draw_instanced = 0;
int AGX_CUSTOM_GLAD_GL_EXT_draw_range_elements = 0;
int AGX_CUSTOM_GLAD_GL_EXT_external_buffer = 0;
int AGX_CUSTOM_GLAD_GL_EXT_fog_coord = 0;
int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_blit = 0;
int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample = 0;
int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample_blit_scaled = 0;
int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_object = 0;
int AGX_CUSTOM_GLAD_GL_EXT_framebuffer_sRGB = 0;
int AGX_CUSTOM_GLAD_GL_EXT_geometry_shader4 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_gpu_program_parameters = 0;
int AGX_CUSTOM_GLAD_GL_EXT_gpu_shader4 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_histogram = 0;
int AGX_CUSTOM_GLAD_GL_EXT_index_array_formats = 0;
int AGX_CUSTOM_GLAD_GL_EXT_index_func = 0;
int AGX_CUSTOM_GLAD_GL_EXT_index_material = 0;
int AGX_CUSTOM_GLAD_GL_EXT_index_texture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_light_texture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_memory_object = 0;
int AGX_CUSTOM_GLAD_GL_EXT_memory_object_fd = 0;
int AGX_CUSTOM_GLAD_GL_EXT_memory_object_win32 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_misc_attribute = 0;
int AGX_CUSTOM_GLAD_GL_EXT_multi_draw_arrays = 0;
int AGX_CUSTOM_GLAD_GL_EXT_multisample = 0;
int AGX_CUSTOM_GLAD_GL_EXT_multiview_tessellation_geometry_shader = 0;
int AGX_CUSTOM_GLAD_GL_EXT_multiview_texture_multisample = 0;
int AGX_CUSTOM_GLAD_GL_EXT_multiview_timer_query = 0;
int AGX_CUSTOM_GLAD_GL_EXT_packed_depth_stencil = 0;
int AGX_CUSTOM_GLAD_GL_EXT_packed_float = 0;
int AGX_CUSTOM_GLAD_GL_EXT_packed_pixels = 0;
int AGX_CUSTOM_GLAD_GL_EXT_paletted_texture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_pixel_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_EXT_pixel_transform = 0;
int AGX_CUSTOM_GLAD_GL_EXT_pixel_transform_color_table = 0;
int AGX_CUSTOM_GLAD_GL_EXT_point_parameters = 0;
int AGX_CUSTOM_GLAD_GL_EXT_polygon_offset = 0;
int AGX_CUSTOM_GLAD_GL_EXT_polygon_offset_clamp = 0;
int AGX_CUSTOM_GLAD_GL_EXT_post_depth_coverage = 0;
int AGX_CUSTOM_GLAD_GL_EXT_provoking_vertex = 0;
int AGX_CUSTOM_GLAD_GL_EXT_raster_multisample = 0;
int AGX_CUSTOM_GLAD_GL_EXT_rescale_normal = 0;
int AGX_CUSTOM_GLAD_GL_EXT_secondary_color = 0;
int AGX_CUSTOM_GLAD_GL_EXT_semaphore = 0;
int AGX_CUSTOM_GLAD_GL_EXT_semaphore_fd = 0;
int AGX_CUSTOM_GLAD_GL_EXT_semaphore_win32 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_separate_shader_objects = 0;
int AGX_CUSTOM_GLAD_GL_EXT_separate_specular_color = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_formatted = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_store = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shader_integer_mix = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shadow_funcs = 0;
int AGX_CUSTOM_GLAD_GL_EXT_shared_texture_palette = 0;
int AGX_CUSTOM_GLAD_GL_EXT_sparse_texture2 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_stencil_clear_tag = 0;
int AGX_CUSTOM_GLAD_GL_EXT_stencil_two_side = 0;
int AGX_CUSTOM_GLAD_GL_EXT_stencil_wrap = 0;
int AGX_CUSTOM_GLAD_GL_EXT_subtexture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture3D = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_array = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_latc = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_rgtc = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_compression_s3tc = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_cube_map = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_env_add = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_env_combine = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_env_dot3 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_filter_anisotropic = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_filter_minmax = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_integer = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_lod_bias = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_mirror_clamp = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_object = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_perturb_normal = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_R8 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_RG8 = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_decode = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_shadow_lod = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_shared_exponent = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_snorm = 0;
int AGX_CUSTOM_GLAD_GL_EXT_texture_swizzle = 0;
int AGX_CUSTOM_GLAD_GL_EXT_timer_query = 0;
int AGX_CUSTOM_GLAD_GL_EXT_transform_feedback = 0;
int AGX_CUSTOM_GLAD_GL_EXT_vertex_array = 0;
int AGX_CUSTOM_GLAD_GL_EXT_vertex_array_bgra = 0;
int AGX_CUSTOM_GLAD_GL_EXT_vertex_attrib_64bit = 0;
int AGX_CUSTOM_GLAD_GL_EXT_vertex_shader = 0;
int AGX_CUSTOM_GLAD_GL_EXT_vertex_weighting = 0;
int AGX_CUSTOM_GLAD_GL_EXT_win32_keyed_mutex = 0;
int AGX_CUSTOM_GLAD_GL_EXT_window_rectangles = 0;
int AGX_CUSTOM_GLAD_GL_EXT_x11_sync_object = 0;
int AGX_CUSTOM_GLAD_GL_GREMEDY_frame_terminator = 0;
int AGX_CUSTOM_GLAD_GL_GREMEDY_string_marker = 0;
int AGX_CUSTOM_GLAD_GL_HP_convolution_border_modes = 0;
int AGX_CUSTOM_GLAD_GL_HP_image_transform = 0;
int AGX_CUSTOM_GLAD_GL_HP_occlusion_test = 0;
int AGX_CUSTOM_GLAD_GL_HP_texture_lighting = 0;
int AGX_CUSTOM_GLAD_GL_IBM_cull_vertex = 0;
int AGX_CUSTOM_GLAD_GL_IBM_multimode_draw_arrays = 0;
int AGX_CUSTOM_GLAD_GL_IBM_rasterpos_clip = 0;
int AGX_CUSTOM_GLAD_GL_IBM_static_data = 0;
int AGX_CUSTOM_GLAD_GL_IBM_texture_mirrored_repeat = 0;
int AGX_CUSTOM_GLAD_GL_IBM_vertex_array_lists = 0;
int AGX_CUSTOM_GLAD_GL_INGR_blend_func_separate = 0;
int AGX_CUSTOM_GLAD_GL_INGR_color_clamp = 0;
int AGX_CUSTOM_GLAD_GL_INGR_interlace_read = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_blackhole_render = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_conservative_rasterization = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_fragment_shader_ordering = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_framebuffer_CMAA = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_map_texture = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_parallel_arrays = 0;
int AGX_CUSTOM_GLAD_GL_INTEL_performance_query = 0;
int AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced = 0;
int AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced_coherent = 0;
int AGX_CUSTOM_GLAD_GL_KHR_context_flush_control = 0;
int AGX_CUSTOM_GLAD_GL_KHR_debug = 0;
int AGX_CUSTOM_GLAD_GL_KHR_no_error = 0;
int AGX_CUSTOM_GLAD_GL_KHR_parallel_shader_compile = 0;
int AGX_CUSTOM_GLAD_GL_KHR_robust_buffer_access_behavior = 0;
int AGX_CUSTOM_GLAD_GL_KHR_robustness = 0;
int AGX_CUSTOM_GLAD_GL_KHR_shader_subgroup = 0;
int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_hdr = 0;
int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_ldr = 0;
int AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_sliced_3d = 0;
int AGX_CUSTOM_GLAD_GL_MESAX_texture_stack = 0;
int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_x = 0;
int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_y = 0;
int AGX_CUSTOM_GLAD_GL_MESA_framebuffer_swap_xy = 0;
int AGX_CUSTOM_GLAD_GL_MESA_pack_invert = 0;
int AGX_CUSTOM_GLAD_GL_MESA_program_binary_formats = 0;
int AGX_CUSTOM_GLAD_GL_MESA_resize_buffers = 0;
int AGX_CUSTOM_GLAD_GL_MESA_shader_integer_functions = 0;
int AGX_CUSTOM_GLAD_GL_MESA_tile_raster_order = 0;
int AGX_CUSTOM_GLAD_GL_MESA_window_pos = 0;
int AGX_CUSTOM_GLAD_GL_MESA_ycbcr_texture = 0;
int AGX_CUSTOM_GLAD_GL_NVX_blend_equation_advanced_multi_draw_buffers = 0;
int AGX_CUSTOM_GLAD_GL_NVX_conditional_render = 0;
int AGX_CUSTOM_GLAD_GL_NVX_gpu_memory_info = 0;
int AGX_CUSTOM_GLAD_GL_NVX_gpu_multicast2 = 0;
int AGX_CUSTOM_GLAD_GL_NVX_linked_gpu_multicast = 0;
int AGX_CUSTOM_GLAD_GL_NVX_progress_fence = 0;
int AGX_CUSTOM_GLAD_GL_NV_alpha_to_coverage_dither_control = 0;
int AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect = 0;
int AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect_count = 0;
int AGX_CUSTOM_GLAD_GL_NV_bindless_texture = 0;
int AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced = 0;
int AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced_coherent = 0;
int AGX_CUSTOM_GLAD_GL_NV_blend_minmax_factor = 0;
int AGX_CUSTOM_GLAD_GL_NV_blend_square = 0;
int AGX_CUSTOM_GLAD_GL_NV_clip_space_w_scaling = 0;
int AGX_CUSTOM_GLAD_GL_NV_command_list = 0;
int AGX_CUSTOM_GLAD_GL_NV_compute_program5 = 0;
int AGX_CUSTOM_GLAD_GL_NV_compute_shader_derivatives = 0;
int AGX_CUSTOM_GLAD_GL_NV_conditional_render = 0;
int AGX_CUSTOM_GLAD_GL_NV_conservative_raster = 0;
int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_dilate = 0;
int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap = 0;
int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap_triangles = 0;
int AGX_CUSTOM_GLAD_GL_NV_conservative_raster_underestimation = 0;
int AGX_CUSTOM_GLAD_GL_NV_copy_depth_to_color = 0;
int AGX_CUSTOM_GLAD_GL_NV_copy_image = 0;
int AGX_CUSTOM_GLAD_GL_NV_deep_texture3D = 0;
int AGX_CUSTOM_GLAD_GL_NV_depth_buffer_float = 0;
int AGX_CUSTOM_GLAD_GL_NV_depth_clamp = 0;
int AGX_CUSTOM_GLAD_GL_NV_draw_texture = 0;
int AGX_CUSTOM_GLAD_GL_NV_draw_vulkan_image = 0;
int AGX_CUSTOM_GLAD_GL_NV_evaluators = 0;
int AGX_CUSTOM_GLAD_GL_NV_explicit_multisample = 0;
int AGX_CUSTOM_GLAD_GL_NV_fence = 0;
int AGX_CUSTOM_GLAD_GL_NV_fill_rectangle = 0;
int AGX_CUSTOM_GLAD_GL_NV_float_buffer = 0;
int AGX_CUSTOM_GLAD_GL_NV_fog_distance = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_coverage_to_color = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_program = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_program2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_program4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_program_option = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_shader_barycentric = 0;
int AGX_CUSTOM_GLAD_GL_NV_fragment_shader_interlock = 0;
int AGX_CUSTOM_GLAD_GL_NV_framebuffer_mixed_samples = 0;
int AGX_CUSTOM_GLAD_GL_NV_framebuffer_multisample_coverage = 0;
int AGX_CUSTOM_GLAD_GL_NV_geometry_program4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_geometry_shader4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_geometry_shader_passthrough = 0;
int AGX_CUSTOM_GLAD_GL_NV_gpu_multicast = 0;
int AGX_CUSTOM_GLAD_GL_NV_gpu_program4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_gpu_program5 = 0;
int AGX_CUSTOM_GLAD_GL_NV_gpu_program5_mem_extended = 0;
int AGX_CUSTOM_GLAD_GL_NV_gpu_shader5 = 0;
int AGX_CUSTOM_GLAD_GL_NV_half_float = 0;
int AGX_CUSTOM_GLAD_GL_NV_internalformat_sample_query = 0;
int AGX_CUSTOM_GLAD_GL_NV_light_max_exponent = 0;
int AGX_CUSTOM_GLAD_GL_NV_memory_attachment = 0;
int AGX_CUSTOM_GLAD_GL_NV_memory_object_sparse = 0;
int AGX_CUSTOM_GLAD_GL_NV_mesh_shader = 0;
int AGX_CUSTOM_GLAD_GL_NV_multisample_coverage = 0;
int AGX_CUSTOM_GLAD_GL_NV_multisample_filter_hint = 0;
int AGX_CUSTOM_GLAD_GL_NV_occlusion_query = 0;
int AGX_CUSTOM_GLAD_GL_NV_packed_depth_stencil = 0;
int AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_path_rendering = 0;
int AGX_CUSTOM_GLAD_GL_NV_path_rendering_shared_edge = 0;
int AGX_CUSTOM_GLAD_GL_NV_pixel_data_range = 0;
int AGX_CUSTOM_GLAD_GL_NV_point_sprite = 0;
int AGX_CUSTOM_GLAD_GL_NV_present_video = 0;
int AGX_CUSTOM_GLAD_GL_NV_primitive_restart = 0;
int AGX_CUSTOM_GLAD_GL_NV_primitive_shading_rate = 0;
int AGX_CUSTOM_GLAD_GL_NV_query_resource = 0;
int AGX_CUSTOM_GLAD_GL_NV_query_resource_tag = 0;
int AGX_CUSTOM_GLAD_GL_NV_register_combiners = 0;
int AGX_CUSTOM_GLAD_GL_NV_register_combiners2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_representative_fragment_test = 0;
int AGX_CUSTOM_GLAD_GL_NV_robustness_video_memory_purge = 0;
int AGX_CUSTOM_GLAD_GL_NV_sample_locations = 0;
int AGX_CUSTOM_GLAD_GL_NV_sample_mask_override_coverage = 0;
int AGX_CUSTOM_GLAD_GL_NV_scissor_exclusive = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_counters = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float64 = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_fp16_vector = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_atomic_int64 = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_buffer_load = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_buffer_store = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_storage_buffer_object = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_subgroup_partitioned = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_texture_footprint = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_thread_group = 0;
int AGX_CUSTOM_GLAD_GL_NV_shader_thread_shuffle = 0;
int AGX_CUSTOM_GLAD_GL_NV_shading_rate_image = 0;
int AGX_CUSTOM_GLAD_GL_NV_stereo_view_rendering = 0;
int AGX_CUSTOM_GLAD_GL_NV_tessellation_program5 = 0;
int AGX_CUSTOM_GLAD_GL_NV_texgen_emboss = 0;
int AGX_CUSTOM_GLAD_GL_NV_texgen_reflection = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_barrier = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_compression_vtc = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_env_combine4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_expand_normal = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_multisample = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_rectangle = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_rectangle_compressed = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_shader = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_shader2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_texture_shader3 = 0;
int AGX_CUSTOM_GLAD_GL_NV_timeline_semaphore = 0;
int AGX_CUSTOM_GLAD_GL_NV_transform_feedback = 0;
int AGX_CUSTOM_GLAD_GL_NV_transform_feedback2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_uniform_buffer_unified_memory = 0;
int AGX_CUSTOM_GLAD_GL_NV_vdpau_interop = 0;
int AGX_CUSTOM_GLAD_GL_NV_vdpau_interop2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_array_range = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_array_range2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_attrib_integer_64bit = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_buffer_unified_memory = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program1_1 = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program2_option = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program3 = 0;
int AGX_CUSTOM_GLAD_GL_NV_vertex_program4 = 0;
int AGX_CUSTOM_GLAD_GL_NV_video_capture = 0;
int AGX_CUSTOM_GLAD_GL_NV_viewport_array2 = 0;
int AGX_CUSTOM_GLAD_GL_NV_viewport_swizzle = 0;
int AGX_CUSTOM_GLAD_GL_OES_byte_coordinates = 0;
int AGX_CUSTOM_GLAD_GL_OES_compressed_paletted_texture = 0;
int AGX_CUSTOM_GLAD_GL_OES_fixed_point = 0;
int AGX_CUSTOM_GLAD_GL_OES_query_matrix = 0;
int AGX_CUSTOM_GLAD_GL_OES_read_format = 0;
int AGX_CUSTOM_GLAD_GL_OES_single_precision = 0;
int AGX_CUSTOM_GLAD_GL_OML_interlace = 0;
int AGX_CUSTOM_GLAD_GL_OML_resample = 0;
int AGX_CUSTOM_GLAD_GL_OML_subsample = 0;
int AGX_CUSTOM_GLAD_GL_OVR_multiview = 0;
int AGX_CUSTOM_GLAD_GL_OVR_multiview2 = 0;
int AGX_CUSTOM_GLAD_GL_PGI_misc_hints = 0;
int AGX_CUSTOM_GLAD_GL_PGI_vertex_hints = 0;
int AGX_CUSTOM_GLAD_GL_REND_screen_coordinates = 0;
int AGX_CUSTOM_GLAD_GL_S3_s3tc = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_detail_texture = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_fog_function = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_generate_mipmap = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_multisample = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_pixel_texture = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_point_line_texgen = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_point_parameters = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_sharpen_texture = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture4D = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_border_clamp = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_color_mask = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_edge_clamp = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_filter4 = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_lod = 0;
int AGX_CUSTOM_GLAD_GL_SGIS_texture_select = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_async = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_async_histogram = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_async_pixel = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_blend_alpha_minmax = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_calligraphic_fragment = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_clipmap = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_convolution_accuracy = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_depth_pass_instrument = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_depth_texture = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_flush_raster = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_fog_offset = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_fragment_lighting = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_framezoom = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_igloo_interface = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_instruments = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_interlace = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_ir_instrument1 = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_list_priority = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_pixel_texture = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_pixel_tiles = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_polynomial_ffd = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_reference_plane = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_resample = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_scalebias_hint = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_shadow = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_shadow_ambient = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_sprite = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_subsample = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_tag_sample_buffer = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_texture_add_env = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_texture_coordinate_clamp = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_texture_lod_bias = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_texture_multi_buffer = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_texture_scale_bias = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_vertex_preclip = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_ycrcb = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_ycrcb_subsample = 0;
int AGX_CUSTOM_GLAD_GL_SGIX_ycrcba = 0;
int AGX_CUSTOM_GLAD_GL_SGI_color_matrix = 0;
int AGX_CUSTOM_GLAD_GL_SGI_color_table = 0;
int AGX_CUSTOM_GLAD_GL_SGI_texture_color_table = 0;
int AGX_CUSTOM_GLAD_GL_SUNX_constant_data = 0;
int AGX_CUSTOM_GLAD_GL_SUN_convolution_border_modes = 0;
int AGX_CUSTOM_GLAD_GL_SUN_global_alpha = 0;
int AGX_CUSTOM_GLAD_GL_SUN_mesh_array = 0;
int AGX_CUSTOM_GLAD_GL_SUN_slice_accum = 0;
int AGX_CUSTOM_GLAD_GL_SUN_triangle_list = 0;
int AGX_CUSTOM_GLAD_GL_SUN_vertex = 0;
int AGX_CUSTOM_GLAD_GL_WIN_phong_shading = 0;
int AGX_CUSTOM_GLAD_GL_WIN_specular_fog = 0;



PFNGLACCUMPROC agx_custom_glad_glAccum = NULL;
PFNGLACCUMXOESPROC agx_custom_glad_glAccumxOES = NULL;
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC agx_custom_glad_glAcquireKeyedMutexWin32EXT = NULL;
PFNGLACTIVEPROGRAMEXTPROC agx_custom_glad_glActiveProgramEXT = NULL;
PFNGLACTIVESHADERPROGRAMPROC agx_custom_glad_glActiveShaderProgram = NULL;
PFNGLACTIVESTENCILFACEEXTPROC agx_custom_glad_glActiveStencilFaceEXT = NULL;
PFNGLACTIVETEXTUREPROC agx_custom_glad_glActiveTexture = NULL;
PFNGLACTIVETEXTUREARBPROC agx_custom_glad_glActiveTextureARB = NULL;
PFNGLACTIVEVARYINGNVPROC agx_custom_glad_glActiveVaryingNV = NULL;
PFNGLALPHAFRAGMENTOP1ATIPROC agx_custom_glad_glAlphaFragmentOp1ATI = NULL;
PFNGLALPHAFRAGMENTOP2ATIPROC agx_custom_glad_glAlphaFragmentOp2ATI = NULL;
PFNGLALPHAFRAGMENTOP3ATIPROC agx_custom_glad_glAlphaFragmentOp3ATI = NULL;
PFNGLALPHAFUNCPROC agx_custom_glad_glAlphaFunc = NULL;
PFNGLALPHAFUNCXOESPROC agx_custom_glad_glAlphaFuncxOES = NULL;
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC agx_custom_glad_glAlphaToCoverageDitherControlNV = NULL;
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC agx_custom_glad_glApplyFramebufferAttachmentCMAAINTEL = NULL;
PFNGLAPPLYTEXTUREEXTPROC agx_custom_glad_glApplyTextureEXT = NULL;
PFNGLAREPROGRAMSRESIDENTNVPROC agx_custom_glad_glAreProgramsResidentNV = NULL;
PFNGLARETEXTURESRESIDENTPROC agx_custom_glad_glAreTexturesResident = NULL;
PFNGLARETEXTURESRESIDENTEXTPROC agx_custom_glad_glAreTexturesResidentEXT = NULL;
PFNGLARRAYELEMENTPROC agx_custom_glad_glArrayElement = NULL;
PFNGLARRAYELEMENTEXTPROC agx_custom_glad_glArrayElementEXT = NULL;
PFNGLARRAYOBJECTATIPROC agx_custom_glad_glArrayObjectATI = NULL;
PFNGLASYNCCOPYBUFFERSUBDATANVXPROC agx_custom_glad_glAsyncCopyBufferSubDataNVX = NULL;
PFNGLASYNCCOPYIMAGESUBDATANVXPROC agx_custom_glad_glAsyncCopyImageSubDataNVX = NULL;
PFNGLASYNCMARKERSGIXPROC agx_custom_glad_glAsyncMarkerSGIX = NULL;
PFNGLATTACHOBJECTARBPROC agx_custom_glad_glAttachObjectARB = NULL;
PFNGLATTACHSHADERPROC agx_custom_glad_glAttachShader = NULL;
PFNGLBEGINPROC agx_custom_glad_glBegin = NULL;
PFNGLBEGINCONDITIONALRENDERPROC agx_custom_glad_glBeginConditionalRender = NULL;
PFNGLBEGINCONDITIONALRENDERNVPROC agx_custom_glad_glBeginConditionalRenderNV = NULL;
PFNGLBEGINCONDITIONALRENDERNVXPROC agx_custom_glad_glBeginConditionalRenderNVX = NULL;
PFNGLBEGINFRAGMENTSHADERATIPROC agx_custom_glad_glBeginFragmentShaderATI = NULL;
PFNGLBEGINOCCLUSIONQUERYNVPROC agx_custom_glad_glBeginOcclusionQueryNV = NULL;
PFNGLBEGINPERFMONITORAMDPROC agx_custom_glad_glBeginPerfMonitorAMD = NULL;
PFNGLBEGINPERFQUERYINTELPROC agx_custom_glad_glBeginPerfQueryINTEL = NULL;
PFNGLBEGINQUERYPROC agx_custom_glad_glBeginQuery = NULL;
PFNGLBEGINQUERYARBPROC agx_custom_glad_glBeginQueryARB = NULL;
PFNGLBEGINQUERYINDEXEDPROC agx_custom_glad_glBeginQueryIndexed = NULL;
PFNGLBEGINTRANSFORMFEEDBACKPROC agx_custom_glad_glBeginTransformFeedback = NULL;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC agx_custom_glad_glBeginTransformFeedbackEXT = NULL;
PFNGLBEGINTRANSFORMFEEDBACKNVPROC agx_custom_glad_glBeginTransformFeedbackNV = NULL;
PFNGLBEGINVERTEXSHADEREXTPROC agx_custom_glad_glBeginVertexShaderEXT = NULL;
PFNGLBEGINVIDEOCAPTURENVPROC agx_custom_glad_glBeginVideoCaptureNV = NULL;
PFNGLBINDATTRIBLOCATIONPROC agx_custom_glad_glBindAttribLocation = NULL;
PFNGLBINDATTRIBLOCATIONARBPROC agx_custom_glad_glBindAttribLocationARB = NULL;
PFNGLBINDBUFFERPROC agx_custom_glad_glBindBuffer = NULL;
PFNGLBINDBUFFERARBPROC agx_custom_glad_glBindBufferARB = NULL;
PFNGLBINDBUFFERBASEPROC agx_custom_glad_glBindBufferBase = NULL;
PFNGLBINDBUFFERBASEEXTPROC agx_custom_glad_glBindBufferBaseEXT = NULL;
PFNGLBINDBUFFERBASENVPROC agx_custom_glad_glBindBufferBaseNV = NULL;
PFNGLBINDBUFFEROFFSETEXTPROC agx_custom_glad_glBindBufferOffsetEXT = NULL;
PFNGLBINDBUFFEROFFSETNVPROC agx_custom_glad_glBindBufferOffsetNV = NULL;
PFNGLBINDBUFFERRANGEPROC agx_custom_glad_glBindBufferRange = NULL;
PFNGLBINDBUFFERRANGEEXTPROC agx_custom_glad_glBindBufferRangeEXT = NULL;
PFNGLBINDBUFFERRANGENVPROC agx_custom_glad_glBindBufferRangeNV = NULL;
PFNGLBINDBUFFERSBASEPROC agx_custom_glad_glBindBuffersBase = NULL;
PFNGLBINDBUFFERSRANGEPROC agx_custom_glad_glBindBuffersRange = NULL;
PFNGLBINDFRAGDATALOCATIONPROC agx_custom_glad_glBindFragDataLocation = NULL;
PFNGLBINDFRAGDATALOCATIONEXTPROC agx_custom_glad_glBindFragDataLocationEXT = NULL;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC agx_custom_glad_glBindFragDataLocationIndexed = NULL;
PFNGLBINDFRAGMENTSHADERATIPROC agx_custom_glad_glBindFragmentShaderATI = NULL;
PFNGLBINDFRAMEBUFFERPROC agx_custom_glad_glBindFramebuffer = NULL;
PFNGLBINDFRAMEBUFFEREXTPROC agx_custom_glad_glBindFramebufferEXT = NULL;
PFNGLBINDIMAGETEXTUREPROC agx_custom_glad_glBindImageTexture = NULL;
PFNGLBINDIMAGETEXTUREEXTPROC agx_custom_glad_glBindImageTextureEXT = NULL;
PFNGLBINDIMAGETEXTURESPROC agx_custom_glad_glBindImageTextures = NULL;
PFNGLBINDLIGHTPARAMETEREXTPROC agx_custom_glad_glBindLightParameterEXT = NULL;
PFNGLBINDMATERIALPARAMETEREXTPROC agx_custom_glad_glBindMaterialParameterEXT = NULL;
PFNGLBINDMULTITEXTUREEXTPROC agx_custom_glad_glBindMultiTextureEXT = NULL;
PFNGLBINDPARAMETEREXTPROC agx_custom_glad_glBindParameterEXT = NULL;
PFNGLBINDPROGRAMARBPROC agx_custom_glad_glBindProgramARB = NULL;
PFNGLBINDPROGRAMNVPROC agx_custom_glad_glBindProgramNV = NULL;
PFNGLBINDPROGRAMPIPELINEPROC agx_custom_glad_glBindProgramPipeline = NULL;
PFNGLBINDRENDERBUFFERPROC agx_custom_glad_glBindRenderbuffer = NULL;
PFNGLBINDRENDERBUFFEREXTPROC agx_custom_glad_glBindRenderbufferEXT = NULL;
PFNGLBINDSAMPLERPROC agx_custom_glad_glBindSampler = NULL;
PFNGLBINDSAMPLERSPROC agx_custom_glad_glBindSamplers = NULL;
PFNGLBINDSHADINGRATEIMAGENVPROC agx_custom_glad_glBindShadingRateImageNV = NULL;
PFNGLBINDTEXGENPARAMETEREXTPROC agx_custom_glad_glBindTexGenParameterEXT = NULL;
PFNGLBINDTEXTUREPROC agx_custom_glad_glBindTexture = NULL;
PFNGLBINDTEXTUREEXTPROC agx_custom_glad_glBindTextureEXT = NULL;
PFNGLBINDTEXTUREUNITPROC agx_custom_glad_glBindTextureUnit = NULL;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC agx_custom_glad_glBindTextureUnitParameterEXT = NULL;
PFNGLBINDTEXTURESPROC agx_custom_glad_glBindTextures = NULL;
PFNGLBINDTRANSFORMFEEDBACKPROC agx_custom_glad_glBindTransformFeedback = NULL;
PFNGLBINDTRANSFORMFEEDBACKNVPROC agx_custom_glad_glBindTransformFeedbackNV = NULL;
PFNGLBINDVERTEXARRAYPROC agx_custom_glad_glBindVertexArray = NULL;
PFNGLBINDVERTEXARRAYAPPLEPROC agx_custom_glad_glBindVertexArrayAPPLE = NULL;
PFNGLBINDVERTEXBUFFERPROC agx_custom_glad_glBindVertexBuffer = NULL;
PFNGLBINDVERTEXBUFFERSPROC agx_custom_glad_glBindVertexBuffers = NULL;
PFNGLBINDVERTEXSHADEREXTPROC agx_custom_glad_glBindVertexShaderEXT = NULL;
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC agx_custom_glad_glBindVideoCaptureStreamBufferNV = NULL;
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC agx_custom_glad_glBindVideoCaptureStreamTextureNV = NULL;
PFNGLBINORMAL3BEXTPROC agx_custom_glad_glBinormal3bEXT = NULL;
PFNGLBINORMAL3BVEXTPROC agx_custom_glad_glBinormal3bvEXT = NULL;
PFNGLBINORMAL3DEXTPROC agx_custom_glad_glBinormal3dEXT = NULL;
PFNGLBINORMAL3DVEXTPROC agx_custom_glad_glBinormal3dvEXT = NULL;
PFNGLBINORMAL3FEXTPROC agx_custom_glad_glBinormal3fEXT = NULL;
PFNGLBINORMAL3FVEXTPROC agx_custom_glad_glBinormal3fvEXT = NULL;
PFNGLBINORMAL3IEXTPROC agx_custom_glad_glBinormal3iEXT = NULL;
PFNGLBINORMAL3IVEXTPROC agx_custom_glad_glBinormal3ivEXT = NULL;
PFNGLBINORMAL3SEXTPROC agx_custom_glad_glBinormal3sEXT = NULL;
PFNGLBINORMAL3SVEXTPROC agx_custom_glad_glBinormal3svEXT = NULL;
PFNGLBINORMALPOINTEREXTPROC agx_custom_glad_glBinormalPointerEXT = NULL;
PFNGLBITMAPPROC agx_custom_glad_glBitmap = NULL;
PFNGLBITMAPXOESPROC agx_custom_glad_glBitmapxOES = NULL;
PFNGLBLENDBARRIERKHRPROC agx_custom_glad_glBlendBarrierKHR = NULL;
PFNGLBLENDBARRIERNVPROC agx_custom_glad_glBlendBarrierNV = NULL;
PFNGLBLENDCOLORPROC agx_custom_glad_glBlendColor = NULL;
PFNGLBLENDCOLOREXTPROC agx_custom_glad_glBlendColorEXT = NULL;
PFNGLBLENDCOLORXOESPROC agx_custom_glad_glBlendColorxOES = NULL;
PFNGLBLENDEQUATIONPROC agx_custom_glad_glBlendEquation = NULL;
PFNGLBLENDEQUATIONEXTPROC agx_custom_glad_glBlendEquationEXT = NULL;
PFNGLBLENDEQUATIONINDEXEDAMDPROC agx_custom_glad_glBlendEquationIndexedAMD = NULL;
PFNGLBLENDEQUATIONSEPARATEPROC agx_custom_glad_glBlendEquationSeparate = NULL;
PFNGLBLENDEQUATIONSEPARATEEXTPROC agx_custom_glad_glBlendEquationSeparateEXT = NULL;
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC agx_custom_glad_glBlendEquationSeparateIndexedAMD = NULL;
PFNGLBLENDEQUATIONSEPARATEIPROC agx_custom_glad_glBlendEquationSeparatei = NULL;
PFNGLBLENDEQUATIONSEPARATEIARBPROC agx_custom_glad_glBlendEquationSeparateiARB = NULL;
PFNGLBLENDEQUATIONIPROC agx_custom_glad_glBlendEquationi = NULL;
PFNGLBLENDEQUATIONIARBPROC agx_custom_glad_glBlendEquationiARB = NULL;
PFNGLBLENDFUNCPROC agx_custom_glad_glBlendFunc = NULL;
PFNGLBLENDFUNCINDEXEDAMDPROC agx_custom_glad_glBlendFuncIndexedAMD = NULL;
PFNGLBLENDFUNCSEPARATEPROC agx_custom_glad_glBlendFuncSeparate = NULL;
PFNGLBLENDFUNCSEPARATEEXTPROC agx_custom_glad_glBlendFuncSeparateEXT = NULL;
PFNGLBLENDFUNCSEPARATEINGRPROC agx_custom_glad_glBlendFuncSeparateINGR = NULL;
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC agx_custom_glad_glBlendFuncSeparateIndexedAMD = NULL;
PFNGLBLENDFUNCSEPARATEIPROC agx_custom_glad_glBlendFuncSeparatei = NULL;
PFNGLBLENDFUNCSEPARATEIARBPROC agx_custom_glad_glBlendFuncSeparateiARB = NULL;
PFNGLBLENDFUNCIPROC agx_custom_glad_glBlendFunci = NULL;
PFNGLBLENDFUNCIARBPROC agx_custom_glad_glBlendFunciARB = NULL;
PFNGLBLENDPARAMETERINVPROC agx_custom_glad_glBlendParameteriNV = NULL;
PFNGLBLITFRAMEBUFFERPROC agx_custom_glad_glBlitFramebuffer = NULL;
PFNGLBLITFRAMEBUFFEREXTPROC agx_custom_glad_glBlitFramebufferEXT = NULL;
PFNGLBLITNAMEDFRAMEBUFFERPROC agx_custom_glad_glBlitNamedFramebuffer = NULL;
PFNGLBUFFERADDRESSRANGENVPROC agx_custom_glad_glBufferAddressRangeNV = NULL;
PFNGLBUFFERATTACHMEMORYNVPROC agx_custom_glad_glBufferAttachMemoryNV = NULL;
PFNGLBUFFERDATAPROC agx_custom_glad_glBufferData = NULL;
PFNGLBUFFERDATAARBPROC agx_custom_glad_glBufferDataARB = NULL;
PFNGLBUFFERPAGECOMMITMENTARBPROC agx_custom_glad_glBufferPageCommitmentARB = NULL;
PFNGLBUFFERPAGECOMMITMENTMEMNVPROC agx_custom_glad_glBufferPageCommitmentMemNV = NULL;
PFNGLBUFFERPARAMETERIAPPLEPROC agx_custom_glad_glBufferParameteriAPPLE = NULL;
PFNGLBUFFERSTORAGEPROC agx_custom_glad_glBufferStorage = NULL;
PFNGLBUFFERSTORAGEEXTERNALEXTPROC agx_custom_glad_glBufferStorageExternalEXT = NULL;
PFNGLBUFFERSTORAGEMEMEXTPROC agx_custom_glad_glBufferStorageMemEXT = NULL;
PFNGLBUFFERSUBDATAPROC agx_custom_glad_glBufferSubData = NULL;
PFNGLBUFFERSUBDATAARBPROC agx_custom_glad_glBufferSubDataARB = NULL;
PFNGLCALLCOMMANDLISTNVPROC agx_custom_glad_glCallCommandListNV = NULL;
PFNGLCALLLISTPROC agx_custom_glad_glCallList = NULL;
PFNGLCALLLISTSPROC agx_custom_glad_glCallLists = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSPROC agx_custom_glad_glCheckFramebufferStatus = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC agx_custom_glad_glCheckFramebufferStatusEXT = NULL;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC agx_custom_glad_glCheckNamedFramebufferStatus = NULL;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC agx_custom_glad_glCheckNamedFramebufferStatusEXT = NULL;
PFNGLCLAMPCOLORPROC agx_custom_glad_glClampColor = NULL;
PFNGLCLAMPCOLORARBPROC agx_custom_glad_glClampColorARB = NULL;
PFNGLCLEARPROC agx_custom_glad_glClear = NULL;
PFNGLCLEARACCUMPROC agx_custom_glad_glClearAccum = NULL;
PFNGLCLEARACCUMXOESPROC agx_custom_glad_glClearAccumxOES = NULL;
PFNGLCLEARBUFFERDATAPROC agx_custom_glad_glClearBufferData = NULL;
PFNGLCLEARBUFFERSUBDATAPROC agx_custom_glad_glClearBufferSubData = NULL;
PFNGLCLEARBUFFERFIPROC agx_custom_glad_glClearBufferfi = NULL;
PFNGLCLEARBUFFERFVPROC agx_custom_glad_glClearBufferfv = NULL;
PFNGLCLEARBUFFERIVPROC agx_custom_glad_glClearBufferiv = NULL;
PFNGLCLEARBUFFERUIVPROC agx_custom_glad_glClearBufferuiv = NULL;
PFNGLCLEARCOLORPROC agx_custom_glad_glClearColor = NULL;
PFNGLCLEARCOLORIIEXTPROC agx_custom_glad_glClearColorIiEXT = NULL;
PFNGLCLEARCOLORIUIEXTPROC agx_custom_glad_glClearColorIuiEXT = NULL;
PFNGLCLEARCOLORXOESPROC agx_custom_glad_glClearColorxOES = NULL;
PFNGLCLEARDEPTHPROC agx_custom_glad_glClearDepth = NULL;
PFNGLCLEARDEPTHDNVPROC agx_custom_glad_glClearDepthdNV = NULL;
PFNGLCLEARDEPTHFPROC agx_custom_glad_glClearDepthf = NULL;
PFNGLCLEARDEPTHFOESPROC agx_custom_glad_glClearDepthfOES = NULL;
PFNGLCLEARDEPTHXOESPROC agx_custom_glad_glClearDepthxOES = NULL;
PFNGLCLEARINDEXPROC agx_custom_glad_glClearIndex = NULL;
PFNGLCLEARNAMEDBUFFERDATAPROC agx_custom_glad_glClearNamedBufferData = NULL;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC agx_custom_glad_glClearNamedBufferDataEXT = NULL;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC agx_custom_glad_glClearNamedBufferSubData = NULL;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glClearNamedBufferSubDataEXT = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC agx_custom_glad_glClearNamedFramebufferfi = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC agx_custom_glad_glClearNamedFramebufferfv = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC agx_custom_glad_glClearNamedFramebufferiv = NULL;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC agx_custom_glad_glClearNamedFramebufferuiv = NULL;
PFNGLCLEARSTENCILPROC agx_custom_glad_glClearStencil = NULL;
PFNGLCLEARTEXIMAGEPROC agx_custom_glad_glClearTexImage = NULL;
PFNGLCLEARTEXSUBIMAGEPROC agx_custom_glad_glClearTexSubImage = NULL;
PFNGLCLIENTACTIVETEXTUREPROC agx_custom_glad_glClientActiveTexture = NULL;
PFNGLCLIENTACTIVETEXTUREARBPROC agx_custom_glad_glClientActiveTextureARB = NULL;
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC agx_custom_glad_glClientActiveVertexStreamATI = NULL;
PFNGLCLIENTATTRIBDEFAULTEXTPROC agx_custom_glad_glClientAttribDefaultEXT = NULL;
PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC agx_custom_glad_glClientWaitSemaphoreui64NVX = NULL;
PFNGLCLIENTWAITSYNCPROC agx_custom_glad_glClientWaitSync = NULL;
PFNGLCLIPCONTROLPROC agx_custom_glad_glClipControl = NULL;
PFNGLCLIPPLANEPROC agx_custom_glad_glClipPlane = NULL;
PFNGLCLIPPLANEFOESPROC agx_custom_glad_glClipPlanefOES = NULL;
PFNGLCLIPPLANEXOESPROC agx_custom_glad_glClipPlanexOES = NULL;
PFNGLCOLOR3BPROC agx_custom_glad_glColor3b = NULL;
PFNGLCOLOR3BVPROC agx_custom_glad_glColor3bv = NULL;
PFNGLCOLOR3DPROC agx_custom_glad_glColor3d = NULL;
PFNGLCOLOR3DVPROC agx_custom_glad_glColor3dv = NULL;
PFNGLCOLOR3FPROC agx_custom_glad_glColor3f = NULL;
PFNGLCOLOR3FVERTEX3FSUNPROC agx_custom_glad_glColor3fVertex3fSUN = NULL;
PFNGLCOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glColor3fVertex3fvSUN = NULL;
PFNGLCOLOR3FVPROC agx_custom_glad_glColor3fv = NULL;
PFNGLCOLOR3HNVPROC agx_custom_glad_glColor3hNV = NULL;
PFNGLCOLOR3HVNVPROC agx_custom_glad_glColor3hvNV = NULL;
PFNGLCOLOR3IPROC agx_custom_glad_glColor3i = NULL;
PFNGLCOLOR3IVPROC agx_custom_glad_glColor3iv = NULL;
PFNGLCOLOR3SPROC agx_custom_glad_glColor3s = NULL;
PFNGLCOLOR3SVPROC agx_custom_glad_glColor3sv = NULL;
PFNGLCOLOR3UBPROC agx_custom_glad_glColor3ub = NULL;
PFNGLCOLOR3UBVPROC agx_custom_glad_glColor3ubv = NULL;
PFNGLCOLOR3UIPROC agx_custom_glad_glColor3ui = NULL;
PFNGLCOLOR3UIVPROC agx_custom_glad_glColor3uiv = NULL;
PFNGLCOLOR3USPROC agx_custom_glad_glColor3us = NULL;
PFNGLCOLOR3USVPROC agx_custom_glad_glColor3usv = NULL;
PFNGLCOLOR3XOESPROC agx_custom_glad_glColor3xOES = NULL;
PFNGLCOLOR3XVOESPROC agx_custom_glad_glColor3xvOES = NULL;
PFNGLCOLOR4BPROC agx_custom_glad_glColor4b = NULL;
PFNGLCOLOR4BVPROC agx_custom_glad_glColor4bv = NULL;
PFNGLCOLOR4DPROC agx_custom_glad_glColor4d = NULL;
PFNGLCOLOR4DVPROC agx_custom_glad_glColor4dv = NULL;
PFNGLCOLOR4FPROC agx_custom_glad_glColor4f = NULL;
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glColor4fNormal3fVertex3fSUN = NULL;
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glColor4fNormal3fVertex3fvSUN = NULL;
PFNGLCOLOR4FVPROC agx_custom_glad_glColor4fv = NULL;
PFNGLCOLOR4HNVPROC agx_custom_glad_glColor4hNV = NULL;
PFNGLCOLOR4HVNVPROC agx_custom_glad_glColor4hvNV = NULL;
PFNGLCOLOR4IPROC agx_custom_glad_glColor4i = NULL;
PFNGLCOLOR4IVPROC agx_custom_glad_glColor4iv = NULL;
PFNGLCOLOR4SPROC agx_custom_glad_glColor4s = NULL;
PFNGLCOLOR4SVPROC agx_custom_glad_glColor4sv = NULL;
PFNGLCOLOR4UBPROC agx_custom_glad_glColor4ub = NULL;
PFNGLCOLOR4UBVERTEX2FSUNPROC agx_custom_glad_glColor4ubVertex2fSUN = NULL;
PFNGLCOLOR4UBVERTEX2FVSUNPROC agx_custom_glad_glColor4ubVertex2fvSUN = NULL;
PFNGLCOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glColor4ubVertex3fSUN = NULL;
PFNGLCOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glColor4ubVertex3fvSUN = NULL;
PFNGLCOLOR4UBVPROC agx_custom_glad_glColor4ubv = NULL;
PFNGLCOLOR4UIPROC agx_custom_glad_glColor4ui = NULL;
PFNGLCOLOR4UIVPROC agx_custom_glad_glColor4uiv = NULL;
PFNGLCOLOR4USPROC agx_custom_glad_glColor4us = NULL;
PFNGLCOLOR4USVPROC agx_custom_glad_glColor4usv = NULL;
PFNGLCOLOR4XOESPROC agx_custom_glad_glColor4xOES = NULL;
PFNGLCOLOR4XVOESPROC agx_custom_glad_glColor4xvOES = NULL;
PFNGLCOLORFORMATNVPROC agx_custom_glad_glColorFormatNV = NULL;
PFNGLCOLORFRAGMENTOP1ATIPROC agx_custom_glad_glColorFragmentOp1ATI = NULL;
PFNGLCOLORFRAGMENTOP2ATIPROC agx_custom_glad_glColorFragmentOp2ATI = NULL;
PFNGLCOLORFRAGMENTOP3ATIPROC agx_custom_glad_glColorFragmentOp3ATI = NULL;
PFNGLCOLORMASKPROC agx_custom_glad_glColorMask = NULL;
PFNGLCOLORMASKINDEXEDEXTPROC agx_custom_glad_glColorMaskIndexedEXT = NULL;
PFNGLCOLORMASKIPROC agx_custom_glad_glColorMaski = NULL;
PFNGLCOLORMATERIALPROC agx_custom_glad_glColorMaterial = NULL;
PFNGLCOLORP3UIPROC agx_custom_glad_glColorP3ui = NULL;
PFNGLCOLORP3UIVPROC agx_custom_glad_glColorP3uiv = NULL;
PFNGLCOLORP4UIPROC agx_custom_glad_glColorP4ui = NULL;
PFNGLCOLORP4UIVPROC agx_custom_glad_glColorP4uiv = NULL;
PFNGLCOLORPOINTERPROC agx_custom_glad_glColorPointer = NULL;
PFNGLCOLORPOINTEREXTPROC agx_custom_glad_glColorPointerEXT = NULL;
PFNGLCOLORPOINTERLISTIBMPROC agx_custom_glad_glColorPointerListIBM = NULL;
PFNGLCOLORPOINTERVINTELPROC agx_custom_glad_glColorPointervINTEL = NULL;
PFNGLCOLORSUBTABLEPROC agx_custom_glad_glColorSubTable = NULL;
PFNGLCOLORSUBTABLEEXTPROC agx_custom_glad_glColorSubTableEXT = NULL;
PFNGLCOLORTABLEPROC agx_custom_glad_glColorTable = NULL;
PFNGLCOLORTABLEEXTPROC agx_custom_glad_glColorTableEXT = NULL;
PFNGLCOLORTABLEPARAMETERFVPROC agx_custom_glad_glColorTableParameterfv = NULL;
PFNGLCOLORTABLEPARAMETERFVSGIPROC agx_custom_glad_glColorTableParameterfvSGI = NULL;
PFNGLCOLORTABLEPARAMETERIVPROC agx_custom_glad_glColorTableParameteriv = NULL;
PFNGLCOLORTABLEPARAMETERIVSGIPROC agx_custom_glad_glColorTableParameterivSGI = NULL;
PFNGLCOLORTABLESGIPROC agx_custom_glad_glColorTableSGI = NULL;
PFNGLCOMBINERINPUTNVPROC agx_custom_glad_glCombinerInputNV = NULL;
PFNGLCOMBINEROUTPUTNVPROC agx_custom_glad_glCombinerOutputNV = NULL;
PFNGLCOMBINERPARAMETERFNVPROC agx_custom_glad_glCombinerParameterfNV = NULL;
PFNGLCOMBINERPARAMETERFVNVPROC agx_custom_glad_glCombinerParameterfvNV = NULL;
PFNGLCOMBINERPARAMETERINVPROC agx_custom_glad_glCombinerParameteriNV = NULL;
PFNGLCOMBINERPARAMETERIVNVPROC agx_custom_glad_glCombinerParameterivNV = NULL;
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC agx_custom_glad_glCombinerStageParameterfvNV = NULL;
PFNGLCOMMANDLISTSEGMENTSNVPROC agx_custom_glad_glCommandListSegmentsNV = NULL;
PFNGLCOMPILECOMMANDLISTNVPROC agx_custom_glad_glCompileCommandListNV = NULL;
PFNGLCOMPILESHADERPROC agx_custom_glad_glCompileShader = NULL;
PFNGLCOMPILESHADERARBPROC agx_custom_glad_glCompileShaderARB = NULL;
PFNGLCOMPILESHADERINCLUDEARBPROC agx_custom_glad_glCompileShaderIncludeARB = NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC agx_custom_glad_glCompressedMultiTexImage1DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC agx_custom_glad_glCompressedMultiTexImage2DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC agx_custom_glad_glCompressedMultiTexImage3DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage1DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage2DEXT = NULL;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glCompressedMultiTexSubImage3DEXT = NULL;
PFNGLCOMPRESSEDTEXIMAGE1DPROC agx_custom_glad_glCompressedTexImage1D = NULL;
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC agx_custom_glad_glCompressedTexImage1DARB = NULL;
PFNGLCOMPRESSEDTEXIMAGE2DPROC agx_custom_glad_glCompressedTexImage2D = NULL;
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC agx_custom_glad_glCompressedTexImage2DARB = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DPROC agx_custom_glad_glCompressedTexImage3D = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC agx_custom_glad_glCompressedTexImage3DARB = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC agx_custom_glad_glCompressedTexSubImage1D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC agx_custom_glad_glCompressedTexSubImage1DARB = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC agx_custom_glad_glCompressedTexSubImage2D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC agx_custom_glad_glCompressedTexSubImage2DARB = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC agx_custom_glad_glCompressedTexSubImage3D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC agx_custom_glad_glCompressedTexSubImage3DARB = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC agx_custom_glad_glCompressedTextureImage1DEXT = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC agx_custom_glad_glCompressedTextureImage2DEXT = NULL;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC agx_custom_glad_glCompressedTextureImage3DEXT = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC agx_custom_glad_glCompressedTextureSubImage1D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glCompressedTextureSubImage1DEXT = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC agx_custom_glad_glCompressedTextureSubImage2D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glCompressedTextureSubImage2DEXT = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC agx_custom_glad_glCompressedTextureSubImage3D = NULL;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glCompressedTextureSubImage3DEXT = NULL;
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC agx_custom_glad_glConservativeRasterParameterfNV = NULL;
PFNGLCONSERVATIVERASTERPARAMETERINVPROC agx_custom_glad_glConservativeRasterParameteriNV = NULL;
PFNGLCONVOLUTIONFILTER1DPROC agx_custom_glad_glConvolutionFilter1D = NULL;
PFNGLCONVOLUTIONFILTER1DEXTPROC agx_custom_glad_glConvolutionFilter1DEXT = NULL;
PFNGLCONVOLUTIONFILTER2DPROC agx_custom_glad_glConvolutionFilter2D = NULL;
PFNGLCONVOLUTIONFILTER2DEXTPROC agx_custom_glad_glConvolutionFilter2DEXT = NULL;
PFNGLCONVOLUTIONPARAMETERFPROC agx_custom_glad_glConvolutionParameterf = NULL;
PFNGLCONVOLUTIONPARAMETERFEXTPROC agx_custom_glad_glConvolutionParameterfEXT = NULL;
PFNGLCONVOLUTIONPARAMETERFVPROC agx_custom_glad_glConvolutionParameterfv = NULL;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC agx_custom_glad_glConvolutionParameterfvEXT = NULL;
PFNGLCONVOLUTIONPARAMETERIPROC agx_custom_glad_glConvolutionParameteri = NULL;
PFNGLCONVOLUTIONPARAMETERIEXTPROC agx_custom_glad_glConvolutionParameteriEXT = NULL;
PFNGLCONVOLUTIONPARAMETERIVPROC agx_custom_glad_glConvolutionParameteriv = NULL;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC agx_custom_glad_glConvolutionParameterivEXT = NULL;
PFNGLCONVOLUTIONPARAMETERXOESPROC agx_custom_glad_glConvolutionParameterxOES = NULL;
PFNGLCONVOLUTIONPARAMETERXVOESPROC agx_custom_glad_glConvolutionParameterxvOES = NULL;
PFNGLCOPYBUFFERSUBDATAPROC agx_custom_glad_glCopyBufferSubData = NULL;
PFNGLCOPYCOLORSUBTABLEPROC agx_custom_glad_glCopyColorSubTable = NULL;
PFNGLCOPYCOLORSUBTABLEEXTPROC agx_custom_glad_glCopyColorSubTableEXT = NULL;
PFNGLCOPYCOLORTABLEPROC agx_custom_glad_glCopyColorTable = NULL;
PFNGLCOPYCOLORTABLESGIPROC agx_custom_glad_glCopyColorTableSGI = NULL;
PFNGLCOPYCONVOLUTIONFILTER1DPROC agx_custom_glad_glCopyConvolutionFilter1D = NULL;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC agx_custom_glad_glCopyConvolutionFilter1DEXT = NULL;
PFNGLCOPYCONVOLUTIONFILTER2DPROC agx_custom_glad_glCopyConvolutionFilter2D = NULL;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC agx_custom_glad_glCopyConvolutionFilter2DEXT = NULL;
PFNGLCOPYIMAGESUBDATAPROC agx_custom_glad_glCopyImageSubData = NULL;
PFNGLCOPYIMAGESUBDATANVPROC agx_custom_glad_glCopyImageSubDataNV = NULL;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC agx_custom_glad_glCopyMultiTexImage1DEXT = NULL;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC agx_custom_glad_glCopyMultiTexImage2DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glCopyMultiTexSubImage1DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glCopyMultiTexSubImage2DEXT = NULL;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glCopyMultiTexSubImage3DEXT = NULL;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC agx_custom_glad_glCopyNamedBufferSubData = NULL;
PFNGLCOPYPATHNVPROC agx_custom_glad_glCopyPathNV = NULL;
PFNGLCOPYPIXELSPROC agx_custom_glad_glCopyPixels = NULL;
PFNGLCOPYTEXIMAGE1DPROC agx_custom_glad_glCopyTexImage1D = NULL;
PFNGLCOPYTEXIMAGE1DEXTPROC agx_custom_glad_glCopyTexImage1DEXT = NULL;
PFNGLCOPYTEXIMAGE2DPROC agx_custom_glad_glCopyTexImage2D = NULL;
PFNGLCOPYTEXIMAGE2DEXTPROC agx_custom_glad_glCopyTexImage2DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE1DPROC agx_custom_glad_glCopyTexSubImage1D = NULL;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC agx_custom_glad_glCopyTexSubImage1DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE2DPROC agx_custom_glad_glCopyTexSubImage2D = NULL;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC agx_custom_glad_glCopyTexSubImage2DEXT = NULL;
PFNGLCOPYTEXSUBIMAGE3DPROC agx_custom_glad_glCopyTexSubImage3D = NULL;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC agx_custom_glad_glCopyTexSubImage3DEXT = NULL;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC agx_custom_glad_glCopyTextureImage1DEXT = NULL;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC agx_custom_glad_glCopyTextureImage2DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE1DPROC agx_custom_glad_glCopyTextureSubImage1D = NULL;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glCopyTextureSubImage1DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE2DPROC agx_custom_glad_glCopyTextureSubImage2D = NULL;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glCopyTextureSubImage2DEXT = NULL;
PFNGLCOPYTEXTURESUBIMAGE3DPROC agx_custom_glad_glCopyTextureSubImage3D = NULL;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glCopyTextureSubImage3DEXT = NULL;
PFNGLCOVERFILLPATHINSTANCEDNVPROC agx_custom_glad_glCoverFillPathInstancedNV = NULL;
PFNGLCOVERFILLPATHNVPROC agx_custom_glad_glCoverFillPathNV = NULL;
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glCoverStrokePathInstancedNV = NULL;
PFNGLCOVERSTROKEPATHNVPROC agx_custom_glad_glCoverStrokePathNV = NULL;
PFNGLCOVERAGEMODULATIONNVPROC agx_custom_glad_glCoverageModulationNV = NULL;
PFNGLCOVERAGEMODULATIONTABLENVPROC agx_custom_glad_glCoverageModulationTableNV = NULL;
PFNGLCREATEBUFFERSPROC agx_custom_glad_glCreateBuffers = NULL;
PFNGLCREATECOMMANDLISTSNVPROC agx_custom_glad_glCreateCommandListsNV = NULL;
PFNGLCREATEFRAMEBUFFERSPROC agx_custom_glad_glCreateFramebuffers = NULL;
PFNGLCREATEMEMORYOBJECTSEXTPROC agx_custom_glad_glCreateMemoryObjectsEXT = NULL;
PFNGLCREATEPERFQUERYINTELPROC agx_custom_glad_glCreatePerfQueryINTEL = NULL;
PFNGLCREATEPROGRAMPROC agx_custom_glad_glCreateProgram = NULL;
PFNGLCREATEPROGRAMOBJECTARBPROC agx_custom_glad_glCreateProgramObjectARB = NULL;
PFNGLCREATEPROGRAMPIPELINESPROC agx_custom_glad_glCreateProgramPipelines = NULL;
PFNGLCREATEPROGRESSFENCENVXPROC agx_custom_glad_glCreateProgressFenceNVX = NULL;
PFNGLCREATEQUERIESPROC agx_custom_glad_glCreateQueries = NULL;
PFNGLCREATERENDERBUFFERSPROC agx_custom_glad_glCreateRenderbuffers = NULL;
PFNGLCREATESAMPLERSPROC agx_custom_glad_glCreateSamplers = NULL;
PFNGLCREATESEMAPHORESNVPROC agx_custom_glad_glCreateSemaphoresNV = NULL;
PFNGLCREATESHADERPROC agx_custom_glad_glCreateShader = NULL;
PFNGLCREATESHADEROBJECTARBPROC agx_custom_glad_glCreateShaderObjectARB = NULL;
PFNGLCREATESHADERPROGRAMEXTPROC agx_custom_glad_glCreateShaderProgramEXT = NULL;
PFNGLCREATESHADERPROGRAMVPROC agx_custom_glad_glCreateShaderProgramv = NULL;
PFNGLCREATESTATESNVPROC agx_custom_glad_glCreateStatesNV = NULL;
PFNGLCREATESYNCFROMCLEVENTARBPROC agx_custom_glad_glCreateSyncFromCLeventARB = NULL;
PFNGLCREATETEXTURESPROC agx_custom_glad_glCreateTextures = NULL;
PFNGLCREATETRANSFORMFEEDBACKSPROC agx_custom_glad_glCreateTransformFeedbacks = NULL;
PFNGLCREATEVERTEXARRAYSPROC agx_custom_glad_glCreateVertexArrays = NULL;
PFNGLCULLFACEPROC agx_custom_glad_glCullFace = NULL;
PFNGLCULLPARAMETERDVEXTPROC agx_custom_glad_glCullParameterdvEXT = NULL;
PFNGLCULLPARAMETERFVEXTPROC agx_custom_glad_glCullParameterfvEXT = NULL;
PFNGLCURRENTPALETTEMATRIXARBPROC agx_custom_glad_glCurrentPaletteMatrixARB = NULL;
PFNGLDEBUGMESSAGECALLBACKPROC agx_custom_glad_glDebugMessageCallback = NULL;
PFNGLDEBUGMESSAGECALLBACKAMDPROC agx_custom_glad_glDebugMessageCallbackAMD = NULL;
PFNGLDEBUGMESSAGECALLBACKARBPROC agx_custom_glad_glDebugMessageCallbackARB = NULL;
PFNGLDEBUGMESSAGECONTROLPROC agx_custom_glad_glDebugMessageControl = NULL;
PFNGLDEBUGMESSAGECONTROLARBPROC agx_custom_glad_glDebugMessageControlARB = NULL;
PFNGLDEBUGMESSAGEENABLEAMDPROC agx_custom_glad_glDebugMessageEnableAMD = NULL;
PFNGLDEBUGMESSAGEINSERTPROC agx_custom_glad_glDebugMessageInsert = NULL;
PFNGLDEBUGMESSAGEINSERTAMDPROC agx_custom_glad_glDebugMessageInsertAMD = NULL;
PFNGLDEBUGMESSAGEINSERTARBPROC agx_custom_glad_glDebugMessageInsertARB = NULL;
PFNGLDEFORMSGIXPROC agx_custom_glad_glDeformSGIX = NULL;
PFNGLDEFORMATIONMAP3DSGIXPROC agx_custom_glad_glDeformationMap3dSGIX = NULL;
PFNGLDEFORMATIONMAP3FSGIXPROC agx_custom_glad_glDeformationMap3fSGIX = NULL;
PFNGLDELETEASYNCMARKERSSGIXPROC agx_custom_glad_glDeleteAsyncMarkersSGIX = NULL;
PFNGLDELETEBUFFERSPROC agx_custom_glad_glDeleteBuffers = NULL;
PFNGLDELETEBUFFERSARBPROC agx_custom_glad_glDeleteBuffersARB = NULL;
PFNGLDELETECOMMANDLISTSNVPROC agx_custom_glad_glDeleteCommandListsNV = NULL;
PFNGLDELETEFENCESAPPLEPROC agx_custom_glad_glDeleteFencesAPPLE = NULL;
PFNGLDELETEFENCESNVPROC agx_custom_glad_glDeleteFencesNV = NULL;
PFNGLDELETEFRAGMENTSHADERATIPROC agx_custom_glad_glDeleteFragmentShaderATI = NULL;
PFNGLDELETEFRAMEBUFFERSPROC agx_custom_glad_glDeleteFramebuffers = NULL;
PFNGLDELETEFRAMEBUFFERSEXTPROC agx_custom_glad_glDeleteFramebuffersEXT = NULL;
PFNGLDELETELISTSPROC agx_custom_glad_glDeleteLists = NULL;
PFNGLDELETEMEMORYOBJECTSEXTPROC agx_custom_glad_glDeleteMemoryObjectsEXT = NULL;
PFNGLDELETENAMEDSTRINGARBPROC agx_custom_glad_glDeleteNamedStringARB = NULL;
PFNGLDELETENAMESAMDPROC agx_custom_glad_glDeleteNamesAMD = NULL;
PFNGLDELETEOBJECTARBPROC agx_custom_glad_glDeleteObjectARB = NULL;
PFNGLDELETEOCCLUSIONQUERIESNVPROC agx_custom_glad_glDeleteOcclusionQueriesNV = NULL;
PFNGLDELETEPATHSNVPROC agx_custom_glad_glDeletePathsNV = NULL;
PFNGLDELETEPERFMONITORSAMDPROC agx_custom_glad_glDeletePerfMonitorsAMD = NULL;
PFNGLDELETEPERFQUERYINTELPROC agx_custom_glad_glDeletePerfQueryINTEL = NULL;
PFNGLDELETEPROGRAMPROC agx_custom_glad_glDeleteProgram = NULL;
PFNGLDELETEPROGRAMPIPELINESPROC agx_custom_glad_glDeleteProgramPipelines = NULL;
PFNGLDELETEPROGRAMSARBPROC agx_custom_glad_glDeleteProgramsARB = NULL;
PFNGLDELETEPROGRAMSNVPROC agx_custom_glad_glDeleteProgramsNV = NULL;
PFNGLDELETEQUERIESPROC agx_custom_glad_glDeleteQueries = NULL;
PFNGLDELETEQUERIESARBPROC agx_custom_glad_glDeleteQueriesARB = NULL;
PFNGLDELETEQUERYRESOURCETAGNVPROC agx_custom_glad_glDeleteQueryResourceTagNV = NULL;
PFNGLDELETERENDERBUFFERSPROC agx_custom_glad_glDeleteRenderbuffers = NULL;
PFNGLDELETERENDERBUFFERSEXTPROC agx_custom_glad_glDeleteRenderbuffersEXT = NULL;
PFNGLDELETESAMPLERSPROC agx_custom_glad_glDeleteSamplers = NULL;
PFNGLDELETESEMAPHORESEXTPROC agx_custom_glad_glDeleteSemaphoresEXT = NULL;
PFNGLDELETESHADERPROC agx_custom_glad_glDeleteShader = NULL;
PFNGLDELETESTATESNVPROC agx_custom_glad_glDeleteStatesNV = NULL;
PFNGLDELETESYNCPROC agx_custom_glad_glDeleteSync = NULL;
PFNGLDELETETEXTURESPROC agx_custom_glad_glDeleteTextures = NULL;
PFNGLDELETETEXTURESEXTPROC agx_custom_glad_glDeleteTexturesEXT = NULL;
PFNGLDELETETRANSFORMFEEDBACKSPROC agx_custom_glad_glDeleteTransformFeedbacks = NULL;
PFNGLDELETETRANSFORMFEEDBACKSNVPROC agx_custom_glad_glDeleteTransformFeedbacksNV = NULL;
PFNGLDELETEVERTEXARRAYSPROC agx_custom_glad_glDeleteVertexArrays = NULL;
PFNGLDELETEVERTEXARRAYSAPPLEPROC agx_custom_glad_glDeleteVertexArraysAPPLE = NULL;
PFNGLDELETEVERTEXSHADEREXTPROC agx_custom_glad_glDeleteVertexShaderEXT = NULL;
PFNGLDEPTHBOUNDSEXTPROC agx_custom_glad_glDepthBoundsEXT = NULL;
PFNGLDEPTHBOUNDSDNVPROC agx_custom_glad_glDepthBoundsdNV = NULL;
PFNGLDEPTHFUNCPROC agx_custom_glad_glDepthFunc = NULL;
PFNGLDEPTHMASKPROC agx_custom_glad_glDepthMask = NULL;
PFNGLDEPTHRANGEPROC agx_custom_glad_glDepthRange = NULL;
PFNGLDEPTHRANGEARRAYDVNVPROC agx_custom_glad_glDepthRangeArraydvNV = NULL;
PFNGLDEPTHRANGEARRAYVPROC agx_custom_glad_glDepthRangeArrayv = NULL;
PFNGLDEPTHRANGEINDEXEDPROC agx_custom_glad_glDepthRangeIndexed = NULL;
PFNGLDEPTHRANGEINDEXEDDNVPROC agx_custom_glad_glDepthRangeIndexeddNV = NULL;
PFNGLDEPTHRANGEDNVPROC agx_custom_glad_glDepthRangedNV = NULL;
PFNGLDEPTHRANGEFPROC agx_custom_glad_glDepthRangef = NULL;
PFNGLDEPTHRANGEFOESPROC agx_custom_glad_glDepthRangefOES = NULL;
PFNGLDEPTHRANGEXOESPROC agx_custom_glad_glDepthRangexOES = NULL;
PFNGLDETACHOBJECTARBPROC agx_custom_glad_glDetachObjectARB = NULL;
PFNGLDETACHSHADERPROC agx_custom_glad_glDetachShader = NULL;
PFNGLDETAILTEXFUNCSGISPROC agx_custom_glad_glDetailTexFuncSGIS = NULL;
PFNGLDISABLEPROC agx_custom_glad_glDisable = NULL;
PFNGLDISABLECLIENTSTATEPROC agx_custom_glad_glDisableClientState = NULL;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC agx_custom_glad_glDisableClientStateIndexedEXT = NULL;
PFNGLDISABLECLIENTSTATEIEXTPROC agx_custom_glad_glDisableClientStateiEXT = NULL;
PFNGLDISABLEINDEXEDEXTPROC agx_custom_glad_glDisableIndexedEXT = NULL;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC agx_custom_glad_glDisableVariantClientStateEXT = NULL;
PFNGLDISABLEVERTEXARRAYATTRIBPROC agx_custom_glad_glDisableVertexArrayAttrib = NULL;
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC agx_custom_glad_glDisableVertexArrayAttribEXT = NULL;
PFNGLDISABLEVERTEXARRAYEXTPROC agx_custom_glad_glDisableVertexArrayEXT = NULL;
PFNGLDISABLEVERTEXATTRIBAPPLEPROC agx_custom_glad_glDisableVertexAttribAPPLE = NULL;
PFNGLDISABLEVERTEXATTRIBARRAYPROC agx_custom_glad_glDisableVertexAttribArray = NULL;
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC agx_custom_glad_glDisableVertexAttribArrayARB = NULL;
PFNGLDISABLEIPROC agx_custom_glad_glDisablei = NULL;
PFNGLDISPATCHCOMPUTEPROC agx_custom_glad_glDispatchCompute = NULL;
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC agx_custom_glad_glDispatchComputeGroupSizeARB = NULL;
PFNGLDISPATCHCOMPUTEINDIRECTPROC agx_custom_glad_glDispatchComputeIndirect = NULL;
PFNGLDRAWARRAYSPROC agx_custom_glad_glDrawArrays = NULL;
PFNGLDRAWARRAYSEXTPROC agx_custom_glad_glDrawArraysEXT = NULL;
PFNGLDRAWARRAYSINDIRECTPROC agx_custom_glad_glDrawArraysIndirect = NULL;
PFNGLDRAWARRAYSINSTANCEDPROC agx_custom_glad_glDrawArraysInstanced = NULL;
PFNGLDRAWARRAYSINSTANCEDARBPROC agx_custom_glad_glDrawArraysInstancedARB = NULL;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC agx_custom_glad_glDrawArraysInstancedBaseInstance = NULL;
PFNGLDRAWARRAYSINSTANCEDEXTPROC agx_custom_glad_glDrawArraysInstancedEXT = NULL;
PFNGLDRAWBUFFERPROC agx_custom_glad_glDrawBuffer = NULL;
PFNGLDRAWBUFFERSPROC agx_custom_glad_glDrawBuffers = NULL;
PFNGLDRAWBUFFERSARBPROC agx_custom_glad_glDrawBuffersARB = NULL;
PFNGLDRAWBUFFERSATIPROC agx_custom_glad_glDrawBuffersATI = NULL;
PFNGLDRAWCOMMANDSADDRESSNVPROC agx_custom_glad_glDrawCommandsAddressNV = NULL;
PFNGLDRAWCOMMANDSNVPROC agx_custom_glad_glDrawCommandsNV = NULL;
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC agx_custom_glad_glDrawCommandsStatesAddressNV = NULL;
PFNGLDRAWCOMMANDSSTATESNVPROC agx_custom_glad_glDrawCommandsStatesNV = NULL;
PFNGLDRAWELEMENTARRAYAPPLEPROC agx_custom_glad_glDrawElementArrayAPPLE = NULL;
PFNGLDRAWELEMENTARRAYATIPROC agx_custom_glad_glDrawElementArrayATI = NULL;
PFNGLDRAWELEMENTSPROC agx_custom_glad_glDrawElements = NULL;
PFNGLDRAWELEMENTSBASEVERTEXPROC agx_custom_glad_glDrawElementsBaseVertex = NULL;
PFNGLDRAWELEMENTSINDIRECTPROC agx_custom_glad_glDrawElementsIndirect = NULL;
PFNGLDRAWELEMENTSINSTANCEDPROC agx_custom_glad_glDrawElementsInstanced = NULL;
PFNGLDRAWELEMENTSINSTANCEDARBPROC agx_custom_glad_glDrawElementsInstancedARB = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC agx_custom_glad_glDrawElementsInstancedBaseInstance = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC agx_custom_glad_glDrawElementsInstancedBaseVertex = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC agx_custom_glad_glDrawElementsInstancedBaseVertexBaseInstance = NULL;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC agx_custom_glad_glDrawElementsInstancedEXT = NULL;
PFNGLDRAWMESHARRAYSSUNPROC agx_custom_glad_glDrawMeshArraysSUN = NULL;
PFNGLDRAWMESHTASKSINDIRECTNVPROC agx_custom_glad_glDrawMeshTasksIndirectNV = NULL;
PFNGLDRAWMESHTASKSNVPROC agx_custom_glad_glDrawMeshTasksNV = NULL;
PFNGLDRAWPIXELSPROC agx_custom_glad_glDrawPixels = NULL;
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC agx_custom_glad_glDrawRangeElementArrayAPPLE = NULL;
PFNGLDRAWRANGEELEMENTARRAYATIPROC agx_custom_glad_glDrawRangeElementArrayATI = NULL;
PFNGLDRAWRANGEELEMENTSPROC agx_custom_glad_glDrawRangeElements = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC agx_custom_glad_glDrawRangeElementsBaseVertex = NULL;
PFNGLDRAWRANGEELEMENTSEXTPROC agx_custom_glad_glDrawRangeElementsEXT = NULL;
PFNGLDRAWTEXTURENVPROC agx_custom_glad_glDrawTextureNV = NULL;
PFNGLDRAWTRANSFORMFEEDBACKPROC agx_custom_glad_glDrawTransformFeedback = NULL;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC agx_custom_glad_glDrawTransformFeedbackInstanced = NULL;
PFNGLDRAWTRANSFORMFEEDBACKNVPROC agx_custom_glad_glDrawTransformFeedbackNV = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC agx_custom_glad_glDrawTransformFeedbackStream = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC agx_custom_glad_glDrawTransformFeedbackStreamInstanced = NULL;
PFNGLDRAWVKIMAGENVPROC agx_custom_glad_glDrawVkImageNV = NULL;
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC agx_custom_glad_glEGLImageTargetTexStorageEXT = NULL;
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC agx_custom_glad_glEGLImageTargetTextureStorageEXT = NULL;
PFNGLEDGEFLAGPROC agx_custom_glad_glEdgeFlag = NULL;
PFNGLEDGEFLAGFORMATNVPROC agx_custom_glad_glEdgeFlagFormatNV = NULL;
PFNGLEDGEFLAGPOINTERPROC agx_custom_glad_glEdgeFlagPointer = NULL;
PFNGLEDGEFLAGPOINTEREXTPROC agx_custom_glad_glEdgeFlagPointerEXT = NULL;
PFNGLEDGEFLAGPOINTERLISTIBMPROC agx_custom_glad_glEdgeFlagPointerListIBM = NULL;
PFNGLEDGEFLAGVPROC agx_custom_glad_glEdgeFlagv = NULL;
PFNGLELEMENTPOINTERAPPLEPROC agx_custom_glad_glElementPointerAPPLE = NULL;
PFNGLELEMENTPOINTERATIPROC agx_custom_glad_glElementPointerATI = NULL;
PFNGLENABLEPROC agx_custom_glad_glEnable = NULL;
PFNGLENABLECLIENTSTATEPROC agx_custom_glad_glEnableClientState = NULL;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC agx_custom_glad_glEnableClientStateIndexedEXT = NULL;
PFNGLENABLECLIENTSTATEIEXTPROC agx_custom_glad_glEnableClientStateiEXT = NULL;
PFNGLENABLEINDEXEDEXTPROC agx_custom_glad_glEnableIndexedEXT = NULL;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC agx_custom_glad_glEnableVariantClientStateEXT = NULL;
PFNGLENABLEVERTEXARRAYATTRIBPROC agx_custom_glad_glEnableVertexArrayAttrib = NULL;
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC agx_custom_glad_glEnableVertexArrayAttribEXT = NULL;
PFNGLENABLEVERTEXARRAYEXTPROC agx_custom_glad_glEnableVertexArrayEXT = NULL;
PFNGLENABLEVERTEXATTRIBAPPLEPROC agx_custom_glad_glEnableVertexAttribAPPLE = NULL;
PFNGLENABLEVERTEXATTRIBARRAYPROC agx_custom_glad_glEnableVertexAttribArray = NULL;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC agx_custom_glad_glEnableVertexAttribArrayARB = NULL;
PFNGLENABLEIPROC agx_custom_glad_glEnablei = NULL;
PFNGLENDPROC agx_custom_glad_glEnd = NULL;
PFNGLENDCONDITIONALRENDERPROC agx_custom_glad_glEndConditionalRender = NULL;
PFNGLENDCONDITIONALRENDERNVPROC agx_custom_glad_glEndConditionalRenderNV = NULL;
PFNGLENDCONDITIONALRENDERNVXPROC agx_custom_glad_glEndConditionalRenderNVX = NULL;
PFNGLENDFRAGMENTSHADERATIPROC agx_custom_glad_glEndFragmentShaderATI = NULL;
PFNGLENDLISTPROC agx_custom_glad_glEndList = NULL;
PFNGLENDOCCLUSIONQUERYNVPROC agx_custom_glad_glEndOcclusionQueryNV = NULL;
PFNGLENDPERFMONITORAMDPROC agx_custom_glad_glEndPerfMonitorAMD = NULL;
PFNGLENDPERFQUERYINTELPROC agx_custom_glad_glEndPerfQueryINTEL = NULL;
PFNGLENDQUERYPROC agx_custom_glad_glEndQuery = NULL;
PFNGLENDQUERYARBPROC agx_custom_glad_glEndQueryARB = NULL;
PFNGLENDQUERYINDEXEDPROC agx_custom_glad_glEndQueryIndexed = NULL;
PFNGLENDTRANSFORMFEEDBACKPROC agx_custom_glad_glEndTransformFeedback = NULL;
PFNGLENDTRANSFORMFEEDBACKEXTPROC agx_custom_glad_glEndTransformFeedbackEXT = NULL;
PFNGLENDTRANSFORMFEEDBACKNVPROC agx_custom_glad_glEndTransformFeedbackNV = NULL;
PFNGLENDVERTEXSHADEREXTPROC agx_custom_glad_glEndVertexShaderEXT = NULL;
PFNGLENDVIDEOCAPTURENVPROC agx_custom_glad_glEndVideoCaptureNV = NULL;
PFNGLEVALCOORD1DPROC agx_custom_glad_glEvalCoord1d = NULL;
PFNGLEVALCOORD1DVPROC agx_custom_glad_glEvalCoord1dv = NULL;
PFNGLEVALCOORD1FPROC agx_custom_glad_glEvalCoord1f = NULL;
PFNGLEVALCOORD1FVPROC agx_custom_glad_glEvalCoord1fv = NULL;
PFNGLEVALCOORD1XOESPROC agx_custom_glad_glEvalCoord1xOES = NULL;
PFNGLEVALCOORD1XVOESPROC agx_custom_glad_glEvalCoord1xvOES = NULL;
PFNGLEVALCOORD2DPROC agx_custom_glad_glEvalCoord2d = NULL;
PFNGLEVALCOORD2DVPROC agx_custom_glad_glEvalCoord2dv = NULL;
PFNGLEVALCOORD2FPROC agx_custom_glad_glEvalCoord2f = NULL;
PFNGLEVALCOORD2FVPROC agx_custom_glad_glEvalCoord2fv = NULL;
PFNGLEVALCOORD2XOESPROC agx_custom_glad_glEvalCoord2xOES = NULL;
PFNGLEVALCOORD2XVOESPROC agx_custom_glad_glEvalCoord2xvOES = NULL;
PFNGLEVALMAPSNVPROC agx_custom_glad_glEvalMapsNV = NULL;
PFNGLEVALMESH1PROC agx_custom_glad_glEvalMesh1 = NULL;
PFNGLEVALMESH2PROC agx_custom_glad_glEvalMesh2 = NULL;
PFNGLEVALPOINT1PROC agx_custom_glad_glEvalPoint1 = NULL;
PFNGLEVALPOINT2PROC agx_custom_glad_glEvalPoint2 = NULL;
PFNGLEVALUATEDEPTHVALUESARBPROC agx_custom_glad_glEvaluateDepthValuesARB = NULL;
PFNGLEXECUTEPROGRAMNVPROC agx_custom_glad_glExecuteProgramNV = NULL;
PFNGLEXTRACTCOMPONENTEXTPROC agx_custom_glad_glExtractComponentEXT = NULL;
PFNGLFEEDBACKBUFFERPROC agx_custom_glad_glFeedbackBuffer = NULL;
PFNGLFEEDBACKBUFFERXOESPROC agx_custom_glad_glFeedbackBufferxOES = NULL;
PFNGLFENCESYNCPROC agx_custom_glad_glFenceSync = NULL;
PFNGLFINALCOMBINERINPUTNVPROC agx_custom_glad_glFinalCombinerInputNV = NULL;
PFNGLFINISHPROC agx_custom_glad_glFinish = NULL;
PFNGLFINISHASYNCSGIXPROC agx_custom_glad_glFinishAsyncSGIX = NULL;
PFNGLFINISHFENCEAPPLEPROC agx_custom_glad_glFinishFenceAPPLE = NULL;
PFNGLFINISHFENCENVPROC agx_custom_glad_glFinishFenceNV = NULL;
PFNGLFINISHOBJECTAPPLEPROC agx_custom_glad_glFinishObjectAPPLE = NULL;
PFNGLFINISHTEXTURESUNXPROC agx_custom_glad_glFinishTextureSUNX = NULL;
PFNGLFLUSHPROC agx_custom_glad_glFlush = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC agx_custom_glad_glFlushMappedBufferRange = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC agx_custom_glad_glFlushMappedBufferRangeAPPLE = NULL;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC agx_custom_glad_glFlushMappedNamedBufferRange = NULL;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC agx_custom_glad_glFlushMappedNamedBufferRangeEXT = NULL;
PFNGLFLUSHPIXELDATARANGENVPROC agx_custom_glad_glFlushPixelDataRangeNV = NULL;
PFNGLFLUSHRASTERSGIXPROC agx_custom_glad_glFlushRasterSGIX = NULL;
PFNGLFLUSHSTATICDATAIBMPROC agx_custom_glad_glFlushStaticDataIBM = NULL;
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC agx_custom_glad_glFlushVertexArrayRangeAPPLE = NULL;
PFNGLFLUSHVERTEXARRAYRANGENVPROC agx_custom_glad_glFlushVertexArrayRangeNV = NULL;
PFNGLFOGCOORDFORMATNVPROC agx_custom_glad_glFogCoordFormatNV = NULL;
PFNGLFOGCOORDPOINTERPROC agx_custom_glad_glFogCoordPointer = NULL;
PFNGLFOGCOORDPOINTEREXTPROC agx_custom_glad_glFogCoordPointerEXT = NULL;
PFNGLFOGCOORDPOINTERLISTIBMPROC agx_custom_glad_glFogCoordPointerListIBM = NULL;
PFNGLFOGCOORDDPROC agx_custom_glad_glFogCoordd = NULL;
PFNGLFOGCOORDDEXTPROC agx_custom_glad_glFogCoorddEXT = NULL;
PFNGLFOGCOORDDVPROC agx_custom_glad_glFogCoorddv = NULL;
PFNGLFOGCOORDDVEXTPROC agx_custom_glad_glFogCoorddvEXT = NULL;
PFNGLFOGCOORDFPROC agx_custom_glad_glFogCoordf = NULL;
PFNGLFOGCOORDFEXTPROC agx_custom_glad_glFogCoordfEXT = NULL;
PFNGLFOGCOORDFVPROC agx_custom_glad_glFogCoordfv = NULL;
PFNGLFOGCOORDFVEXTPROC agx_custom_glad_glFogCoordfvEXT = NULL;
PFNGLFOGCOORDHNVPROC agx_custom_glad_glFogCoordhNV = NULL;
PFNGLFOGCOORDHVNVPROC agx_custom_glad_glFogCoordhvNV = NULL;
PFNGLFOGFUNCSGISPROC agx_custom_glad_glFogFuncSGIS = NULL;
PFNGLFOGFPROC agx_custom_glad_glFogf = NULL;
PFNGLFOGFVPROC agx_custom_glad_glFogfv = NULL;
PFNGLFOGIPROC agx_custom_glad_glFogi = NULL;
PFNGLFOGIVPROC agx_custom_glad_glFogiv = NULL;
PFNGLFOGXOESPROC agx_custom_glad_glFogxOES = NULL;
PFNGLFOGXVOESPROC agx_custom_glad_glFogxvOES = NULL;
PFNGLFRAGMENTCOLORMATERIALSGIXPROC agx_custom_glad_glFragmentColorMaterialSGIX = NULL;
PFNGLFRAGMENTCOVERAGECOLORNVPROC agx_custom_glad_glFragmentCoverageColorNV = NULL;
PFNGLFRAGMENTLIGHTMODELFSGIXPROC agx_custom_glad_glFragmentLightModelfSGIX = NULL;
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC agx_custom_glad_glFragmentLightModelfvSGIX = NULL;
PFNGLFRAGMENTLIGHTMODELISGIXPROC agx_custom_glad_glFragmentLightModeliSGIX = NULL;
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC agx_custom_glad_glFragmentLightModelivSGIX = NULL;
PFNGLFRAGMENTLIGHTFSGIXPROC agx_custom_glad_glFragmentLightfSGIX = NULL;
PFNGLFRAGMENTLIGHTFVSGIXPROC agx_custom_glad_glFragmentLightfvSGIX = NULL;
PFNGLFRAGMENTLIGHTISGIXPROC agx_custom_glad_glFragmentLightiSGIX = NULL;
PFNGLFRAGMENTLIGHTIVSGIXPROC agx_custom_glad_glFragmentLightivSGIX = NULL;
PFNGLFRAGMENTMATERIALFSGIXPROC agx_custom_glad_glFragmentMaterialfSGIX = NULL;
PFNGLFRAGMENTMATERIALFVSGIXPROC agx_custom_glad_glFragmentMaterialfvSGIX = NULL;
PFNGLFRAGMENTMATERIALISGIXPROC agx_custom_glad_glFragmentMaterialiSGIX = NULL;
PFNGLFRAGMENTMATERIALIVSGIXPROC agx_custom_glad_glFragmentMaterialivSGIX = NULL;
PFNGLFRAMETERMINATORGREMEDYPROC agx_custom_glad_glFrameTerminatorGREMEDY = NULL;
PFNGLFRAMEZOOMSGIXPROC agx_custom_glad_glFrameZoomSGIX = NULL;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC agx_custom_glad_glFramebufferDrawBufferEXT = NULL;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC agx_custom_glad_glFramebufferDrawBuffersEXT = NULL;
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC agx_custom_glad_glFramebufferFetchBarrierEXT = NULL;
PFNGLFRAMEBUFFERPARAMETERIPROC agx_custom_glad_glFramebufferParameteri = NULL;
PFNGLFRAMEBUFFERPARAMETERIMESAPROC agx_custom_glad_glFramebufferParameteriMESA = NULL;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC agx_custom_glad_glFramebufferReadBufferEXT = NULL;
PFNGLFRAMEBUFFERRENDERBUFFERPROC agx_custom_glad_glFramebufferRenderbuffer = NULL;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC agx_custom_glad_glFramebufferRenderbufferEXT = NULL;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC agx_custom_glad_glFramebufferSampleLocationsfvARB = NULL;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glFramebufferSampleLocationsfvNV = NULL;
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC agx_custom_glad_glFramebufferSamplePositionsfvAMD = NULL;
PFNGLFRAMEBUFFERTEXTUREPROC agx_custom_glad_glFramebufferTexture = NULL;
PFNGLFRAMEBUFFERTEXTURE1DPROC agx_custom_glad_glFramebufferTexture1D = NULL;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC agx_custom_glad_glFramebufferTexture1DEXT = NULL;
PFNGLFRAMEBUFFERTEXTURE2DPROC agx_custom_glad_glFramebufferTexture2D = NULL;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC agx_custom_glad_glFramebufferTexture2DEXT = NULL;
PFNGLFRAMEBUFFERTEXTURE3DPROC agx_custom_glad_glFramebufferTexture3D = NULL;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC agx_custom_glad_glFramebufferTexture3DEXT = NULL;
PFNGLFRAMEBUFFERTEXTUREARBPROC agx_custom_glad_glFramebufferTextureARB = NULL;
PFNGLFRAMEBUFFERTEXTUREEXTPROC agx_custom_glad_glFramebufferTextureEXT = NULL;
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC agx_custom_glad_glFramebufferTextureFaceARB = NULL;
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC agx_custom_glad_glFramebufferTextureFaceEXT = NULL;
PFNGLFRAMEBUFFERTEXTURELAYERPROC agx_custom_glad_glFramebufferTextureLayer = NULL;
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC agx_custom_glad_glFramebufferTextureLayerARB = NULL;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC agx_custom_glad_glFramebufferTextureLayerEXT = NULL;
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC agx_custom_glad_glFramebufferTextureMultiviewOVR = NULL;
PFNGLFREEOBJECTBUFFERATIPROC agx_custom_glad_glFreeObjectBufferATI = NULL;
PFNGLFRONTFACEPROC agx_custom_glad_glFrontFace = NULL;
PFNGLFRUSTUMPROC agx_custom_glad_glFrustum = NULL;
PFNGLFRUSTUMFOESPROC agx_custom_glad_glFrustumfOES = NULL;
PFNGLFRUSTUMXOESPROC agx_custom_glad_glFrustumxOES = NULL;
PFNGLGENASYNCMARKERSSGIXPROC agx_custom_glad_glGenAsyncMarkersSGIX = NULL;
PFNGLGENBUFFERSPROC agx_custom_glad_glGenBuffers = NULL;
PFNGLGENBUFFERSARBPROC agx_custom_glad_glGenBuffersARB = NULL;
PFNGLGENFENCESAPPLEPROC agx_custom_glad_glGenFencesAPPLE = NULL;
PFNGLGENFENCESNVPROC agx_custom_glad_glGenFencesNV = NULL;
PFNGLGENFRAGMENTSHADERSATIPROC agx_custom_glad_glGenFragmentShadersATI = NULL;
PFNGLGENFRAMEBUFFERSPROC agx_custom_glad_glGenFramebuffers = NULL;
PFNGLGENFRAMEBUFFERSEXTPROC agx_custom_glad_glGenFramebuffersEXT = NULL;
PFNGLGENLISTSPROC agx_custom_glad_glGenLists = NULL;
PFNGLGENNAMESAMDPROC agx_custom_glad_glGenNamesAMD = NULL;
PFNGLGENOCCLUSIONQUERIESNVPROC agx_custom_glad_glGenOcclusionQueriesNV = NULL;
PFNGLGENPATHSNVPROC agx_custom_glad_glGenPathsNV = NULL;
PFNGLGENPERFMONITORSAMDPROC agx_custom_glad_glGenPerfMonitorsAMD = NULL;
PFNGLGENPROGRAMPIPELINESPROC agx_custom_glad_glGenProgramPipelines = NULL;
PFNGLGENPROGRAMSARBPROC agx_custom_glad_glGenProgramsARB = NULL;
PFNGLGENPROGRAMSNVPROC agx_custom_glad_glGenProgramsNV = NULL;
PFNGLGENQUERIESPROC agx_custom_glad_glGenQueries = NULL;
PFNGLGENQUERIESARBPROC agx_custom_glad_glGenQueriesARB = NULL;
PFNGLGENQUERYRESOURCETAGNVPROC agx_custom_glad_glGenQueryResourceTagNV = NULL;
PFNGLGENRENDERBUFFERSPROC agx_custom_glad_glGenRenderbuffers = NULL;
PFNGLGENRENDERBUFFERSEXTPROC agx_custom_glad_glGenRenderbuffersEXT = NULL;
PFNGLGENSAMPLERSPROC agx_custom_glad_glGenSamplers = NULL;
PFNGLGENSEMAPHORESEXTPROC agx_custom_glad_glGenSemaphoresEXT = NULL;
PFNGLGENSYMBOLSEXTPROC agx_custom_glad_glGenSymbolsEXT = NULL;
PFNGLGENTEXTURESPROC agx_custom_glad_glGenTextures = NULL;
PFNGLGENTEXTURESEXTPROC agx_custom_glad_glGenTexturesEXT = NULL;
PFNGLGENTRANSFORMFEEDBACKSPROC agx_custom_glad_glGenTransformFeedbacks = NULL;
PFNGLGENTRANSFORMFEEDBACKSNVPROC agx_custom_glad_glGenTransformFeedbacksNV = NULL;
PFNGLGENVERTEXARRAYSPROC agx_custom_glad_glGenVertexArrays = NULL;
PFNGLGENVERTEXARRAYSAPPLEPROC agx_custom_glad_glGenVertexArraysAPPLE = NULL;
PFNGLGENVERTEXSHADERSEXTPROC agx_custom_glad_glGenVertexShadersEXT = NULL;
PFNGLGENERATEMIPMAPPROC agx_custom_glad_glGenerateMipmap = NULL;
PFNGLGENERATEMIPMAPEXTPROC agx_custom_glad_glGenerateMipmapEXT = NULL;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC agx_custom_glad_glGenerateMultiTexMipmapEXT = NULL;
PFNGLGENERATETEXTUREMIPMAPPROC agx_custom_glad_glGenerateTextureMipmap = NULL;
PFNGLGENERATETEXTUREMIPMAPEXTPROC agx_custom_glad_glGenerateTextureMipmapEXT = NULL;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC agx_custom_glad_glGetActiveAtomicCounterBufferiv = NULL;
PFNGLGETACTIVEATTRIBPROC agx_custom_glad_glGetActiveAttrib = NULL;
PFNGLGETACTIVEATTRIBARBPROC agx_custom_glad_glGetActiveAttribARB = NULL;
PFNGLGETACTIVESUBROUTINENAMEPROC agx_custom_glad_glGetActiveSubroutineName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC agx_custom_glad_glGetActiveSubroutineUniformName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC agx_custom_glad_glGetActiveSubroutineUniformiv = NULL;
PFNGLGETACTIVEUNIFORMPROC agx_custom_glad_glGetActiveUniform = NULL;
PFNGLGETACTIVEUNIFORMARBPROC agx_custom_glad_glGetActiveUniformARB = NULL;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC agx_custom_glad_glGetActiveUniformBlockName = NULL;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC agx_custom_glad_glGetActiveUniformBlockiv = NULL;
PFNGLGETACTIVEUNIFORMNAMEPROC agx_custom_glad_glGetActiveUniformName = NULL;
PFNGLGETACTIVEUNIFORMSIVPROC agx_custom_glad_glGetActiveUniformsiv = NULL;
PFNGLGETACTIVEVARYINGNVPROC agx_custom_glad_glGetActiveVaryingNV = NULL;
PFNGLGETARRAYOBJECTFVATIPROC agx_custom_glad_glGetArrayObjectfvATI = NULL;
PFNGLGETARRAYOBJECTIVATIPROC agx_custom_glad_glGetArrayObjectivATI = NULL;
PFNGLGETATTACHEDOBJECTSARBPROC agx_custom_glad_glGetAttachedObjectsARB = NULL;
PFNGLGETATTACHEDSHADERSPROC agx_custom_glad_glGetAttachedShaders = NULL;
PFNGLGETATTRIBLOCATIONPROC agx_custom_glad_glGetAttribLocation = NULL;
PFNGLGETATTRIBLOCATIONARBPROC agx_custom_glad_glGetAttribLocationARB = NULL;
PFNGLGETBOOLEANINDEXEDVEXTPROC agx_custom_glad_glGetBooleanIndexedvEXT = NULL;
PFNGLGETBOOLEANI_VPROC agx_custom_glad_glGetBooleani_v = NULL;
PFNGLGETBOOLEANVPROC agx_custom_glad_glGetBooleanv = NULL;
PFNGLGETBUFFERPARAMETERI64VPROC agx_custom_glad_glGetBufferParameteri64v = NULL;
PFNGLGETBUFFERPARAMETERIVPROC agx_custom_glad_glGetBufferParameteriv = NULL;
PFNGLGETBUFFERPARAMETERIVARBPROC agx_custom_glad_glGetBufferParameterivARB = NULL;
PFNGLGETBUFFERPARAMETERUI64VNVPROC agx_custom_glad_glGetBufferParameterui64vNV = NULL;
PFNGLGETBUFFERPOINTERVPROC agx_custom_glad_glGetBufferPointerv = NULL;
PFNGLGETBUFFERPOINTERVARBPROC agx_custom_glad_glGetBufferPointervARB = NULL;
PFNGLGETBUFFERSUBDATAPROC agx_custom_glad_glGetBufferSubData = NULL;
PFNGLGETBUFFERSUBDATAARBPROC agx_custom_glad_glGetBufferSubDataARB = NULL;
PFNGLGETCLIPPLANEPROC agx_custom_glad_glGetClipPlane = NULL;
PFNGLGETCLIPPLANEFOESPROC agx_custom_glad_glGetClipPlanefOES = NULL;
PFNGLGETCLIPPLANEXOESPROC agx_custom_glad_glGetClipPlanexOES = NULL;
PFNGLGETCOLORTABLEPROC agx_custom_glad_glGetColorTable = NULL;
PFNGLGETCOLORTABLEEXTPROC agx_custom_glad_glGetColorTableEXT = NULL;
PFNGLGETCOLORTABLEPARAMETERFVPROC agx_custom_glad_glGetColorTableParameterfv = NULL;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC agx_custom_glad_glGetColorTableParameterfvEXT = NULL;
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC agx_custom_glad_glGetColorTableParameterfvSGI = NULL;
PFNGLGETCOLORTABLEPARAMETERIVPROC agx_custom_glad_glGetColorTableParameteriv = NULL;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC agx_custom_glad_glGetColorTableParameterivEXT = NULL;
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC agx_custom_glad_glGetColorTableParameterivSGI = NULL;
PFNGLGETCOLORTABLESGIPROC agx_custom_glad_glGetColorTableSGI = NULL;
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC agx_custom_glad_glGetCombinerInputParameterfvNV = NULL;
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC agx_custom_glad_glGetCombinerInputParameterivNV = NULL;
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC agx_custom_glad_glGetCombinerOutputParameterfvNV = NULL;
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC agx_custom_glad_glGetCombinerOutputParameterivNV = NULL;
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC agx_custom_glad_glGetCombinerStageParameterfvNV = NULL;
PFNGLGETCOMMANDHEADERNVPROC agx_custom_glad_glGetCommandHeaderNV = NULL;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC agx_custom_glad_glGetCompressedMultiTexImageEXT = NULL;
PFNGLGETCOMPRESSEDTEXIMAGEPROC agx_custom_glad_glGetCompressedTexImage = NULL;
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC agx_custom_glad_glGetCompressedTexImageARB = NULL;
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC agx_custom_glad_glGetCompressedTextureImage = NULL;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC agx_custom_glad_glGetCompressedTextureImageEXT = NULL;
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC agx_custom_glad_glGetCompressedTextureSubImage = NULL;
PFNGLGETCONVOLUTIONFILTERPROC agx_custom_glad_glGetConvolutionFilter = NULL;
PFNGLGETCONVOLUTIONFILTEREXTPROC agx_custom_glad_glGetConvolutionFilterEXT = NULL;
PFNGLGETCONVOLUTIONPARAMETERFVPROC agx_custom_glad_glGetConvolutionParameterfv = NULL;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC agx_custom_glad_glGetConvolutionParameterfvEXT = NULL;
PFNGLGETCONVOLUTIONPARAMETERIVPROC agx_custom_glad_glGetConvolutionParameteriv = NULL;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC agx_custom_glad_glGetConvolutionParameterivEXT = NULL;
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC agx_custom_glad_glGetConvolutionParameterxvOES = NULL;
PFNGLGETCOVERAGEMODULATIONTABLENVPROC agx_custom_glad_glGetCoverageModulationTableNV = NULL;
PFNGLGETDEBUGMESSAGELOGPROC agx_custom_glad_glGetDebugMessageLog = NULL;
PFNGLGETDEBUGMESSAGELOGAMDPROC agx_custom_glad_glGetDebugMessageLogAMD = NULL;
PFNGLGETDEBUGMESSAGELOGARBPROC agx_custom_glad_glGetDebugMessageLogARB = NULL;
PFNGLGETDETAILTEXFUNCSGISPROC agx_custom_glad_glGetDetailTexFuncSGIS = NULL;
PFNGLGETDOUBLEINDEXEDVEXTPROC agx_custom_glad_glGetDoubleIndexedvEXT = NULL;
PFNGLGETDOUBLEI_VPROC agx_custom_glad_glGetDoublei_v = NULL;
PFNGLGETDOUBLEI_VEXTPROC agx_custom_glad_glGetDoublei_vEXT = NULL;
PFNGLGETDOUBLEVPROC agx_custom_glad_glGetDoublev = NULL;
PFNGLGETERRORPROC agx_custom_glad_glGetError = NULL;
PFNGLGETFENCEIVNVPROC agx_custom_glad_glGetFenceivNV = NULL;
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC agx_custom_glad_glGetFinalCombinerInputParameterfvNV = NULL;
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC agx_custom_glad_glGetFinalCombinerInputParameterivNV = NULL;
PFNGLGETFIRSTPERFQUERYIDINTELPROC agx_custom_glad_glGetFirstPerfQueryIdINTEL = NULL;
PFNGLGETFIXEDVOESPROC agx_custom_glad_glGetFixedvOES = NULL;
PFNGLGETFLOATINDEXEDVEXTPROC agx_custom_glad_glGetFloatIndexedvEXT = NULL;
PFNGLGETFLOATI_VPROC agx_custom_glad_glGetFloati_v = NULL;
PFNGLGETFLOATI_VEXTPROC agx_custom_glad_glGetFloati_vEXT = NULL;
PFNGLGETFLOATVPROC agx_custom_glad_glGetFloatv = NULL;
PFNGLGETFOGFUNCSGISPROC agx_custom_glad_glGetFogFuncSGIS = NULL;
PFNGLGETFRAGDATAINDEXPROC agx_custom_glad_glGetFragDataIndex = NULL;
PFNGLGETFRAGDATALOCATIONPROC agx_custom_glad_glGetFragDataLocation = NULL;
PFNGLGETFRAGDATALOCATIONEXTPROC agx_custom_glad_glGetFragDataLocationEXT = NULL;
PFNGLGETFRAGMENTLIGHTFVSGIXPROC agx_custom_glad_glGetFragmentLightfvSGIX = NULL;
PFNGLGETFRAGMENTLIGHTIVSGIXPROC agx_custom_glad_glGetFragmentLightivSGIX = NULL;
PFNGLGETFRAGMENTMATERIALFVSGIXPROC agx_custom_glad_glGetFragmentMaterialfvSGIX = NULL;
PFNGLGETFRAGMENTMATERIALIVSGIXPROC agx_custom_glad_glGetFragmentMaterialivSGIX = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC agx_custom_glad_glGetFramebufferAttachmentParameteriv = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC agx_custom_glad_glGetFramebufferAttachmentParameterivEXT = NULL;
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC agx_custom_glad_glGetFramebufferParameterfvAMD = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC agx_custom_glad_glGetFramebufferParameteriv = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetFramebufferParameterivEXT = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC agx_custom_glad_glGetFramebufferParameterivMESA = NULL;
PFNGLGETGRAPHICSRESETSTATUSPROC agx_custom_glad_glGetGraphicsResetStatus = NULL;
PFNGLGETGRAPHICSRESETSTATUSARBPROC agx_custom_glad_glGetGraphicsResetStatusARB = NULL;
PFNGLGETHANDLEARBPROC agx_custom_glad_glGetHandleARB = NULL;
PFNGLGETHISTOGRAMPROC agx_custom_glad_glGetHistogram = NULL;
PFNGLGETHISTOGRAMEXTPROC agx_custom_glad_glGetHistogramEXT = NULL;
PFNGLGETHISTOGRAMPARAMETERFVPROC agx_custom_glad_glGetHistogramParameterfv = NULL;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC agx_custom_glad_glGetHistogramParameterfvEXT = NULL;
PFNGLGETHISTOGRAMPARAMETERIVPROC agx_custom_glad_glGetHistogramParameteriv = NULL;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC agx_custom_glad_glGetHistogramParameterivEXT = NULL;
PFNGLGETHISTOGRAMPARAMETERXVOESPROC agx_custom_glad_glGetHistogramParameterxvOES = NULL;
PFNGLGETIMAGEHANDLEARBPROC agx_custom_glad_glGetImageHandleARB = NULL;
PFNGLGETIMAGEHANDLENVPROC agx_custom_glad_glGetImageHandleNV = NULL;
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC agx_custom_glad_glGetImageTransformParameterfvHP = NULL;
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC agx_custom_glad_glGetImageTransformParameterivHP = NULL;
PFNGLGETINFOLOGARBPROC agx_custom_glad_glGetInfoLogARB = NULL;
PFNGLGETINSTRUMENTSSGIXPROC agx_custom_glad_glGetInstrumentsSGIX = NULL;
PFNGLGETINTEGER64I_VPROC agx_custom_glad_glGetInteger64i_v = NULL;
PFNGLGETINTEGER64VPROC agx_custom_glad_glGetInteger64v = NULL;
PFNGLGETINTEGERINDEXEDVEXTPROC agx_custom_glad_glGetIntegerIndexedvEXT = NULL;
PFNGLGETINTEGERI_VPROC agx_custom_glad_glGetIntegeri_v = NULL;
PFNGLGETINTEGERUI64I_VNVPROC agx_custom_glad_glGetIntegerui64i_vNV = NULL;
PFNGLGETINTEGERUI64VNVPROC agx_custom_glad_glGetIntegerui64vNV = NULL;
PFNGLGETINTEGERVPROC agx_custom_glad_glGetIntegerv = NULL;
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC agx_custom_glad_glGetInternalformatSampleivNV = NULL;
PFNGLGETINTERNALFORMATI64VPROC agx_custom_glad_glGetInternalformati64v = NULL;
PFNGLGETINTERNALFORMATIVPROC agx_custom_glad_glGetInternalformativ = NULL;
PFNGLGETINVARIANTBOOLEANVEXTPROC agx_custom_glad_glGetInvariantBooleanvEXT = NULL;
PFNGLGETINVARIANTFLOATVEXTPROC agx_custom_glad_glGetInvariantFloatvEXT = NULL;
PFNGLGETINVARIANTINTEGERVEXTPROC agx_custom_glad_glGetInvariantIntegervEXT = NULL;
PFNGLGETLIGHTFVPROC agx_custom_glad_glGetLightfv = NULL;
PFNGLGETLIGHTIVPROC agx_custom_glad_glGetLightiv = NULL;
PFNGLGETLIGHTXOESPROC agx_custom_glad_glGetLightxOES = NULL;
PFNGLGETLISTPARAMETERFVSGIXPROC agx_custom_glad_glGetListParameterfvSGIX = NULL;
PFNGLGETLISTPARAMETERIVSGIXPROC agx_custom_glad_glGetListParameterivSGIX = NULL;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC agx_custom_glad_glGetLocalConstantBooleanvEXT = NULL;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC agx_custom_glad_glGetLocalConstantFloatvEXT = NULL;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC agx_custom_glad_glGetLocalConstantIntegervEXT = NULL;
PFNGLGETMAPATTRIBPARAMETERFVNVPROC agx_custom_glad_glGetMapAttribParameterfvNV = NULL;
PFNGLGETMAPATTRIBPARAMETERIVNVPROC agx_custom_glad_glGetMapAttribParameterivNV = NULL;
PFNGLGETMAPCONTROLPOINTSNVPROC agx_custom_glad_glGetMapControlPointsNV = NULL;
PFNGLGETMAPPARAMETERFVNVPROC agx_custom_glad_glGetMapParameterfvNV = NULL;
PFNGLGETMAPPARAMETERIVNVPROC agx_custom_glad_glGetMapParameterivNV = NULL;
PFNGLGETMAPDVPROC agx_custom_glad_glGetMapdv = NULL;
PFNGLGETMAPFVPROC agx_custom_glad_glGetMapfv = NULL;
PFNGLGETMAPIVPROC agx_custom_glad_glGetMapiv = NULL;
PFNGLGETMAPXVOESPROC agx_custom_glad_glGetMapxvOES = NULL;
PFNGLGETMATERIALFVPROC agx_custom_glad_glGetMaterialfv = NULL;
PFNGLGETMATERIALIVPROC agx_custom_glad_glGetMaterialiv = NULL;
PFNGLGETMATERIALXOESPROC agx_custom_glad_glGetMaterialxOES = NULL;
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC agx_custom_glad_glGetMemoryObjectDetachedResourcesuivNV = NULL;
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC agx_custom_glad_glGetMemoryObjectParameterivEXT = NULL;
PFNGLGETMINMAXPROC agx_custom_glad_glGetMinmax = NULL;
PFNGLGETMINMAXEXTPROC agx_custom_glad_glGetMinmaxEXT = NULL;
PFNGLGETMINMAXPARAMETERFVPROC agx_custom_glad_glGetMinmaxParameterfv = NULL;
PFNGLGETMINMAXPARAMETERFVEXTPROC agx_custom_glad_glGetMinmaxParameterfvEXT = NULL;
PFNGLGETMINMAXPARAMETERIVPROC agx_custom_glad_glGetMinmaxParameteriv = NULL;
PFNGLGETMINMAXPARAMETERIVEXTPROC agx_custom_glad_glGetMinmaxParameterivEXT = NULL;
PFNGLGETMULTITEXENVFVEXTPROC agx_custom_glad_glGetMultiTexEnvfvEXT = NULL;
PFNGLGETMULTITEXENVIVEXTPROC agx_custom_glad_glGetMultiTexEnvivEXT = NULL;
PFNGLGETMULTITEXGENDVEXTPROC agx_custom_glad_glGetMultiTexGendvEXT = NULL;
PFNGLGETMULTITEXGENFVEXTPROC agx_custom_glad_glGetMultiTexGenfvEXT = NULL;
PFNGLGETMULTITEXGENIVEXTPROC agx_custom_glad_glGetMultiTexGenivEXT = NULL;
PFNGLGETMULTITEXIMAGEEXTPROC agx_custom_glad_glGetMultiTexImageEXT = NULL;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC agx_custom_glad_glGetMultiTexLevelParameterfvEXT = NULL;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC agx_custom_glad_glGetMultiTexLevelParameterivEXT = NULL;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC agx_custom_glad_glGetMultiTexParameterIivEXT = NULL;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC agx_custom_glad_glGetMultiTexParameterIuivEXT = NULL;
PFNGLGETMULTITEXPARAMETERFVEXTPROC agx_custom_glad_glGetMultiTexParameterfvEXT = NULL;
PFNGLGETMULTITEXPARAMETERIVEXTPROC agx_custom_glad_glGetMultiTexParameterivEXT = NULL;
PFNGLGETMULTISAMPLEFVPROC agx_custom_glad_glGetMultisamplefv = NULL;
PFNGLGETMULTISAMPLEFVNVPROC agx_custom_glad_glGetMultisamplefvNV = NULL;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC agx_custom_glad_glGetNamedBufferParameteri64v = NULL;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedBufferParameteriv = NULL;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedBufferParameterivEXT = NULL;
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC agx_custom_glad_glGetNamedBufferParameterui64vNV = NULL;
PFNGLGETNAMEDBUFFERPOINTERVPROC agx_custom_glad_glGetNamedBufferPointerv = NULL;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC agx_custom_glad_glGetNamedBufferPointervEXT = NULL;
PFNGLGETNAMEDBUFFERSUBDATAPROC agx_custom_glad_glGetNamedBufferSubData = NULL;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glGetNamedBufferSubDataEXT = NULL;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC agx_custom_glad_glGetNamedFramebufferAttachmentParameteriv = NULL;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC agx_custom_glad_glGetNamedFramebufferAttachmentParameterivEXT = NULL;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC agx_custom_glad_glGetNamedFramebufferParameterfvAMD = NULL;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedFramebufferParameteriv = NULL;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedFramebufferParameterivEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterIivEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterIuivEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterdvEXT = NULL;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC agx_custom_glad_glGetNamedProgramLocalParameterfvEXT = NULL;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC agx_custom_glad_glGetNamedProgramStringEXT = NULL;
PFNGLGETNAMEDPROGRAMIVEXTPROC agx_custom_glad_glGetNamedProgramivEXT = NULL;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC agx_custom_glad_glGetNamedRenderbufferParameteriv = NULL;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetNamedRenderbufferParameterivEXT = NULL;
PFNGLGETNAMEDSTRINGARBPROC agx_custom_glad_glGetNamedStringARB = NULL;
PFNGLGETNAMEDSTRINGIVARBPROC agx_custom_glad_glGetNamedStringivARB = NULL;
PFNGLGETNEXTPERFQUERYIDINTELPROC agx_custom_glad_glGetNextPerfQueryIdINTEL = NULL;
PFNGLGETOBJECTBUFFERFVATIPROC agx_custom_glad_glGetObjectBufferfvATI = NULL;
PFNGLGETOBJECTBUFFERIVATIPROC agx_custom_glad_glGetObjectBufferivATI = NULL;
PFNGLGETOBJECTLABELPROC agx_custom_glad_glGetObjectLabel = NULL;
PFNGLGETOBJECTLABELEXTPROC agx_custom_glad_glGetObjectLabelEXT = NULL;
PFNGLGETOBJECTPARAMETERFVARBPROC agx_custom_glad_glGetObjectParameterfvARB = NULL;
PFNGLGETOBJECTPARAMETERIVAPPLEPROC agx_custom_glad_glGetObjectParameterivAPPLE = NULL;
PFNGLGETOBJECTPARAMETERIVARBPROC agx_custom_glad_glGetObjectParameterivARB = NULL;
PFNGLGETOBJECTPTRLABELPROC agx_custom_glad_glGetObjectPtrLabel = NULL;
PFNGLGETOCCLUSIONQUERYIVNVPROC agx_custom_glad_glGetOcclusionQueryivNV = NULL;
PFNGLGETOCCLUSIONQUERYUIVNVPROC agx_custom_glad_glGetOcclusionQueryuivNV = NULL;
PFNGLGETPATHCOLORGENFVNVPROC agx_custom_glad_glGetPathColorGenfvNV = NULL;
PFNGLGETPATHCOLORGENIVNVPROC agx_custom_glad_glGetPathColorGenivNV = NULL;
PFNGLGETPATHCOMMANDSNVPROC agx_custom_glad_glGetPathCommandsNV = NULL;
PFNGLGETPATHCOORDSNVPROC agx_custom_glad_glGetPathCoordsNV = NULL;
PFNGLGETPATHDASHARRAYNVPROC agx_custom_glad_glGetPathDashArrayNV = NULL;
PFNGLGETPATHLENGTHNVPROC agx_custom_glad_glGetPathLengthNV = NULL;
PFNGLGETPATHMETRICRANGENVPROC agx_custom_glad_glGetPathMetricRangeNV = NULL;
PFNGLGETPATHMETRICSNVPROC agx_custom_glad_glGetPathMetricsNV = NULL;
PFNGLGETPATHPARAMETERFVNVPROC agx_custom_glad_glGetPathParameterfvNV = NULL;
PFNGLGETPATHPARAMETERIVNVPROC agx_custom_glad_glGetPathParameterivNV = NULL;
PFNGLGETPATHSPACINGNVPROC agx_custom_glad_glGetPathSpacingNV = NULL;
PFNGLGETPATHTEXGENFVNVPROC agx_custom_glad_glGetPathTexGenfvNV = NULL;
PFNGLGETPATHTEXGENIVNVPROC agx_custom_glad_glGetPathTexGenivNV = NULL;
PFNGLGETPERFCOUNTERINFOINTELPROC agx_custom_glad_glGetPerfCounterInfoINTEL = NULL;
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC agx_custom_glad_glGetPerfMonitorCounterDataAMD = NULL;
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC agx_custom_glad_glGetPerfMonitorCounterInfoAMD = NULL;
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC agx_custom_glad_glGetPerfMonitorCounterStringAMD = NULL;
PFNGLGETPERFMONITORCOUNTERSAMDPROC agx_custom_glad_glGetPerfMonitorCountersAMD = NULL;
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC agx_custom_glad_glGetPerfMonitorGroupStringAMD = NULL;
PFNGLGETPERFMONITORGROUPSAMDPROC agx_custom_glad_glGetPerfMonitorGroupsAMD = NULL;
PFNGLGETPERFQUERYDATAINTELPROC agx_custom_glad_glGetPerfQueryDataINTEL = NULL;
PFNGLGETPERFQUERYIDBYNAMEINTELPROC agx_custom_glad_glGetPerfQueryIdByNameINTEL = NULL;
PFNGLGETPERFQUERYINFOINTELPROC agx_custom_glad_glGetPerfQueryInfoINTEL = NULL;
PFNGLGETPIXELMAPFVPROC agx_custom_glad_glGetPixelMapfv = NULL;
PFNGLGETPIXELMAPUIVPROC agx_custom_glad_glGetPixelMapuiv = NULL;
PFNGLGETPIXELMAPUSVPROC agx_custom_glad_glGetPixelMapusv = NULL;
PFNGLGETPIXELMAPXVPROC agx_custom_glad_glGetPixelMapxv = NULL;
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC agx_custom_glad_glGetPixelTexGenParameterfvSGIS = NULL;
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC agx_custom_glad_glGetPixelTexGenParameterivSGIS = NULL;
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC agx_custom_glad_glGetPixelTransformParameterfvEXT = NULL;
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC agx_custom_glad_glGetPixelTransformParameterivEXT = NULL;
PFNGLGETPOINTERINDEXEDVEXTPROC agx_custom_glad_glGetPointerIndexedvEXT = NULL;
PFNGLGETPOINTERI_VEXTPROC agx_custom_glad_glGetPointeri_vEXT = NULL;
PFNGLGETPOINTERVPROC agx_custom_glad_glGetPointerv = NULL;
PFNGLGETPOINTERVEXTPROC agx_custom_glad_glGetPointervEXT = NULL;
PFNGLGETPOLYGONSTIPPLEPROC agx_custom_glad_glGetPolygonStipple = NULL;
PFNGLGETPROGRAMBINARYPROC agx_custom_glad_glGetProgramBinary = NULL;
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC agx_custom_glad_glGetProgramEnvParameterIivNV = NULL;
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC agx_custom_glad_glGetProgramEnvParameterIuivNV = NULL;
PFNGLGETPROGRAMENVPARAMETERDVARBPROC agx_custom_glad_glGetProgramEnvParameterdvARB = NULL;
PFNGLGETPROGRAMENVPARAMETERFVARBPROC agx_custom_glad_glGetProgramEnvParameterfvARB = NULL;
PFNGLGETPROGRAMINFOLOGPROC agx_custom_glad_glGetProgramInfoLog = NULL;
PFNGLGETPROGRAMINTERFACEIVPROC agx_custom_glad_glGetProgramInterfaceiv = NULL;
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC agx_custom_glad_glGetProgramLocalParameterIivNV = NULL;
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC agx_custom_glad_glGetProgramLocalParameterIuivNV = NULL;
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC agx_custom_glad_glGetProgramLocalParameterdvARB = NULL;
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC agx_custom_glad_glGetProgramLocalParameterfvARB = NULL;
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC agx_custom_glad_glGetProgramNamedParameterdvNV = NULL;
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC agx_custom_glad_glGetProgramNamedParameterfvNV = NULL;
PFNGLGETPROGRAMPARAMETERDVNVPROC agx_custom_glad_glGetProgramParameterdvNV = NULL;
PFNGLGETPROGRAMPARAMETERFVNVPROC agx_custom_glad_glGetProgramParameterfvNV = NULL;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC agx_custom_glad_glGetProgramPipelineInfoLog = NULL;
PFNGLGETPROGRAMPIPELINEIVPROC agx_custom_glad_glGetProgramPipelineiv = NULL;
PFNGLGETPROGRAMRESOURCEINDEXPROC agx_custom_glad_glGetProgramResourceIndex = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONPROC agx_custom_glad_glGetProgramResourceLocation = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC agx_custom_glad_glGetProgramResourceLocationIndex = NULL;
PFNGLGETPROGRAMRESOURCENAMEPROC agx_custom_glad_glGetProgramResourceName = NULL;
PFNGLGETPROGRAMRESOURCEFVNVPROC agx_custom_glad_glGetProgramResourcefvNV = NULL;
PFNGLGETPROGRAMRESOURCEIVPROC agx_custom_glad_glGetProgramResourceiv = NULL;
PFNGLGETPROGRAMSTAGEIVPROC agx_custom_glad_glGetProgramStageiv = NULL;
PFNGLGETPROGRAMSTRINGARBPROC agx_custom_glad_glGetProgramStringARB = NULL;
PFNGLGETPROGRAMSTRINGNVPROC agx_custom_glad_glGetProgramStringNV = NULL;
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC agx_custom_glad_glGetProgramSubroutineParameteruivNV = NULL;
PFNGLGETPROGRAMIVPROC agx_custom_glad_glGetProgramiv = NULL;
PFNGLGETPROGRAMIVARBPROC agx_custom_glad_glGetProgramivARB = NULL;
PFNGLGETPROGRAMIVNVPROC agx_custom_glad_glGetProgramivNV = NULL;
PFNGLGETQUERYBUFFEROBJECTI64VPROC agx_custom_glad_glGetQueryBufferObjecti64v = NULL;
PFNGLGETQUERYBUFFEROBJECTIVPROC agx_custom_glad_glGetQueryBufferObjectiv = NULL;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC agx_custom_glad_glGetQueryBufferObjectui64v = NULL;
PFNGLGETQUERYBUFFEROBJECTUIVPROC agx_custom_glad_glGetQueryBufferObjectuiv = NULL;
PFNGLGETQUERYINDEXEDIVPROC agx_custom_glad_glGetQueryIndexediv = NULL;
PFNGLGETQUERYOBJECTI64VPROC agx_custom_glad_glGetQueryObjecti64v = NULL;
PFNGLGETQUERYOBJECTI64VEXTPROC agx_custom_glad_glGetQueryObjecti64vEXT = NULL;
PFNGLGETQUERYOBJECTIVPROC agx_custom_glad_glGetQueryObjectiv = NULL;
PFNGLGETQUERYOBJECTIVARBPROC agx_custom_glad_glGetQueryObjectivARB = NULL;
PFNGLGETQUERYOBJECTUI64VPROC agx_custom_glad_glGetQueryObjectui64v = NULL;
PFNGLGETQUERYOBJECTUI64VEXTPROC agx_custom_glad_glGetQueryObjectui64vEXT = NULL;
PFNGLGETQUERYOBJECTUIVPROC agx_custom_glad_glGetQueryObjectuiv = NULL;
PFNGLGETQUERYOBJECTUIVARBPROC agx_custom_glad_glGetQueryObjectuivARB = NULL;
PFNGLGETQUERYIVPROC agx_custom_glad_glGetQueryiv = NULL;
PFNGLGETQUERYIVARBPROC agx_custom_glad_glGetQueryivARB = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVPROC agx_custom_glad_glGetRenderbufferParameteriv = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC agx_custom_glad_glGetRenderbufferParameterivEXT = NULL;
PFNGLGETSAMPLERPARAMETERIIVPROC agx_custom_glad_glGetSamplerParameterIiv = NULL;
PFNGLGETSAMPLERPARAMETERIUIVPROC agx_custom_glad_glGetSamplerParameterIuiv = NULL;
PFNGLGETSAMPLERPARAMETERFVPROC agx_custom_glad_glGetSamplerParameterfv = NULL;
PFNGLGETSAMPLERPARAMETERIVPROC agx_custom_glad_glGetSamplerParameteriv = NULL;
PFNGLGETSEMAPHOREPARAMETERIVNVPROC agx_custom_glad_glGetSemaphoreParameterivNV = NULL;
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC agx_custom_glad_glGetSemaphoreParameterui64vEXT = NULL;
PFNGLGETSEPARABLEFILTERPROC agx_custom_glad_glGetSeparableFilter = NULL;
PFNGLGETSEPARABLEFILTEREXTPROC agx_custom_glad_glGetSeparableFilterEXT = NULL;
PFNGLGETSHADERINFOLOGPROC agx_custom_glad_glGetShaderInfoLog = NULL;
PFNGLGETSHADERPRECISIONFORMATPROC agx_custom_glad_glGetShaderPrecisionFormat = NULL;
PFNGLGETSHADERSOURCEPROC agx_custom_glad_glGetShaderSource = NULL;
PFNGLGETSHADERSOURCEARBPROC agx_custom_glad_glGetShaderSourceARB = NULL;
PFNGLGETSHADERIVPROC agx_custom_glad_glGetShaderiv = NULL;
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC agx_custom_glad_glGetShadingRateImagePaletteNV = NULL;
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC agx_custom_glad_glGetShadingRateSampleLocationivNV = NULL;
PFNGLGETSHARPENTEXFUNCSGISPROC agx_custom_glad_glGetSharpenTexFuncSGIS = NULL;
PFNGLGETSTAGEINDEXNVPROC agx_custom_glad_glGetStageIndexNV = NULL;
PFNGLGETSTRINGPROC agx_custom_glad_glGetString = NULL;
PFNGLGETSTRINGIPROC agx_custom_glad_glGetStringi = NULL;
PFNGLGETSUBROUTINEINDEXPROC agx_custom_glad_glGetSubroutineIndex = NULL;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC agx_custom_glad_glGetSubroutineUniformLocation = NULL;
PFNGLGETSYNCIVPROC agx_custom_glad_glGetSynciv = NULL;
PFNGLGETTEXBUMPPARAMETERFVATIPROC agx_custom_glad_glGetTexBumpParameterfvATI = NULL;
PFNGLGETTEXBUMPPARAMETERIVATIPROC agx_custom_glad_glGetTexBumpParameterivATI = NULL;
PFNGLGETTEXENVFVPROC agx_custom_glad_glGetTexEnvfv = NULL;
PFNGLGETTEXENVIVPROC agx_custom_glad_glGetTexEnviv = NULL;
PFNGLGETTEXENVXVOESPROC agx_custom_glad_glGetTexEnvxvOES = NULL;
PFNGLGETTEXFILTERFUNCSGISPROC agx_custom_glad_glGetTexFilterFuncSGIS = NULL;
PFNGLGETTEXGENDVPROC agx_custom_glad_glGetTexGendv = NULL;
PFNGLGETTEXGENFVPROC agx_custom_glad_glGetTexGenfv = NULL;
PFNGLGETTEXGENIVPROC agx_custom_glad_glGetTexGeniv = NULL;
PFNGLGETTEXGENXVOESPROC agx_custom_glad_glGetTexGenxvOES = NULL;
PFNGLGETTEXIMAGEPROC agx_custom_glad_glGetTexImage = NULL;
PFNGLGETTEXLEVELPARAMETERFVPROC agx_custom_glad_glGetTexLevelParameterfv = NULL;
PFNGLGETTEXLEVELPARAMETERIVPROC agx_custom_glad_glGetTexLevelParameteriv = NULL;
PFNGLGETTEXLEVELPARAMETERXVOESPROC agx_custom_glad_glGetTexLevelParameterxvOES = NULL;
PFNGLGETTEXPARAMETERIIVPROC agx_custom_glad_glGetTexParameterIiv = NULL;
PFNGLGETTEXPARAMETERIIVEXTPROC agx_custom_glad_glGetTexParameterIivEXT = NULL;
PFNGLGETTEXPARAMETERIUIVPROC agx_custom_glad_glGetTexParameterIuiv = NULL;
PFNGLGETTEXPARAMETERIUIVEXTPROC agx_custom_glad_glGetTexParameterIuivEXT = NULL;
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC agx_custom_glad_glGetTexParameterPointervAPPLE = NULL;
PFNGLGETTEXPARAMETERFVPROC agx_custom_glad_glGetTexParameterfv = NULL;
PFNGLGETTEXPARAMETERIVPROC agx_custom_glad_glGetTexParameteriv = NULL;
PFNGLGETTEXPARAMETERXVOESPROC agx_custom_glad_glGetTexParameterxvOES = NULL;
PFNGLGETTEXTUREHANDLEARBPROC agx_custom_glad_glGetTextureHandleARB = NULL;
PFNGLGETTEXTUREHANDLENVPROC agx_custom_glad_glGetTextureHandleNV = NULL;
PFNGLGETTEXTUREIMAGEPROC agx_custom_glad_glGetTextureImage = NULL;
PFNGLGETTEXTUREIMAGEEXTPROC agx_custom_glad_glGetTextureImageEXT = NULL;
PFNGLGETTEXTURELEVELPARAMETERFVPROC agx_custom_glad_glGetTextureLevelParameterfv = NULL;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC agx_custom_glad_glGetTextureLevelParameterfvEXT = NULL;
PFNGLGETTEXTURELEVELPARAMETERIVPROC agx_custom_glad_glGetTextureLevelParameteriv = NULL;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC agx_custom_glad_glGetTextureLevelParameterivEXT = NULL;
PFNGLGETTEXTUREPARAMETERIIVPROC agx_custom_glad_glGetTextureParameterIiv = NULL;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC agx_custom_glad_glGetTextureParameterIivEXT = NULL;
PFNGLGETTEXTUREPARAMETERIUIVPROC agx_custom_glad_glGetTextureParameterIuiv = NULL;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC agx_custom_glad_glGetTextureParameterIuivEXT = NULL;
PFNGLGETTEXTUREPARAMETERFVPROC agx_custom_glad_glGetTextureParameterfv = NULL;
PFNGLGETTEXTUREPARAMETERFVEXTPROC agx_custom_glad_glGetTextureParameterfvEXT = NULL;
PFNGLGETTEXTUREPARAMETERIVPROC agx_custom_glad_glGetTextureParameteriv = NULL;
PFNGLGETTEXTUREPARAMETERIVEXTPROC agx_custom_glad_glGetTextureParameterivEXT = NULL;
PFNGLGETTEXTURESAMPLERHANDLEARBPROC agx_custom_glad_glGetTextureSamplerHandleARB = NULL;
PFNGLGETTEXTURESAMPLERHANDLENVPROC agx_custom_glad_glGetTextureSamplerHandleNV = NULL;
PFNGLGETTEXTURESUBIMAGEPROC agx_custom_glad_glGetTextureSubImage = NULL;
PFNGLGETTRACKMATRIXIVNVPROC agx_custom_glad_glGetTrackMatrixivNV = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC agx_custom_glad_glGetTransformFeedbackVarying = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC agx_custom_glad_glGetTransformFeedbackVaryingEXT = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC agx_custom_glad_glGetTransformFeedbackVaryingNV = NULL;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC agx_custom_glad_glGetTransformFeedbacki64_v = NULL;
PFNGLGETTRANSFORMFEEDBACKI_VPROC agx_custom_glad_glGetTransformFeedbacki_v = NULL;
PFNGLGETTRANSFORMFEEDBACKIVPROC agx_custom_glad_glGetTransformFeedbackiv = NULL;
PFNGLGETUNIFORMBLOCKINDEXPROC agx_custom_glad_glGetUniformBlockIndex = NULL;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC agx_custom_glad_glGetUniformBufferSizeEXT = NULL;
PFNGLGETUNIFORMINDICESPROC agx_custom_glad_glGetUniformIndices = NULL;
PFNGLGETUNIFORMLOCATIONPROC agx_custom_glad_glGetUniformLocation = NULL;
PFNGLGETUNIFORMLOCATIONARBPROC agx_custom_glad_glGetUniformLocationARB = NULL;
PFNGLGETUNIFORMOFFSETEXTPROC agx_custom_glad_glGetUniformOffsetEXT = NULL;
PFNGLGETUNIFORMSUBROUTINEUIVPROC agx_custom_glad_glGetUniformSubroutineuiv = NULL;
PFNGLGETUNIFORMDVPROC agx_custom_glad_glGetUniformdv = NULL;
PFNGLGETUNIFORMFVPROC agx_custom_glad_glGetUniformfv = NULL;
PFNGLGETUNIFORMFVARBPROC agx_custom_glad_glGetUniformfvARB = NULL;
PFNGLGETUNIFORMI64VARBPROC agx_custom_glad_glGetUniformi64vARB = NULL;
PFNGLGETUNIFORMI64VNVPROC agx_custom_glad_glGetUniformi64vNV = NULL;
PFNGLGETUNIFORMIVPROC agx_custom_glad_glGetUniformiv = NULL;
PFNGLGETUNIFORMIVARBPROC agx_custom_glad_glGetUniformivARB = NULL;
PFNGLGETUNIFORMUI64VARBPROC agx_custom_glad_glGetUniformui64vARB = NULL;
PFNGLGETUNIFORMUI64VNVPROC agx_custom_glad_glGetUniformui64vNV = NULL;
PFNGLGETUNIFORMUIVPROC agx_custom_glad_glGetUniformuiv = NULL;
PFNGLGETUNIFORMUIVEXTPROC agx_custom_glad_glGetUniformuivEXT = NULL;
PFNGLGETUNSIGNEDBYTEI_VEXTPROC agx_custom_glad_glGetUnsignedBytei_vEXT = NULL;
PFNGLGETUNSIGNEDBYTEVEXTPROC agx_custom_glad_glGetUnsignedBytevEXT = NULL;
PFNGLGETVARIANTARRAYOBJECTFVATIPROC agx_custom_glad_glGetVariantArrayObjectfvATI = NULL;
PFNGLGETVARIANTARRAYOBJECTIVATIPROC agx_custom_glad_glGetVariantArrayObjectivATI = NULL;
PFNGLGETVARIANTBOOLEANVEXTPROC agx_custom_glad_glGetVariantBooleanvEXT = NULL;
PFNGLGETVARIANTFLOATVEXTPROC agx_custom_glad_glGetVariantFloatvEXT = NULL;
PFNGLGETVARIANTINTEGERVEXTPROC agx_custom_glad_glGetVariantIntegervEXT = NULL;
PFNGLGETVARIANTPOINTERVEXTPROC agx_custom_glad_glGetVariantPointervEXT = NULL;
PFNGLGETVARYINGLOCATIONNVPROC agx_custom_glad_glGetVaryingLocationNV = NULL;
PFNGLGETVERTEXARRAYINDEXED64IVPROC agx_custom_glad_glGetVertexArrayIndexed64iv = NULL;
PFNGLGETVERTEXARRAYINDEXEDIVPROC agx_custom_glad_glGetVertexArrayIndexediv = NULL;
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC agx_custom_glad_glGetVertexArrayIntegeri_vEXT = NULL;
PFNGLGETVERTEXARRAYINTEGERVEXTPROC agx_custom_glad_glGetVertexArrayIntegervEXT = NULL;
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC agx_custom_glad_glGetVertexArrayPointeri_vEXT = NULL;
PFNGLGETVERTEXARRAYPOINTERVEXTPROC agx_custom_glad_glGetVertexArrayPointervEXT = NULL;
PFNGLGETVERTEXARRAYIVPROC agx_custom_glad_glGetVertexArrayiv = NULL;
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC agx_custom_glad_glGetVertexAttribArrayObjectfvATI = NULL;
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC agx_custom_glad_glGetVertexAttribArrayObjectivATI = NULL;
PFNGLGETVERTEXATTRIBIIVPROC agx_custom_glad_glGetVertexAttribIiv = NULL;
PFNGLGETVERTEXATTRIBIIVEXTPROC agx_custom_glad_glGetVertexAttribIivEXT = NULL;
PFNGLGETVERTEXATTRIBIUIVPROC agx_custom_glad_glGetVertexAttribIuiv = NULL;
PFNGLGETVERTEXATTRIBIUIVEXTPROC agx_custom_glad_glGetVertexAttribIuivEXT = NULL;
PFNGLGETVERTEXATTRIBLDVPROC agx_custom_glad_glGetVertexAttribLdv = NULL;
PFNGLGETVERTEXATTRIBLDVEXTPROC agx_custom_glad_glGetVertexAttribLdvEXT = NULL;
PFNGLGETVERTEXATTRIBLI64VNVPROC agx_custom_glad_glGetVertexAttribLi64vNV = NULL;
PFNGLGETVERTEXATTRIBLUI64VARBPROC agx_custom_glad_glGetVertexAttribLui64vARB = NULL;
PFNGLGETVERTEXATTRIBLUI64VNVPROC agx_custom_glad_glGetVertexAttribLui64vNV = NULL;
PFNGLGETVERTEXATTRIBPOINTERVPROC agx_custom_glad_glGetVertexAttribPointerv = NULL;
PFNGLGETVERTEXATTRIBPOINTERVARBPROC agx_custom_glad_glGetVertexAttribPointervARB = NULL;
PFNGLGETVERTEXATTRIBPOINTERVNVPROC agx_custom_glad_glGetVertexAttribPointervNV = NULL;
PFNGLGETVERTEXATTRIBDVPROC agx_custom_glad_glGetVertexAttribdv = NULL;
PFNGLGETVERTEXATTRIBDVARBPROC agx_custom_glad_glGetVertexAttribdvARB = NULL;
PFNGLGETVERTEXATTRIBDVNVPROC agx_custom_glad_glGetVertexAttribdvNV = NULL;
PFNGLGETVERTEXATTRIBFVPROC agx_custom_glad_glGetVertexAttribfv = NULL;
PFNGLGETVERTEXATTRIBFVARBPROC agx_custom_glad_glGetVertexAttribfvARB = NULL;
PFNGLGETVERTEXATTRIBFVNVPROC agx_custom_glad_glGetVertexAttribfvNV = NULL;
PFNGLGETVERTEXATTRIBIVPROC agx_custom_glad_glGetVertexAttribiv = NULL;
PFNGLGETVERTEXATTRIBIVARBPROC agx_custom_glad_glGetVertexAttribivARB = NULL;
PFNGLGETVERTEXATTRIBIVNVPROC agx_custom_glad_glGetVertexAttribivNV = NULL;
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC agx_custom_glad_glGetVideoCaptureStreamdvNV = NULL;
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC agx_custom_glad_glGetVideoCaptureStreamfvNV = NULL;
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC agx_custom_glad_glGetVideoCaptureStreamivNV = NULL;
PFNGLGETVIDEOCAPTUREIVNVPROC agx_custom_glad_glGetVideoCaptureivNV = NULL;
PFNGLGETVIDEOI64VNVPROC agx_custom_glad_glGetVideoi64vNV = NULL;
PFNGLGETVIDEOIVNVPROC agx_custom_glad_glGetVideoivNV = NULL;
PFNGLGETVIDEOUI64VNVPROC agx_custom_glad_glGetVideoui64vNV = NULL;
PFNGLGETVIDEOUIVNVPROC agx_custom_glad_glGetVideouivNV = NULL;
PFNGLGETVKPROCADDRNVPROC agx_custom_glad_glGetVkProcAddrNV = NULL;
PFNGLGETNCOLORTABLEPROC agx_custom_glad_glGetnColorTable = NULL;
PFNGLGETNCOLORTABLEARBPROC agx_custom_glad_glGetnColorTableARB = NULL;
PFNGLGETNCOMPRESSEDTEXIMAGEPROC agx_custom_glad_glGetnCompressedTexImage = NULL;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC agx_custom_glad_glGetnCompressedTexImageARB = NULL;
PFNGLGETNCONVOLUTIONFILTERPROC agx_custom_glad_glGetnConvolutionFilter = NULL;
PFNGLGETNCONVOLUTIONFILTERARBPROC agx_custom_glad_glGetnConvolutionFilterARB = NULL;
PFNGLGETNHISTOGRAMPROC agx_custom_glad_glGetnHistogram = NULL;
PFNGLGETNHISTOGRAMARBPROC agx_custom_glad_glGetnHistogramARB = NULL;
PFNGLGETNMAPDVPROC agx_custom_glad_glGetnMapdv = NULL;
PFNGLGETNMAPDVARBPROC agx_custom_glad_glGetnMapdvARB = NULL;
PFNGLGETNMAPFVPROC agx_custom_glad_glGetnMapfv = NULL;
PFNGLGETNMAPFVARBPROC agx_custom_glad_glGetnMapfvARB = NULL;
PFNGLGETNMAPIVPROC agx_custom_glad_glGetnMapiv = NULL;
PFNGLGETNMAPIVARBPROC agx_custom_glad_glGetnMapivARB = NULL;
PFNGLGETNMINMAXPROC agx_custom_glad_glGetnMinmax = NULL;
PFNGLGETNMINMAXARBPROC agx_custom_glad_glGetnMinmaxARB = NULL;
PFNGLGETNPIXELMAPFVPROC agx_custom_glad_glGetnPixelMapfv = NULL;
PFNGLGETNPIXELMAPFVARBPROC agx_custom_glad_glGetnPixelMapfvARB = NULL;
PFNGLGETNPIXELMAPUIVPROC agx_custom_glad_glGetnPixelMapuiv = NULL;
PFNGLGETNPIXELMAPUIVARBPROC agx_custom_glad_glGetnPixelMapuivARB = NULL;
PFNGLGETNPIXELMAPUSVPROC agx_custom_glad_glGetnPixelMapusv = NULL;
PFNGLGETNPIXELMAPUSVARBPROC agx_custom_glad_glGetnPixelMapusvARB = NULL;
PFNGLGETNPOLYGONSTIPPLEPROC agx_custom_glad_glGetnPolygonStipple = NULL;
PFNGLGETNPOLYGONSTIPPLEARBPROC agx_custom_glad_glGetnPolygonStippleARB = NULL;
PFNGLGETNSEPARABLEFILTERPROC agx_custom_glad_glGetnSeparableFilter = NULL;
PFNGLGETNSEPARABLEFILTERARBPROC agx_custom_glad_glGetnSeparableFilterARB = NULL;
PFNGLGETNTEXIMAGEPROC agx_custom_glad_glGetnTexImage = NULL;
PFNGLGETNTEXIMAGEARBPROC agx_custom_glad_glGetnTexImageARB = NULL;
PFNGLGETNUNIFORMDVPROC agx_custom_glad_glGetnUniformdv = NULL;
PFNGLGETNUNIFORMDVARBPROC agx_custom_glad_glGetnUniformdvARB = NULL;
PFNGLGETNUNIFORMFVPROC agx_custom_glad_glGetnUniformfv = NULL;
PFNGLGETNUNIFORMFVARBPROC agx_custom_glad_glGetnUniformfvARB = NULL;
PFNGLGETNUNIFORMI64VARBPROC agx_custom_glad_glGetnUniformi64vARB = NULL;
PFNGLGETNUNIFORMIVPROC agx_custom_glad_glGetnUniformiv = NULL;
PFNGLGETNUNIFORMIVARBPROC agx_custom_glad_glGetnUniformivARB = NULL;
PFNGLGETNUNIFORMUI64VARBPROC agx_custom_glad_glGetnUniformui64vARB = NULL;
PFNGLGETNUNIFORMUIVPROC agx_custom_glad_glGetnUniformuiv = NULL;
PFNGLGETNUNIFORMUIVARBPROC agx_custom_glad_glGetnUniformuivARB = NULL;
PFNGLGLOBALALPHAFACTORBSUNPROC agx_custom_glad_glGlobalAlphaFactorbSUN = NULL;
PFNGLGLOBALALPHAFACTORDSUNPROC agx_custom_glad_glGlobalAlphaFactordSUN = NULL;
PFNGLGLOBALALPHAFACTORFSUNPROC agx_custom_glad_glGlobalAlphaFactorfSUN = NULL;
PFNGLGLOBALALPHAFACTORISUNPROC agx_custom_glad_glGlobalAlphaFactoriSUN = NULL;
PFNGLGLOBALALPHAFACTORSSUNPROC agx_custom_glad_glGlobalAlphaFactorsSUN = NULL;
PFNGLGLOBALALPHAFACTORUBSUNPROC agx_custom_glad_glGlobalAlphaFactorubSUN = NULL;
PFNGLGLOBALALPHAFACTORUISUNPROC agx_custom_glad_glGlobalAlphaFactoruiSUN = NULL;
PFNGLGLOBALALPHAFACTORUSSUNPROC agx_custom_glad_glGlobalAlphaFactorusSUN = NULL;
PFNGLHINTPROC agx_custom_glad_glHint = NULL;
PFNGLHINTPGIPROC agx_custom_glad_glHintPGI = NULL;
PFNGLHISTOGRAMPROC agx_custom_glad_glHistogram = NULL;
PFNGLHISTOGRAMEXTPROC agx_custom_glad_glHistogramEXT = NULL;
PFNGLIGLOOINTERFACESGIXPROC agx_custom_glad_glIglooInterfaceSGIX = NULL;
PFNGLIMAGETRANSFORMPARAMETERFHPPROC agx_custom_glad_glImageTransformParameterfHP = NULL;
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC agx_custom_glad_glImageTransformParameterfvHP = NULL;
PFNGLIMAGETRANSFORMPARAMETERIHPPROC agx_custom_glad_glImageTransformParameteriHP = NULL;
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC agx_custom_glad_glImageTransformParameterivHP = NULL;
PFNGLIMPORTMEMORYFDEXTPROC agx_custom_glad_glImportMemoryFdEXT = NULL;
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC agx_custom_glad_glImportMemoryWin32HandleEXT = NULL;
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC agx_custom_glad_glImportMemoryWin32NameEXT = NULL;
PFNGLIMPORTSEMAPHOREFDEXTPROC agx_custom_glad_glImportSemaphoreFdEXT = NULL;
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC agx_custom_glad_glImportSemaphoreWin32HandleEXT = NULL;
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC agx_custom_glad_glImportSemaphoreWin32NameEXT = NULL;
PFNGLIMPORTSYNCEXTPROC agx_custom_glad_glImportSyncEXT = NULL;
PFNGLINDEXFORMATNVPROC agx_custom_glad_glIndexFormatNV = NULL;
PFNGLINDEXFUNCEXTPROC agx_custom_glad_glIndexFuncEXT = NULL;
PFNGLINDEXMASKPROC agx_custom_glad_glIndexMask = NULL;
PFNGLINDEXMATERIALEXTPROC agx_custom_glad_glIndexMaterialEXT = NULL;
PFNGLINDEXPOINTERPROC agx_custom_glad_glIndexPointer = NULL;
PFNGLINDEXPOINTEREXTPROC agx_custom_glad_glIndexPointerEXT = NULL;
PFNGLINDEXPOINTERLISTIBMPROC agx_custom_glad_glIndexPointerListIBM = NULL;
PFNGLINDEXDPROC agx_custom_glad_glIndexd = NULL;
PFNGLINDEXDVPROC agx_custom_glad_glIndexdv = NULL;
PFNGLINDEXFPROC agx_custom_glad_glIndexf = NULL;
PFNGLINDEXFVPROC agx_custom_glad_glIndexfv = NULL;
PFNGLINDEXIPROC agx_custom_glad_glIndexi = NULL;
PFNGLINDEXIVPROC agx_custom_glad_glIndexiv = NULL;
PFNGLINDEXSPROC agx_custom_glad_glIndexs = NULL;
PFNGLINDEXSVPROC agx_custom_glad_glIndexsv = NULL;
PFNGLINDEXUBPROC agx_custom_glad_glIndexub = NULL;
PFNGLINDEXUBVPROC agx_custom_glad_glIndexubv = NULL;
PFNGLINDEXXOESPROC agx_custom_glad_glIndexxOES = NULL;
PFNGLINDEXXVOESPROC agx_custom_glad_glIndexxvOES = NULL;
PFNGLINITNAMESPROC agx_custom_glad_glInitNames = NULL;
PFNGLINSERTCOMPONENTEXTPROC agx_custom_glad_glInsertComponentEXT = NULL;
PFNGLINSERTEVENTMARKEREXTPROC agx_custom_glad_glInsertEventMarkerEXT = NULL;
PFNGLINSTRUMENTSBUFFERSGIXPROC agx_custom_glad_glInstrumentsBufferSGIX = NULL;
PFNGLINTERLEAVEDARRAYSPROC agx_custom_glad_glInterleavedArrays = NULL;
PFNGLINTERPOLATEPATHSNVPROC agx_custom_glad_glInterpolatePathsNV = NULL;
PFNGLINVALIDATEBUFFERDATAPROC agx_custom_glad_glInvalidateBufferData = NULL;
PFNGLINVALIDATEBUFFERSUBDATAPROC agx_custom_glad_glInvalidateBufferSubData = NULL;
PFNGLINVALIDATEFRAMEBUFFERPROC agx_custom_glad_glInvalidateFramebuffer = NULL;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC agx_custom_glad_glInvalidateNamedFramebufferData = NULL;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC agx_custom_glad_glInvalidateNamedFramebufferSubData = NULL;
PFNGLINVALIDATESUBFRAMEBUFFERPROC agx_custom_glad_glInvalidateSubFramebuffer = NULL;
PFNGLINVALIDATETEXIMAGEPROC agx_custom_glad_glInvalidateTexImage = NULL;
PFNGLINVALIDATETEXSUBIMAGEPROC agx_custom_glad_glInvalidateTexSubImage = NULL;
PFNGLISASYNCMARKERSGIXPROC agx_custom_glad_glIsAsyncMarkerSGIX = NULL;
PFNGLISBUFFERPROC agx_custom_glad_glIsBuffer = NULL;
PFNGLISBUFFERARBPROC agx_custom_glad_glIsBufferARB = NULL;
PFNGLISBUFFERRESIDENTNVPROC agx_custom_glad_glIsBufferResidentNV = NULL;
PFNGLISCOMMANDLISTNVPROC agx_custom_glad_glIsCommandListNV = NULL;
PFNGLISENABLEDPROC agx_custom_glad_glIsEnabled = NULL;
PFNGLISENABLEDINDEXEDEXTPROC agx_custom_glad_glIsEnabledIndexedEXT = NULL;
PFNGLISENABLEDIPROC agx_custom_glad_glIsEnabledi = NULL;
PFNGLISFENCEAPPLEPROC agx_custom_glad_glIsFenceAPPLE = NULL;
PFNGLISFENCENVPROC agx_custom_glad_glIsFenceNV = NULL;
PFNGLISFRAMEBUFFERPROC agx_custom_glad_glIsFramebuffer = NULL;
PFNGLISFRAMEBUFFEREXTPROC agx_custom_glad_glIsFramebufferEXT = NULL;
PFNGLISIMAGEHANDLERESIDENTARBPROC agx_custom_glad_glIsImageHandleResidentARB = NULL;
PFNGLISIMAGEHANDLERESIDENTNVPROC agx_custom_glad_glIsImageHandleResidentNV = NULL;
PFNGLISLISTPROC agx_custom_glad_glIsList = NULL;
PFNGLISMEMORYOBJECTEXTPROC agx_custom_glad_glIsMemoryObjectEXT = NULL;
PFNGLISNAMEAMDPROC agx_custom_glad_glIsNameAMD = NULL;
PFNGLISNAMEDBUFFERRESIDENTNVPROC agx_custom_glad_glIsNamedBufferResidentNV = NULL;
PFNGLISNAMEDSTRINGARBPROC agx_custom_glad_glIsNamedStringARB = NULL;
PFNGLISOBJECTBUFFERATIPROC agx_custom_glad_glIsObjectBufferATI = NULL;
PFNGLISOCCLUSIONQUERYNVPROC agx_custom_glad_glIsOcclusionQueryNV = NULL;
PFNGLISPATHNVPROC agx_custom_glad_glIsPathNV = NULL;
PFNGLISPOINTINFILLPATHNVPROC agx_custom_glad_glIsPointInFillPathNV = NULL;
PFNGLISPOINTINSTROKEPATHNVPROC agx_custom_glad_glIsPointInStrokePathNV = NULL;
PFNGLISPROGRAMPROC agx_custom_glad_glIsProgram = NULL;
PFNGLISPROGRAMARBPROC agx_custom_glad_glIsProgramARB = NULL;
PFNGLISPROGRAMNVPROC agx_custom_glad_glIsProgramNV = NULL;
PFNGLISPROGRAMPIPELINEPROC agx_custom_glad_glIsProgramPipeline = NULL;
PFNGLISQUERYPROC agx_custom_glad_glIsQuery = NULL;
PFNGLISQUERYARBPROC agx_custom_glad_glIsQueryARB = NULL;
PFNGLISRENDERBUFFERPROC agx_custom_glad_glIsRenderbuffer = NULL;
PFNGLISRENDERBUFFEREXTPROC agx_custom_glad_glIsRenderbufferEXT = NULL;
PFNGLISSAMPLERPROC agx_custom_glad_glIsSampler = NULL;
PFNGLISSEMAPHOREEXTPROC agx_custom_glad_glIsSemaphoreEXT = NULL;
PFNGLISSHADERPROC agx_custom_glad_glIsShader = NULL;
PFNGLISSTATENVPROC agx_custom_glad_glIsStateNV = NULL;
PFNGLISSYNCPROC agx_custom_glad_glIsSync = NULL;
PFNGLISTEXTUREPROC agx_custom_glad_glIsTexture = NULL;
PFNGLISTEXTUREEXTPROC agx_custom_glad_glIsTextureEXT = NULL;
PFNGLISTEXTUREHANDLERESIDENTARBPROC agx_custom_glad_glIsTextureHandleResidentARB = NULL;
PFNGLISTEXTUREHANDLERESIDENTNVPROC agx_custom_glad_glIsTextureHandleResidentNV = NULL;
PFNGLISTRANSFORMFEEDBACKPROC agx_custom_glad_glIsTransformFeedback = NULL;
PFNGLISTRANSFORMFEEDBACKNVPROC agx_custom_glad_glIsTransformFeedbackNV = NULL;
PFNGLISVARIANTENABLEDEXTPROC agx_custom_glad_glIsVariantEnabledEXT = NULL;
PFNGLISVERTEXARRAYPROC agx_custom_glad_glIsVertexArray = NULL;
PFNGLISVERTEXARRAYAPPLEPROC agx_custom_glad_glIsVertexArrayAPPLE = NULL;
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC agx_custom_glad_glIsVertexAttribEnabledAPPLE = NULL;
PFNGLLGPUCOPYIMAGESUBDATANVXPROC agx_custom_glad_glLGPUCopyImageSubDataNVX = NULL;
PFNGLLGPUINTERLOCKNVXPROC agx_custom_glad_glLGPUInterlockNVX = NULL;
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC agx_custom_glad_glLGPUNamedBufferSubDataNVX = NULL;
PFNGLLABELOBJECTEXTPROC agx_custom_glad_glLabelObjectEXT = NULL;
PFNGLLIGHTENVISGIXPROC agx_custom_glad_glLightEnviSGIX = NULL;
PFNGLLIGHTMODELFPROC agx_custom_glad_glLightModelf = NULL;
PFNGLLIGHTMODELFVPROC agx_custom_glad_glLightModelfv = NULL;
PFNGLLIGHTMODELIPROC agx_custom_glad_glLightModeli = NULL;
PFNGLLIGHTMODELIVPROC agx_custom_glad_glLightModeliv = NULL;
PFNGLLIGHTMODELXOESPROC agx_custom_glad_glLightModelxOES = NULL;
PFNGLLIGHTMODELXVOESPROC agx_custom_glad_glLightModelxvOES = NULL;
PFNGLLIGHTFPROC agx_custom_glad_glLightf = NULL;
PFNGLLIGHTFVPROC agx_custom_glad_glLightfv = NULL;
PFNGLLIGHTIPROC agx_custom_glad_glLighti = NULL;
PFNGLLIGHTIVPROC agx_custom_glad_glLightiv = NULL;
PFNGLLIGHTXOESPROC agx_custom_glad_glLightxOES = NULL;
PFNGLLIGHTXVOESPROC agx_custom_glad_glLightxvOES = NULL;
PFNGLLINESTIPPLEPROC agx_custom_glad_glLineStipple = NULL;
PFNGLLINEWIDTHPROC agx_custom_glad_glLineWidth = NULL;
PFNGLLINEWIDTHXOESPROC agx_custom_glad_glLineWidthxOES = NULL;
PFNGLLINKPROGRAMPROC agx_custom_glad_glLinkProgram = NULL;
PFNGLLINKPROGRAMARBPROC agx_custom_glad_glLinkProgramARB = NULL;
PFNGLLISTBASEPROC agx_custom_glad_glListBase = NULL;
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC agx_custom_glad_glListDrawCommandsStatesClientNV = NULL;
PFNGLLISTPARAMETERFSGIXPROC agx_custom_glad_glListParameterfSGIX = NULL;
PFNGLLISTPARAMETERFVSGIXPROC agx_custom_glad_glListParameterfvSGIX = NULL;
PFNGLLISTPARAMETERISGIXPROC agx_custom_glad_glListParameteriSGIX = NULL;
PFNGLLISTPARAMETERIVSGIXPROC agx_custom_glad_glListParameterivSGIX = NULL;
PFNGLLOADIDENTITYPROC agx_custom_glad_glLoadIdentity = NULL;
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC agx_custom_glad_glLoadIdentityDeformationMapSGIX = NULL;
PFNGLLOADMATRIXDPROC agx_custom_glad_glLoadMatrixd = NULL;
PFNGLLOADMATRIXFPROC agx_custom_glad_glLoadMatrixf = NULL;
PFNGLLOADMATRIXXOESPROC agx_custom_glad_glLoadMatrixxOES = NULL;
PFNGLLOADNAMEPROC agx_custom_glad_glLoadName = NULL;
PFNGLLOADPROGRAMNVPROC agx_custom_glad_glLoadProgramNV = NULL;
PFNGLLOADTRANSPOSEMATRIXDPROC agx_custom_glad_glLoadTransposeMatrixd = NULL;
PFNGLLOADTRANSPOSEMATRIXDARBPROC agx_custom_glad_glLoadTransposeMatrixdARB = NULL;
PFNGLLOADTRANSPOSEMATRIXFPROC agx_custom_glad_glLoadTransposeMatrixf = NULL;
PFNGLLOADTRANSPOSEMATRIXFARBPROC agx_custom_glad_glLoadTransposeMatrixfARB = NULL;
PFNGLLOADTRANSPOSEMATRIXXOESPROC agx_custom_glad_glLoadTransposeMatrixxOES = NULL;
PFNGLLOCKARRAYSEXTPROC agx_custom_glad_glLockArraysEXT = NULL;
PFNGLLOGICOPPROC agx_custom_glad_glLogicOp = NULL;
PFNGLMAKEBUFFERNONRESIDENTNVPROC agx_custom_glad_glMakeBufferNonResidentNV = NULL;
PFNGLMAKEBUFFERRESIDENTNVPROC agx_custom_glad_glMakeBufferResidentNV = NULL;
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC agx_custom_glad_glMakeImageHandleNonResidentARB = NULL;
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC agx_custom_glad_glMakeImageHandleNonResidentNV = NULL;
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC agx_custom_glad_glMakeImageHandleResidentARB = NULL;
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC agx_custom_glad_glMakeImageHandleResidentNV = NULL;
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC agx_custom_glad_glMakeNamedBufferNonResidentNV = NULL;
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC agx_custom_glad_glMakeNamedBufferResidentNV = NULL;
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC agx_custom_glad_glMakeTextureHandleNonResidentARB = NULL;
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC agx_custom_glad_glMakeTextureHandleNonResidentNV = NULL;
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC agx_custom_glad_glMakeTextureHandleResidentARB = NULL;
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC agx_custom_glad_glMakeTextureHandleResidentNV = NULL;
PFNGLMAP1DPROC agx_custom_glad_glMap1d = NULL;
PFNGLMAP1FPROC agx_custom_glad_glMap1f = NULL;
PFNGLMAP1XOESPROC agx_custom_glad_glMap1xOES = NULL;
PFNGLMAP2DPROC agx_custom_glad_glMap2d = NULL;
PFNGLMAP2FPROC agx_custom_glad_glMap2f = NULL;
PFNGLMAP2XOESPROC agx_custom_glad_glMap2xOES = NULL;
PFNGLMAPBUFFERPROC agx_custom_glad_glMapBuffer = NULL;
PFNGLMAPBUFFERARBPROC agx_custom_glad_glMapBufferARB = NULL;
PFNGLMAPBUFFERRANGEPROC agx_custom_glad_glMapBufferRange = NULL;
PFNGLMAPCONTROLPOINTSNVPROC agx_custom_glad_glMapControlPointsNV = NULL;
PFNGLMAPGRID1DPROC agx_custom_glad_glMapGrid1d = NULL;
PFNGLMAPGRID1FPROC agx_custom_glad_glMapGrid1f = NULL;
PFNGLMAPGRID1XOESPROC agx_custom_glad_glMapGrid1xOES = NULL;
PFNGLMAPGRID2DPROC agx_custom_glad_glMapGrid2d = NULL;
PFNGLMAPGRID2FPROC agx_custom_glad_glMapGrid2f = NULL;
PFNGLMAPGRID2XOESPROC agx_custom_glad_glMapGrid2xOES = NULL;
PFNGLMAPNAMEDBUFFERPROC agx_custom_glad_glMapNamedBuffer = NULL;
PFNGLMAPNAMEDBUFFEREXTPROC agx_custom_glad_glMapNamedBufferEXT = NULL;
PFNGLMAPNAMEDBUFFERRANGEPROC agx_custom_glad_glMapNamedBufferRange = NULL;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC agx_custom_glad_glMapNamedBufferRangeEXT = NULL;
PFNGLMAPOBJECTBUFFERATIPROC agx_custom_glad_glMapObjectBufferATI = NULL;
PFNGLMAPPARAMETERFVNVPROC agx_custom_glad_glMapParameterfvNV = NULL;
PFNGLMAPPARAMETERIVNVPROC agx_custom_glad_glMapParameterivNV = NULL;
PFNGLMAPTEXTURE2DINTELPROC agx_custom_glad_glMapTexture2DINTEL = NULL;
PFNGLMAPVERTEXATTRIB1DAPPLEPROC agx_custom_glad_glMapVertexAttrib1dAPPLE = NULL;
PFNGLMAPVERTEXATTRIB1FAPPLEPROC agx_custom_glad_glMapVertexAttrib1fAPPLE = NULL;
PFNGLMAPVERTEXATTRIB2DAPPLEPROC agx_custom_glad_glMapVertexAttrib2dAPPLE = NULL;
PFNGLMAPVERTEXATTRIB2FAPPLEPROC agx_custom_glad_glMapVertexAttrib2fAPPLE = NULL;
PFNGLMATERIALFPROC agx_custom_glad_glMaterialf = NULL;
PFNGLMATERIALFVPROC agx_custom_glad_glMaterialfv = NULL;
PFNGLMATERIALIPROC agx_custom_glad_glMateriali = NULL;
PFNGLMATERIALIVPROC agx_custom_glad_glMaterialiv = NULL;
PFNGLMATERIALXOESPROC agx_custom_glad_glMaterialxOES = NULL;
PFNGLMATERIALXVOESPROC agx_custom_glad_glMaterialxvOES = NULL;
PFNGLMATRIXFRUSTUMEXTPROC agx_custom_glad_glMatrixFrustumEXT = NULL;
PFNGLMATRIXINDEXPOINTERARBPROC agx_custom_glad_glMatrixIndexPointerARB = NULL;
PFNGLMATRIXINDEXUBVARBPROC agx_custom_glad_glMatrixIndexubvARB = NULL;
PFNGLMATRIXINDEXUIVARBPROC agx_custom_glad_glMatrixIndexuivARB = NULL;
PFNGLMATRIXINDEXUSVARBPROC agx_custom_glad_glMatrixIndexusvARB = NULL;
PFNGLMATRIXLOAD3X2FNVPROC agx_custom_glad_glMatrixLoad3x2fNV = NULL;
PFNGLMATRIXLOAD3X3FNVPROC agx_custom_glad_glMatrixLoad3x3fNV = NULL;
PFNGLMATRIXLOADIDENTITYEXTPROC agx_custom_glad_glMatrixLoadIdentityEXT = NULL;
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC agx_custom_glad_glMatrixLoadTranspose3x3fNV = NULL;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC agx_custom_glad_glMatrixLoadTransposedEXT = NULL;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC agx_custom_glad_glMatrixLoadTransposefEXT = NULL;
PFNGLMATRIXLOADDEXTPROC agx_custom_glad_glMatrixLoaddEXT = NULL;
PFNGLMATRIXLOADFEXTPROC agx_custom_glad_glMatrixLoadfEXT = NULL;
PFNGLMATRIXMODEPROC agx_custom_glad_glMatrixMode = NULL;
PFNGLMATRIXMULT3X2FNVPROC agx_custom_glad_glMatrixMult3x2fNV = NULL;
PFNGLMATRIXMULT3X3FNVPROC agx_custom_glad_glMatrixMult3x3fNV = NULL;
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC agx_custom_glad_glMatrixMultTranspose3x3fNV = NULL;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC agx_custom_glad_glMatrixMultTransposedEXT = NULL;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC agx_custom_glad_glMatrixMultTransposefEXT = NULL;
PFNGLMATRIXMULTDEXTPROC agx_custom_glad_glMatrixMultdEXT = NULL;
PFNGLMATRIXMULTFEXTPROC agx_custom_glad_glMatrixMultfEXT = NULL;
PFNGLMATRIXORTHOEXTPROC agx_custom_glad_glMatrixOrthoEXT = NULL;
PFNGLMATRIXPOPEXTPROC agx_custom_glad_glMatrixPopEXT = NULL;
PFNGLMATRIXPUSHEXTPROC agx_custom_glad_glMatrixPushEXT = NULL;
PFNGLMATRIXROTATEDEXTPROC agx_custom_glad_glMatrixRotatedEXT = NULL;
PFNGLMATRIXROTATEFEXTPROC agx_custom_glad_glMatrixRotatefEXT = NULL;
PFNGLMATRIXSCALEDEXTPROC agx_custom_glad_glMatrixScaledEXT = NULL;
PFNGLMATRIXSCALEFEXTPROC agx_custom_glad_glMatrixScalefEXT = NULL;
PFNGLMATRIXTRANSLATEDEXTPROC agx_custom_glad_glMatrixTranslatedEXT = NULL;
PFNGLMATRIXTRANSLATEFEXTPROC agx_custom_glad_glMatrixTranslatefEXT = NULL;
PFNGLMAXSHADERCOMPILERTHREADSARBPROC agx_custom_glad_glMaxShaderCompilerThreadsARB = NULL;
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC agx_custom_glad_glMaxShaderCompilerThreadsKHR = NULL;
PFNGLMEMORYBARRIERPROC agx_custom_glad_glMemoryBarrier = NULL;
PFNGLMEMORYBARRIERBYREGIONPROC agx_custom_glad_glMemoryBarrierByRegion = NULL;
PFNGLMEMORYBARRIEREXTPROC agx_custom_glad_glMemoryBarrierEXT = NULL;
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC agx_custom_glad_glMemoryObjectParameterivEXT = NULL;
PFNGLMINSAMPLESHADINGPROC agx_custom_glad_glMinSampleShading = NULL;
PFNGLMINSAMPLESHADINGARBPROC agx_custom_glad_glMinSampleShadingARB = NULL;
PFNGLMINMAXPROC agx_custom_glad_glMinmax = NULL;
PFNGLMINMAXEXTPROC agx_custom_glad_glMinmaxEXT = NULL;
PFNGLMULTMATRIXDPROC agx_custom_glad_glMultMatrixd = NULL;
PFNGLMULTMATRIXFPROC agx_custom_glad_glMultMatrixf = NULL;
PFNGLMULTMATRIXXOESPROC agx_custom_glad_glMultMatrixxOES = NULL;
PFNGLMULTTRANSPOSEMATRIXDPROC agx_custom_glad_glMultTransposeMatrixd = NULL;
PFNGLMULTTRANSPOSEMATRIXDARBPROC agx_custom_glad_glMultTransposeMatrixdARB = NULL;
PFNGLMULTTRANSPOSEMATRIXFPROC agx_custom_glad_glMultTransposeMatrixf = NULL;
PFNGLMULTTRANSPOSEMATRIXFARBPROC agx_custom_glad_glMultTransposeMatrixfARB = NULL;
PFNGLMULTTRANSPOSEMATRIXXOESPROC agx_custom_glad_glMultTransposeMatrixxOES = NULL;
PFNGLMULTIDRAWARRAYSPROC agx_custom_glad_glMultiDrawArrays = NULL;
PFNGLMULTIDRAWARRAYSEXTPROC agx_custom_glad_glMultiDrawArraysEXT = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTPROC agx_custom_glad_glMultiDrawArraysIndirect = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC agx_custom_glad_glMultiDrawArraysIndirectAMD = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC agx_custom_glad_glMultiDrawArraysIndirectBindlessCountNV = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC agx_custom_glad_glMultiDrawArraysIndirectBindlessNV = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC agx_custom_glad_glMultiDrawArraysIndirectCount = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC agx_custom_glad_glMultiDrawArraysIndirectCountARB = NULL;
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC agx_custom_glad_glMultiDrawElementArrayAPPLE = NULL;
PFNGLMULTIDRAWELEMENTSPROC agx_custom_glad_glMultiDrawElements = NULL;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC agx_custom_glad_glMultiDrawElementsBaseVertex = NULL;
PFNGLMULTIDRAWELEMENTSEXTPROC agx_custom_glad_glMultiDrawElementsEXT = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC agx_custom_glad_glMultiDrawElementsIndirect = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC agx_custom_glad_glMultiDrawElementsIndirectAMD = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC agx_custom_glad_glMultiDrawElementsIndirectBindlessCountNV = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC agx_custom_glad_glMultiDrawElementsIndirectBindlessNV = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC agx_custom_glad_glMultiDrawElementsIndirectCount = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC agx_custom_glad_glMultiDrawElementsIndirectCountARB = NULL;
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC agx_custom_glad_glMultiDrawMeshTasksIndirectCountNV = NULL;
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC agx_custom_glad_glMultiDrawMeshTasksIndirectNV = NULL;
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC agx_custom_glad_glMultiDrawRangeElementArrayAPPLE = NULL;
PFNGLMULTIMODEDRAWARRAYSIBMPROC agx_custom_glad_glMultiModeDrawArraysIBM = NULL;
PFNGLMULTIMODEDRAWELEMENTSIBMPROC agx_custom_glad_glMultiModeDrawElementsIBM = NULL;
PFNGLMULTITEXBUFFEREXTPROC agx_custom_glad_glMultiTexBufferEXT = NULL;
PFNGLMULTITEXCOORD1BOESPROC agx_custom_glad_glMultiTexCoord1bOES = NULL;
PFNGLMULTITEXCOORD1BVOESPROC agx_custom_glad_glMultiTexCoord1bvOES = NULL;
PFNGLMULTITEXCOORD1DPROC agx_custom_glad_glMultiTexCoord1d = NULL;
PFNGLMULTITEXCOORD1DARBPROC agx_custom_glad_glMultiTexCoord1dARB = NULL;
PFNGLMULTITEXCOORD1DVPROC agx_custom_glad_glMultiTexCoord1dv = NULL;
PFNGLMULTITEXCOORD1DVARBPROC agx_custom_glad_glMultiTexCoord1dvARB = NULL;
PFNGLMULTITEXCOORD1FPROC agx_custom_glad_glMultiTexCoord1f = NULL;
PFNGLMULTITEXCOORD1FARBPROC agx_custom_glad_glMultiTexCoord1fARB = NULL;
PFNGLMULTITEXCOORD1FVPROC agx_custom_glad_glMultiTexCoord1fv = NULL;
PFNGLMULTITEXCOORD1FVARBPROC agx_custom_glad_glMultiTexCoord1fvARB = NULL;
PFNGLMULTITEXCOORD1HNVPROC agx_custom_glad_glMultiTexCoord1hNV = NULL;
PFNGLMULTITEXCOORD1HVNVPROC agx_custom_glad_glMultiTexCoord1hvNV = NULL;
PFNGLMULTITEXCOORD1IPROC agx_custom_glad_glMultiTexCoord1i = NULL;
PFNGLMULTITEXCOORD1IARBPROC agx_custom_glad_glMultiTexCoord1iARB = NULL;
PFNGLMULTITEXCOORD1IVPROC agx_custom_glad_glMultiTexCoord1iv = NULL;
PFNGLMULTITEXCOORD1IVARBPROC agx_custom_glad_glMultiTexCoord1ivARB = NULL;
PFNGLMULTITEXCOORD1SPROC agx_custom_glad_glMultiTexCoord1s = NULL;
PFNGLMULTITEXCOORD1SARBPROC agx_custom_glad_glMultiTexCoord1sARB = NULL;
PFNGLMULTITEXCOORD1SVPROC agx_custom_glad_glMultiTexCoord1sv = NULL;
PFNGLMULTITEXCOORD1SVARBPROC agx_custom_glad_glMultiTexCoord1svARB = NULL;
PFNGLMULTITEXCOORD1XOESPROC agx_custom_glad_glMultiTexCoord1xOES = NULL;
PFNGLMULTITEXCOORD1XVOESPROC agx_custom_glad_glMultiTexCoord1xvOES = NULL;
PFNGLMULTITEXCOORD2BOESPROC agx_custom_glad_glMultiTexCoord2bOES = NULL;
PFNGLMULTITEXCOORD2BVOESPROC agx_custom_glad_glMultiTexCoord2bvOES = NULL;
PFNGLMULTITEXCOORD2DPROC agx_custom_glad_glMultiTexCoord2d = NULL;
PFNGLMULTITEXCOORD2DARBPROC agx_custom_glad_glMultiTexCoord2dARB = NULL;
PFNGLMULTITEXCOORD2DVPROC agx_custom_glad_glMultiTexCoord2dv = NULL;
PFNGLMULTITEXCOORD2DVARBPROC agx_custom_glad_glMultiTexCoord2dvARB = NULL;
PFNGLMULTITEXCOORD2FPROC agx_custom_glad_glMultiTexCoord2f = NULL;
PFNGLMULTITEXCOORD2FARBPROC agx_custom_glad_glMultiTexCoord2fARB = NULL;
PFNGLMULTITEXCOORD2FVPROC agx_custom_glad_glMultiTexCoord2fv = NULL;
PFNGLMULTITEXCOORD2FVARBPROC agx_custom_glad_glMultiTexCoord2fvARB = NULL;
PFNGLMULTITEXCOORD2HNVPROC agx_custom_glad_glMultiTexCoord2hNV = NULL;
PFNGLMULTITEXCOORD2HVNVPROC agx_custom_glad_glMultiTexCoord2hvNV = NULL;
PFNGLMULTITEXCOORD2IPROC agx_custom_glad_glMultiTexCoord2i = NULL;
PFNGLMULTITEXCOORD2IARBPROC agx_custom_glad_glMultiTexCoord2iARB = NULL;
PFNGLMULTITEXCOORD2IVPROC agx_custom_glad_glMultiTexCoord2iv = NULL;
PFNGLMULTITEXCOORD2IVARBPROC agx_custom_glad_glMultiTexCoord2ivARB = NULL;
PFNGLMULTITEXCOORD2SPROC agx_custom_glad_glMultiTexCoord2s = NULL;
PFNGLMULTITEXCOORD2SARBPROC agx_custom_glad_glMultiTexCoord2sARB = NULL;
PFNGLMULTITEXCOORD2SVPROC agx_custom_glad_glMultiTexCoord2sv = NULL;
PFNGLMULTITEXCOORD2SVARBPROC agx_custom_glad_glMultiTexCoord2svARB = NULL;
PFNGLMULTITEXCOORD2XOESPROC agx_custom_glad_glMultiTexCoord2xOES = NULL;
PFNGLMULTITEXCOORD2XVOESPROC agx_custom_glad_glMultiTexCoord2xvOES = NULL;
PFNGLMULTITEXCOORD3BOESPROC agx_custom_glad_glMultiTexCoord3bOES = NULL;
PFNGLMULTITEXCOORD3BVOESPROC agx_custom_glad_glMultiTexCoord3bvOES = NULL;
PFNGLMULTITEXCOORD3DPROC agx_custom_glad_glMultiTexCoord3d = NULL;
PFNGLMULTITEXCOORD3DARBPROC agx_custom_glad_glMultiTexCoord3dARB = NULL;
PFNGLMULTITEXCOORD3DVPROC agx_custom_glad_glMultiTexCoord3dv = NULL;
PFNGLMULTITEXCOORD3DVARBPROC agx_custom_glad_glMultiTexCoord3dvARB = NULL;
PFNGLMULTITEXCOORD3FPROC agx_custom_glad_glMultiTexCoord3f = NULL;
PFNGLMULTITEXCOORD3FARBPROC agx_custom_glad_glMultiTexCoord3fARB = NULL;
PFNGLMULTITEXCOORD3FVPROC agx_custom_glad_glMultiTexCoord3fv = NULL;
PFNGLMULTITEXCOORD3FVARBPROC agx_custom_glad_glMultiTexCoord3fvARB = NULL;
PFNGLMULTITEXCOORD3HNVPROC agx_custom_glad_glMultiTexCoord3hNV = NULL;
PFNGLMULTITEXCOORD3HVNVPROC agx_custom_glad_glMultiTexCoord3hvNV = NULL;
PFNGLMULTITEXCOORD3IPROC agx_custom_glad_glMultiTexCoord3i = NULL;
PFNGLMULTITEXCOORD3IARBPROC agx_custom_glad_glMultiTexCoord3iARB = NULL;
PFNGLMULTITEXCOORD3IVPROC agx_custom_glad_glMultiTexCoord3iv = NULL;
PFNGLMULTITEXCOORD3IVARBPROC agx_custom_glad_glMultiTexCoord3ivARB = NULL;
PFNGLMULTITEXCOORD3SPROC agx_custom_glad_glMultiTexCoord3s = NULL;
PFNGLMULTITEXCOORD3SARBPROC agx_custom_glad_glMultiTexCoord3sARB = NULL;
PFNGLMULTITEXCOORD3SVPROC agx_custom_glad_glMultiTexCoord3sv = NULL;
PFNGLMULTITEXCOORD3SVARBPROC agx_custom_glad_glMultiTexCoord3svARB = NULL;
PFNGLMULTITEXCOORD3XOESPROC agx_custom_glad_glMultiTexCoord3xOES = NULL;
PFNGLMULTITEXCOORD3XVOESPROC agx_custom_glad_glMultiTexCoord3xvOES = NULL;
PFNGLMULTITEXCOORD4BOESPROC agx_custom_glad_glMultiTexCoord4bOES = NULL;
PFNGLMULTITEXCOORD4BVOESPROC agx_custom_glad_glMultiTexCoord4bvOES = NULL;
PFNGLMULTITEXCOORD4DPROC agx_custom_glad_glMultiTexCoord4d = NULL;
PFNGLMULTITEXCOORD4DARBPROC agx_custom_glad_glMultiTexCoord4dARB = NULL;
PFNGLMULTITEXCOORD4DVPROC agx_custom_glad_glMultiTexCoord4dv = NULL;
PFNGLMULTITEXCOORD4DVARBPROC agx_custom_glad_glMultiTexCoord4dvARB = NULL;
PFNGLMULTITEXCOORD4FPROC agx_custom_glad_glMultiTexCoord4f = NULL;
PFNGLMULTITEXCOORD4FARBPROC agx_custom_glad_glMultiTexCoord4fARB = NULL;
PFNGLMULTITEXCOORD4FVPROC agx_custom_glad_glMultiTexCoord4fv = NULL;
PFNGLMULTITEXCOORD4FVARBPROC agx_custom_glad_glMultiTexCoord4fvARB = NULL;
PFNGLMULTITEXCOORD4HNVPROC agx_custom_glad_glMultiTexCoord4hNV = NULL;
PFNGLMULTITEXCOORD4HVNVPROC agx_custom_glad_glMultiTexCoord4hvNV = NULL;
PFNGLMULTITEXCOORD4IPROC agx_custom_glad_glMultiTexCoord4i = NULL;
PFNGLMULTITEXCOORD4IARBPROC agx_custom_glad_glMultiTexCoord4iARB = NULL;
PFNGLMULTITEXCOORD4IVPROC agx_custom_glad_glMultiTexCoord4iv = NULL;
PFNGLMULTITEXCOORD4IVARBPROC agx_custom_glad_glMultiTexCoord4ivARB = NULL;
PFNGLMULTITEXCOORD4SPROC agx_custom_glad_glMultiTexCoord4s = NULL;
PFNGLMULTITEXCOORD4SARBPROC agx_custom_glad_glMultiTexCoord4sARB = NULL;
PFNGLMULTITEXCOORD4SVPROC agx_custom_glad_glMultiTexCoord4sv = NULL;
PFNGLMULTITEXCOORD4SVARBPROC agx_custom_glad_glMultiTexCoord4svARB = NULL;
PFNGLMULTITEXCOORD4XOESPROC agx_custom_glad_glMultiTexCoord4xOES = NULL;
PFNGLMULTITEXCOORD4XVOESPROC agx_custom_glad_glMultiTexCoord4xvOES = NULL;
PFNGLMULTITEXCOORDP1UIPROC agx_custom_glad_glMultiTexCoordP1ui = NULL;
PFNGLMULTITEXCOORDP1UIVPROC agx_custom_glad_glMultiTexCoordP1uiv = NULL;
PFNGLMULTITEXCOORDP2UIPROC agx_custom_glad_glMultiTexCoordP2ui = NULL;
PFNGLMULTITEXCOORDP2UIVPROC agx_custom_glad_glMultiTexCoordP2uiv = NULL;
PFNGLMULTITEXCOORDP3UIPROC agx_custom_glad_glMultiTexCoordP3ui = NULL;
PFNGLMULTITEXCOORDP3UIVPROC agx_custom_glad_glMultiTexCoordP3uiv = NULL;
PFNGLMULTITEXCOORDP4UIPROC agx_custom_glad_glMultiTexCoordP4ui = NULL;
PFNGLMULTITEXCOORDP4UIVPROC agx_custom_glad_glMultiTexCoordP4uiv = NULL;
PFNGLMULTITEXCOORDPOINTEREXTPROC agx_custom_glad_glMultiTexCoordPointerEXT = NULL;
PFNGLMULTITEXENVFEXTPROC agx_custom_glad_glMultiTexEnvfEXT = NULL;
PFNGLMULTITEXENVFVEXTPROC agx_custom_glad_glMultiTexEnvfvEXT = NULL;
PFNGLMULTITEXENVIEXTPROC agx_custom_glad_glMultiTexEnviEXT = NULL;
PFNGLMULTITEXENVIVEXTPROC agx_custom_glad_glMultiTexEnvivEXT = NULL;
PFNGLMULTITEXGENDEXTPROC agx_custom_glad_glMultiTexGendEXT = NULL;
PFNGLMULTITEXGENDVEXTPROC agx_custom_glad_glMultiTexGendvEXT = NULL;
PFNGLMULTITEXGENFEXTPROC agx_custom_glad_glMultiTexGenfEXT = NULL;
PFNGLMULTITEXGENFVEXTPROC agx_custom_glad_glMultiTexGenfvEXT = NULL;
PFNGLMULTITEXGENIEXTPROC agx_custom_glad_glMultiTexGeniEXT = NULL;
PFNGLMULTITEXGENIVEXTPROC agx_custom_glad_glMultiTexGenivEXT = NULL;
PFNGLMULTITEXIMAGE1DEXTPROC agx_custom_glad_glMultiTexImage1DEXT = NULL;
PFNGLMULTITEXIMAGE2DEXTPROC agx_custom_glad_glMultiTexImage2DEXT = NULL;
PFNGLMULTITEXIMAGE3DEXTPROC agx_custom_glad_glMultiTexImage3DEXT = NULL;
PFNGLMULTITEXPARAMETERIIVEXTPROC agx_custom_glad_glMultiTexParameterIivEXT = NULL;
PFNGLMULTITEXPARAMETERIUIVEXTPROC agx_custom_glad_glMultiTexParameterIuivEXT = NULL;
PFNGLMULTITEXPARAMETERFEXTPROC agx_custom_glad_glMultiTexParameterfEXT = NULL;
PFNGLMULTITEXPARAMETERFVEXTPROC agx_custom_glad_glMultiTexParameterfvEXT = NULL;
PFNGLMULTITEXPARAMETERIEXTPROC agx_custom_glad_glMultiTexParameteriEXT = NULL;
PFNGLMULTITEXPARAMETERIVEXTPROC agx_custom_glad_glMultiTexParameterivEXT = NULL;
PFNGLMULTITEXRENDERBUFFEREXTPROC agx_custom_glad_glMultiTexRenderbufferEXT = NULL;
PFNGLMULTITEXSUBIMAGE1DEXTPROC agx_custom_glad_glMultiTexSubImage1DEXT = NULL;
PFNGLMULTITEXSUBIMAGE2DEXTPROC agx_custom_glad_glMultiTexSubImage2DEXT = NULL;
PFNGLMULTITEXSUBIMAGE3DEXTPROC agx_custom_glad_glMultiTexSubImage3DEXT = NULL;
PFNGLMULTICASTBARRIERNVPROC agx_custom_glad_glMulticastBarrierNV = NULL;
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC agx_custom_glad_glMulticastBlitFramebufferNV = NULL;
PFNGLMULTICASTBUFFERSUBDATANVPROC agx_custom_glad_glMulticastBufferSubDataNV = NULL;
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC agx_custom_glad_glMulticastCopyBufferSubDataNV = NULL;
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC agx_custom_glad_glMulticastCopyImageSubDataNV = NULL;
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glMulticastFramebufferSampleLocationsfvNV = NULL;
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC agx_custom_glad_glMulticastGetQueryObjecti64vNV = NULL;
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC agx_custom_glad_glMulticastGetQueryObjectivNV = NULL;
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC agx_custom_glad_glMulticastGetQueryObjectui64vNV = NULL;
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC agx_custom_glad_glMulticastGetQueryObjectuivNV = NULL;
PFNGLMULTICASTSCISSORARRAYVNVXPROC agx_custom_glad_glMulticastScissorArrayvNVX = NULL;
PFNGLMULTICASTVIEWPORTARRAYVNVXPROC agx_custom_glad_glMulticastViewportArrayvNVX = NULL;
PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC agx_custom_glad_glMulticastViewportPositionWScaleNVX = NULL;
PFNGLMULTICASTWAITSYNCNVPROC agx_custom_glad_glMulticastWaitSyncNV = NULL;
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC agx_custom_glad_glNamedBufferAttachMemoryNV = NULL;
PFNGLNAMEDBUFFERDATAPROC agx_custom_glad_glNamedBufferData = NULL;
PFNGLNAMEDBUFFERDATAEXTPROC agx_custom_glad_glNamedBufferDataEXT = NULL;
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC agx_custom_glad_glNamedBufferPageCommitmentARB = NULL;
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC agx_custom_glad_glNamedBufferPageCommitmentEXT = NULL;
PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC agx_custom_glad_glNamedBufferPageCommitmentMemNV = NULL;
PFNGLNAMEDBUFFERSTORAGEPROC agx_custom_glad_glNamedBufferStorage = NULL;
PFNGLNAMEDBUFFERSTORAGEEXTPROC agx_custom_glad_glNamedBufferStorageEXT = NULL;
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC agx_custom_glad_glNamedBufferStorageExternalEXT = NULL;
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC agx_custom_glad_glNamedBufferStorageMemEXT = NULL;
PFNGLNAMEDBUFFERSUBDATAPROC agx_custom_glad_glNamedBufferSubData = NULL;
PFNGLNAMEDBUFFERSUBDATAEXTPROC agx_custom_glad_glNamedBufferSubDataEXT = NULL;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC agx_custom_glad_glNamedCopyBufferSubDataEXT = NULL;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC agx_custom_glad_glNamedFramebufferDrawBuffer = NULL;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC agx_custom_glad_glNamedFramebufferDrawBuffers = NULL;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC agx_custom_glad_glNamedFramebufferParameteri = NULL;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC agx_custom_glad_glNamedFramebufferParameteriEXT = NULL;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC agx_custom_glad_glNamedFramebufferReadBuffer = NULL;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC agx_custom_glad_glNamedFramebufferRenderbuffer = NULL;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC agx_custom_glad_glNamedFramebufferRenderbufferEXT = NULL;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC agx_custom_glad_glNamedFramebufferSampleLocationsfvARB = NULL;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC agx_custom_glad_glNamedFramebufferSampleLocationsfvNV = NULL;
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC agx_custom_glad_glNamedFramebufferSamplePositionsfvAMD = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC agx_custom_glad_glNamedFramebufferTexture = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC agx_custom_glad_glNamedFramebufferTexture1DEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC agx_custom_glad_glNamedFramebufferTexture2DEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC agx_custom_glad_glNamedFramebufferTexture3DEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC agx_custom_glad_glNamedFramebufferTextureEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC agx_custom_glad_glNamedFramebufferTextureFaceEXT = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC agx_custom_glad_glNamedFramebufferTextureLayer = NULL;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC agx_custom_glad_glNamedFramebufferTextureLayerEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC agx_custom_glad_glNamedProgramLocalParameter4dEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC agx_custom_glad_glNamedProgramLocalParameter4dvEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC agx_custom_glad_glNamedProgramLocalParameter4fEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC agx_custom_glad_glNamedProgramLocalParameter4fvEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4iEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4ivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4uiEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC agx_custom_glad_glNamedProgramLocalParameterI4uivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC agx_custom_glad_glNamedProgramLocalParameters4fvEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC agx_custom_glad_glNamedProgramLocalParametersI4ivEXT = NULL;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC agx_custom_glad_glNamedProgramLocalParametersI4uivEXT = NULL;
PFNGLNAMEDPROGRAMSTRINGEXTPROC agx_custom_glad_glNamedProgramStringEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC agx_custom_glad_glNamedRenderbufferStorage = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC agx_custom_glad_glNamedRenderbufferStorageEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC agx_custom_glad_glNamedRenderbufferStorageMultisample = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleAdvancedAMD = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleCoverageEXT = NULL;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC agx_custom_glad_glNamedRenderbufferStorageMultisampleEXT = NULL;
PFNGLNAMEDSTRINGARBPROC agx_custom_glad_glNamedStringARB = NULL;
PFNGLNEWLISTPROC agx_custom_glad_glNewList = NULL;
PFNGLNEWOBJECTBUFFERATIPROC agx_custom_glad_glNewObjectBufferATI = NULL;
PFNGLNORMAL3BPROC agx_custom_glad_glNormal3b = NULL;
PFNGLNORMAL3BVPROC agx_custom_glad_glNormal3bv = NULL;
PFNGLNORMAL3DPROC agx_custom_glad_glNormal3d = NULL;
PFNGLNORMAL3DVPROC agx_custom_glad_glNormal3dv = NULL;
PFNGLNORMAL3FPROC agx_custom_glad_glNormal3f = NULL;
PFNGLNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glNormal3fVertex3fSUN = NULL;
PFNGLNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glNormal3fVertex3fvSUN = NULL;
PFNGLNORMAL3FVPROC agx_custom_glad_glNormal3fv = NULL;
PFNGLNORMAL3HNVPROC agx_custom_glad_glNormal3hNV = NULL;
PFNGLNORMAL3HVNVPROC agx_custom_glad_glNormal3hvNV = NULL;
PFNGLNORMAL3IPROC agx_custom_glad_glNormal3i = NULL;
PFNGLNORMAL3IVPROC agx_custom_glad_glNormal3iv = NULL;
PFNGLNORMAL3SPROC agx_custom_glad_glNormal3s = NULL;
PFNGLNORMAL3SVPROC agx_custom_glad_glNormal3sv = NULL;
PFNGLNORMAL3XOESPROC agx_custom_glad_glNormal3xOES = NULL;
PFNGLNORMAL3XVOESPROC agx_custom_glad_glNormal3xvOES = NULL;
PFNGLNORMALFORMATNVPROC agx_custom_glad_glNormalFormatNV = NULL;
PFNGLNORMALP3UIPROC agx_custom_glad_glNormalP3ui = NULL;
PFNGLNORMALP3UIVPROC agx_custom_glad_glNormalP3uiv = NULL;
PFNGLNORMALPOINTERPROC agx_custom_glad_glNormalPointer = NULL;
PFNGLNORMALPOINTEREXTPROC agx_custom_glad_glNormalPointerEXT = NULL;
PFNGLNORMALPOINTERLISTIBMPROC agx_custom_glad_glNormalPointerListIBM = NULL;
PFNGLNORMALPOINTERVINTELPROC agx_custom_glad_glNormalPointervINTEL = NULL;
PFNGLNORMALSTREAM3BATIPROC agx_custom_glad_glNormalStream3bATI = NULL;
PFNGLNORMALSTREAM3BVATIPROC agx_custom_glad_glNormalStream3bvATI = NULL;
PFNGLNORMALSTREAM3DATIPROC agx_custom_glad_glNormalStream3dATI = NULL;
PFNGLNORMALSTREAM3DVATIPROC agx_custom_glad_glNormalStream3dvATI = NULL;
PFNGLNORMALSTREAM3FATIPROC agx_custom_glad_glNormalStream3fATI = NULL;
PFNGLNORMALSTREAM3FVATIPROC agx_custom_glad_glNormalStream3fvATI = NULL;
PFNGLNORMALSTREAM3IATIPROC agx_custom_glad_glNormalStream3iATI = NULL;
PFNGLNORMALSTREAM3IVATIPROC agx_custom_glad_glNormalStream3ivATI = NULL;
PFNGLNORMALSTREAM3SATIPROC agx_custom_glad_glNormalStream3sATI = NULL;
PFNGLNORMALSTREAM3SVATIPROC agx_custom_glad_glNormalStream3svATI = NULL;
PFNGLOBJECTLABELPROC agx_custom_glad_glObjectLabel = NULL;
PFNGLOBJECTPTRLABELPROC agx_custom_glad_glObjectPtrLabel = NULL;
PFNGLOBJECTPURGEABLEAPPLEPROC agx_custom_glad_glObjectPurgeableAPPLE = NULL;
PFNGLOBJECTUNPURGEABLEAPPLEPROC agx_custom_glad_glObjectUnpurgeableAPPLE = NULL;
PFNGLORTHOPROC agx_custom_glad_glOrtho = NULL;
PFNGLORTHOFOESPROC agx_custom_glad_glOrthofOES = NULL;
PFNGLORTHOXOESPROC agx_custom_glad_glOrthoxOES = NULL;
PFNGLPNTRIANGLESFATIPROC agx_custom_glad_glPNTrianglesfATI = NULL;
PFNGLPNTRIANGLESIATIPROC agx_custom_glad_glPNTrianglesiATI = NULL;
PFNGLPASSTEXCOORDATIPROC agx_custom_glad_glPassTexCoordATI = NULL;
PFNGLPASSTHROUGHPROC agx_custom_glad_glPassThrough = NULL;
PFNGLPASSTHROUGHXOESPROC agx_custom_glad_glPassThroughxOES = NULL;
PFNGLPATCHPARAMETERFVPROC agx_custom_glad_glPatchParameterfv = NULL;
PFNGLPATCHPARAMETERIPROC agx_custom_glad_glPatchParameteri = NULL;
PFNGLPATHCOLORGENNVPROC agx_custom_glad_glPathColorGenNV = NULL;
PFNGLPATHCOMMANDSNVPROC agx_custom_glad_glPathCommandsNV = NULL;
PFNGLPATHCOORDSNVPROC agx_custom_glad_glPathCoordsNV = NULL;
PFNGLPATHCOVERDEPTHFUNCNVPROC agx_custom_glad_glPathCoverDepthFuncNV = NULL;
PFNGLPATHDASHARRAYNVPROC agx_custom_glad_glPathDashArrayNV = NULL;
PFNGLPATHFOGGENNVPROC agx_custom_glad_glPathFogGenNV = NULL;
PFNGLPATHGLYPHINDEXARRAYNVPROC agx_custom_glad_glPathGlyphIndexArrayNV = NULL;
PFNGLPATHGLYPHINDEXRANGENVPROC agx_custom_glad_glPathGlyphIndexRangeNV = NULL;
PFNGLPATHGLYPHRANGENVPROC agx_custom_glad_glPathGlyphRangeNV = NULL;
PFNGLPATHGLYPHSNVPROC agx_custom_glad_glPathGlyphsNV = NULL;
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC agx_custom_glad_glPathMemoryGlyphIndexArrayNV = NULL;
PFNGLPATHPARAMETERFNVPROC agx_custom_glad_glPathParameterfNV = NULL;
PFNGLPATHPARAMETERFVNVPROC agx_custom_glad_glPathParameterfvNV = NULL;
PFNGLPATHPARAMETERINVPROC agx_custom_glad_glPathParameteriNV = NULL;
PFNGLPATHPARAMETERIVNVPROC agx_custom_glad_glPathParameterivNV = NULL;
PFNGLPATHSTENCILDEPTHOFFSETNVPROC agx_custom_glad_glPathStencilDepthOffsetNV = NULL;
PFNGLPATHSTENCILFUNCNVPROC agx_custom_glad_glPathStencilFuncNV = NULL;
PFNGLPATHSTRINGNVPROC agx_custom_glad_glPathStringNV = NULL;
PFNGLPATHSUBCOMMANDSNVPROC agx_custom_glad_glPathSubCommandsNV = NULL;
PFNGLPATHSUBCOORDSNVPROC agx_custom_glad_glPathSubCoordsNV = NULL;
PFNGLPATHTEXGENNVPROC agx_custom_glad_glPathTexGenNV = NULL;
PFNGLPAUSETRANSFORMFEEDBACKPROC agx_custom_glad_glPauseTransformFeedback = NULL;
PFNGLPAUSETRANSFORMFEEDBACKNVPROC agx_custom_glad_glPauseTransformFeedbackNV = NULL;
PFNGLPIXELDATARANGENVPROC agx_custom_glad_glPixelDataRangeNV = NULL;
PFNGLPIXELMAPFVPROC agx_custom_glad_glPixelMapfv = NULL;
PFNGLPIXELMAPUIVPROC agx_custom_glad_glPixelMapuiv = NULL;
PFNGLPIXELMAPUSVPROC agx_custom_glad_glPixelMapusv = NULL;
PFNGLPIXELMAPXPROC agx_custom_glad_glPixelMapx = NULL;
PFNGLPIXELSTOREFPROC agx_custom_glad_glPixelStoref = NULL;
PFNGLPIXELSTOREIPROC agx_custom_glad_glPixelStorei = NULL;
PFNGLPIXELSTOREXPROC agx_custom_glad_glPixelStorex = NULL;
PFNGLPIXELTEXGENPARAMETERFSGISPROC agx_custom_glad_glPixelTexGenParameterfSGIS = NULL;
PFNGLPIXELTEXGENPARAMETERFVSGISPROC agx_custom_glad_glPixelTexGenParameterfvSGIS = NULL;
PFNGLPIXELTEXGENPARAMETERISGISPROC agx_custom_glad_glPixelTexGenParameteriSGIS = NULL;
PFNGLPIXELTEXGENPARAMETERIVSGISPROC agx_custom_glad_glPixelTexGenParameterivSGIS = NULL;
PFNGLPIXELTEXGENSGIXPROC agx_custom_glad_glPixelTexGenSGIX = NULL;
PFNGLPIXELTRANSFERFPROC agx_custom_glad_glPixelTransferf = NULL;
PFNGLPIXELTRANSFERIPROC agx_custom_glad_glPixelTransferi = NULL;
PFNGLPIXELTRANSFERXOESPROC agx_custom_glad_glPixelTransferxOES = NULL;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC agx_custom_glad_glPixelTransformParameterfEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC agx_custom_glad_glPixelTransformParameterfvEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC agx_custom_glad_glPixelTransformParameteriEXT = NULL;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC agx_custom_glad_glPixelTransformParameterivEXT = NULL;
PFNGLPIXELZOOMPROC agx_custom_glad_glPixelZoom = NULL;
PFNGLPIXELZOOMXOESPROC agx_custom_glad_glPixelZoomxOES = NULL;
PFNGLPOINTALONGPATHNVPROC agx_custom_glad_glPointAlongPathNV = NULL;
PFNGLPOINTPARAMETERFPROC agx_custom_glad_glPointParameterf = NULL;
PFNGLPOINTPARAMETERFARBPROC agx_custom_glad_glPointParameterfARB = NULL;
PFNGLPOINTPARAMETERFEXTPROC agx_custom_glad_glPointParameterfEXT = NULL;
PFNGLPOINTPARAMETERFSGISPROC agx_custom_glad_glPointParameterfSGIS = NULL;
PFNGLPOINTPARAMETERFVPROC agx_custom_glad_glPointParameterfv = NULL;
PFNGLPOINTPARAMETERFVARBPROC agx_custom_glad_glPointParameterfvARB = NULL;
PFNGLPOINTPARAMETERFVEXTPROC agx_custom_glad_glPointParameterfvEXT = NULL;
PFNGLPOINTPARAMETERFVSGISPROC agx_custom_glad_glPointParameterfvSGIS = NULL;
PFNGLPOINTPARAMETERIPROC agx_custom_glad_glPointParameteri = NULL;
PFNGLPOINTPARAMETERINVPROC agx_custom_glad_glPointParameteriNV = NULL;
PFNGLPOINTPARAMETERIVPROC agx_custom_glad_glPointParameteriv = NULL;
PFNGLPOINTPARAMETERIVNVPROC agx_custom_glad_glPointParameterivNV = NULL;
PFNGLPOINTPARAMETERXVOESPROC agx_custom_glad_glPointParameterxvOES = NULL;
PFNGLPOINTSIZEPROC agx_custom_glad_glPointSize = NULL;
PFNGLPOINTSIZEXOESPROC agx_custom_glad_glPointSizexOES = NULL;
PFNGLPOLLASYNCSGIXPROC agx_custom_glad_glPollAsyncSGIX = NULL;
PFNGLPOLLINSTRUMENTSSGIXPROC agx_custom_glad_glPollInstrumentsSGIX = NULL;
PFNGLPOLYGONMODEPROC agx_custom_glad_glPolygonMode = NULL;
PFNGLPOLYGONOFFSETPROC agx_custom_glad_glPolygonOffset = NULL;
PFNGLPOLYGONOFFSETCLAMPPROC agx_custom_glad_glPolygonOffsetClamp = NULL;
PFNGLPOLYGONOFFSETCLAMPEXTPROC agx_custom_glad_glPolygonOffsetClampEXT = NULL;
PFNGLPOLYGONOFFSETEXTPROC agx_custom_glad_glPolygonOffsetEXT = NULL;
PFNGLPOLYGONOFFSETXOESPROC agx_custom_glad_glPolygonOffsetxOES = NULL;
PFNGLPOLYGONSTIPPLEPROC agx_custom_glad_glPolygonStipple = NULL;
PFNGLPOPATTRIBPROC agx_custom_glad_glPopAttrib = NULL;
PFNGLPOPCLIENTATTRIBPROC agx_custom_glad_glPopClientAttrib = NULL;
PFNGLPOPDEBUGGROUPPROC agx_custom_glad_glPopDebugGroup = NULL;
PFNGLPOPGROUPMARKEREXTPROC agx_custom_glad_glPopGroupMarkerEXT = NULL;
PFNGLPOPMATRIXPROC agx_custom_glad_glPopMatrix = NULL;
PFNGLPOPNAMEPROC agx_custom_glad_glPopName = NULL;
PFNGLPRESENTFRAMEDUALFILLNVPROC agx_custom_glad_glPresentFrameDualFillNV = NULL;
PFNGLPRESENTFRAMEKEYEDNVPROC agx_custom_glad_glPresentFrameKeyedNV = NULL;
PFNGLPRIMITIVEBOUNDINGBOXARBPROC agx_custom_glad_glPrimitiveBoundingBoxARB = NULL;
PFNGLPRIMITIVERESTARTINDEXPROC agx_custom_glad_glPrimitiveRestartIndex = NULL;
PFNGLPRIMITIVERESTARTINDEXNVPROC agx_custom_glad_glPrimitiveRestartIndexNV = NULL;
PFNGLPRIMITIVERESTARTNVPROC agx_custom_glad_glPrimitiveRestartNV = NULL;
PFNGLPRIORITIZETEXTURESPROC agx_custom_glad_glPrioritizeTextures = NULL;
PFNGLPRIORITIZETEXTURESEXTPROC agx_custom_glad_glPrioritizeTexturesEXT = NULL;
PFNGLPRIORITIZETEXTURESXOESPROC agx_custom_glad_glPrioritizeTexturesxOES = NULL;
PFNGLPROGRAMBINARYPROC agx_custom_glad_glProgramBinary = NULL;
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC agx_custom_glad_glProgramBufferParametersIivNV = NULL;
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC agx_custom_glad_glProgramBufferParametersIuivNV = NULL;
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC agx_custom_glad_glProgramBufferParametersfvNV = NULL;
PFNGLPROGRAMENVPARAMETER4DARBPROC agx_custom_glad_glProgramEnvParameter4dARB = NULL;
PFNGLPROGRAMENVPARAMETER4DVARBPROC agx_custom_glad_glProgramEnvParameter4dvARB = NULL;
PFNGLPROGRAMENVPARAMETER4FARBPROC agx_custom_glad_glProgramEnvParameter4fARB = NULL;
PFNGLPROGRAMENVPARAMETER4FVARBPROC agx_custom_glad_glProgramEnvParameter4fvARB = NULL;
PFNGLPROGRAMENVPARAMETERI4INVPROC agx_custom_glad_glProgramEnvParameterI4iNV = NULL;
PFNGLPROGRAMENVPARAMETERI4IVNVPROC agx_custom_glad_glProgramEnvParameterI4ivNV = NULL;
PFNGLPROGRAMENVPARAMETERI4UINVPROC agx_custom_glad_glProgramEnvParameterI4uiNV = NULL;
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC agx_custom_glad_glProgramEnvParameterI4uivNV = NULL;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC agx_custom_glad_glProgramEnvParameters4fvEXT = NULL;
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC agx_custom_glad_glProgramEnvParametersI4ivNV = NULL;
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC agx_custom_glad_glProgramEnvParametersI4uivNV = NULL;
PFNGLPROGRAMLOCALPARAMETER4DARBPROC agx_custom_glad_glProgramLocalParameter4dARB = NULL;
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC agx_custom_glad_glProgramLocalParameter4dvARB = NULL;
PFNGLPROGRAMLOCALPARAMETER4FARBPROC agx_custom_glad_glProgramLocalParameter4fARB = NULL;
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC agx_custom_glad_glProgramLocalParameter4fvARB = NULL;
PFNGLPROGRAMLOCALPARAMETERI4INVPROC agx_custom_glad_glProgramLocalParameterI4iNV = NULL;
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC agx_custom_glad_glProgramLocalParameterI4ivNV = NULL;
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC agx_custom_glad_glProgramLocalParameterI4uiNV = NULL;
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC agx_custom_glad_glProgramLocalParameterI4uivNV = NULL;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC agx_custom_glad_glProgramLocalParameters4fvEXT = NULL;
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC agx_custom_glad_glProgramLocalParametersI4ivNV = NULL;
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC agx_custom_glad_glProgramLocalParametersI4uivNV = NULL;
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC agx_custom_glad_glProgramNamedParameter4dNV = NULL;
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC agx_custom_glad_glProgramNamedParameter4dvNV = NULL;
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC agx_custom_glad_glProgramNamedParameter4fNV = NULL;
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC agx_custom_glad_glProgramNamedParameter4fvNV = NULL;
PFNGLPROGRAMPARAMETER4DNVPROC agx_custom_glad_glProgramParameter4dNV = NULL;
PFNGLPROGRAMPARAMETER4DVNVPROC agx_custom_glad_glProgramParameter4dvNV = NULL;
PFNGLPROGRAMPARAMETER4FNVPROC agx_custom_glad_glProgramParameter4fNV = NULL;
PFNGLPROGRAMPARAMETER4FVNVPROC agx_custom_glad_glProgramParameter4fvNV = NULL;
PFNGLPROGRAMPARAMETERIPROC agx_custom_glad_glProgramParameteri = NULL;
PFNGLPROGRAMPARAMETERIARBPROC agx_custom_glad_glProgramParameteriARB = NULL;
PFNGLPROGRAMPARAMETERIEXTPROC agx_custom_glad_glProgramParameteriEXT = NULL;
PFNGLPROGRAMPARAMETERS4DVNVPROC agx_custom_glad_glProgramParameters4dvNV = NULL;
PFNGLPROGRAMPARAMETERS4FVNVPROC agx_custom_glad_glProgramParameters4fvNV = NULL;
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC agx_custom_glad_glProgramPathFragmentInputGenNV = NULL;
PFNGLPROGRAMSTRINGARBPROC agx_custom_glad_glProgramStringARB = NULL;
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC agx_custom_glad_glProgramSubroutineParametersuivNV = NULL;
PFNGLPROGRAMUNIFORM1DPROC agx_custom_glad_glProgramUniform1d = NULL;
PFNGLPROGRAMUNIFORM1DEXTPROC agx_custom_glad_glProgramUniform1dEXT = NULL;
PFNGLPROGRAMUNIFORM1DVPROC agx_custom_glad_glProgramUniform1dv = NULL;
PFNGLPROGRAMUNIFORM1DVEXTPROC agx_custom_glad_glProgramUniform1dvEXT = NULL;
PFNGLPROGRAMUNIFORM1FPROC agx_custom_glad_glProgramUniform1f = NULL;
PFNGLPROGRAMUNIFORM1FEXTPROC agx_custom_glad_glProgramUniform1fEXT = NULL;
PFNGLPROGRAMUNIFORM1FVPROC agx_custom_glad_glProgramUniform1fv = NULL;
PFNGLPROGRAMUNIFORM1FVEXTPROC agx_custom_glad_glProgramUniform1fvEXT = NULL;
PFNGLPROGRAMUNIFORM1IPROC agx_custom_glad_glProgramUniform1i = NULL;
PFNGLPROGRAMUNIFORM1I64ARBPROC agx_custom_glad_glProgramUniform1i64ARB = NULL;
PFNGLPROGRAMUNIFORM1I64NVPROC agx_custom_glad_glProgramUniform1i64NV = NULL;
PFNGLPROGRAMUNIFORM1I64VARBPROC agx_custom_glad_glProgramUniform1i64vARB = NULL;
PFNGLPROGRAMUNIFORM1I64VNVPROC agx_custom_glad_glProgramUniform1i64vNV = NULL;
PFNGLPROGRAMUNIFORM1IEXTPROC agx_custom_glad_glProgramUniform1iEXT = NULL;
PFNGLPROGRAMUNIFORM1IVPROC agx_custom_glad_glProgramUniform1iv = NULL;
PFNGLPROGRAMUNIFORM1IVEXTPROC agx_custom_glad_glProgramUniform1ivEXT = NULL;
PFNGLPROGRAMUNIFORM1UIPROC agx_custom_glad_glProgramUniform1ui = NULL;
PFNGLPROGRAMUNIFORM1UI64ARBPROC agx_custom_glad_glProgramUniform1ui64ARB = NULL;
PFNGLPROGRAMUNIFORM1UI64NVPROC agx_custom_glad_glProgramUniform1ui64NV = NULL;
PFNGLPROGRAMUNIFORM1UI64VARBPROC agx_custom_glad_glProgramUniform1ui64vARB = NULL;
PFNGLPROGRAMUNIFORM1UI64VNVPROC agx_custom_glad_glProgramUniform1ui64vNV = NULL;
PFNGLPROGRAMUNIFORM1UIEXTPROC agx_custom_glad_glProgramUniform1uiEXT = NULL;
PFNGLPROGRAMUNIFORM1UIVPROC agx_custom_glad_glProgramUniform1uiv = NULL;
PFNGLPROGRAMUNIFORM1UIVEXTPROC agx_custom_glad_glProgramUniform1uivEXT = NULL;
PFNGLPROGRAMUNIFORM2DPROC agx_custom_glad_glProgramUniform2d = NULL;
PFNGLPROGRAMUNIFORM2DEXTPROC agx_custom_glad_glProgramUniform2dEXT = NULL;
PFNGLPROGRAMUNIFORM2DVPROC agx_custom_glad_glProgramUniform2dv = NULL;
PFNGLPROGRAMUNIFORM2DVEXTPROC agx_custom_glad_glProgramUniform2dvEXT = NULL;
PFNGLPROGRAMUNIFORM2FPROC agx_custom_glad_glProgramUniform2f = NULL;
PFNGLPROGRAMUNIFORM2FEXTPROC agx_custom_glad_glProgramUniform2fEXT = NULL;
PFNGLPROGRAMUNIFORM2FVPROC agx_custom_glad_glProgramUniform2fv = NULL;
PFNGLPROGRAMUNIFORM2FVEXTPROC agx_custom_glad_glProgramUniform2fvEXT = NULL;
PFNGLPROGRAMUNIFORM2IPROC agx_custom_glad_glProgramUniform2i = NULL;
PFNGLPROGRAMUNIFORM2I64ARBPROC agx_custom_glad_glProgramUniform2i64ARB = NULL;
PFNGLPROGRAMUNIFORM2I64NVPROC agx_custom_glad_glProgramUniform2i64NV = NULL;
PFNGLPROGRAMUNIFORM2I64VARBPROC agx_custom_glad_glProgramUniform2i64vARB = NULL;
PFNGLPROGRAMUNIFORM2I64VNVPROC agx_custom_glad_glProgramUniform2i64vNV = NULL;
PFNGLPROGRAMUNIFORM2IEXTPROC agx_custom_glad_glProgramUniform2iEXT = NULL;
PFNGLPROGRAMUNIFORM2IVPROC agx_custom_glad_glProgramUniform2iv = NULL;
PFNGLPROGRAMUNIFORM2IVEXTPROC agx_custom_glad_glProgramUniform2ivEXT = NULL;
PFNGLPROGRAMUNIFORM2UIPROC agx_custom_glad_glProgramUniform2ui = NULL;
PFNGLPROGRAMUNIFORM2UI64ARBPROC agx_custom_glad_glProgramUniform2ui64ARB = NULL;
PFNGLPROGRAMUNIFORM2UI64NVPROC agx_custom_glad_glProgramUniform2ui64NV = NULL;
PFNGLPROGRAMUNIFORM2UI64VARBPROC agx_custom_glad_glProgramUniform2ui64vARB = NULL;
PFNGLPROGRAMUNIFORM2UI64VNVPROC agx_custom_glad_glProgramUniform2ui64vNV = NULL;
PFNGLPROGRAMUNIFORM2UIEXTPROC agx_custom_glad_glProgramUniform2uiEXT = NULL;
PFNGLPROGRAMUNIFORM2UIVPROC agx_custom_glad_glProgramUniform2uiv = NULL;
PFNGLPROGRAMUNIFORM2UIVEXTPROC agx_custom_glad_glProgramUniform2uivEXT = NULL;
PFNGLPROGRAMUNIFORM3DPROC agx_custom_glad_glProgramUniform3d = NULL;
PFNGLPROGRAMUNIFORM3DEXTPROC agx_custom_glad_glProgramUniform3dEXT = NULL;
PFNGLPROGRAMUNIFORM3DVPROC agx_custom_glad_glProgramUniform3dv = NULL;
PFNGLPROGRAMUNIFORM3DVEXTPROC agx_custom_glad_glProgramUniform3dvEXT = NULL;
PFNGLPROGRAMUNIFORM3FPROC agx_custom_glad_glProgramUniform3f = NULL;
PFNGLPROGRAMUNIFORM3FEXTPROC agx_custom_glad_glProgramUniform3fEXT = NULL;
PFNGLPROGRAMUNIFORM3FVPROC agx_custom_glad_glProgramUniform3fv = NULL;
PFNGLPROGRAMUNIFORM3FVEXTPROC agx_custom_glad_glProgramUniform3fvEXT = NULL;
PFNGLPROGRAMUNIFORM3IPROC agx_custom_glad_glProgramUniform3i = NULL;
PFNGLPROGRAMUNIFORM3I64ARBPROC agx_custom_glad_glProgramUniform3i64ARB = NULL;
PFNGLPROGRAMUNIFORM3I64NVPROC agx_custom_glad_glProgramUniform3i64NV = NULL;
PFNGLPROGRAMUNIFORM3I64VARBPROC agx_custom_glad_glProgramUniform3i64vARB = NULL;
PFNGLPROGRAMUNIFORM3I64VNVPROC agx_custom_glad_glProgramUniform3i64vNV = NULL;
PFNGLPROGRAMUNIFORM3IEXTPROC agx_custom_glad_glProgramUniform3iEXT = NULL;
PFNGLPROGRAMUNIFORM3IVPROC agx_custom_glad_glProgramUniform3iv = NULL;
PFNGLPROGRAMUNIFORM3IVEXTPROC agx_custom_glad_glProgramUniform3ivEXT = NULL;
PFNGLPROGRAMUNIFORM3UIPROC agx_custom_glad_glProgramUniform3ui = NULL;
PFNGLPROGRAMUNIFORM3UI64ARBPROC agx_custom_glad_glProgramUniform3ui64ARB = NULL;
PFNGLPROGRAMUNIFORM3UI64NVPROC agx_custom_glad_glProgramUniform3ui64NV = NULL;
PFNGLPROGRAMUNIFORM3UI64VARBPROC agx_custom_glad_glProgramUniform3ui64vARB = NULL;
PFNGLPROGRAMUNIFORM3UI64VNVPROC agx_custom_glad_glProgramUniform3ui64vNV = NULL;
PFNGLPROGRAMUNIFORM3UIEXTPROC agx_custom_glad_glProgramUniform3uiEXT = NULL;
PFNGLPROGRAMUNIFORM3UIVPROC agx_custom_glad_glProgramUniform3uiv = NULL;
PFNGLPROGRAMUNIFORM3UIVEXTPROC agx_custom_glad_glProgramUniform3uivEXT = NULL;
PFNGLPROGRAMUNIFORM4DPROC agx_custom_glad_glProgramUniform4d = NULL;
PFNGLPROGRAMUNIFORM4DEXTPROC agx_custom_glad_glProgramUniform4dEXT = NULL;
PFNGLPROGRAMUNIFORM4DVPROC agx_custom_glad_glProgramUniform4dv = NULL;
PFNGLPROGRAMUNIFORM4DVEXTPROC agx_custom_glad_glProgramUniform4dvEXT = NULL;
PFNGLPROGRAMUNIFORM4FPROC agx_custom_glad_glProgramUniform4f = NULL;
PFNGLPROGRAMUNIFORM4FEXTPROC agx_custom_glad_glProgramUniform4fEXT = NULL;
PFNGLPROGRAMUNIFORM4FVPROC agx_custom_glad_glProgramUniform4fv = NULL;
PFNGLPROGRAMUNIFORM4FVEXTPROC agx_custom_glad_glProgramUniform4fvEXT = NULL;
PFNGLPROGRAMUNIFORM4IPROC agx_custom_glad_glProgramUniform4i = NULL;
PFNGLPROGRAMUNIFORM4I64ARBPROC agx_custom_glad_glProgramUniform4i64ARB = NULL;
PFNGLPROGRAMUNIFORM4I64NVPROC agx_custom_glad_glProgramUniform4i64NV = NULL;
PFNGLPROGRAMUNIFORM4I64VARBPROC agx_custom_glad_glProgramUniform4i64vARB = NULL;
PFNGLPROGRAMUNIFORM4I64VNVPROC agx_custom_glad_glProgramUniform4i64vNV = NULL;
PFNGLPROGRAMUNIFORM4IEXTPROC agx_custom_glad_glProgramUniform4iEXT = NULL;
PFNGLPROGRAMUNIFORM4IVPROC agx_custom_glad_glProgramUniform4iv = NULL;
PFNGLPROGRAMUNIFORM4IVEXTPROC agx_custom_glad_glProgramUniform4ivEXT = NULL;
PFNGLPROGRAMUNIFORM4UIPROC agx_custom_glad_glProgramUniform4ui = NULL;
PFNGLPROGRAMUNIFORM4UI64ARBPROC agx_custom_glad_glProgramUniform4ui64ARB = NULL;
PFNGLPROGRAMUNIFORM4UI64NVPROC agx_custom_glad_glProgramUniform4ui64NV = NULL;
PFNGLPROGRAMUNIFORM4UI64VARBPROC agx_custom_glad_glProgramUniform4ui64vARB = NULL;
PFNGLPROGRAMUNIFORM4UI64VNVPROC agx_custom_glad_glProgramUniform4ui64vNV = NULL;
PFNGLPROGRAMUNIFORM4UIEXTPROC agx_custom_glad_glProgramUniform4uiEXT = NULL;
PFNGLPROGRAMUNIFORM4UIVPROC agx_custom_glad_glProgramUniform4uiv = NULL;
PFNGLPROGRAMUNIFORM4UIVEXTPROC agx_custom_glad_glProgramUniform4uivEXT = NULL;
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC agx_custom_glad_glProgramUniformHandleui64ARB = NULL;
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC agx_custom_glad_glProgramUniformHandleui64NV = NULL;
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC agx_custom_glad_glProgramUniformHandleui64vARB = NULL;
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC agx_custom_glad_glProgramUniformHandleui64vNV = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC agx_custom_glad_glProgramUniformMatrix2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC agx_custom_glad_glProgramUniformMatrix2dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC agx_custom_glad_glProgramUniformMatrix2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC agx_custom_glad_glProgramUniformMatrix2fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC agx_custom_glad_glProgramUniformMatrix2x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC agx_custom_glad_glProgramUniformMatrix2x3dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC agx_custom_glad_glProgramUniformMatrix2x3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC agx_custom_glad_glProgramUniformMatrix2x3fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC agx_custom_glad_glProgramUniformMatrix2x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC agx_custom_glad_glProgramUniformMatrix2x4dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC agx_custom_glad_glProgramUniformMatrix2x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC agx_custom_glad_glProgramUniformMatrix2x4fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC agx_custom_glad_glProgramUniformMatrix3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC agx_custom_glad_glProgramUniformMatrix3dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC agx_custom_glad_glProgramUniformMatrix3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC agx_custom_glad_glProgramUniformMatrix3fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC agx_custom_glad_glProgramUniformMatrix3x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC agx_custom_glad_glProgramUniformMatrix3x2dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC agx_custom_glad_glProgramUniformMatrix3x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC agx_custom_glad_glProgramUniformMatrix3x2fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC agx_custom_glad_glProgramUniformMatrix3x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC agx_custom_glad_glProgramUniformMatrix3x4dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC agx_custom_glad_glProgramUniformMatrix3x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC agx_custom_glad_glProgramUniformMatrix3x4fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC agx_custom_glad_glProgramUniformMatrix4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC agx_custom_glad_glProgramUniformMatrix4dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC agx_custom_glad_glProgramUniformMatrix4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC agx_custom_glad_glProgramUniformMatrix4fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC agx_custom_glad_glProgramUniformMatrix4x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC agx_custom_glad_glProgramUniformMatrix4x2dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC agx_custom_glad_glProgramUniformMatrix4x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC agx_custom_glad_glProgramUniformMatrix4x2fvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC agx_custom_glad_glProgramUniformMatrix4x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC agx_custom_glad_glProgramUniformMatrix4x3dvEXT = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC agx_custom_glad_glProgramUniformMatrix4x3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC agx_custom_glad_glProgramUniformMatrix4x3fvEXT = NULL;
PFNGLPROGRAMUNIFORMUI64NVPROC agx_custom_glad_glProgramUniformui64NV = NULL;
PFNGLPROGRAMUNIFORMUI64VNVPROC agx_custom_glad_glProgramUniformui64vNV = NULL;
PFNGLPROGRAMVERTEXLIMITNVPROC agx_custom_glad_glProgramVertexLimitNV = NULL;
PFNGLPROVOKINGVERTEXPROC agx_custom_glad_glProvokingVertex = NULL;
PFNGLPROVOKINGVERTEXEXTPROC agx_custom_glad_glProvokingVertexEXT = NULL;
PFNGLPUSHATTRIBPROC agx_custom_glad_glPushAttrib = NULL;
PFNGLPUSHCLIENTATTRIBPROC agx_custom_glad_glPushClientAttrib = NULL;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC agx_custom_glad_glPushClientAttribDefaultEXT = NULL;
PFNGLPUSHDEBUGGROUPPROC agx_custom_glad_glPushDebugGroup = NULL;
PFNGLPUSHGROUPMARKEREXTPROC agx_custom_glad_glPushGroupMarkerEXT = NULL;
PFNGLPUSHMATRIXPROC agx_custom_glad_glPushMatrix = NULL;
PFNGLPUSHNAMEPROC agx_custom_glad_glPushName = NULL;
PFNGLQUERYCOUNTERPROC agx_custom_glad_glQueryCounter = NULL;
PFNGLQUERYMATRIXXOESPROC agx_custom_glad_glQueryMatrixxOES = NULL;
PFNGLQUERYOBJECTPARAMETERUIAMDPROC agx_custom_glad_glQueryObjectParameteruiAMD = NULL;
PFNGLQUERYRESOURCENVPROC agx_custom_glad_glQueryResourceNV = NULL;
PFNGLQUERYRESOURCETAGNVPROC agx_custom_glad_glQueryResourceTagNV = NULL;
PFNGLRASTERPOS2DPROC agx_custom_glad_glRasterPos2d = NULL;
PFNGLRASTERPOS2DVPROC agx_custom_glad_glRasterPos2dv = NULL;
PFNGLRASTERPOS2FPROC agx_custom_glad_glRasterPos2f = NULL;
PFNGLRASTERPOS2FVPROC agx_custom_glad_glRasterPos2fv = NULL;
PFNGLRASTERPOS2IPROC agx_custom_glad_glRasterPos2i = NULL;
PFNGLRASTERPOS2IVPROC agx_custom_glad_glRasterPos2iv = NULL;
PFNGLRASTERPOS2SPROC agx_custom_glad_glRasterPos2s = NULL;
PFNGLRASTERPOS2SVPROC agx_custom_glad_glRasterPos2sv = NULL;
PFNGLRASTERPOS2XOESPROC agx_custom_glad_glRasterPos2xOES = NULL;
PFNGLRASTERPOS2XVOESPROC agx_custom_glad_glRasterPos2xvOES = NULL;
PFNGLRASTERPOS3DPROC agx_custom_glad_glRasterPos3d = NULL;
PFNGLRASTERPOS3DVPROC agx_custom_glad_glRasterPos3dv = NULL;
PFNGLRASTERPOS3FPROC agx_custom_glad_glRasterPos3f = NULL;
PFNGLRASTERPOS3FVPROC agx_custom_glad_glRasterPos3fv = NULL;
PFNGLRASTERPOS3IPROC agx_custom_glad_glRasterPos3i = NULL;
PFNGLRASTERPOS3IVPROC agx_custom_glad_glRasterPos3iv = NULL;
PFNGLRASTERPOS3SPROC agx_custom_glad_glRasterPos3s = NULL;
PFNGLRASTERPOS3SVPROC agx_custom_glad_glRasterPos3sv = NULL;
PFNGLRASTERPOS3XOESPROC agx_custom_glad_glRasterPos3xOES = NULL;
PFNGLRASTERPOS3XVOESPROC agx_custom_glad_glRasterPos3xvOES = NULL;
PFNGLRASTERPOS4DPROC agx_custom_glad_glRasterPos4d = NULL;
PFNGLRASTERPOS4DVPROC agx_custom_glad_glRasterPos4dv = NULL;
PFNGLRASTERPOS4FPROC agx_custom_glad_glRasterPos4f = NULL;
PFNGLRASTERPOS4FVPROC agx_custom_glad_glRasterPos4fv = NULL;
PFNGLRASTERPOS4IPROC agx_custom_glad_glRasterPos4i = NULL;
PFNGLRASTERPOS4IVPROC agx_custom_glad_glRasterPos4iv = NULL;
PFNGLRASTERPOS4SPROC agx_custom_glad_glRasterPos4s = NULL;
PFNGLRASTERPOS4SVPROC agx_custom_glad_glRasterPos4sv = NULL;
PFNGLRASTERPOS4XOESPROC agx_custom_glad_glRasterPos4xOES = NULL;
PFNGLRASTERPOS4XVOESPROC agx_custom_glad_glRasterPos4xvOES = NULL;
PFNGLRASTERSAMPLESEXTPROC agx_custom_glad_glRasterSamplesEXT = NULL;
PFNGLREADBUFFERPROC agx_custom_glad_glReadBuffer = NULL;
PFNGLREADINSTRUMENTSSGIXPROC agx_custom_glad_glReadInstrumentsSGIX = NULL;
PFNGLREADPIXELSPROC agx_custom_glad_glReadPixels = NULL;
PFNGLREADNPIXELSPROC agx_custom_glad_glReadnPixels = NULL;
PFNGLREADNPIXELSARBPROC agx_custom_glad_glReadnPixelsARB = NULL;
PFNGLRECTDPROC agx_custom_glad_glRectd = NULL;
PFNGLRECTDVPROC agx_custom_glad_glRectdv = NULL;
PFNGLRECTFPROC agx_custom_glad_glRectf = NULL;
PFNGLRECTFVPROC agx_custom_glad_glRectfv = NULL;
PFNGLRECTIPROC agx_custom_glad_glRecti = NULL;
PFNGLRECTIVPROC agx_custom_glad_glRectiv = NULL;
PFNGLRECTSPROC agx_custom_glad_glRects = NULL;
PFNGLRECTSVPROC agx_custom_glad_glRectsv = NULL;
PFNGLRECTXOESPROC agx_custom_glad_glRectxOES = NULL;
PFNGLRECTXVOESPROC agx_custom_glad_glRectxvOES = NULL;
PFNGLREFERENCEPLANESGIXPROC agx_custom_glad_glReferencePlaneSGIX = NULL;
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC agx_custom_glad_glReleaseKeyedMutexWin32EXT = NULL;
PFNGLRELEASESHADERCOMPILERPROC agx_custom_glad_glReleaseShaderCompiler = NULL;
PFNGLRENDERGPUMASKNVPROC agx_custom_glad_glRenderGpuMaskNV = NULL;
PFNGLRENDERMODEPROC agx_custom_glad_glRenderMode = NULL;
PFNGLRENDERBUFFERSTORAGEPROC agx_custom_glad_glRenderbufferStorage = NULL;
PFNGLRENDERBUFFERSTORAGEEXTPROC agx_custom_glad_glRenderbufferStorageEXT = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC agx_custom_glad_glRenderbufferStorageMultisample = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC agx_custom_glad_glRenderbufferStorageMultisampleAdvancedAMD = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC agx_custom_glad_glRenderbufferStorageMultisampleCoverageNV = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC agx_custom_glad_glRenderbufferStorageMultisampleEXT = NULL;
PFNGLREPLACEMENTCODEPOINTERSUNPROC agx_custom_glad_glReplacementCodePointerSUN = NULL;
PFNGLREPLACEMENTCODEUBSUNPROC agx_custom_glad_glReplacementCodeubSUN = NULL;
PFNGLREPLACEMENTCODEUBVSUNPROC agx_custom_glad_glReplacementCodeubvSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor3fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor3fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiColor4ubVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiColor4ubVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiNormal3fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiNormal3fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUISUNPROC agx_custom_glad_glReplacementCodeuiSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC agx_custom_glad_glReplacementCodeuiVertex3fSUN = NULL;
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC agx_custom_glad_glReplacementCodeuiVertex3fvSUN = NULL;
PFNGLREPLACEMENTCODEUIVSUNPROC agx_custom_glad_glReplacementCodeuivSUN = NULL;
PFNGLREPLACEMENTCODEUSSUNPROC agx_custom_glad_glReplacementCodeusSUN = NULL;
PFNGLREPLACEMENTCODEUSVSUNPROC agx_custom_glad_glReplacementCodeusvSUN = NULL;
PFNGLREQUESTRESIDENTPROGRAMSNVPROC agx_custom_glad_glRequestResidentProgramsNV = NULL;
PFNGLRESETHISTOGRAMPROC agx_custom_glad_glResetHistogram = NULL;
PFNGLRESETHISTOGRAMEXTPROC agx_custom_glad_glResetHistogramEXT = NULL;
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC agx_custom_glad_glResetMemoryObjectParameterNV = NULL;
PFNGLRESETMINMAXPROC agx_custom_glad_glResetMinmax = NULL;
PFNGLRESETMINMAXEXTPROC agx_custom_glad_glResetMinmaxEXT = NULL;
PFNGLRESIZEBUFFERSMESAPROC agx_custom_glad_glResizeBuffersMESA = NULL;
PFNGLRESOLVEDEPTHVALUESNVPROC agx_custom_glad_glResolveDepthValuesNV = NULL;
PFNGLRESUMETRANSFORMFEEDBACKPROC agx_custom_glad_glResumeTransformFeedback = NULL;
PFNGLRESUMETRANSFORMFEEDBACKNVPROC agx_custom_glad_glResumeTransformFeedbackNV = NULL;
PFNGLROTATEDPROC agx_custom_glad_glRotated = NULL;
PFNGLROTATEFPROC agx_custom_glad_glRotatef = NULL;
PFNGLROTATEXOESPROC agx_custom_glad_glRotatexOES = NULL;
PFNGLSAMPLECOVERAGEPROC agx_custom_glad_glSampleCoverage = NULL;
PFNGLSAMPLECOVERAGEARBPROC agx_custom_glad_glSampleCoverageARB = NULL;
PFNGLSAMPLEMAPATIPROC agx_custom_glad_glSampleMapATI = NULL;
PFNGLSAMPLEMASKEXTPROC agx_custom_glad_glSampleMaskEXT = NULL;
PFNGLSAMPLEMASKINDEXEDNVPROC agx_custom_glad_glSampleMaskIndexedNV = NULL;
PFNGLSAMPLEMASKSGISPROC agx_custom_glad_glSampleMaskSGIS = NULL;
PFNGLSAMPLEMASKIPROC agx_custom_glad_glSampleMaski = NULL;
PFNGLSAMPLEPATTERNEXTPROC agx_custom_glad_glSamplePatternEXT = NULL;
PFNGLSAMPLEPATTERNSGISPROC agx_custom_glad_glSamplePatternSGIS = NULL;
PFNGLSAMPLERPARAMETERIIVPROC agx_custom_glad_glSamplerParameterIiv = NULL;
PFNGLSAMPLERPARAMETERIUIVPROC agx_custom_glad_glSamplerParameterIuiv = NULL;
PFNGLSAMPLERPARAMETERFPROC agx_custom_glad_glSamplerParameterf = NULL;
PFNGLSAMPLERPARAMETERFVPROC agx_custom_glad_glSamplerParameterfv = NULL;
PFNGLSAMPLERPARAMETERIPROC agx_custom_glad_glSamplerParameteri = NULL;
PFNGLSAMPLERPARAMETERIVPROC agx_custom_glad_glSamplerParameteriv = NULL;
PFNGLSCALEDPROC agx_custom_glad_glScaled = NULL;
PFNGLSCALEFPROC agx_custom_glad_glScalef = NULL;
PFNGLSCALEXOESPROC agx_custom_glad_glScalexOES = NULL;
PFNGLSCISSORPROC agx_custom_glad_glScissor = NULL;
PFNGLSCISSORARRAYVPROC agx_custom_glad_glScissorArrayv = NULL;
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC agx_custom_glad_glScissorExclusiveArrayvNV = NULL;
PFNGLSCISSOREXCLUSIVENVPROC agx_custom_glad_glScissorExclusiveNV = NULL;
PFNGLSCISSORINDEXEDPROC agx_custom_glad_glScissorIndexed = NULL;
PFNGLSCISSORINDEXEDVPROC agx_custom_glad_glScissorIndexedv = NULL;
PFNGLSECONDARYCOLOR3BPROC agx_custom_glad_glSecondaryColor3b = NULL;
PFNGLSECONDARYCOLOR3BEXTPROC agx_custom_glad_glSecondaryColor3bEXT = NULL;
PFNGLSECONDARYCOLOR3BVPROC agx_custom_glad_glSecondaryColor3bv = NULL;
PFNGLSECONDARYCOLOR3BVEXTPROC agx_custom_glad_glSecondaryColor3bvEXT = NULL;
PFNGLSECONDARYCOLOR3DPROC agx_custom_glad_glSecondaryColor3d = NULL;
PFNGLSECONDARYCOLOR3DEXTPROC agx_custom_glad_glSecondaryColor3dEXT = NULL;
PFNGLSECONDARYCOLOR3DVPROC agx_custom_glad_glSecondaryColor3dv = NULL;
PFNGLSECONDARYCOLOR3DVEXTPROC agx_custom_glad_glSecondaryColor3dvEXT = NULL;
PFNGLSECONDARYCOLOR3FPROC agx_custom_glad_glSecondaryColor3f = NULL;
PFNGLSECONDARYCOLOR3FEXTPROC agx_custom_glad_glSecondaryColor3fEXT = NULL;
PFNGLSECONDARYCOLOR3FVPROC agx_custom_glad_glSecondaryColor3fv = NULL;
PFNGLSECONDARYCOLOR3FVEXTPROC agx_custom_glad_glSecondaryColor3fvEXT = NULL;
PFNGLSECONDARYCOLOR3HNVPROC agx_custom_glad_glSecondaryColor3hNV = NULL;
PFNGLSECONDARYCOLOR3HVNVPROC agx_custom_glad_glSecondaryColor3hvNV = NULL;
PFNGLSECONDARYCOLOR3IPROC agx_custom_glad_glSecondaryColor3i = NULL;
PFNGLSECONDARYCOLOR3IEXTPROC agx_custom_glad_glSecondaryColor3iEXT = NULL;
PFNGLSECONDARYCOLOR3IVPROC agx_custom_glad_glSecondaryColor3iv = NULL;
PFNGLSECONDARYCOLOR3IVEXTPROC agx_custom_glad_glSecondaryColor3ivEXT = NULL;
PFNGLSECONDARYCOLOR3SPROC agx_custom_glad_glSecondaryColor3s = NULL;
PFNGLSECONDARYCOLOR3SEXTPROC agx_custom_glad_glSecondaryColor3sEXT = NULL;
PFNGLSECONDARYCOLOR3SVPROC agx_custom_glad_glSecondaryColor3sv = NULL;
PFNGLSECONDARYCOLOR3SVEXTPROC agx_custom_glad_glSecondaryColor3svEXT = NULL;
PFNGLSECONDARYCOLOR3UBPROC agx_custom_glad_glSecondaryColor3ub = NULL;
PFNGLSECONDARYCOLOR3UBEXTPROC agx_custom_glad_glSecondaryColor3ubEXT = NULL;
PFNGLSECONDARYCOLOR3UBVPROC agx_custom_glad_glSecondaryColor3ubv = NULL;
PFNGLSECONDARYCOLOR3UBVEXTPROC agx_custom_glad_glSecondaryColor3ubvEXT = NULL;
PFNGLSECONDARYCOLOR3UIPROC agx_custom_glad_glSecondaryColor3ui = NULL;
PFNGLSECONDARYCOLOR3UIEXTPROC agx_custom_glad_glSecondaryColor3uiEXT = NULL;
PFNGLSECONDARYCOLOR3UIVPROC agx_custom_glad_glSecondaryColor3uiv = NULL;
PFNGLSECONDARYCOLOR3UIVEXTPROC agx_custom_glad_glSecondaryColor3uivEXT = NULL;
PFNGLSECONDARYCOLOR3USPROC agx_custom_glad_glSecondaryColor3us = NULL;
PFNGLSECONDARYCOLOR3USEXTPROC agx_custom_glad_glSecondaryColor3usEXT = NULL;
PFNGLSECONDARYCOLOR3USVPROC agx_custom_glad_glSecondaryColor3usv = NULL;
PFNGLSECONDARYCOLOR3USVEXTPROC agx_custom_glad_glSecondaryColor3usvEXT = NULL;
PFNGLSECONDARYCOLORFORMATNVPROC agx_custom_glad_glSecondaryColorFormatNV = NULL;
PFNGLSECONDARYCOLORP3UIPROC agx_custom_glad_glSecondaryColorP3ui = NULL;
PFNGLSECONDARYCOLORP3UIVPROC agx_custom_glad_glSecondaryColorP3uiv = NULL;
PFNGLSECONDARYCOLORPOINTERPROC agx_custom_glad_glSecondaryColorPointer = NULL;
PFNGLSECONDARYCOLORPOINTEREXTPROC agx_custom_glad_glSecondaryColorPointerEXT = NULL;
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC agx_custom_glad_glSecondaryColorPointerListIBM = NULL;
PFNGLSELECTBUFFERPROC agx_custom_glad_glSelectBuffer = NULL;
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC agx_custom_glad_glSelectPerfMonitorCountersAMD = NULL;
PFNGLSEMAPHOREPARAMETERIVNVPROC agx_custom_glad_glSemaphoreParameterivNV = NULL;
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC agx_custom_glad_glSemaphoreParameterui64vEXT = NULL;
PFNGLSEPARABLEFILTER2DPROC agx_custom_glad_glSeparableFilter2D = NULL;
PFNGLSEPARABLEFILTER2DEXTPROC agx_custom_glad_glSeparableFilter2DEXT = NULL;
PFNGLSETFENCEAPPLEPROC agx_custom_glad_glSetFenceAPPLE = NULL;
PFNGLSETFENCENVPROC agx_custom_glad_glSetFenceNV = NULL;
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC agx_custom_glad_glSetFragmentShaderConstantATI = NULL;
PFNGLSETINVARIANTEXTPROC agx_custom_glad_glSetInvariantEXT = NULL;
PFNGLSETLOCALCONSTANTEXTPROC agx_custom_glad_glSetLocalConstantEXT = NULL;
PFNGLSETMULTISAMPLEFVAMDPROC agx_custom_glad_glSetMultisamplefvAMD = NULL;
PFNGLSHADEMODELPROC agx_custom_glad_glShadeModel = NULL;
PFNGLSHADERBINARYPROC agx_custom_glad_glShaderBinary = NULL;
PFNGLSHADEROP1EXTPROC agx_custom_glad_glShaderOp1EXT = NULL;
PFNGLSHADEROP2EXTPROC agx_custom_glad_glShaderOp2EXT = NULL;
PFNGLSHADEROP3EXTPROC agx_custom_glad_glShaderOp3EXT = NULL;
PFNGLSHADERSOURCEPROC agx_custom_glad_glShaderSource = NULL;
PFNGLSHADERSOURCEARBPROC agx_custom_glad_glShaderSourceARB = NULL;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC agx_custom_glad_glShaderStorageBlockBinding = NULL;
PFNGLSHADINGRATEIMAGEBARRIERNVPROC agx_custom_glad_glShadingRateImageBarrierNV = NULL;
PFNGLSHADINGRATEIMAGEPALETTENVPROC agx_custom_glad_glShadingRateImagePaletteNV = NULL;
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC agx_custom_glad_glShadingRateSampleOrderCustomNV = NULL;
PFNGLSHADINGRATESAMPLEORDERNVPROC agx_custom_glad_glShadingRateSampleOrderNV = NULL;
PFNGLSHARPENTEXFUNCSGISPROC agx_custom_glad_glSharpenTexFuncSGIS = NULL;
PFNGLSIGNALSEMAPHOREEXTPROC agx_custom_glad_glSignalSemaphoreEXT = NULL;
PFNGLSIGNALSEMAPHOREUI64NVXPROC agx_custom_glad_glSignalSemaphoreui64NVX = NULL;
PFNGLSIGNALVKFENCENVPROC agx_custom_glad_glSignalVkFenceNV = NULL;
PFNGLSIGNALVKSEMAPHORENVPROC agx_custom_glad_glSignalVkSemaphoreNV = NULL;
PFNGLSPECIALIZESHADERPROC agx_custom_glad_glSpecializeShader = NULL;
PFNGLSPECIALIZESHADERARBPROC agx_custom_glad_glSpecializeShaderARB = NULL;
PFNGLSPRITEPARAMETERFSGIXPROC agx_custom_glad_glSpriteParameterfSGIX = NULL;
PFNGLSPRITEPARAMETERFVSGIXPROC agx_custom_glad_glSpriteParameterfvSGIX = NULL;
PFNGLSPRITEPARAMETERISGIXPROC agx_custom_glad_glSpriteParameteriSGIX = NULL;
PFNGLSPRITEPARAMETERIVSGIXPROC agx_custom_glad_glSpriteParameterivSGIX = NULL;
PFNGLSTARTINSTRUMENTSSGIXPROC agx_custom_glad_glStartInstrumentsSGIX = NULL;
PFNGLSTATECAPTURENVPROC agx_custom_glad_glStateCaptureNV = NULL;
PFNGLSTENCILCLEARTAGEXTPROC agx_custom_glad_glStencilClearTagEXT = NULL;
PFNGLSTENCILFILLPATHINSTANCEDNVPROC agx_custom_glad_glStencilFillPathInstancedNV = NULL;
PFNGLSTENCILFILLPATHNVPROC agx_custom_glad_glStencilFillPathNV = NULL;
PFNGLSTENCILFUNCPROC agx_custom_glad_glStencilFunc = NULL;
PFNGLSTENCILFUNCSEPARATEPROC agx_custom_glad_glStencilFuncSeparate = NULL;
PFNGLSTENCILFUNCSEPARATEATIPROC agx_custom_glad_glStencilFuncSeparateATI = NULL;
PFNGLSTENCILMASKPROC agx_custom_glad_glStencilMask = NULL;
PFNGLSTENCILMASKSEPARATEPROC agx_custom_glad_glStencilMaskSeparate = NULL;
PFNGLSTENCILOPPROC agx_custom_glad_glStencilOp = NULL;
PFNGLSTENCILOPSEPARATEPROC agx_custom_glad_glStencilOpSeparate = NULL;
PFNGLSTENCILOPSEPARATEATIPROC agx_custom_glad_glStencilOpSeparateATI = NULL;
PFNGLSTENCILOPVALUEAMDPROC agx_custom_glad_glStencilOpValueAMD = NULL;
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glStencilStrokePathInstancedNV = NULL;
PFNGLSTENCILSTROKEPATHNVPROC agx_custom_glad_glStencilStrokePathNV = NULL;
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC agx_custom_glad_glStencilThenCoverFillPathInstancedNV = NULL;
PFNGLSTENCILTHENCOVERFILLPATHNVPROC agx_custom_glad_glStencilThenCoverFillPathNV = NULL;
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC agx_custom_glad_glStencilThenCoverStrokePathInstancedNV = NULL;
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC agx_custom_glad_glStencilThenCoverStrokePathNV = NULL;
PFNGLSTOPINSTRUMENTSSGIXPROC agx_custom_glad_glStopInstrumentsSGIX = NULL;
PFNGLSTRINGMARKERGREMEDYPROC agx_custom_glad_glStringMarkerGREMEDY = NULL;
PFNGLSUBPIXELPRECISIONBIASNVPROC agx_custom_glad_glSubpixelPrecisionBiasNV = NULL;
PFNGLSWIZZLEEXTPROC agx_custom_glad_glSwizzleEXT = NULL;
PFNGLSYNCTEXTUREINTELPROC agx_custom_glad_glSyncTextureINTEL = NULL;
PFNGLTAGSAMPLEBUFFERSGIXPROC agx_custom_glad_glTagSampleBufferSGIX = NULL;
PFNGLTANGENT3BEXTPROC agx_custom_glad_glTangent3bEXT = NULL;
PFNGLTANGENT3BVEXTPROC agx_custom_glad_glTangent3bvEXT = NULL;
PFNGLTANGENT3DEXTPROC agx_custom_glad_glTangent3dEXT = NULL;
PFNGLTANGENT3DVEXTPROC agx_custom_glad_glTangent3dvEXT = NULL;
PFNGLTANGENT3FEXTPROC agx_custom_glad_glTangent3fEXT = NULL;
PFNGLTANGENT3FVEXTPROC agx_custom_glad_glTangent3fvEXT = NULL;
PFNGLTANGENT3IEXTPROC agx_custom_glad_glTangent3iEXT = NULL;
PFNGLTANGENT3IVEXTPROC agx_custom_glad_glTangent3ivEXT = NULL;
PFNGLTANGENT3SEXTPROC agx_custom_glad_glTangent3sEXT = NULL;
PFNGLTANGENT3SVEXTPROC agx_custom_glad_glTangent3svEXT = NULL;
PFNGLTANGENTPOINTEREXTPROC agx_custom_glad_glTangentPointerEXT = NULL;
PFNGLTBUFFERMASK3DFXPROC agx_custom_glad_glTbufferMask3DFX = NULL;
PFNGLTESSELLATIONFACTORAMDPROC agx_custom_glad_glTessellationFactorAMD = NULL;
PFNGLTESSELLATIONMODEAMDPROC agx_custom_glad_glTessellationModeAMD = NULL;
PFNGLTESTFENCEAPPLEPROC agx_custom_glad_glTestFenceAPPLE = NULL;
PFNGLTESTFENCENVPROC agx_custom_glad_glTestFenceNV = NULL;
PFNGLTESTOBJECTAPPLEPROC agx_custom_glad_glTestObjectAPPLE = NULL;
PFNGLTEXATTACHMEMORYNVPROC agx_custom_glad_glTexAttachMemoryNV = NULL;
PFNGLTEXBUFFERPROC agx_custom_glad_glTexBuffer = NULL;
PFNGLTEXBUFFERARBPROC agx_custom_glad_glTexBufferARB = NULL;
PFNGLTEXBUFFEREXTPROC agx_custom_glad_glTexBufferEXT = NULL;
PFNGLTEXBUFFERRANGEPROC agx_custom_glad_glTexBufferRange = NULL;
PFNGLTEXBUMPPARAMETERFVATIPROC agx_custom_glad_glTexBumpParameterfvATI = NULL;
PFNGLTEXBUMPPARAMETERIVATIPROC agx_custom_glad_glTexBumpParameterivATI = NULL;
PFNGLTEXCOORD1BOESPROC agx_custom_glad_glTexCoord1bOES = NULL;
PFNGLTEXCOORD1BVOESPROC agx_custom_glad_glTexCoord1bvOES = NULL;
PFNGLTEXCOORD1DPROC agx_custom_glad_glTexCoord1d = NULL;
PFNGLTEXCOORD1DVPROC agx_custom_glad_glTexCoord1dv = NULL;
PFNGLTEXCOORD1FPROC agx_custom_glad_glTexCoord1f = NULL;
PFNGLTEXCOORD1FVPROC agx_custom_glad_glTexCoord1fv = NULL;
PFNGLTEXCOORD1HNVPROC agx_custom_glad_glTexCoord1hNV = NULL;
PFNGLTEXCOORD1HVNVPROC agx_custom_glad_glTexCoord1hvNV = NULL;
PFNGLTEXCOORD1IPROC agx_custom_glad_glTexCoord1i = NULL;
PFNGLTEXCOORD1IVPROC agx_custom_glad_glTexCoord1iv = NULL;
PFNGLTEXCOORD1SPROC agx_custom_glad_glTexCoord1s = NULL;
PFNGLTEXCOORD1SVPROC agx_custom_glad_glTexCoord1sv = NULL;
PFNGLTEXCOORD1XOESPROC agx_custom_glad_glTexCoord1xOES = NULL;
PFNGLTEXCOORD1XVOESPROC agx_custom_glad_glTexCoord1xvOES = NULL;
PFNGLTEXCOORD2BOESPROC agx_custom_glad_glTexCoord2bOES = NULL;
PFNGLTEXCOORD2BVOESPROC agx_custom_glad_glTexCoord2bvOES = NULL;
PFNGLTEXCOORD2DPROC agx_custom_glad_glTexCoord2d = NULL;
PFNGLTEXCOORD2DVPROC agx_custom_glad_glTexCoord2dv = NULL;
PFNGLTEXCOORD2FPROC agx_custom_glad_glTexCoord2f = NULL;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor3fVertex3fSUN = NULL;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor3fVertex3fvSUN = NULL;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fSUN = NULL;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fvSUN = NULL;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fColor4ubVertex3fSUN = NULL;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fColor4ubVertex3fvSUN = NULL;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fNormal3fVertex3fSUN = NULL;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fNormal3fVertex3fvSUN = NULL;
PFNGLTEXCOORD2FVERTEX3FSUNPROC agx_custom_glad_glTexCoord2fVertex3fSUN = NULL;
PFNGLTEXCOORD2FVERTEX3FVSUNPROC agx_custom_glad_glTexCoord2fVertex3fvSUN = NULL;
PFNGLTEXCOORD2FVPROC agx_custom_glad_glTexCoord2fv = NULL;
PFNGLTEXCOORD2HNVPROC agx_custom_glad_glTexCoord2hNV = NULL;
PFNGLTEXCOORD2HVNVPROC agx_custom_glad_glTexCoord2hvNV = NULL;
PFNGLTEXCOORD2IPROC agx_custom_glad_glTexCoord2i = NULL;
PFNGLTEXCOORD2IVPROC agx_custom_glad_glTexCoord2iv = NULL;
PFNGLTEXCOORD2SPROC agx_custom_glad_glTexCoord2s = NULL;
PFNGLTEXCOORD2SVPROC agx_custom_glad_glTexCoord2sv = NULL;
PFNGLTEXCOORD2XOESPROC agx_custom_glad_glTexCoord2xOES = NULL;
PFNGLTEXCOORD2XVOESPROC agx_custom_glad_glTexCoord2xvOES = NULL;
PFNGLTEXCOORD3BOESPROC agx_custom_glad_glTexCoord3bOES = NULL;
PFNGLTEXCOORD3BVOESPROC agx_custom_glad_glTexCoord3bvOES = NULL;
PFNGLTEXCOORD3DPROC agx_custom_glad_glTexCoord3d = NULL;
PFNGLTEXCOORD3DVPROC agx_custom_glad_glTexCoord3dv = NULL;
PFNGLTEXCOORD3FPROC agx_custom_glad_glTexCoord3f = NULL;
PFNGLTEXCOORD3FVPROC agx_custom_glad_glTexCoord3fv = NULL;
PFNGLTEXCOORD3HNVPROC agx_custom_glad_glTexCoord3hNV = NULL;
PFNGLTEXCOORD3HVNVPROC agx_custom_glad_glTexCoord3hvNV = NULL;
PFNGLTEXCOORD3IPROC agx_custom_glad_glTexCoord3i = NULL;
PFNGLTEXCOORD3IVPROC agx_custom_glad_glTexCoord3iv = NULL;
PFNGLTEXCOORD3SPROC agx_custom_glad_glTexCoord3s = NULL;
PFNGLTEXCOORD3SVPROC agx_custom_glad_glTexCoord3sv = NULL;
PFNGLTEXCOORD3XOESPROC agx_custom_glad_glTexCoord3xOES = NULL;
PFNGLTEXCOORD3XVOESPROC agx_custom_glad_glTexCoord3xvOES = NULL;
PFNGLTEXCOORD4BOESPROC agx_custom_glad_glTexCoord4bOES = NULL;
PFNGLTEXCOORD4BVOESPROC agx_custom_glad_glTexCoord4bvOES = NULL;
PFNGLTEXCOORD4DPROC agx_custom_glad_glTexCoord4d = NULL;
PFNGLTEXCOORD4DVPROC agx_custom_glad_glTexCoord4dv = NULL;
PFNGLTEXCOORD4FPROC agx_custom_glad_glTexCoord4f = NULL;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fSUN = NULL;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fvSUN = NULL;
PFNGLTEXCOORD4FVERTEX4FSUNPROC agx_custom_glad_glTexCoord4fVertex4fSUN = NULL;
PFNGLTEXCOORD4FVERTEX4FVSUNPROC agx_custom_glad_glTexCoord4fVertex4fvSUN = NULL;
PFNGLTEXCOORD4FVPROC agx_custom_glad_glTexCoord4fv = NULL;
PFNGLTEXCOORD4HNVPROC agx_custom_glad_glTexCoord4hNV = NULL;
PFNGLTEXCOORD4HVNVPROC agx_custom_glad_glTexCoord4hvNV = NULL;
PFNGLTEXCOORD4IPROC agx_custom_glad_glTexCoord4i = NULL;
PFNGLTEXCOORD4IVPROC agx_custom_glad_glTexCoord4iv = NULL;
PFNGLTEXCOORD4SPROC agx_custom_glad_glTexCoord4s = NULL;
PFNGLTEXCOORD4SVPROC agx_custom_glad_glTexCoord4sv = NULL;
PFNGLTEXCOORD4XOESPROC agx_custom_glad_glTexCoord4xOES = NULL;
PFNGLTEXCOORD4XVOESPROC agx_custom_glad_glTexCoord4xvOES = NULL;
PFNGLTEXCOORDFORMATNVPROC agx_custom_glad_glTexCoordFormatNV = NULL;
PFNGLTEXCOORDP1UIPROC agx_custom_glad_glTexCoordP1ui = NULL;
PFNGLTEXCOORDP1UIVPROC agx_custom_glad_glTexCoordP1uiv = NULL;
PFNGLTEXCOORDP2UIPROC agx_custom_glad_glTexCoordP2ui = NULL;
PFNGLTEXCOORDP2UIVPROC agx_custom_glad_glTexCoordP2uiv = NULL;
PFNGLTEXCOORDP3UIPROC agx_custom_glad_glTexCoordP3ui = NULL;
PFNGLTEXCOORDP3UIVPROC agx_custom_glad_glTexCoordP3uiv = NULL;
PFNGLTEXCOORDP4UIPROC agx_custom_glad_glTexCoordP4ui = NULL;
PFNGLTEXCOORDP4UIVPROC agx_custom_glad_glTexCoordP4uiv = NULL;
PFNGLTEXCOORDPOINTERPROC agx_custom_glad_glTexCoordPointer = NULL;
PFNGLTEXCOORDPOINTEREXTPROC agx_custom_glad_glTexCoordPointerEXT = NULL;
PFNGLTEXCOORDPOINTERLISTIBMPROC agx_custom_glad_glTexCoordPointerListIBM = NULL;
PFNGLTEXCOORDPOINTERVINTELPROC agx_custom_glad_glTexCoordPointervINTEL = NULL;
PFNGLTEXENVFPROC agx_custom_glad_glTexEnvf = NULL;
PFNGLTEXENVFVPROC agx_custom_glad_glTexEnvfv = NULL;
PFNGLTEXENVIPROC agx_custom_glad_glTexEnvi = NULL;
PFNGLTEXENVIVPROC agx_custom_glad_glTexEnviv = NULL;
PFNGLTEXENVXOESPROC agx_custom_glad_glTexEnvxOES = NULL;
PFNGLTEXENVXVOESPROC agx_custom_glad_glTexEnvxvOES = NULL;
PFNGLTEXFILTERFUNCSGISPROC agx_custom_glad_glTexFilterFuncSGIS = NULL;
PFNGLTEXGENDPROC agx_custom_glad_glTexGend = NULL;
PFNGLTEXGENDVPROC agx_custom_glad_glTexGendv = NULL;
PFNGLTEXGENFPROC agx_custom_glad_glTexGenf = NULL;
PFNGLTEXGENFVPROC agx_custom_glad_glTexGenfv = NULL;
PFNGLTEXGENIPROC agx_custom_glad_glTexGeni = NULL;
PFNGLTEXGENIVPROC agx_custom_glad_glTexGeniv = NULL;
PFNGLTEXGENXOESPROC agx_custom_glad_glTexGenxOES = NULL;
PFNGLTEXGENXVOESPROC agx_custom_glad_glTexGenxvOES = NULL;
PFNGLTEXIMAGE1DPROC agx_custom_glad_glTexImage1D = NULL;
PFNGLTEXIMAGE2DPROC agx_custom_glad_glTexImage2D = NULL;
PFNGLTEXIMAGE2DMULTISAMPLEPROC agx_custom_glad_glTexImage2DMultisample = NULL;
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTexImage2DMultisampleCoverageNV = NULL;
PFNGLTEXIMAGE3DPROC agx_custom_glad_glTexImage3D = NULL;
PFNGLTEXIMAGE3DEXTPROC agx_custom_glad_glTexImage3DEXT = NULL;
PFNGLTEXIMAGE3DMULTISAMPLEPROC agx_custom_glad_glTexImage3DMultisample = NULL;
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTexImage3DMultisampleCoverageNV = NULL;
PFNGLTEXIMAGE4DSGISPROC agx_custom_glad_glTexImage4DSGIS = NULL;
PFNGLTEXPAGECOMMITMENTARBPROC agx_custom_glad_glTexPageCommitmentARB = NULL;
PFNGLTEXPAGECOMMITMENTMEMNVPROC agx_custom_glad_glTexPageCommitmentMemNV = NULL;
PFNGLTEXPARAMETERIIVPROC agx_custom_glad_glTexParameterIiv = NULL;
PFNGLTEXPARAMETERIIVEXTPROC agx_custom_glad_glTexParameterIivEXT = NULL;
PFNGLTEXPARAMETERIUIVPROC agx_custom_glad_glTexParameterIuiv = NULL;
PFNGLTEXPARAMETERIUIVEXTPROC agx_custom_glad_glTexParameterIuivEXT = NULL;
PFNGLTEXPARAMETERFPROC agx_custom_glad_glTexParameterf = NULL;
PFNGLTEXPARAMETERFVPROC agx_custom_glad_glTexParameterfv = NULL;
PFNGLTEXPARAMETERIPROC agx_custom_glad_glTexParameteri = NULL;
PFNGLTEXPARAMETERIVPROC agx_custom_glad_glTexParameteriv = NULL;
PFNGLTEXPARAMETERXOESPROC agx_custom_glad_glTexParameterxOES = NULL;
PFNGLTEXPARAMETERXVOESPROC agx_custom_glad_glTexParameterxvOES = NULL;
PFNGLTEXRENDERBUFFERNVPROC agx_custom_glad_glTexRenderbufferNV = NULL;
PFNGLTEXSTORAGE1DPROC agx_custom_glad_glTexStorage1D = NULL;
PFNGLTEXSTORAGE2DPROC agx_custom_glad_glTexStorage2D = NULL;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC agx_custom_glad_glTexStorage2DMultisample = NULL;
PFNGLTEXSTORAGE3DPROC agx_custom_glad_glTexStorage3D = NULL;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC agx_custom_glad_glTexStorage3DMultisample = NULL;
PFNGLTEXSTORAGEMEM1DEXTPROC agx_custom_glad_glTexStorageMem1DEXT = NULL;
PFNGLTEXSTORAGEMEM2DEXTPROC agx_custom_glad_glTexStorageMem2DEXT = NULL;
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC agx_custom_glad_glTexStorageMem2DMultisampleEXT = NULL;
PFNGLTEXSTORAGEMEM3DEXTPROC agx_custom_glad_glTexStorageMem3DEXT = NULL;
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC agx_custom_glad_glTexStorageMem3DMultisampleEXT = NULL;
PFNGLTEXSTORAGESPARSEAMDPROC agx_custom_glad_glTexStorageSparseAMD = NULL;
PFNGLTEXSUBIMAGE1DPROC agx_custom_glad_glTexSubImage1D = NULL;
PFNGLTEXSUBIMAGE1DEXTPROC agx_custom_glad_glTexSubImage1DEXT = NULL;
PFNGLTEXSUBIMAGE2DPROC agx_custom_glad_glTexSubImage2D = NULL;
PFNGLTEXSUBIMAGE2DEXTPROC agx_custom_glad_glTexSubImage2DEXT = NULL;
PFNGLTEXSUBIMAGE3DPROC agx_custom_glad_glTexSubImage3D = NULL;
PFNGLTEXSUBIMAGE3DEXTPROC agx_custom_glad_glTexSubImage3DEXT = NULL;
PFNGLTEXSUBIMAGE4DSGISPROC agx_custom_glad_glTexSubImage4DSGIS = NULL;
PFNGLTEXTUREATTACHMEMORYNVPROC agx_custom_glad_glTextureAttachMemoryNV = NULL;
PFNGLTEXTUREBARRIERPROC agx_custom_glad_glTextureBarrier = NULL;
PFNGLTEXTUREBARRIERNVPROC agx_custom_glad_glTextureBarrierNV = NULL;
PFNGLTEXTUREBUFFERPROC agx_custom_glad_glTextureBuffer = NULL;
PFNGLTEXTUREBUFFEREXTPROC agx_custom_glad_glTextureBufferEXT = NULL;
PFNGLTEXTUREBUFFERRANGEPROC agx_custom_glad_glTextureBufferRange = NULL;
PFNGLTEXTUREBUFFERRANGEEXTPROC agx_custom_glad_glTextureBufferRangeEXT = NULL;
PFNGLTEXTURECOLORMASKSGISPROC agx_custom_glad_glTextureColorMaskSGIS = NULL;
PFNGLTEXTUREIMAGE1DEXTPROC agx_custom_glad_glTextureImage1DEXT = NULL;
PFNGLTEXTUREIMAGE2DEXTPROC agx_custom_glad_glTextureImage2DEXT = NULL;
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTextureImage2DMultisampleCoverageNV = NULL;
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC agx_custom_glad_glTextureImage2DMultisampleNV = NULL;
PFNGLTEXTUREIMAGE3DEXTPROC agx_custom_glad_glTextureImage3DEXT = NULL;
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC agx_custom_glad_glTextureImage3DMultisampleCoverageNV = NULL;
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC agx_custom_glad_glTextureImage3DMultisampleNV = NULL;
PFNGLTEXTURELIGHTEXTPROC agx_custom_glad_glTextureLightEXT = NULL;
PFNGLTEXTUREMATERIALEXTPROC agx_custom_glad_glTextureMaterialEXT = NULL;
PFNGLTEXTURENORMALEXTPROC agx_custom_glad_glTextureNormalEXT = NULL;
PFNGLTEXTUREPAGECOMMITMENTEXTPROC agx_custom_glad_glTexturePageCommitmentEXT = NULL;
PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC agx_custom_glad_glTexturePageCommitmentMemNV = NULL;
PFNGLTEXTUREPARAMETERIIVPROC agx_custom_glad_glTextureParameterIiv = NULL;
PFNGLTEXTUREPARAMETERIIVEXTPROC agx_custom_glad_glTextureParameterIivEXT = NULL;
PFNGLTEXTUREPARAMETERIUIVPROC agx_custom_glad_glTextureParameterIuiv = NULL;
PFNGLTEXTUREPARAMETERIUIVEXTPROC agx_custom_glad_glTextureParameterIuivEXT = NULL;
PFNGLTEXTUREPARAMETERFPROC agx_custom_glad_glTextureParameterf = NULL;
PFNGLTEXTUREPARAMETERFEXTPROC agx_custom_glad_glTextureParameterfEXT = NULL;
PFNGLTEXTUREPARAMETERFVPROC agx_custom_glad_glTextureParameterfv = NULL;
PFNGLTEXTUREPARAMETERFVEXTPROC agx_custom_glad_glTextureParameterfvEXT = NULL;
PFNGLTEXTUREPARAMETERIPROC agx_custom_glad_glTextureParameteri = NULL;
PFNGLTEXTUREPARAMETERIEXTPROC agx_custom_glad_glTextureParameteriEXT = NULL;
PFNGLTEXTUREPARAMETERIVPROC agx_custom_glad_glTextureParameteriv = NULL;
PFNGLTEXTUREPARAMETERIVEXTPROC agx_custom_glad_glTextureParameterivEXT = NULL;
PFNGLTEXTURERANGEAPPLEPROC agx_custom_glad_glTextureRangeAPPLE = NULL;
PFNGLTEXTURERENDERBUFFEREXTPROC agx_custom_glad_glTextureRenderbufferEXT = NULL;
PFNGLTEXTURESTORAGE1DPROC agx_custom_glad_glTextureStorage1D = NULL;
PFNGLTEXTURESTORAGE1DEXTPROC agx_custom_glad_glTextureStorage1DEXT = NULL;
PFNGLTEXTURESTORAGE2DPROC agx_custom_glad_glTextureStorage2D = NULL;
PFNGLTEXTURESTORAGE2DEXTPROC agx_custom_glad_glTextureStorage2DEXT = NULL;
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC agx_custom_glad_glTextureStorage2DMultisample = NULL;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorage2DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGE3DPROC agx_custom_glad_glTextureStorage3D = NULL;
PFNGLTEXTURESTORAGE3DEXTPROC agx_custom_glad_glTextureStorage3DEXT = NULL;
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC agx_custom_glad_glTextureStorage3DMultisample = NULL;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorage3DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGEMEM1DEXTPROC agx_custom_glad_glTextureStorageMem1DEXT = NULL;
PFNGLTEXTURESTORAGEMEM2DEXTPROC agx_custom_glad_glTextureStorageMem2DEXT = NULL;
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorageMem2DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGEMEM3DEXTPROC agx_custom_glad_glTextureStorageMem3DEXT = NULL;
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC agx_custom_glad_glTextureStorageMem3DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGESPARSEAMDPROC agx_custom_glad_glTextureStorageSparseAMD = NULL;
PFNGLTEXTURESUBIMAGE1DPROC agx_custom_glad_glTextureSubImage1D = NULL;
PFNGLTEXTURESUBIMAGE1DEXTPROC agx_custom_glad_glTextureSubImage1DEXT = NULL;
PFNGLTEXTURESUBIMAGE2DPROC agx_custom_glad_glTextureSubImage2D = NULL;
PFNGLTEXTURESUBIMAGE2DEXTPROC agx_custom_glad_glTextureSubImage2DEXT = NULL;
PFNGLTEXTURESUBIMAGE3DPROC agx_custom_glad_glTextureSubImage3D = NULL;
PFNGLTEXTURESUBIMAGE3DEXTPROC agx_custom_glad_glTextureSubImage3DEXT = NULL;
PFNGLTEXTUREVIEWPROC agx_custom_glad_glTextureView = NULL;
PFNGLTRACKMATRIXNVPROC agx_custom_glad_glTrackMatrixNV = NULL;
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC agx_custom_glad_glTransformFeedbackAttribsNV = NULL;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC agx_custom_glad_glTransformFeedbackBufferBase = NULL;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC agx_custom_glad_glTransformFeedbackBufferRange = NULL;
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC agx_custom_glad_glTransformFeedbackStreamAttribsNV = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC agx_custom_glad_glTransformFeedbackVaryings = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC agx_custom_glad_glTransformFeedbackVaryingsEXT = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC agx_custom_glad_glTransformFeedbackVaryingsNV = NULL;
PFNGLTRANSFORMPATHNVPROC agx_custom_glad_glTransformPathNV = NULL;
PFNGLTRANSLATEDPROC agx_custom_glad_glTranslated = NULL;
PFNGLTRANSLATEFPROC agx_custom_glad_glTranslatef = NULL;
PFNGLTRANSLATEXOESPROC agx_custom_glad_glTranslatexOES = NULL;
PFNGLUNIFORM1DPROC agx_custom_glad_glUniform1d = NULL;
PFNGLUNIFORM1DVPROC agx_custom_glad_glUniform1dv = NULL;
PFNGLUNIFORM1FPROC agx_custom_glad_glUniform1f = NULL;
PFNGLUNIFORM1FARBPROC agx_custom_glad_glUniform1fARB = NULL;
PFNGLUNIFORM1FVPROC agx_custom_glad_glUniform1fv = NULL;
PFNGLUNIFORM1FVARBPROC agx_custom_glad_glUniform1fvARB = NULL;
PFNGLUNIFORM1IPROC agx_custom_glad_glUniform1i = NULL;
PFNGLUNIFORM1I64ARBPROC agx_custom_glad_glUniform1i64ARB = NULL;
PFNGLUNIFORM1I64NVPROC agx_custom_glad_glUniform1i64NV = NULL;
PFNGLUNIFORM1I64VARBPROC agx_custom_glad_glUniform1i64vARB = NULL;
PFNGLUNIFORM1I64VNVPROC agx_custom_glad_glUniform1i64vNV = NULL;
PFNGLUNIFORM1IARBPROC agx_custom_glad_glUniform1iARB = NULL;
PFNGLUNIFORM1IVPROC agx_custom_glad_glUniform1iv = NULL;
PFNGLUNIFORM1IVARBPROC agx_custom_glad_glUniform1ivARB = NULL;
PFNGLUNIFORM1UIPROC agx_custom_glad_glUniform1ui = NULL;
PFNGLUNIFORM1UI64ARBPROC agx_custom_glad_glUniform1ui64ARB = NULL;
PFNGLUNIFORM1UI64NVPROC agx_custom_glad_glUniform1ui64NV = NULL;
PFNGLUNIFORM1UI64VARBPROC agx_custom_glad_glUniform1ui64vARB = NULL;
PFNGLUNIFORM1UI64VNVPROC agx_custom_glad_glUniform1ui64vNV = NULL;
PFNGLUNIFORM1UIEXTPROC agx_custom_glad_glUniform1uiEXT = NULL;
PFNGLUNIFORM1UIVPROC agx_custom_glad_glUniform1uiv = NULL;
PFNGLUNIFORM1UIVEXTPROC agx_custom_glad_glUniform1uivEXT = NULL;
PFNGLUNIFORM2DPROC agx_custom_glad_glUniform2d = NULL;
PFNGLUNIFORM2DVPROC agx_custom_glad_glUniform2dv = NULL;
PFNGLUNIFORM2FPROC agx_custom_glad_glUniform2f = NULL;
PFNGLUNIFORM2FARBPROC agx_custom_glad_glUniform2fARB = NULL;
PFNGLUNIFORM2FVPROC agx_custom_glad_glUniform2fv = NULL;
PFNGLUNIFORM2FVARBPROC agx_custom_glad_glUniform2fvARB = NULL;
PFNGLUNIFORM2IPROC agx_custom_glad_glUniform2i = NULL;
PFNGLUNIFORM2I64ARBPROC agx_custom_glad_glUniform2i64ARB = NULL;
PFNGLUNIFORM2I64NVPROC agx_custom_glad_glUniform2i64NV = NULL;
PFNGLUNIFORM2I64VARBPROC agx_custom_glad_glUniform2i64vARB = NULL;
PFNGLUNIFORM2I64VNVPROC agx_custom_glad_glUniform2i64vNV = NULL;
PFNGLUNIFORM2IARBPROC agx_custom_glad_glUniform2iARB = NULL;
PFNGLUNIFORM2IVPROC agx_custom_glad_glUniform2iv = NULL;
PFNGLUNIFORM2IVARBPROC agx_custom_glad_glUniform2ivARB = NULL;
PFNGLUNIFORM2UIPROC agx_custom_glad_glUniform2ui = NULL;
PFNGLUNIFORM2UI64ARBPROC agx_custom_glad_glUniform2ui64ARB = NULL;
PFNGLUNIFORM2UI64NVPROC agx_custom_glad_glUniform2ui64NV = NULL;
PFNGLUNIFORM2UI64VARBPROC agx_custom_glad_glUniform2ui64vARB = NULL;
PFNGLUNIFORM2UI64VNVPROC agx_custom_glad_glUniform2ui64vNV = NULL;
PFNGLUNIFORM2UIEXTPROC agx_custom_glad_glUniform2uiEXT = NULL;
PFNGLUNIFORM2UIVPROC agx_custom_glad_glUniform2uiv = NULL;
PFNGLUNIFORM2UIVEXTPROC agx_custom_glad_glUniform2uivEXT = NULL;
PFNGLUNIFORM3DPROC agx_custom_glad_glUniform3d = NULL;
PFNGLUNIFORM3DVPROC agx_custom_glad_glUniform3dv = NULL;
PFNGLUNIFORM3FPROC agx_custom_glad_glUniform3f = NULL;
PFNGLUNIFORM3FARBPROC agx_custom_glad_glUniform3fARB = NULL;
PFNGLUNIFORM3FVPROC agx_custom_glad_glUniform3fv = NULL;
PFNGLUNIFORM3FVARBPROC agx_custom_glad_glUniform3fvARB = NULL;
PFNGLUNIFORM3IPROC agx_custom_glad_glUniform3i = NULL;
PFNGLUNIFORM3I64ARBPROC agx_custom_glad_glUniform3i64ARB = NULL;
PFNGLUNIFORM3I64NVPROC agx_custom_glad_glUniform3i64NV = NULL;
PFNGLUNIFORM3I64VARBPROC agx_custom_glad_glUniform3i64vARB = NULL;
PFNGLUNIFORM3I64VNVPROC agx_custom_glad_glUniform3i64vNV = NULL;
PFNGLUNIFORM3IARBPROC agx_custom_glad_glUniform3iARB = NULL;
PFNGLUNIFORM3IVPROC agx_custom_glad_glUniform3iv = NULL;
PFNGLUNIFORM3IVARBPROC agx_custom_glad_glUniform3ivARB = NULL;
PFNGLUNIFORM3UIPROC agx_custom_glad_glUniform3ui = NULL;
PFNGLUNIFORM3UI64ARBPROC agx_custom_glad_glUniform3ui64ARB = NULL;
PFNGLUNIFORM3UI64NVPROC agx_custom_glad_glUniform3ui64NV = NULL;
PFNGLUNIFORM3UI64VARBPROC agx_custom_glad_glUniform3ui64vARB = NULL;
PFNGLUNIFORM3UI64VNVPROC agx_custom_glad_glUniform3ui64vNV = NULL;
PFNGLUNIFORM3UIEXTPROC agx_custom_glad_glUniform3uiEXT = NULL;
PFNGLUNIFORM3UIVPROC agx_custom_glad_glUniform3uiv = NULL;
PFNGLUNIFORM3UIVEXTPROC agx_custom_glad_glUniform3uivEXT = NULL;
PFNGLUNIFORM4DPROC agx_custom_glad_glUniform4d = NULL;
PFNGLUNIFORM4DVPROC agx_custom_glad_glUniform4dv = NULL;
PFNGLUNIFORM4FPROC agx_custom_glad_glUniform4f = NULL;
PFNGLUNIFORM4FARBPROC agx_custom_glad_glUniform4fARB = NULL;
PFNGLUNIFORM4FVPROC agx_custom_glad_glUniform4fv = NULL;
PFNGLUNIFORM4FVARBPROC agx_custom_glad_glUniform4fvARB = NULL;
PFNGLUNIFORM4IPROC agx_custom_glad_glUniform4i = NULL;
PFNGLUNIFORM4I64ARBPROC agx_custom_glad_glUniform4i64ARB = NULL;
PFNGLUNIFORM4I64NVPROC agx_custom_glad_glUniform4i64NV = NULL;
PFNGLUNIFORM4I64VARBPROC agx_custom_glad_glUniform4i64vARB = NULL;
PFNGLUNIFORM4I64VNVPROC agx_custom_glad_glUniform4i64vNV = NULL;
PFNGLUNIFORM4IARBPROC agx_custom_glad_glUniform4iARB = NULL;
PFNGLUNIFORM4IVPROC agx_custom_glad_glUniform4iv = NULL;
PFNGLUNIFORM4IVARBPROC agx_custom_glad_glUniform4ivARB = NULL;
PFNGLUNIFORM4UIPROC agx_custom_glad_glUniform4ui = NULL;
PFNGLUNIFORM4UI64ARBPROC agx_custom_glad_glUniform4ui64ARB = NULL;
PFNGLUNIFORM4UI64NVPROC agx_custom_glad_glUniform4ui64NV = NULL;
PFNGLUNIFORM4UI64VARBPROC agx_custom_glad_glUniform4ui64vARB = NULL;
PFNGLUNIFORM4UI64VNVPROC agx_custom_glad_glUniform4ui64vNV = NULL;
PFNGLUNIFORM4UIEXTPROC agx_custom_glad_glUniform4uiEXT = NULL;
PFNGLUNIFORM4UIVPROC agx_custom_glad_glUniform4uiv = NULL;
PFNGLUNIFORM4UIVEXTPROC agx_custom_glad_glUniform4uivEXT = NULL;
PFNGLUNIFORMBLOCKBINDINGPROC agx_custom_glad_glUniformBlockBinding = NULL;
PFNGLUNIFORMBUFFEREXTPROC agx_custom_glad_glUniformBufferEXT = NULL;
PFNGLUNIFORMHANDLEUI64ARBPROC agx_custom_glad_glUniformHandleui64ARB = NULL;
PFNGLUNIFORMHANDLEUI64NVPROC agx_custom_glad_glUniformHandleui64NV = NULL;
PFNGLUNIFORMHANDLEUI64VARBPROC agx_custom_glad_glUniformHandleui64vARB = NULL;
PFNGLUNIFORMHANDLEUI64VNVPROC agx_custom_glad_glUniformHandleui64vNV = NULL;
PFNGLUNIFORMMATRIX2DVPROC agx_custom_glad_glUniformMatrix2dv = NULL;
PFNGLUNIFORMMATRIX2FVPROC agx_custom_glad_glUniformMatrix2fv = NULL;
PFNGLUNIFORMMATRIX2FVARBPROC agx_custom_glad_glUniformMatrix2fvARB = NULL;
PFNGLUNIFORMMATRIX2X3DVPROC agx_custom_glad_glUniformMatrix2x3dv = NULL;
PFNGLUNIFORMMATRIX2X3FVPROC agx_custom_glad_glUniformMatrix2x3fv = NULL;
PFNGLUNIFORMMATRIX2X4DVPROC agx_custom_glad_glUniformMatrix2x4dv = NULL;
PFNGLUNIFORMMATRIX2X4FVPROC agx_custom_glad_glUniformMatrix2x4fv = NULL;
PFNGLUNIFORMMATRIX3DVPROC agx_custom_glad_glUniformMatrix3dv = NULL;
PFNGLUNIFORMMATRIX3FVPROC agx_custom_glad_glUniformMatrix3fv = NULL;
PFNGLUNIFORMMATRIX3FVARBPROC agx_custom_glad_glUniformMatrix3fvARB = NULL;
PFNGLUNIFORMMATRIX3X2DVPROC agx_custom_glad_glUniformMatrix3x2dv = NULL;
PFNGLUNIFORMMATRIX3X2FVPROC agx_custom_glad_glUniformMatrix3x2fv = NULL;
PFNGLUNIFORMMATRIX3X4DVPROC agx_custom_glad_glUniformMatrix3x4dv = NULL;
PFNGLUNIFORMMATRIX3X4FVPROC agx_custom_glad_glUniformMatrix3x4fv = NULL;
PFNGLUNIFORMMATRIX4DVPROC agx_custom_glad_glUniformMatrix4dv = NULL;
PFNGLUNIFORMMATRIX4FVPROC agx_custom_glad_glUniformMatrix4fv = NULL;
PFNGLUNIFORMMATRIX4FVARBPROC agx_custom_glad_glUniformMatrix4fvARB = NULL;
PFNGLUNIFORMMATRIX4X2DVPROC agx_custom_glad_glUniformMatrix4x2dv = NULL;
PFNGLUNIFORMMATRIX4X2FVPROC agx_custom_glad_glUniformMatrix4x2fv = NULL;
PFNGLUNIFORMMATRIX4X3DVPROC agx_custom_glad_glUniformMatrix4x3dv = NULL;
PFNGLUNIFORMMATRIX4X3FVPROC agx_custom_glad_glUniformMatrix4x3fv = NULL;
PFNGLUNIFORMSUBROUTINESUIVPROC agx_custom_glad_glUniformSubroutinesuiv = NULL;
PFNGLUNIFORMUI64NVPROC agx_custom_glad_glUniformui64NV = NULL;
PFNGLUNIFORMUI64VNVPROC agx_custom_glad_glUniformui64vNV = NULL;
PFNGLUNLOCKARRAYSEXTPROC agx_custom_glad_glUnlockArraysEXT = NULL;
PFNGLUNMAPBUFFERPROC agx_custom_glad_glUnmapBuffer = NULL;
PFNGLUNMAPBUFFERARBPROC agx_custom_glad_glUnmapBufferARB = NULL;
PFNGLUNMAPNAMEDBUFFERPROC agx_custom_glad_glUnmapNamedBuffer = NULL;
PFNGLUNMAPNAMEDBUFFEREXTPROC agx_custom_glad_glUnmapNamedBufferEXT = NULL;
PFNGLUNMAPOBJECTBUFFERATIPROC agx_custom_glad_glUnmapObjectBufferATI = NULL;
PFNGLUNMAPTEXTURE2DINTELPROC agx_custom_glad_glUnmapTexture2DINTEL = NULL;
PFNGLUPDATEOBJECTBUFFERATIPROC agx_custom_glad_glUpdateObjectBufferATI = NULL;
PFNGLUPLOADGPUMASKNVXPROC agx_custom_glad_glUploadGpuMaskNVX = NULL;
PFNGLUSEPROGRAMPROC agx_custom_glad_glUseProgram = NULL;
PFNGLUSEPROGRAMOBJECTARBPROC agx_custom_glad_glUseProgramObjectARB = NULL;
PFNGLUSEPROGRAMSTAGESPROC agx_custom_glad_glUseProgramStages = NULL;
PFNGLUSESHADERPROGRAMEXTPROC agx_custom_glad_glUseShaderProgramEXT = NULL;
PFNGLVDPAUFININVPROC agx_custom_glad_glVDPAUFiniNV = NULL;
PFNGLVDPAUGETSURFACEIVNVPROC agx_custom_glad_glVDPAUGetSurfaceivNV = NULL;
PFNGLVDPAUINITNVPROC agx_custom_glad_glVDPAUInitNV = NULL;
PFNGLVDPAUISSURFACENVPROC agx_custom_glad_glVDPAUIsSurfaceNV = NULL;
PFNGLVDPAUMAPSURFACESNVPROC agx_custom_glad_glVDPAUMapSurfacesNV = NULL;
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC agx_custom_glad_glVDPAURegisterOutputSurfaceNV = NULL;
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC agx_custom_glad_glVDPAURegisterVideoSurfaceNV = NULL;
PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC agx_custom_glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV = NULL;
PFNGLVDPAUSURFACEACCESSNVPROC agx_custom_glad_glVDPAUSurfaceAccessNV = NULL;
PFNGLVDPAUUNMAPSURFACESNVPROC agx_custom_glad_glVDPAUUnmapSurfacesNV = NULL;
PFNGLVDPAUUNREGISTERSURFACENVPROC agx_custom_glad_glVDPAUUnregisterSurfaceNV = NULL;
PFNGLVALIDATEPROGRAMPROC agx_custom_glad_glValidateProgram = NULL;
PFNGLVALIDATEPROGRAMARBPROC agx_custom_glad_glValidateProgramARB = NULL;
PFNGLVALIDATEPROGRAMPIPELINEPROC agx_custom_glad_glValidateProgramPipeline = NULL;
PFNGLVARIANTARRAYOBJECTATIPROC agx_custom_glad_glVariantArrayObjectATI = NULL;
PFNGLVARIANTPOINTEREXTPROC agx_custom_glad_glVariantPointerEXT = NULL;
PFNGLVARIANTBVEXTPROC agx_custom_glad_glVariantbvEXT = NULL;
PFNGLVARIANTDVEXTPROC agx_custom_glad_glVariantdvEXT = NULL;
PFNGLVARIANTFVEXTPROC agx_custom_glad_glVariantfvEXT = NULL;
PFNGLVARIANTIVEXTPROC agx_custom_glad_glVariantivEXT = NULL;
PFNGLVARIANTSVEXTPROC agx_custom_glad_glVariantsvEXT = NULL;
PFNGLVARIANTUBVEXTPROC agx_custom_glad_glVariantubvEXT = NULL;
PFNGLVARIANTUIVEXTPROC agx_custom_glad_glVariantuivEXT = NULL;
PFNGLVARIANTUSVEXTPROC agx_custom_glad_glVariantusvEXT = NULL;
PFNGLVERTEX2BOESPROC agx_custom_glad_glVertex2bOES = NULL;
PFNGLVERTEX2BVOESPROC agx_custom_glad_glVertex2bvOES = NULL;
PFNGLVERTEX2DPROC agx_custom_glad_glVertex2d = NULL;
PFNGLVERTEX2DVPROC agx_custom_glad_glVertex2dv = NULL;
PFNGLVERTEX2FPROC agx_custom_glad_glVertex2f = NULL;
PFNGLVERTEX2FVPROC agx_custom_glad_glVertex2fv = NULL;
PFNGLVERTEX2HNVPROC agx_custom_glad_glVertex2hNV = NULL;
PFNGLVERTEX2HVNVPROC agx_custom_glad_glVertex2hvNV = NULL;
PFNGLVERTEX2IPROC agx_custom_glad_glVertex2i = NULL;
PFNGLVERTEX2IVPROC agx_custom_glad_glVertex2iv = NULL;
PFNGLVERTEX2SPROC agx_custom_glad_glVertex2s = NULL;
PFNGLVERTEX2SVPROC agx_custom_glad_glVertex2sv = NULL;
PFNGLVERTEX2XOESPROC agx_custom_glad_glVertex2xOES = NULL;
PFNGLVERTEX2XVOESPROC agx_custom_glad_glVertex2xvOES = NULL;
PFNGLVERTEX3BOESPROC agx_custom_glad_glVertex3bOES = NULL;
PFNGLVERTEX3BVOESPROC agx_custom_glad_glVertex3bvOES = NULL;
PFNGLVERTEX3DPROC agx_custom_glad_glVertex3d = NULL;
PFNGLVERTEX3DVPROC agx_custom_glad_glVertex3dv = NULL;
PFNGLVERTEX3FPROC agx_custom_glad_glVertex3f = NULL;
PFNGLVERTEX3FVPROC agx_custom_glad_glVertex3fv = NULL;
PFNGLVERTEX3HNVPROC agx_custom_glad_glVertex3hNV = NULL;
PFNGLVERTEX3HVNVPROC agx_custom_glad_glVertex3hvNV = NULL;
PFNGLVERTEX3IPROC agx_custom_glad_glVertex3i = NULL;
PFNGLVERTEX3IVPROC agx_custom_glad_glVertex3iv = NULL;
PFNGLVERTEX3SPROC agx_custom_glad_glVertex3s = NULL;
PFNGLVERTEX3SVPROC agx_custom_glad_glVertex3sv = NULL;
PFNGLVERTEX3XOESPROC agx_custom_glad_glVertex3xOES = NULL;
PFNGLVERTEX3XVOESPROC agx_custom_glad_glVertex3xvOES = NULL;
PFNGLVERTEX4BOESPROC agx_custom_glad_glVertex4bOES = NULL;
PFNGLVERTEX4BVOESPROC agx_custom_glad_glVertex4bvOES = NULL;
PFNGLVERTEX4DPROC agx_custom_glad_glVertex4d = NULL;
PFNGLVERTEX4DVPROC agx_custom_glad_glVertex4dv = NULL;
PFNGLVERTEX4FPROC agx_custom_glad_glVertex4f = NULL;
PFNGLVERTEX4FVPROC agx_custom_glad_glVertex4fv = NULL;
PFNGLVERTEX4HNVPROC agx_custom_glad_glVertex4hNV = NULL;
PFNGLVERTEX4HVNVPROC agx_custom_glad_glVertex4hvNV = NULL;
PFNGLVERTEX4IPROC agx_custom_glad_glVertex4i = NULL;
PFNGLVERTEX4IVPROC agx_custom_glad_glVertex4iv = NULL;
PFNGLVERTEX4SPROC agx_custom_glad_glVertex4s = NULL;
PFNGLVERTEX4SVPROC agx_custom_glad_glVertex4sv = NULL;
PFNGLVERTEX4XOESPROC agx_custom_glad_glVertex4xOES = NULL;
PFNGLVERTEX4XVOESPROC agx_custom_glad_glVertex4xvOES = NULL;
PFNGLVERTEXARRAYATTRIBBINDINGPROC agx_custom_glad_glVertexArrayAttribBinding = NULL;
PFNGLVERTEXARRAYATTRIBFORMATPROC agx_custom_glad_glVertexArrayAttribFormat = NULL;
PFNGLVERTEXARRAYATTRIBIFORMATPROC agx_custom_glad_glVertexArrayAttribIFormat = NULL;
PFNGLVERTEXARRAYATTRIBLFORMATPROC agx_custom_glad_glVertexArrayAttribLFormat = NULL;
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC agx_custom_glad_glVertexArrayBindVertexBufferEXT = NULL;
PFNGLVERTEXARRAYBINDINGDIVISORPROC agx_custom_glad_glVertexArrayBindingDivisor = NULL;
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC agx_custom_glad_glVertexArrayColorOffsetEXT = NULL;
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC agx_custom_glad_glVertexArrayEdgeFlagOffsetEXT = NULL;
PFNGLVERTEXARRAYELEMENTBUFFERPROC agx_custom_glad_glVertexArrayElementBuffer = NULL;
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayFogCoordOffsetEXT = NULL;
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC agx_custom_glad_glVertexArrayIndexOffsetEXT = NULL;
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayMultiTexCoordOffsetEXT = NULL;
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC agx_custom_glad_glVertexArrayNormalOffsetEXT = NULL;
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC agx_custom_glad_glVertexArrayParameteriAPPLE = NULL;
PFNGLVERTEXARRAYRANGEAPPLEPROC agx_custom_glad_glVertexArrayRangeAPPLE = NULL;
PFNGLVERTEXARRAYRANGENVPROC agx_custom_glad_glVertexArrayRangeNV = NULL;
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC agx_custom_glad_glVertexArraySecondaryColorOffsetEXT = NULL;
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC agx_custom_glad_glVertexArrayTexCoordOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC agx_custom_glad_glVertexArrayVertexAttribBindingEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC agx_custom_glad_glVertexArrayVertexAttribDivisorEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribIFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribIOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC agx_custom_glad_glVertexArrayVertexAttribLFormatEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribLOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexAttribOffsetEXT = NULL;
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC agx_custom_glad_glVertexArrayVertexBindingDivisorEXT = NULL;
PFNGLVERTEXARRAYVERTEXBUFFERPROC agx_custom_glad_glVertexArrayVertexBuffer = NULL;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC agx_custom_glad_glVertexArrayVertexBuffers = NULL;
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC agx_custom_glad_glVertexArrayVertexOffsetEXT = NULL;
PFNGLVERTEXATTRIB1DPROC agx_custom_glad_glVertexAttrib1d = NULL;
PFNGLVERTEXATTRIB1DARBPROC agx_custom_glad_glVertexAttrib1dARB = NULL;
PFNGLVERTEXATTRIB1DNVPROC agx_custom_glad_glVertexAttrib1dNV = NULL;
PFNGLVERTEXATTRIB1DVPROC agx_custom_glad_glVertexAttrib1dv = NULL;
PFNGLVERTEXATTRIB1DVARBPROC agx_custom_glad_glVertexAttrib1dvARB = NULL;
PFNGLVERTEXATTRIB1DVNVPROC agx_custom_glad_glVertexAttrib1dvNV = NULL;
PFNGLVERTEXATTRIB1FPROC agx_custom_glad_glVertexAttrib1f = NULL;
PFNGLVERTEXATTRIB1FARBPROC agx_custom_glad_glVertexAttrib1fARB = NULL;
PFNGLVERTEXATTRIB1FNVPROC agx_custom_glad_glVertexAttrib1fNV = NULL;
PFNGLVERTEXATTRIB1FVPROC agx_custom_glad_glVertexAttrib1fv = NULL;
PFNGLVERTEXATTRIB1FVARBPROC agx_custom_glad_glVertexAttrib1fvARB = NULL;
PFNGLVERTEXATTRIB1FVNVPROC agx_custom_glad_glVertexAttrib1fvNV = NULL;
PFNGLVERTEXATTRIB1HNVPROC agx_custom_glad_glVertexAttrib1hNV = NULL;
PFNGLVERTEXATTRIB1HVNVPROC agx_custom_glad_glVertexAttrib1hvNV = NULL;
PFNGLVERTEXATTRIB1SPROC agx_custom_glad_glVertexAttrib1s = NULL;
PFNGLVERTEXATTRIB1SARBPROC agx_custom_glad_glVertexAttrib1sARB = NULL;
PFNGLVERTEXATTRIB1SNVPROC agx_custom_glad_glVertexAttrib1sNV = NULL;
PFNGLVERTEXATTRIB1SVPROC agx_custom_glad_glVertexAttrib1sv = NULL;
PFNGLVERTEXATTRIB1SVARBPROC agx_custom_glad_glVertexAttrib1svARB = NULL;
PFNGLVERTEXATTRIB1SVNVPROC agx_custom_glad_glVertexAttrib1svNV = NULL;
PFNGLVERTEXATTRIB2DPROC agx_custom_glad_glVertexAttrib2d = NULL;
PFNGLVERTEXATTRIB2DARBPROC agx_custom_glad_glVertexAttrib2dARB = NULL;
PFNGLVERTEXATTRIB2DNVPROC agx_custom_glad_glVertexAttrib2dNV = NULL;
PFNGLVERTEXATTRIB2DVPROC agx_custom_glad_glVertexAttrib2dv = NULL;
PFNGLVERTEXATTRIB2DVARBPROC agx_custom_glad_glVertexAttrib2dvARB = NULL;
PFNGLVERTEXATTRIB2DVNVPROC agx_custom_glad_glVertexAttrib2dvNV = NULL;
PFNGLVERTEXATTRIB2FPROC agx_custom_glad_glVertexAttrib2f = NULL;
PFNGLVERTEXATTRIB2FARBPROC agx_custom_glad_glVertexAttrib2fARB = NULL;
PFNGLVERTEXATTRIB2FNVPROC agx_custom_glad_glVertexAttrib2fNV = NULL;
PFNGLVERTEXATTRIB2FVPROC agx_custom_glad_glVertexAttrib2fv = NULL;
PFNGLVERTEXATTRIB2FVARBPROC agx_custom_glad_glVertexAttrib2fvARB = NULL;
PFNGLVERTEXATTRIB2FVNVPROC agx_custom_glad_glVertexAttrib2fvNV = NULL;
PFNGLVERTEXATTRIB2HNVPROC agx_custom_glad_glVertexAttrib2hNV = NULL;
PFNGLVERTEXATTRIB2HVNVPROC agx_custom_glad_glVertexAttrib2hvNV = NULL;
PFNGLVERTEXATTRIB2SPROC agx_custom_glad_glVertexAttrib2s = NULL;
PFNGLVERTEXATTRIB2SARBPROC agx_custom_glad_glVertexAttrib2sARB = NULL;
PFNGLVERTEXATTRIB2SNVPROC agx_custom_glad_glVertexAttrib2sNV = NULL;
PFNGLVERTEXATTRIB2SVPROC agx_custom_glad_glVertexAttrib2sv = NULL;
PFNGLVERTEXATTRIB2SVARBPROC agx_custom_glad_glVertexAttrib2svARB = NULL;
PFNGLVERTEXATTRIB2SVNVPROC agx_custom_glad_glVertexAttrib2svNV = NULL;
PFNGLVERTEXATTRIB3DPROC agx_custom_glad_glVertexAttrib3d = NULL;
PFNGLVERTEXATTRIB3DARBPROC agx_custom_glad_glVertexAttrib3dARB = NULL;
PFNGLVERTEXATTRIB3DNVPROC agx_custom_glad_glVertexAttrib3dNV = NULL;
PFNGLVERTEXATTRIB3DVPROC agx_custom_glad_glVertexAttrib3dv = NULL;
PFNGLVERTEXATTRIB3DVARBPROC agx_custom_glad_glVertexAttrib3dvARB = NULL;
PFNGLVERTEXATTRIB3DVNVPROC agx_custom_glad_glVertexAttrib3dvNV = NULL;
PFNGLVERTEXATTRIB3FPROC agx_custom_glad_glVertexAttrib3f = NULL;
PFNGLVERTEXATTRIB3FARBPROC agx_custom_glad_glVertexAttrib3fARB = NULL;
PFNGLVERTEXATTRIB3FNVPROC agx_custom_glad_glVertexAttrib3fNV = NULL;
PFNGLVERTEXATTRIB3FVPROC agx_custom_glad_glVertexAttrib3fv = NULL;
PFNGLVERTEXATTRIB3FVARBPROC agx_custom_glad_glVertexAttrib3fvARB = NULL;
PFNGLVERTEXATTRIB3FVNVPROC agx_custom_glad_glVertexAttrib3fvNV = NULL;
PFNGLVERTEXATTRIB3HNVPROC agx_custom_glad_glVertexAttrib3hNV = NULL;
PFNGLVERTEXATTRIB3HVNVPROC agx_custom_glad_glVertexAttrib3hvNV = NULL;
PFNGLVERTEXATTRIB3SPROC agx_custom_glad_glVertexAttrib3s = NULL;
PFNGLVERTEXATTRIB3SARBPROC agx_custom_glad_glVertexAttrib3sARB = NULL;
PFNGLVERTEXATTRIB3SNVPROC agx_custom_glad_glVertexAttrib3sNV = NULL;
PFNGLVERTEXATTRIB3SVPROC agx_custom_glad_glVertexAttrib3sv = NULL;
PFNGLVERTEXATTRIB3SVARBPROC agx_custom_glad_glVertexAttrib3svARB = NULL;
PFNGLVERTEXATTRIB3SVNVPROC agx_custom_glad_glVertexAttrib3svNV = NULL;
PFNGLVERTEXATTRIB4NBVPROC agx_custom_glad_glVertexAttrib4Nbv = NULL;
PFNGLVERTEXATTRIB4NBVARBPROC agx_custom_glad_glVertexAttrib4NbvARB = NULL;
PFNGLVERTEXATTRIB4NIVPROC agx_custom_glad_glVertexAttrib4Niv = NULL;
PFNGLVERTEXATTRIB4NIVARBPROC agx_custom_glad_glVertexAttrib4NivARB = NULL;
PFNGLVERTEXATTRIB4NSVPROC agx_custom_glad_glVertexAttrib4Nsv = NULL;
PFNGLVERTEXATTRIB4NSVARBPROC agx_custom_glad_glVertexAttrib4NsvARB = NULL;
PFNGLVERTEXATTRIB4NUBPROC agx_custom_glad_glVertexAttrib4Nub = NULL;
PFNGLVERTEXATTRIB4NUBARBPROC agx_custom_glad_glVertexAttrib4NubARB = NULL;
PFNGLVERTEXATTRIB4NUBVPROC agx_custom_glad_glVertexAttrib4Nubv = NULL;
PFNGLVERTEXATTRIB4NUBVARBPROC agx_custom_glad_glVertexAttrib4NubvARB = NULL;
PFNGLVERTEXATTRIB4NUIVPROC agx_custom_glad_glVertexAttrib4Nuiv = NULL;
PFNGLVERTEXATTRIB4NUIVARBPROC agx_custom_glad_glVertexAttrib4NuivARB = NULL;
PFNGLVERTEXATTRIB4NUSVPROC agx_custom_glad_glVertexAttrib4Nusv = NULL;
PFNGLVERTEXATTRIB4NUSVARBPROC agx_custom_glad_glVertexAttrib4NusvARB = NULL;
PFNGLVERTEXATTRIB4BVPROC agx_custom_glad_glVertexAttrib4bv = NULL;
PFNGLVERTEXATTRIB4BVARBPROC agx_custom_glad_glVertexAttrib4bvARB = NULL;
PFNGLVERTEXATTRIB4DPROC agx_custom_glad_glVertexAttrib4d = NULL;
PFNGLVERTEXATTRIB4DARBPROC agx_custom_glad_glVertexAttrib4dARB = NULL;
PFNGLVERTEXATTRIB4DNVPROC agx_custom_glad_glVertexAttrib4dNV = NULL;
PFNGLVERTEXATTRIB4DVPROC agx_custom_glad_glVertexAttrib4dv = NULL;
PFNGLVERTEXATTRIB4DVARBPROC agx_custom_glad_glVertexAttrib4dvARB = NULL;
PFNGLVERTEXATTRIB4DVNVPROC agx_custom_glad_glVertexAttrib4dvNV = NULL;
PFNGLVERTEXATTRIB4FPROC agx_custom_glad_glVertexAttrib4f = NULL;
PFNGLVERTEXATTRIB4FARBPROC agx_custom_glad_glVertexAttrib4fARB = NULL;
PFNGLVERTEXATTRIB4FNVPROC agx_custom_glad_glVertexAttrib4fNV = NULL;
PFNGLVERTEXATTRIB4FVPROC agx_custom_glad_glVertexAttrib4fv = NULL;
PFNGLVERTEXATTRIB4FVARBPROC agx_custom_glad_glVertexAttrib4fvARB = NULL;
PFNGLVERTEXATTRIB4FVNVPROC agx_custom_glad_glVertexAttrib4fvNV = NULL;
PFNGLVERTEXATTRIB4HNVPROC agx_custom_glad_glVertexAttrib4hNV = NULL;
PFNGLVERTEXATTRIB4HVNVPROC agx_custom_glad_glVertexAttrib4hvNV = NULL;
PFNGLVERTEXATTRIB4IVPROC agx_custom_glad_glVertexAttrib4iv = NULL;
PFNGLVERTEXATTRIB4IVARBPROC agx_custom_glad_glVertexAttrib4ivARB = NULL;
PFNGLVERTEXATTRIB4SPROC agx_custom_glad_glVertexAttrib4s = NULL;
PFNGLVERTEXATTRIB4SARBPROC agx_custom_glad_glVertexAttrib4sARB = NULL;
PFNGLVERTEXATTRIB4SNVPROC agx_custom_glad_glVertexAttrib4sNV = NULL;
PFNGLVERTEXATTRIB4SVPROC agx_custom_glad_glVertexAttrib4sv = NULL;
PFNGLVERTEXATTRIB4SVARBPROC agx_custom_glad_glVertexAttrib4svARB = NULL;
PFNGLVERTEXATTRIB4SVNVPROC agx_custom_glad_glVertexAttrib4svNV = NULL;
PFNGLVERTEXATTRIB4UBNVPROC agx_custom_glad_glVertexAttrib4ubNV = NULL;
PFNGLVERTEXATTRIB4UBVPROC agx_custom_glad_glVertexAttrib4ubv = NULL;
PFNGLVERTEXATTRIB4UBVARBPROC agx_custom_glad_glVertexAttrib4ubvARB = NULL;
PFNGLVERTEXATTRIB4UBVNVPROC agx_custom_glad_glVertexAttrib4ubvNV = NULL;
PFNGLVERTEXATTRIB4UIVPROC agx_custom_glad_glVertexAttrib4uiv = NULL;
PFNGLVERTEXATTRIB4UIVARBPROC agx_custom_glad_glVertexAttrib4uivARB = NULL;
PFNGLVERTEXATTRIB4USVPROC agx_custom_glad_glVertexAttrib4usv = NULL;
PFNGLVERTEXATTRIB4USVARBPROC agx_custom_glad_glVertexAttrib4usvARB = NULL;
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC agx_custom_glad_glVertexAttribArrayObjectATI = NULL;
PFNGLVERTEXATTRIBBINDINGPROC agx_custom_glad_glVertexAttribBinding = NULL;
PFNGLVERTEXATTRIBDIVISORPROC agx_custom_glad_glVertexAttribDivisor = NULL;
PFNGLVERTEXATTRIBDIVISORARBPROC agx_custom_glad_glVertexAttribDivisorARB = NULL;
PFNGLVERTEXATTRIBFORMATPROC agx_custom_glad_glVertexAttribFormat = NULL;
PFNGLVERTEXATTRIBFORMATNVPROC agx_custom_glad_glVertexAttribFormatNV = NULL;
PFNGLVERTEXATTRIBI1IPROC agx_custom_glad_glVertexAttribI1i = NULL;
PFNGLVERTEXATTRIBI1IEXTPROC agx_custom_glad_glVertexAttribI1iEXT = NULL;
PFNGLVERTEXATTRIBI1IVPROC agx_custom_glad_glVertexAttribI1iv = NULL;
PFNGLVERTEXATTRIBI1IVEXTPROC agx_custom_glad_glVertexAttribI1ivEXT = NULL;
PFNGLVERTEXATTRIBI1UIPROC agx_custom_glad_glVertexAttribI1ui = NULL;
PFNGLVERTEXATTRIBI1UIEXTPROC agx_custom_glad_glVertexAttribI1uiEXT = NULL;
PFNGLVERTEXATTRIBI1UIVPROC agx_custom_glad_glVertexAttribI1uiv = NULL;
PFNGLVERTEXATTRIBI1UIVEXTPROC agx_custom_glad_glVertexAttribI1uivEXT = NULL;
PFNGLVERTEXATTRIBI2IPROC agx_custom_glad_glVertexAttribI2i = NULL;
PFNGLVERTEXATTRIBI2IEXTPROC agx_custom_glad_glVertexAttribI2iEXT = NULL;
PFNGLVERTEXATTRIBI2IVPROC agx_custom_glad_glVertexAttribI2iv = NULL;
PFNGLVERTEXATTRIBI2IVEXTPROC agx_custom_glad_glVertexAttribI2ivEXT = NULL;
PFNGLVERTEXATTRIBI2UIPROC agx_custom_glad_glVertexAttribI2ui = NULL;
PFNGLVERTEXATTRIBI2UIEXTPROC agx_custom_glad_glVertexAttribI2uiEXT = NULL;
PFNGLVERTEXATTRIBI2UIVPROC agx_custom_glad_glVertexAttribI2uiv = NULL;
PFNGLVERTEXATTRIBI2UIVEXTPROC agx_custom_glad_glVertexAttribI2uivEXT = NULL;
PFNGLVERTEXATTRIBI3IPROC agx_custom_glad_glVertexAttribI3i = NULL;
PFNGLVERTEXATTRIBI3IEXTPROC agx_custom_glad_glVertexAttribI3iEXT = NULL;
PFNGLVERTEXATTRIBI3IVPROC agx_custom_glad_glVertexAttribI3iv = NULL;
PFNGLVERTEXATTRIBI3IVEXTPROC agx_custom_glad_glVertexAttribI3ivEXT = NULL;
PFNGLVERTEXATTRIBI3UIPROC agx_custom_glad_glVertexAttribI3ui = NULL;
PFNGLVERTEXATTRIBI3UIEXTPROC agx_custom_glad_glVertexAttribI3uiEXT = NULL;
PFNGLVERTEXATTRIBI3UIVPROC agx_custom_glad_glVertexAttribI3uiv = NULL;
PFNGLVERTEXATTRIBI3UIVEXTPROC agx_custom_glad_glVertexAttribI3uivEXT = NULL;
PFNGLVERTEXATTRIBI4BVPROC agx_custom_glad_glVertexAttribI4bv = NULL;
PFNGLVERTEXATTRIBI4BVEXTPROC agx_custom_glad_glVertexAttribI4bvEXT = NULL;
PFNGLVERTEXATTRIBI4IPROC agx_custom_glad_glVertexAttribI4i = NULL;
PFNGLVERTEXATTRIBI4IEXTPROC agx_custom_glad_glVertexAttribI4iEXT = NULL;
PFNGLVERTEXATTRIBI4IVPROC agx_custom_glad_glVertexAttribI4iv = NULL;
PFNGLVERTEXATTRIBI4IVEXTPROC agx_custom_glad_glVertexAttribI4ivEXT = NULL;
PFNGLVERTEXATTRIBI4SVPROC agx_custom_glad_glVertexAttribI4sv = NULL;
PFNGLVERTEXATTRIBI4SVEXTPROC agx_custom_glad_glVertexAttribI4svEXT = NULL;
PFNGLVERTEXATTRIBI4UBVPROC agx_custom_glad_glVertexAttribI4ubv = NULL;
PFNGLVERTEXATTRIBI4UBVEXTPROC agx_custom_glad_glVertexAttribI4ubvEXT = NULL;
PFNGLVERTEXATTRIBI4UIPROC agx_custom_glad_glVertexAttribI4ui = NULL;
PFNGLVERTEXATTRIBI4UIEXTPROC agx_custom_glad_glVertexAttribI4uiEXT = NULL;
PFNGLVERTEXATTRIBI4UIVPROC agx_custom_glad_glVertexAttribI4uiv = NULL;
PFNGLVERTEXATTRIBI4UIVEXTPROC agx_custom_glad_glVertexAttribI4uivEXT = NULL;
PFNGLVERTEXATTRIBI4USVPROC agx_custom_glad_glVertexAttribI4usv = NULL;
PFNGLVERTEXATTRIBI4USVEXTPROC agx_custom_glad_glVertexAttribI4usvEXT = NULL;
PFNGLVERTEXATTRIBIFORMATPROC agx_custom_glad_glVertexAttribIFormat = NULL;
PFNGLVERTEXATTRIBIFORMATNVPROC agx_custom_glad_glVertexAttribIFormatNV = NULL;
PFNGLVERTEXATTRIBIPOINTERPROC agx_custom_glad_glVertexAttribIPointer = NULL;
PFNGLVERTEXATTRIBIPOINTEREXTPROC agx_custom_glad_glVertexAttribIPointerEXT = NULL;
PFNGLVERTEXATTRIBL1DPROC agx_custom_glad_glVertexAttribL1d = NULL;
PFNGLVERTEXATTRIBL1DEXTPROC agx_custom_glad_glVertexAttribL1dEXT = NULL;
PFNGLVERTEXATTRIBL1DVPROC agx_custom_glad_glVertexAttribL1dv = NULL;
PFNGLVERTEXATTRIBL1DVEXTPROC agx_custom_glad_glVertexAttribL1dvEXT = NULL;
PFNGLVERTEXATTRIBL1I64NVPROC agx_custom_glad_glVertexAttribL1i64NV = NULL;
PFNGLVERTEXATTRIBL1I64VNVPROC agx_custom_glad_glVertexAttribL1i64vNV = NULL;
PFNGLVERTEXATTRIBL1UI64ARBPROC agx_custom_glad_glVertexAttribL1ui64ARB = NULL;
PFNGLVERTEXATTRIBL1UI64NVPROC agx_custom_glad_glVertexAttribL1ui64NV = NULL;
PFNGLVERTEXATTRIBL1UI64VARBPROC agx_custom_glad_glVertexAttribL1ui64vARB = NULL;
PFNGLVERTEXATTRIBL1UI64VNVPROC agx_custom_glad_glVertexAttribL1ui64vNV = NULL;
PFNGLVERTEXATTRIBL2DPROC agx_custom_glad_glVertexAttribL2d = NULL;
PFNGLVERTEXATTRIBL2DEXTPROC agx_custom_glad_glVertexAttribL2dEXT = NULL;
PFNGLVERTEXATTRIBL2DVPROC agx_custom_glad_glVertexAttribL2dv = NULL;
PFNGLVERTEXATTRIBL2DVEXTPROC agx_custom_glad_glVertexAttribL2dvEXT = NULL;
PFNGLVERTEXATTRIBL2I64NVPROC agx_custom_glad_glVertexAttribL2i64NV = NULL;
PFNGLVERTEXATTRIBL2I64VNVPROC agx_custom_glad_glVertexAttribL2i64vNV = NULL;
PFNGLVERTEXATTRIBL2UI64NVPROC agx_custom_glad_glVertexAttribL2ui64NV = NULL;
PFNGLVERTEXATTRIBL2UI64VNVPROC agx_custom_glad_glVertexAttribL2ui64vNV = NULL;
PFNGLVERTEXATTRIBL3DPROC agx_custom_glad_glVertexAttribL3d = NULL;
PFNGLVERTEXATTRIBL3DEXTPROC agx_custom_glad_glVertexAttribL3dEXT = NULL;
PFNGLVERTEXATTRIBL3DVPROC agx_custom_glad_glVertexAttribL3dv = NULL;
PFNGLVERTEXATTRIBL3DVEXTPROC agx_custom_glad_glVertexAttribL3dvEXT = NULL;
PFNGLVERTEXATTRIBL3I64NVPROC agx_custom_glad_glVertexAttribL3i64NV = NULL;
PFNGLVERTEXATTRIBL3I64VNVPROC agx_custom_glad_glVertexAttribL3i64vNV = NULL;
PFNGLVERTEXATTRIBL3UI64NVPROC agx_custom_glad_glVertexAttribL3ui64NV = NULL;
PFNGLVERTEXATTRIBL3UI64VNVPROC agx_custom_glad_glVertexAttribL3ui64vNV = NULL;
PFNGLVERTEXATTRIBL4DPROC agx_custom_glad_glVertexAttribL4d = NULL;
PFNGLVERTEXATTRIBL4DEXTPROC agx_custom_glad_glVertexAttribL4dEXT = NULL;
PFNGLVERTEXATTRIBL4DVPROC agx_custom_glad_glVertexAttribL4dv = NULL;
PFNGLVERTEXATTRIBL4DVEXTPROC agx_custom_glad_glVertexAttribL4dvEXT = NULL;
PFNGLVERTEXATTRIBL4I64NVPROC agx_custom_glad_glVertexAttribL4i64NV = NULL;
PFNGLVERTEXATTRIBL4I64VNVPROC agx_custom_glad_glVertexAttribL4i64vNV = NULL;
PFNGLVERTEXATTRIBL4UI64NVPROC agx_custom_glad_glVertexAttribL4ui64NV = NULL;
PFNGLVERTEXATTRIBL4UI64VNVPROC agx_custom_glad_glVertexAttribL4ui64vNV = NULL;
PFNGLVERTEXATTRIBLFORMATPROC agx_custom_glad_glVertexAttribLFormat = NULL;
PFNGLVERTEXATTRIBLFORMATNVPROC agx_custom_glad_glVertexAttribLFormatNV = NULL;
PFNGLVERTEXATTRIBLPOINTERPROC agx_custom_glad_glVertexAttribLPointer = NULL;
PFNGLVERTEXATTRIBLPOINTEREXTPROC agx_custom_glad_glVertexAttribLPointerEXT = NULL;
PFNGLVERTEXATTRIBP1UIPROC agx_custom_glad_glVertexAttribP1ui = NULL;
PFNGLVERTEXATTRIBP1UIVPROC agx_custom_glad_glVertexAttribP1uiv = NULL;
PFNGLVERTEXATTRIBP2UIPROC agx_custom_glad_glVertexAttribP2ui = NULL;
PFNGLVERTEXATTRIBP2UIVPROC agx_custom_glad_glVertexAttribP2uiv = NULL;
PFNGLVERTEXATTRIBP3UIPROC agx_custom_glad_glVertexAttribP3ui = NULL;
PFNGLVERTEXATTRIBP3UIVPROC agx_custom_glad_glVertexAttribP3uiv = NULL;
PFNGLVERTEXATTRIBP4UIPROC agx_custom_glad_glVertexAttribP4ui = NULL;
PFNGLVERTEXATTRIBP4UIVPROC agx_custom_glad_glVertexAttribP4uiv = NULL;
PFNGLVERTEXATTRIBPARAMETERIAMDPROC agx_custom_glad_glVertexAttribParameteriAMD = NULL;
PFNGLVERTEXATTRIBPOINTERPROC agx_custom_glad_glVertexAttribPointer = NULL;
PFNGLVERTEXATTRIBPOINTERARBPROC agx_custom_glad_glVertexAttribPointerARB = NULL;
PFNGLVERTEXATTRIBPOINTERNVPROC agx_custom_glad_glVertexAttribPointerNV = NULL;
PFNGLVERTEXATTRIBS1DVNVPROC agx_custom_glad_glVertexAttribs1dvNV = NULL;
PFNGLVERTEXATTRIBS1FVNVPROC agx_custom_glad_glVertexAttribs1fvNV = NULL;
PFNGLVERTEXATTRIBS1HVNVPROC agx_custom_glad_glVertexAttribs1hvNV = NULL;
PFNGLVERTEXATTRIBS1SVNVPROC agx_custom_glad_glVertexAttribs1svNV = NULL;
PFNGLVERTEXATTRIBS2DVNVPROC agx_custom_glad_glVertexAttribs2dvNV = NULL;
PFNGLVERTEXATTRIBS2FVNVPROC agx_custom_glad_glVertexAttribs2fvNV = NULL;
PFNGLVERTEXATTRIBS2HVNVPROC agx_custom_glad_glVertexAttribs2hvNV = NULL;
PFNGLVERTEXATTRIBS2SVNVPROC agx_custom_glad_glVertexAttribs2svNV = NULL;
PFNGLVERTEXATTRIBS3DVNVPROC agx_custom_glad_glVertexAttribs3dvNV = NULL;
PFNGLVERTEXATTRIBS3FVNVPROC agx_custom_glad_glVertexAttribs3fvNV = NULL;
PFNGLVERTEXATTRIBS3HVNVPROC agx_custom_glad_glVertexAttribs3hvNV = NULL;
PFNGLVERTEXATTRIBS3SVNVPROC agx_custom_glad_glVertexAttribs3svNV = NULL;
PFNGLVERTEXATTRIBS4DVNVPROC agx_custom_glad_glVertexAttribs4dvNV = NULL;
PFNGLVERTEXATTRIBS4FVNVPROC agx_custom_glad_glVertexAttribs4fvNV = NULL;
PFNGLVERTEXATTRIBS4HVNVPROC agx_custom_glad_glVertexAttribs4hvNV = NULL;
PFNGLVERTEXATTRIBS4SVNVPROC agx_custom_glad_glVertexAttribs4svNV = NULL;
PFNGLVERTEXATTRIBS4UBVNVPROC agx_custom_glad_glVertexAttribs4ubvNV = NULL;
PFNGLVERTEXBINDINGDIVISORPROC agx_custom_glad_glVertexBindingDivisor = NULL;
PFNGLVERTEXBLENDARBPROC agx_custom_glad_glVertexBlendARB = NULL;
PFNGLVERTEXBLENDENVFATIPROC agx_custom_glad_glVertexBlendEnvfATI = NULL;
PFNGLVERTEXBLENDENVIATIPROC agx_custom_glad_glVertexBlendEnviATI = NULL;
PFNGLVERTEXFORMATNVPROC agx_custom_glad_glVertexFormatNV = NULL;
PFNGLVERTEXP2UIPROC agx_custom_glad_glVertexP2ui = NULL;
PFNGLVERTEXP2UIVPROC agx_custom_glad_glVertexP2uiv = NULL;
PFNGLVERTEXP3UIPROC agx_custom_glad_glVertexP3ui = NULL;
PFNGLVERTEXP3UIVPROC agx_custom_glad_glVertexP3uiv = NULL;
PFNGLVERTEXP4UIPROC agx_custom_glad_glVertexP4ui = NULL;
PFNGLVERTEXP4UIVPROC agx_custom_glad_glVertexP4uiv = NULL;
PFNGLVERTEXPOINTERPROC agx_custom_glad_glVertexPointer = NULL;
PFNGLVERTEXPOINTEREXTPROC agx_custom_glad_glVertexPointerEXT = NULL;
PFNGLVERTEXPOINTERLISTIBMPROC agx_custom_glad_glVertexPointerListIBM = NULL;
PFNGLVERTEXPOINTERVINTELPROC agx_custom_glad_glVertexPointervINTEL = NULL;
PFNGLVERTEXSTREAM1DATIPROC agx_custom_glad_glVertexStream1dATI = NULL;
PFNGLVERTEXSTREAM1DVATIPROC agx_custom_glad_glVertexStream1dvATI = NULL;
PFNGLVERTEXSTREAM1FATIPROC agx_custom_glad_glVertexStream1fATI = NULL;
PFNGLVERTEXSTREAM1FVATIPROC agx_custom_glad_glVertexStream1fvATI = NULL;
PFNGLVERTEXSTREAM1IATIPROC agx_custom_glad_glVertexStream1iATI = NULL;
PFNGLVERTEXSTREAM1IVATIPROC agx_custom_glad_glVertexStream1ivATI = NULL;
PFNGLVERTEXSTREAM1SATIPROC agx_custom_glad_glVertexStream1sATI = NULL;
PFNGLVERTEXSTREAM1SVATIPROC agx_custom_glad_glVertexStream1svATI = NULL;
PFNGLVERTEXSTREAM2DATIPROC agx_custom_glad_glVertexStream2dATI = NULL;
PFNGLVERTEXSTREAM2DVATIPROC agx_custom_glad_glVertexStream2dvATI = NULL;
PFNGLVERTEXSTREAM2FATIPROC agx_custom_glad_glVertexStream2fATI = NULL;
PFNGLVERTEXSTREAM2FVATIPROC agx_custom_glad_glVertexStream2fvATI = NULL;
PFNGLVERTEXSTREAM2IATIPROC agx_custom_glad_glVertexStream2iATI = NULL;
PFNGLVERTEXSTREAM2IVATIPROC agx_custom_glad_glVertexStream2ivATI = NULL;
PFNGLVERTEXSTREAM2SATIPROC agx_custom_glad_glVertexStream2sATI = NULL;
PFNGLVERTEXSTREAM2SVATIPROC agx_custom_glad_glVertexStream2svATI = NULL;
PFNGLVERTEXSTREAM3DATIPROC agx_custom_glad_glVertexStream3dATI = NULL;
PFNGLVERTEXSTREAM3DVATIPROC agx_custom_glad_glVertexStream3dvATI = NULL;
PFNGLVERTEXSTREAM3FATIPROC agx_custom_glad_glVertexStream3fATI = NULL;
PFNGLVERTEXSTREAM3FVATIPROC agx_custom_glad_glVertexStream3fvATI = NULL;
PFNGLVERTEXSTREAM3IATIPROC agx_custom_glad_glVertexStream3iATI = NULL;
PFNGLVERTEXSTREAM3IVATIPROC agx_custom_glad_glVertexStream3ivATI = NULL;
PFNGLVERTEXSTREAM3SATIPROC agx_custom_glad_glVertexStream3sATI = NULL;
PFNGLVERTEXSTREAM3SVATIPROC agx_custom_glad_glVertexStream3svATI = NULL;
PFNGLVERTEXSTREAM4DATIPROC agx_custom_glad_glVertexStream4dATI = NULL;
PFNGLVERTEXSTREAM4DVATIPROC agx_custom_glad_glVertexStream4dvATI = NULL;
PFNGLVERTEXSTREAM4FATIPROC agx_custom_glad_glVertexStream4fATI = NULL;
PFNGLVERTEXSTREAM4FVATIPROC agx_custom_glad_glVertexStream4fvATI = NULL;
PFNGLVERTEXSTREAM4IATIPROC agx_custom_glad_glVertexStream4iATI = NULL;
PFNGLVERTEXSTREAM4IVATIPROC agx_custom_glad_glVertexStream4ivATI = NULL;
PFNGLVERTEXSTREAM4SATIPROC agx_custom_glad_glVertexStream4sATI = NULL;
PFNGLVERTEXSTREAM4SVATIPROC agx_custom_glad_glVertexStream4svATI = NULL;
PFNGLVERTEXWEIGHTPOINTEREXTPROC agx_custom_glad_glVertexWeightPointerEXT = NULL;
PFNGLVERTEXWEIGHTFEXTPROC agx_custom_glad_glVertexWeightfEXT = NULL;
PFNGLVERTEXWEIGHTFVEXTPROC agx_custom_glad_glVertexWeightfvEXT = NULL;
PFNGLVERTEXWEIGHTHNVPROC agx_custom_glad_glVertexWeighthNV = NULL;
PFNGLVERTEXWEIGHTHVNVPROC agx_custom_glad_glVertexWeighthvNV = NULL;
PFNGLVIDEOCAPTURENVPROC agx_custom_glad_glVideoCaptureNV = NULL;
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC agx_custom_glad_glVideoCaptureStreamParameterdvNV = NULL;
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC agx_custom_glad_glVideoCaptureStreamParameterfvNV = NULL;
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC agx_custom_glad_glVideoCaptureStreamParameterivNV = NULL;
PFNGLVIEWPORTPROC agx_custom_glad_glViewport = NULL;
PFNGLVIEWPORTARRAYVPROC agx_custom_glad_glViewportArrayv = NULL;
PFNGLVIEWPORTINDEXEDFPROC agx_custom_glad_glViewportIndexedf = NULL;
PFNGLVIEWPORTINDEXEDFVPROC agx_custom_glad_glViewportIndexedfv = NULL;
PFNGLVIEWPORTPOSITIONWSCALENVPROC agx_custom_glad_glViewportPositionWScaleNV = NULL;
PFNGLVIEWPORTSWIZZLENVPROC agx_custom_glad_glViewportSwizzleNV = NULL;
PFNGLWAITSEMAPHOREEXTPROC agx_custom_glad_glWaitSemaphoreEXT = NULL;
PFNGLWAITSEMAPHOREUI64NVXPROC agx_custom_glad_glWaitSemaphoreui64NVX = NULL;
PFNGLWAITSYNCPROC agx_custom_glad_glWaitSync = NULL;
PFNGLWAITVKSEMAPHORENVPROC agx_custom_glad_glWaitVkSemaphoreNV = NULL;
PFNGLWEIGHTPATHSNVPROC agx_custom_glad_glWeightPathsNV = NULL;
PFNGLWEIGHTPOINTERARBPROC agx_custom_glad_glWeightPointerARB = NULL;
PFNGLWEIGHTBVARBPROC agx_custom_glad_glWeightbvARB = NULL;
PFNGLWEIGHTDVARBPROC agx_custom_glad_glWeightdvARB = NULL;
PFNGLWEIGHTFVARBPROC agx_custom_glad_glWeightfvARB = NULL;
PFNGLWEIGHTIVARBPROC agx_custom_glad_glWeightivARB = NULL;
PFNGLWEIGHTSVARBPROC agx_custom_glad_glWeightsvARB = NULL;
PFNGLWEIGHTUBVARBPROC agx_custom_glad_glWeightubvARB = NULL;
PFNGLWEIGHTUIVARBPROC agx_custom_glad_glWeightuivARB = NULL;
PFNGLWEIGHTUSVARBPROC agx_custom_glad_glWeightusvARB = NULL;
PFNGLWINDOWPOS2DPROC agx_custom_glad_glWindowPos2d = NULL;
PFNGLWINDOWPOS2DARBPROC agx_custom_glad_glWindowPos2dARB = NULL;
PFNGLWINDOWPOS2DMESAPROC agx_custom_glad_glWindowPos2dMESA = NULL;
PFNGLWINDOWPOS2DVPROC agx_custom_glad_glWindowPos2dv = NULL;
PFNGLWINDOWPOS2DVARBPROC agx_custom_glad_glWindowPos2dvARB = NULL;
PFNGLWINDOWPOS2DVMESAPROC agx_custom_glad_glWindowPos2dvMESA = NULL;
PFNGLWINDOWPOS2FPROC agx_custom_glad_glWindowPos2f = NULL;
PFNGLWINDOWPOS2FARBPROC agx_custom_glad_glWindowPos2fARB = NULL;
PFNGLWINDOWPOS2FMESAPROC agx_custom_glad_glWindowPos2fMESA = NULL;
PFNGLWINDOWPOS2FVPROC agx_custom_glad_glWindowPos2fv = NULL;
PFNGLWINDOWPOS2FVARBPROC agx_custom_glad_glWindowPos2fvARB = NULL;
PFNGLWINDOWPOS2FVMESAPROC agx_custom_glad_glWindowPos2fvMESA = NULL;
PFNGLWINDOWPOS2IPROC agx_custom_glad_glWindowPos2i = NULL;
PFNGLWINDOWPOS2IARBPROC agx_custom_glad_glWindowPos2iARB = NULL;
PFNGLWINDOWPOS2IMESAPROC agx_custom_glad_glWindowPos2iMESA = NULL;
PFNGLWINDOWPOS2IVPROC agx_custom_glad_glWindowPos2iv = NULL;
PFNGLWINDOWPOS2IVARBPROC agx_custom_glad_glWindowPos2ivARB = NULL;
PFNGLWINDOWPOS2IVMESAPROC agx_custom_glad_glWindowPos2ivMESA = NULL;
PFNGLWINDOWPOS2SPROC agx_custom_glad_glWindowPos2s = NULL;
PFNGLWINDOWPOS2SARBPROC agx_custom_glad_glWindowPos2sARB = NULL;
PFNGLWINDOWPOS2SMESAPROC agx_custom_glad_glWindowPos2sMESA = NULL;
PFNGLWINDOWPOS2SVPROC agx_custom_glad_glWindowPos2sv = NULL;
PFNGLWINDOWPOS2SVARBPROC agx_custom_glad_glWindowPos2svARB = NULL;
PFNGLWINDOWPOS2SVMESAPROC agx_custom_glad_glWindowPos2svMESA = NULL;
PFNGLWINDOWPOS3DPROC agx_custom_glad_glWindowPos3d = NULL;
PFNGLWINDOWPOS3DARBPROC agx_custom_glad_glWindowPos3dARB = NULL;
PFNGLWINDOWPOS3DMESAPROC agx_custom_glad_glWindowPos3dMESA = NULL;
PFNGLWINDOWPOS3DVPROC agx_custom_glad_glWindowPos3dv = NULL;
PFNGLWINDOWPOS3DVARBPROC agx_custom_glad_glWindowPos3dvARB = NULL;
PFNGLWINDOWPOS3DVMESAPROC agx_custom_glad_glWindowPos3dvMESA = NULL;
PFNGLWINDOWPOS3FPROC agx_custom_glad_glWindowPos3f = NULL;
PFNGLWINDOWPOS3FARBPROC agx_custom_glad_glWindowPos3fARB = NULL;
PFNGLWINDOWPOS3FMESAPROC agx_custom_glad_glWindowPos3fMESA = NULL;
PFNGLWINDOWPOS3FVPROC agx_custom_glad_glWindowPos3fv = NULL;
PFNGLWINDOWPOS3FVARBPROC agx_custom_glad_glWindowPos3fvARB = NULL;
PFNGLWINDOWPOS3FVMESAPROC agx_custom_glad_glWindowPos3fvMESA = NULL;
PFNGLWINDOWPOS3IPROC agx_custom_glad_glWindowPos3i = NULL;
PFNGLWINDOWPOS3IARBPROC agx_custom_glad_glWindowPos3iARB = NULL;
PFNGLWINDOWPOS3IMESAPROC agx_custom_glad_glWindowPos3iMESA = NULL;
PFNGLWINDOWPOS3IVPROC agx_custom_glad_glWindowPos3iv = NULL;
PFNGLWINDOWPOS3IVARBPROC agx_custom_glad_glWindowPos3ivARB = NULL;
PFNGLWINDOWPOS3IVMESAPROC agx_custom_glad_glWindowPos3ivMESA = NULL;
PFNGLWINDOWPOS3SPROC agx_custom_glad_glWindowPos3s = NULL;
PFNGLWINDOWPOS3SARBPROC agx_custom_glad_glWindowPos3sARB = NULL;
PFNGLWINDOWPOS3SMESAPROC agx_custom_glad_glWindowPos3sMESA = NULL;
PFNGLWINDOWPOS3SVPROC agx_custom_glad_glWindowPos3sv = NULL;
PFNGLWINDOWPOS3SVARBPROC agx_custom_glad_glWindowPos3svARB = NULL;
PFNGLWINDOWPOS3SVMESAPROC agx_custom_glad_glWindowPos3svMESA = NULL;
PFNGLWINDOWPOS4DMESAPROC agx_custom_glad_glWindowPos4dMESA = NULL;
PFNGLWINDOWPOS4DVMESAPROC agx_custom_glad_glWindowPos4dvMESA = NULL;
PFNGLWINDOWPOS4FMESAPROC agx_custom_glad_glWindowPos4fMESA = NULL;
PFNGLWINDOWPOS4FVMESAPROC agx_custom_glad_glWindowPos4fvMESA = NULL;
PFNGLWINDOWPOS4IMESAPROC agx_custom_glad_glWindowPos4iMESA = NULL;
PFNGLWINDOWPOS4IVMESAPROC agx_custom_glad_glWindowPos4ivMESA = NULL;
PFNGLWINDOWPOS4SMESAPROC agx_custom_glad_glWindowPos4sMESA = NULL;
PFNGLWINDOWPOS4SVMESAPROC agx_custom_glad_glWindowPos4svMESA = NULL;
PFNGLWINDOWRECTANGLESEXTPROC agx_custom_glad_glWindowRectanglesEXT = NULL;
PFNGLWRITEMASKEXTPROC agx_custom_glad_glWriteMaskEXT = NULL;


static void agx_custom_glad_gl_load_GL_VERSION_1_0( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_0) return;
    agx_custom_glad_glAccum = (PFNGLACCUMPROC) load(userptr, "glAccum");
    agx_custom_glad_glAlphaFunc = (PFNGLALPHAFUNCPROC) load(userptr, "glAlphaFunc");
    agx_custom_glad_glBegin = (PFNGLBEGINPROC) load(userptr, "glBegin");
    agx_custom_glad_glBitmap = (PFNGLBITMAPPROC) load(userptr, "glBitmap");
    agx_custom_glad_glBlendFunc = (PFNGLBLENDFUNCPROC) load(userptr, "glBlendFunc");
    agx_custom_glad_glCallList = (PFNGLCALLLISTPROC) load(userptr, "glCallList");
    agx_custom_glad_glCallLists = (PFNGLCALLLISTSPROC) load(userptr, "glCallLists");
    agx_custom_glad_glClear = (PFNGLCLEARPROC) load(userptr, "glClear");
    agx_custom_glad_glClearAccum = (PFNGLCLEARACCUMPROC) load(userptr, "glClearAccum");
    agx_custom_glad_glClearColor = (PFNGLCLEARCOLORPROC) load(userptr, "glClearColor");
    agx_custom_glad_glClearDepth = (PFNGLCLEARDEPTHPROC) load(userptr, "glClearDepth");
    agx_custom_glad_glClearIndex = (PFNGLCLEARINDEXPROC) load(userptr, "glClearIndex");
    agx_custom_glad_glClearStencil = (PFNGLCLEARSTENCILPROC) load(userptr, "glClearStencil");
    agx_custom_glad_glClipPlane = (PFNGLCLIPPLANEPROC) load(userptr, "glClipPlane");
    agx_custom_glad_glColor3b = (PFNGLCOLOR3BPROC) load(userptr, "glColor3b");
    agx_custom_glad_glColor3bv = (PFNGLCOLOR3BVPROC) load(userptr, "glColor3bv");
    agx_custom_glad_glColor3d = (PFNGLCOLOR3DPROC) load(userptr, "glColor3d");
    agx_custom_glad_glColor3dv = (PFNGLCOLOR3DVPROC) load(userptr, "glColor3dv");
    agx_custom_glad_glColor3f = (PFNGLCOLOR3FPROC) load(userptr, "glColor3f");
    agx_custom_glad_glColor3fv = (PFNGLCOLOR3FVPROC) load(userptr, "glColor3fv");
    agx_custom_glad_glColor3i = (PFNGLCOLOR3IPROC) load(userptr, "glColor3i");
    agx_custom_glad_glColor3iv = (PFNGLCOLOR3IVPROC) load(userptr, "glColor3iv");
    agx_custom_glad_glColor3s = (PFNGLCOLOR3SPROC) load(userptr, "glColor3s");
    agx_custom_glad_glColor3sv = (PFNGLCOLOR3SVPROC) load(userptr, "glColor3sv");
    agx_custom_glad_glColor3ub = (PFNGLCOLOR3UBPROC) load(userptr, "glColor3ub");
    agx_custom_glad_glColor3ubv = (PFNGLCOLOR3UBVPROC) load(userptr, "glColor3ubv");
    agx_custom_glad_glColor3ui = (PFNGLCOLOR3UIPROC) load(userptr, "glColor3ui");
    agx_custom_glad_glColor3uiv = (PFNGLCOLOR3UIVPROC) load(userptr, "glColor3uiv");
    agx_custom_glad_glColor3us = (PFNGLCOLOR3USPROC) load(userptr, "glColor3us");
    agx_custom_glad_glColor3usv = (PFNGLCOLOR3USVPROC) load(userptr, "glColor3usv");
    agx_custom_glad_glColor4b = (PFNGLCOLOR4BPROC) load(userptr, "glColor4b");
    agx_custom_glad_glColor4bv = (PFNGLCOLOR4BVPROC) load(userptr, "glColor4bv");
    agx_custom_glad_glColor4d = (PFNGLCOLOR4DPROC) load(userptr, "glColor4d");
    agx_custom_glad_glColor4dv = (PFNGLCOLOR4DVPROC) load(userptr, "glColor4dv");
    agx_custom_glad_glColor4f = (PFNGLCOLOR4FPROC) load(userptr, "glColor4f");
    agx_custom_glad_glColor4fv = (PFNGLCOLOR4FVPROC) load(userptr, "glColor4fv");
    agx_custom_glad_glColor4i = (PFNGLCOLOR4IPROC) load(userptr, "glColor4i");
    agx_custom_glad_glColor4iv = (PFNGLCOLOR4IVPROC) load(userptr, "glColor4iv");
    agx_custom_glad_glColor4s = (PFNGLCOLOR4SPROC) load(userptr, "glColor4s");
    agx_custom_glad_glColor4sv = (PFNGLCOLOR4SVPROC) load(userptr, "glColor4sv");
    agx_custom_glad_glColor4ub = (PFNGLCOLOR4UBPROC) load(userptr, "glColor4ub");
    agx_custom_glad_glColor4ubv = (PFNGLCOLOR4UBVPROC) load(userptr, "glColor4ubv");
    agx_custom_glad_glColor4ui = (PFNGLCOLOR4UIPROC) load(userptr, "glColor4ui");
    agx_custom_glad_glColor4uiv = (PFNGLCOLOR4UIVPROC) load(userptr, "glColor4uiv");
    agx_custom_glad_glColor4us = (PFNGLCOLOR4USPROC) load(userptr, "glColor4us");
    agx_custom_glad_glColor4usv = (PFNGLCOLOR4USVPROC) load(userptr, "glColor4usv");
    agx_custom_glad_glColorMask = (PFNGLCOLORMASKPROC) load(userptr, "glColorMask");
    agx_custom_glad_glColorMaterial = (PFNGLCOLORMATERIALPROC) load(userptr, "glColorMaterial");
    agx_custom_glad_glCopyPixels = (PFNGLCOPYPIXELSPROC) load(userptr, "glCopyPixels");
    agx_custom_glad_glCullFace = (PFNGLCULLFACEPROC) load(userptr, "glCullFace");
    agx_custom_glad_glDeleteLists = (PFNGLDELETELISTSPROC) load(userptr, "glDeleteLists");
    agx_custom_glad_glDepthFunc = (PFNGLDEPTHFUNCPROC) load(userptr, "glDepthFunc");
    agx_custom_glad_glDepthMask = (PFNGLDEPTHMASKPROC) load(userptr, "glDepthMask");
    agx_custom_glad_glDepthRange = (PFNGLDEPTHRANGEPROC) load(userptr, "glDepthRange");
    agx_custom_glad_glDisable = (PFNGLDISABLEPROC) load(userptr, "glDisable");
    agx_custom_glad_glDrawBuffer = (PFNGLDRAWBUFFERPROC) load(userptr, "glDrawBuffer");
    agx_custom_glad_glDrawPixels = (PFNGLDRAWPIXELSPROC) load(userptr, "glDrawPixels");
    agx_custom_glad_glEdgeFlag = (PFNGLEDGEFLAGPROC) load(userptr, "glEdgeFlag");
    agx_custom_glad_glEdgeFlagv = (PFNGLEDGEFLAGVPROC) load(userptr, "glEdgeFlagv");
    agx_custom_glad_glEnable = (PFNGLENABLEPROC) load(userptr, "glEnable");
    agx_custom_glad_glEnd = (PFNGLENDPROC) load(userptr, "glEnd");
    agx_custom_glad_glEndList = (PFNGLENDLISTPROC) load(userptr, "glEndList");
    agx_custom_glad_glEvalCoord1d = (PFNGLEVALCOORD1DPROC) load(userptr, "glEvalCoord1d");
    agx_custom_glad_glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC) load(userptr, "glEvalCoord1dv");
    agx_custom_glad_glEvalCoord1f = (PFNGLEVALCOORD1FPROC) load(userptr, "glEvalCoord1f");
    agx_custom_glad_glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC) load(userptr, "glEvalCoord1fv");
    agx_custom_glad_glEvalCoord2d = (PFNGLEVALCOORD2DPROC) load(userptr, "glEvalCoord2d");
    agx_custom_glad_glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC) load(userptr, "glEvalCoord2dv");
    agx_custom_glad_glEvalCoord2f = (PFNGLEVALCOORD2FPROC) load(userptr, "glEvalCoord2f");
    agx_custom_glad_glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC) load(userptr, "glEvalCoord2fv");
    agx_custom_glad_glEvalMesh1 = (PFNGLEVALMESH1PROC) load(userptr, "glEvalMesh1");
    agx_custom_glad_glEvalMesh2 = (PFNGLEVALMESH2PROC) load(userptr, "glEvalMesh2");
    agx_custom_glad_glEvalPoint1 = (PFNGLEVALPOINT1PROC) load(userptr, "glEvalPoint1");
    agx_custom_glad_glEvalPoint2 = (PFNGLEVALPOINT2PROC) load(userptr, "glEvalPoint2");
    agx_custom_glad_glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC) load(userptr, "glFeedbackBuffer");
    agx_custom_glad_glFinish = (PFNGLFINISHPROC) load(userptr, "glFinish");
    agx_custom_glad_glFlush = (PFNGLFLUSHPROC) load(userptr, "glFlush");
    agx_custom_glad_glFogf = (PFNGLFOGFPROC) load(userptr, "glFogf");
    agx_custom_glad_glFogfv = (PFNGLFOGFVPROC) load(userptr, "glFogfv");
    agx_custom_glad_glFogi = (PFNGLFOGIPROC) load(userptr, "glFogi");
    agx_custom_glad_glFogiv = (PFNGLFOGIVPROC) load(userptr, "glFogiv");
    agx_custom_glad_glFrontFace = (PFNGLFRONTFACEPROC) load(userptr, "glFrontFace");
    agx_custom_glad_glFrustum = (PFNGLFRUSTUMPROC) load(userptr, "glFrustum");
    agx_custom_glad_glGenLists = (PFNGLGENLISTSPROC) load(userptr, "glGenLists");
    agx_custom_glad_glGetBooleanv = (PFNGLGETBOOLEANVPROC) load(userptr, "glGetBooleanv");
    agx_custom_glad_glGetClipPlane = (PFNGLGETCLIPPLANEPROC) load(userptr, "glGetClipPlane");
    agx_custom_glad_glGetDoublev = (PFNGLGETDOUBLEVPROC) load(userptr, "glGetDoublev");
    agx_custom_glad_glGetError = (PFNGLGETERRORPROC) load(userptr, "glGetError");
    agx_custom_glad_glGetFloatv = (PFNGLGETFLOATVPROC) load(userptr, "glGetFloatv");
    agx_custom_glad_glGetIntegerv = (PFNGLGETINTEGERVPROC) load(userptr, "glGetIntegerv");
    agx_custom_glad_glGetLightfv = (PFNGLGETLIGHTFVPROC) load(userptr, "glGetLightfv");
    agx_custom_glad_glGetLightiv = (PFNGLGETLIGHTIVPROC) load(userptr, "glGetLightiv");
    agx_custom_glad_glGetMapdv = (PFNGLGETMAPDVPROC) load(userptr, "glGetMapdv");
    agx_custom_glad_glGetMapfv = (PFNGLGETMAPFVPROC) load(userptr, "glGetMapfv");
    agx_custom_glad_glGetMapiv = (PFNGLGETMAPIVPROC) load(userptr, "glGetMapiv");
    agx_custom_glad_glGetMaterialfv = (PFNGLGETMATERIALFVPROC) load(userptr, "glGetMaterialfv");
    agx_custom_glad_glGetMaterialiv = (PFNGLGETMATERIALIVPROC) load(userptr, "glGetMaterialiv");
    agx_custom_glad_glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC) load(userptr, "glGetPixelMapfv");
    agx_custom_glad_glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC) load(userptr, "glGetPixelMapuiv");
    agx_custom_glad_glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC) load(userptr, "glGetPixelMapusv");
    agx_custom_glad_glGetPolygonStipple = (PFNGLGETPOLYGONSTIPPLEPROC) load(userptr, "glGetPolygonStipple");
    agx_custom_glad_glGetString = (PFNGLGETSTRINGPROC) load(userptr, "glGetString");
    agx_custom_glad_glGetTexEnvfv = (PFNGLGETTEXENVFVPROC) load(userptr, "glGetTexEnvfv");
    agx_custom_glad_glGetTexEnviv = (PFNGLGETTEXENVIVPROC) load(userptr, "glGetTexEnviv");
    agx_custom_glad_glGetTexGendv = (PFNGLGETTEXGENDVPROC) load(userptr, "glGetTexGendv");
    agx_custom_glad_glGetTexGenfv = (PFNGLGETTEXGENFVPROC) load(userptr, "glGetTexGenfv");
    agx_custom_glad_glGetTexGeniv = (PFNGLGETTEXGENIVPROC) load(userptr, "glGetTexGeniv");
    agx_custom_glad_glGetTexImage = (PFNGLGETTEXIMAGEPROC) load(userptr, "glGetTexImage");
    agx_custom_glad_glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC) load(userptr, "glGetTexLevelParameterfv");
    agx_custom_glad_glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC) load(userptr, "glGetTexLevelParameteriv");
    agx_custom_glad_glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC) load(userptr, "glGetTexParameterfv");
    agx_custom_glad_glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC) load(userptr, "glGetTexParameteriv");
    agx_custom_glad_glHint = (PFNGLHINTPROC) load(userptr, "glHint");
    agx_custom_glad_glIndexMask = (PFNGLINDEXMASKPROC) load(userptr, "glIndexMask");
    agx_custom_glad_glIndexd = (PFNGLINDEXDPROC) load(userptr, "glIndexd");
    agx_custom_glad_glIndexdv = (PFNGLINDEXDVPROC) load(userptr, "glIndexdv");
    agx_custom_glad_glIndexf = (PFNGLINDEXFPROC) load(userptr, "glIndexf");
    agx_custom_glad_glIndexfv = (PFNGLINDEXFVPROC) load(userptr, "glIndexfv");
    agx_custom_glad_glIndexi = (PFNGLINDEXIPROC) load(userptr, "glIndexi");
    agx_custom_glad_glIndexiv = (PFNGLINDEXIVPROC) load(userptr, "glIndexiv");
    agx_custom_glad_glIndexs = (PFNGLINDEXSPROC) load(userptr, "glIndexs");
    agx_custom_glad_glIndexsv = (PFNGLINDEXSVPROC) load(userptr, "glIndexsv");
    agx_custom_glad_glInitNames = (PFNGLINITNAMESPROC) load(userptr, "glInitNames");
    agx_custom_glad_glIsEnabled = (PFNGLISENABLEDPROC) load(userptr, "glIsEnabled");
    agx_custom_glad_glIsList = (PFNGLISLISTPROC) load(userptr, "glIsList");
    agx_custom_glad_glLightModelf = (PFNGLLIGHTMODELFPROC) load(userptr, "glLightModelf");
    agx_custom_glad_glLightModelfv = (PFNGLLIGHTMODELFVPROC) load(userptr, "glLightModelfv");
    agx_custom_glad_glLightModeli = (PFNGLLIGHTMODELIPROC) load(userptr, "glLightModeli");
    agx_custom_glad_glLightModeliv = (PFNGLLIGHTMODELIVPROC) load(userptr, "glLightModeliv");
    agx_custom_glad_glLightf = (PFNGLLIGHTFPROC) load(userptr, "glLightf");
    agx_custom_glad_glLightfv = (PFNGLLIGHTFVPROC) load(userptr, "glLightfv");
    agx_custom_glad_glLighti = (PFNGLLIGHTIPROC) load(userptr, "glLighti");
    agx_custom_glad_glLightiv = (PFNGLLIGHTIVPROC) load(userptr, "glLightiv");
    agx_custom_glad_glLineStipple = (PFNGLLINESTIPPLEPROC) load(userptr, "glLineStipple");
    agx_custom_glad_glLineWidth = (PFNGLLINEWIDTHPROC) load(userptr, "glLineWidth");
    agx_custom_glad_glListBase = (PFNGLLISTBASEPROC) load(userptr, "glListBase");
    agx_custom_glad_glLoadIdentity = (PFNGLLOADIDENTITYPROC) load(userptr, "glLoadIdentity");
    agx_custom_glad_glLoadMatrixd = (PFNGLLOADMATRIXDPROC) load(userptr, "glLoadMatrixd");
    agx_custom_glad_glLoadMatrixf = (PFNGLLOADMATRIXFPROC) load(userptr, "glLoadMatrixf");
    agx_custom_glad_glLoadName = (PFNGLLOADNAMEPROC) load(userptr, "glLoadName");
    agx_custom_glad_glLogicOp = (PFNGLLOGICOPPROC) load(userptr, "glLogicOp");
    agx_custom_glad_glMap1d = (PFNGLMAP1DPROC) load(userptr, "glMap1d");
    agx_custom_glad_glMap1f = (PFNGLMAP1FPROC) load(userptr, "glMap1f");
    agx_custom_glad_glMap2d = (PFNGLMAP2DPROC) load(userptr, "glMap2d");
    agx_custom_glad_glMap2f = (PFNGLMAP2FPROC) load(userptr, "glMap2f");
    agx_custom_glad_glMapGrid1d = (PFNGLMAPGRID1DPROC) load(userptr, "glMapGrid1d");
    agx_custom_glad_glMapGrid1f = (PFNGLMAPGRID1FPROC) load(userptr, "glMapGrid1f");
    agx_custom_glad_glMapGrid2d = (PFNGLMAPGRID2DPROC) load(userptr, "glMapGrid2d");
    agx_custom_glad_glMapGrid2f = (PFNGLMAPGRID2FPROC) load(userptr, "glMapGrid2f");
    agx_custom_glad_glMaterialf = (PFNGLMATERIALFPROC) load(userptr, "glMaterialf");
    agx_custom_glad_glMaterialfv = (PFNGLMATERIALFVPROC) load(userptr, "glMaterialfv");
    agx_custom_glad_glMateriali = (PFNGLMATERIALIPROC) load(userptr, "glMateriali");
    agx_custom_glad_glMaterialiv = (PFNGLMATERIALIVPROC) load(userptr, "glMaterialiv");
    agx_custom_glad_glMatrixMode = (PFNGLMATRIXMODEPROC) load(userptr, "glMatrixMode");
    agx_custom_glad_glMultMatrixd = (PFNGLMULTMATRIXDPROC) load(userptr, "glMultMatrixd");
    agx_custom_glad_glMultMatrixf = (PFNGLMULTMATRIXFPROC) load(userptr, "glMultMatrixf");
    agx_custom_glad_glNewList = (PFNGLNEWLISTPROC) load(userptr, "glNewList");
    agx_custom_glad_glNormal3b = (PFNGLNORMAL3BPROC) load(userptr, "glNormal3b");
    agx_custom_glad_glNormal3bv = (PFNGLNORMAL3BVPROC) load(userptr, "glNormal3bv");
    agx_custom_glad_glNormal3d = (PFNGLNORMAL3DPROC) load(userptr, "glNormal3d");
    agx_custom_glad_glNormal3dv = (PFNGLNORMAL3DVPROC) load(userptr, "glNormal3dv");
    agx_custom_glad_glNormal3f = (PFNGLNORMAL3FPROC) load(userptr, "glNormal3f");
    agx_custom_glad_glNormal3fv = (PFNGLNORMAL3FVPROC) load(userptr, "glNormal3fv");
    agx_custom_glad_glNormal3i = (PFNGLNORMAL3IPROC) load(userptr, "glNormal3i");
    agx_custom_glad_glNormal3iv = (PFNGLNORMAL3IVPROC) load(userptr, "glNormal3iv");
    agx_custom_glad_glNormal3s = (PFNGLNORMAL3SPROC) load(userptr, "glNormal3s");
    agx_custom_glad_glNormal3sv = (PFNGLNORMAL3SVPROC) load(userptr, "glNormal3sv");
    agx_custom_glad_glOrtho = (PFNGLORTHOPROC) load(userptr, "glOrtho");
    agx_custom_glad_glPassThrough = (PFNGLPASSTHROUGHPROC) load(userptr, "glPassThrough");
    agx_custom_glad_glPixelMapfv = (PFNGLPIXELMAPFVPROC) load(userptr, "glPixelMapfv");
    agx_custom_glad_glPixelMapuiv = (PFNGLPIXELMAPUIVPROC) load(userptr, "glPixelMapuiv");
    agx_custom_glad_glPixelMapusv = (PFNGLPIXELMAPUSVPROC) load(userptr, "glPixelMapusv");
    agx_custom_glad_glPixelStoref = (PFNGLPIXELSTOREFPROC) load(userptr, "glPixelStoref");
    agx_custom_glad_glPixelStorei = (PFNGLPIXELSTOREIPROC) load(userptr, "glPixelStorei");
    agx_custom_glad_glPixelTransferf = (PFNGLPIXELTRANSFERFPROC) load(userptr, "glPixelTransferf");
    agx_custom_glad_glPixelTransferi = (PFNGLPIXELTRANSFERIPROC) load(userptr, "glPixelTransferi");
    agx_custom_glad_glPixelZoom = (PFNGLPIXELZOOMPROC) load(userptr, "glPixelZoom");
    agx_custom_glad_glPointSize = (PFNGLPOINTSIZEPROC) load(userptr, "glPointSize");
    agx_custom_glad_glPolygonMode = (PFNGLPOLYGONMODEPROC) load(userptr, "glPolygonMode");
    agx_custom_glad_glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC) load(userptr, "glPolygonStipple");
    agx_custom_glad_glPopAttrib = (PFNGLPOPATTRIBPROC) load(userptr, "glPopAttrib");
    agx_custom_glad_glPopMatrix = (PFNGLPOPMATRIXPROC) load(userptr, "glPopMatrix");
    agx_custom_glad_glPopName = (PFNGLPOPNAMEPROC) load(userptr, "glPopName");
    agx_custom_glad_glPushAttrib = (PFNGLPUSHATTRIBPROC) load(userptr, "glPushAttrib");
    agx_custom_glad_glPushMatrix = (PFNGLPUSHMATRIXPROC) load(userptr, "glPushMatrix");
    agx_custom_glad_glPushName = (PFNGLPUSHNAMEPROC) load(userptr, "glPushName");
    agx_custom_glad_glRasterPos2d = (PFNGLRASTERPOS2DPROC) load(userptr, "glRasterPos2d");
    agx_custom_glad_glRasterPos2dv = (PFNGLRASTERPOS2DVPROC) load(userptr, "glRasterPos2dv");
    agx_custom_glad_glRasterPos2f = (PFNGLRASTERPOS2FPROC) load(userptr, "glRasterPos2f");
    agx_custom_glad_glRasterPos2fv = (PFNGLRASTERPOS2FVPROC) load(userptr, "glRasterPos2fv");
    agx_custom_glad_glRasterPos2i = (PFNGLRASTERPOS2IPROC) load(userptr, "glRasterPos2i");
    agx_custom_glad_glRasterPos2iv = (PFNGLRASTERPOS2IVPROC) load(userptr, "glRasterPos2iv");
    agx_custom_glad_glRasterPos2s = (PFNGLRASTERPOS2SPROC) load(userptr, "glRasterPos2s");
    agx_custom_glad_glRasterPos2sv = (PFNGLRASTERPOS2SVPROC) load(userptr, "glRasterPos2sv");
    agx_custom_glad_glRasterPos3d = (PFNGLRASTERPOS3DPROC) load(userptr, "glRasterPos3d");
    agx_custom_glad_glRasterPos3dv = (PFNGLRASTERPOS3DVPROC) load(userptr, "glRasterPos3dv");
    agx_custom_glad_glRasterPos3f = (PFNGLRASTERPOS3FPROC) load(userptr, "glRasterPos3f");
    agx_custom_glad_glRasterPos3fv = (PFNGLRASTERPOS3FVPROC) load(userptr, "glRasterPos3fv");
    agx_custom_glad_glRasterPos3i = (PFNGLRASTERPOS3IPROC) load(userptr, "glRasterPos3i");
    agx_custom_glad_glRasterPos3iv = (PFNGLRASTERPOS3IVPROC) load(userptr, "glRasterPos3iv");
    agx_custom_glad_glRasterPos3s = (PFNGLRASTERPOS3SPROC) load(userptr, "glRasterPos3s");
    agx_custom_glad_glRasterPos3sv = (PFNGLRASTERPOS3SVPROC) load(userptr, "glRasterPos3sv");
    agx_custom_glad_glRasterPos4d = (PFNGLRASTERPOS4DPROC) load(userptr, "glRasterPos4d");
    agx_custom_glad_glRasterPos4dv = (PFNGLRASTERPOS4DVPROC) load(userptr, "glRasterPos4dv");
    agx_custom_glad_glRasterPos4f = (PFNGLRASTERPOS4FPROC) load(userptr, "glRasterPos4f");
    agx_custom_glad_glRasterPos4fv = (PFNGLRASTERPOS4FVPROC) load(userptr, "glRasterPos4fv");
    agx_custom_glad_glRasterPos4i = (PFNGLRASTERPOS4IPROC) load(userptr, "glRasterPos4i");
    agx_custom_glad_glRasterPos4iv = (PFNGLRASTERPOS4IVPROC) load(userptr, "glRasterPos4iv");
    agx_custom_glad_glRasterPos4s = (PFNGLRASTERPOS4SPROC) load(userptr, "glRasterPos4s");
    agx_custom_glad_glRasterPos4sv = (PFNGLRASTERPOS4SVPROC) load(userptr, "glRasterPos4sv");
    agx_custom_glad_glReadBuffer = (PFNGLREADBUFFERPROC) load(userptr, "glReadBuffer");
    agx_custom_glad_glReadPixels = (PFNGLREADPIXELSPROC) load(userptr, "glReadPixels");
    agx_custom_glad_glRectd = (PFNGLRECTDPROC) load(userptr, "glRectd");
    agx_custom_glad_glRectdv = (PFNGLRECTDVPROC) load(userptr, "glRectdv");
    agx_custom_glad_glRectf = (PFNGLRECTFPROC) load(userptr, "glRectf");
    agx_custom_glad_glRectfv = (PFNGLRECTFVPROC) load(userptr, "glRectfv");
    agx_custom_glad_glRecti = (PFNGLRECTIPROC) load(userptr, "glRecti");
    agx_custom_glad_glRectiv = (PFNGLRECTIVPROC) load(userptr, "glRectiv");
    agx_custom_glad_glRects = (PFNGLRECTSPROC) load(userptr, "glRects");
    agx_custom_glad_glRectsv = (PFNGLRECTSVPROC) load(userptr, "glRectsv");
    agx_custom_glad_glRenderMode = (PFNGLRENDERMODEPROC) load(userptr, "glRenderMode");
    agx_custom_glad_glRotated = (PFNGLROTATEDPROC) load(userptr, "glRotated");
    agx_custom_glad_glRotatef = (PFNGLROTATEFPROC) load(userptr, "glRotatef");
    agx_custom_glad_glScaled = (PFNGLSCALEDPROC) load(userptr, "glScaled");
    agx_custom_glad_glScalef = (PFNGLSCALEFPROC) load(userptr, "glScalef");
    agx_custom_glad_glScissor = (PFNGLSCISSORPROC) load(userptr, "glScissor");
    agx_custom_glad_glSelectBuffer = (PFNGLSELECTBUFFERPROC) load(userptr, "glSelectBuffer");
    agx_custom_glad_glShadeModel = (PFNGLSHADEMODELPROC) load(userptr, "glShadeModel");
    agx_custom_glad_glStencilFunc = (PFNGLSTENCILFUNCPROC) load(userptr, "glStencilFunc");
    agx_custom_glad_glStencilMask = (PFNGLSTENCILMASKPROC) load(userptr, "glStencilMask");
    agx_custom_glad_glStencilOp = (PFNGLSTENCILOPPROC) load(userptr, "glStencilOp");
    agx_custom_glad_glTexCoord1d = (PFNGLTEXCOORD1DPROC) load(userptr, "glTexCoord1d");
    agx_custom_glad_glTexCoord1dv = (PFNGLTEXCOORD1DVPROC) load(userptr, "glTexCoord1dv");
    agx_custom_glad_glTexCoord1f = (PFNGLTEXCOORD1FPROC) load(userptr, "glTexCoord1f");
    agx_custom_glad_glTexCoord1fv = (PFNGLTEXCOORD1FVPROC) load(userptr, "glTexCoord1fv");
    agx_custom_glad_glTexCoord1i = (PFNGLTEXCOORD1IPROC) load(userptr, "glTexCoord1i");
    agx_custom_glad_glTexCoord1iv = (PFNGLTEXCOORD1IVPROC) load(userptr, "glTexCoord1iv");
    agx_custom_glad_glTexCoord1s = (PFNGLTEXCOORD1SPROC) load(userptr, "glTexCoord1s");
    agx_custom_glad_glTexCoord1sv = (PFNGLTEXCOORD1SVPROC) load(userptr, "glTexCoord1sv");
    agx_custom_glad_glTexCoord2d = (PFNGLTEXCOORD2DPROC) load(userptr, "glTexCoord2d");
    agx_custom_glad_glTexCoord2dv = (PFNGLTEXCOORD2DVPROC) load(userptr, "glTexCoord2dv");
    agx_custom_glad_glTexCoord2f = (PFNGLTEXCOORD2FPROC) load(userptr, "glTexCoord2f");
    agx_custom_glad_glTexCoord2fv = (PFNGLTEXCOORD2FVPROC) load(userptr, "glTexCoord2fv");
    agx_custom_glad_glTexCoord2i = (PFNGLTEXCOORD2IPROC) load(userptr, "glTexCoord2i");
    agx_custom_glad_glTexCoord2iv = (PFNGLTEXCOORD2IVPROC) load(userptr, "glTexCoord2iv");
    agx_custom_glad_glTexCoord2s = (PFNGLTEXCOORD2SPROC) load(userptr, "glTexCoord2s");
    agx_custom_glad_glTexCoord2sv = (PFNGLTEXCOORD2SVPROC) load(userptr, "glTexCoord2sv");
    agx_custom_glad_glTexCoord3d = (PFNGLTEXCOORD3DPROC) load(userptr, "glTexCoord3d");
    agx_custom_glad_glTexCoord3dv = (PFNGLTEXCOORD3DVPROC) load(userptr, "glTexCoord3dv");
    agx_custom_glad_glTexCoord3f = (PFNGLTEXCOORD3FPROC) load(userptr, "glTexCoord3f");
    agx_custom_glad_glTexCoord3fv = (PFNGLTEXCOORD3FVPROC) load(userptr, "glTexCoord3fv");
    agx_custom_glad_glTexCoord3i = (PFNGLTEXCOORD3IPROC) load(userptr, "glTexCoord3i");
    agx_custom_glad_glTexCoord3iv = (PFNGLTEXCOORD3IVPROC) load(userptr, "glTexCoord3iv");
    agx_custom_glad_glTexCoord3s = (PFNGLTEXCOORD3SPROC) load(userptr, "glTexCoord3s");
    agx_custom_glad_glTexCoord3sv = (PFNGLTEXCOORD3SVPROC) load(userptr, "glTexCoord3sv");
    agx_custom_glad_glTexCoord4d = (PFNGLTEXCOORD4DPROC) load(userptr, "glTexCoord4d");
    agx_custom_glad_glTexCoord4dv = (PFNGLTEXCOORD4DVPROC) load(userptr, "glTexCoord4dv");
    agx_custom_glad_glTexCoord4f = (PFNGLTEXCOORD4FPROC) load(userptr, "glTexCoord4f");
    agx_custom_glad_glTexCoord4fv = (PFNGLTEXCOORD4FVPROC) load(userptr, "glTexCoord4fv");
    agx_custom_glad_glTexCoord4i = (PFNGLTEXCOORD4IPROC) load(userptr, "glTexCoord4i");
    agx_custom_glad_glTexCoord4iv = (PFNGLTEXCOORD4IVPROC) load(userptr, "glTexCoord4iv");
    agx_custom_glad_glTexCoord4s = (PFNGLTEXCOORD4SPROC) load(userptr, "glTexCoord4s");
    agx_custom_glad_glTexCoord4sv = (PFNGLTEXCOORD4SVPROC) load(userptr, "glTexCoord4sv");
    agx_custom_glad_glTexEnvf = (PFNGLTEXENVFPROC) load(userptr, "glTexEnvf");
    agx_custom_glad_glTexEnvfv = (PFNGLTEXENVFVPROC) load(userptr, "glTexEnvfv");
    agx_custom_glad_glTexEnvi = (PFNGLTEXENVIPROC) load(userptr, "glTexEnvi");
    agx_custom_glad_glTexEnviv = (PFNGLTEXENVIVPROC) load(userptr, "glTexEnviv");
    agx_custom_glad_glTexGend = (PFNGLTEXGENDPROC) load(userptr, "glTexGend");
    agx_custom_glad_glTexGendv = (PFNGLTEXGENDVPROC) load(userptr, "glTexGendv");
    agx_custom_glad_glTexGenf = (PFNGLTEXGENFPROC) load(userptr, "glTexGenf");
    agx_custom_glad_glTexGenfv = (PFNGLTEXGENFVPROC) load(userptr, "glTexGenfv");
    agx_custom_glad_glTexGeni = (PFNGLTEXGENIPROC) load(userptr, "glTexGeni");
    agx_custom_glad_glTexGeniv = (PFNGLTEXGENIVPROC) load(userptr, "glTexGeniv");
    agx_custom_glad_glTexImage1D = (PFNGLTEXIMAGE1DPROC) load(userptr, "glTexImage1D");
    agx_custom_glad_glTexImage2D = (PFNGLTEXIMAGE2DPROC) load(userptr, "glTexImage2D");
    agx_custom_glad_glTexParameterf = (PFNGLTEXPARAMETERFPROC) load(userptr, "glTexParameterf");
    agx_custom_glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC) load(userptr, "glTexParameterfv");
    agx_custom_glad_glTexParameteri = (PFNGLTEXPARAMETERIPROC) load(userptr, "glTexParameteri");
    agx_custom_glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC) load(userptr, "glTexParameteriv");
    agx_custom_glad_glTranslated = (PFNGLTRANSLATEDPROC) load(userptr, "glTranslated");
    agx_custom_glad_glTranslatef = (PFNGLTRANSLATEFPROC) load(userptr, "glTranslatef");
    agx_custom_glad_glVertex2d = (PFNGLVERTEX2DPROC) load(userptr, "glVertex2d");
    agx_custom_glad_glVertex2dv = (PFNGLVERTEX2DVPROC) load(userptr, "glVertex2dv");
    agx_custom_glad_glVertex2f = (PFNGLVERTEX2FPROC) load(userptr, "glVertex2f");
    agx_custom_glad_glVertex2fv = (PFNGLVERTEX2FVPROC) load(userptr, "glVertex2fv");
    agx_custom_glad_glVertex2i = (PFNGLVERTEX2IPROC) load(userptr, "glVertex2i");
    agx_custom_glad_glVertex2iv = (PFNGLVERTEX2IVPROC) load(userptr, "glVertex2iv");
    agx_custom_glad_glVertex2s = (PFNGLVERTEX2SPROC) load(userptr, "glVertex2s");
    agx_custom_glad_glVertex2sv = (PFNGLVERTEX2SVPROC) load(userptr, "glVertex2sv");
    agx_custom_glad_glVertex3d = (PFNGLVERTEX3DPROC) load(userptr, "glVertex3d");
    agx_custom_glad_glVertex3dv = (PFNGLVERTEX3DVPROC) load(userptr, "glVertex3dv");
    agx_custom_glad_glVertex3f = (PFNGLVERTEX3FPROC) load(userptr, "glVertex3f");
    agx_custom_glad_glVertex3fv = (PFNGLVERTEX3FVPROC) load(userptr, "glVertex3fv");
    agx_custom_glad_glVertex3i = (PFNGLVERTEX3IPROC) load(userptr, "glVertex3i");
    agx_custom_glad_glVertex3iv = (PFNGLVERTEX3IVPROC) load(userptr, "glVertex3iv");
    agx_custom_glad_glVertex3s = (PFNGLVERTEX3SPROC) load(userptr, "glVertex3s");
    agx_custom_glad_glVertex3sv = (PFNGLVERTEX3SVPROC) load(userptr, "glVertex3sv");
    agx_custom_glad_glVertex4d = (PFNGLVERTEX4DPROC) load(userptr, "glVertex4d");
    agx_custom_glad_glVertex4dv = (PFNGLVERTEX4DVPROC) load(userptr, "glVertex4dv");
    agx_custom_glad_glVertex4f = (PFNGLVERTEX4FPROC) load(userptr, "glVertex4f");
    agx_custom_glad_glVertex4fv = (PFNGLVERTEX4FVPROC) load(userptr, "glVertex4fv");
    agx_custom_glad_glVertex4i = (PFNGLVERTEX4IPROC) load(userptr, "glVertex4i");
    agx_custom_glad_glVertex4iv = (PFNGLVERTEX4IVPROC) load(userptr, "glVertex4iv");
    agx_custom_glad_glVertex4s = (PFNGLVERTEX4SPROC) load(userptr, "glVertex4s");
    agx_custom_glad_glVertex4sv = (PFNGLVERTEX4SVPROC) load(userptr, "glVertex4sv");
    agx_custom_glad_glViewport = (PFNGLVIEWPORTPROC) load(userptr, "glViewport");
}
static void agx_custom_glad_gl_load_GL_VERSION_1_1( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_1) return;
    agx_custom_glad_glAreTexturesResident = (PFNGLARETEXTURESRESIDENTPROC) load(userptr, "glAreTexturesResident");
    agx_custom_glad_glArrayElement = (PFNGLARRAYELEMENTPROC) load(userptr, "glArrayElement");
    agx_custom_glad_glBindTexture = (PFNGLBINDTEXTUREPROC) load(userptr, "glBindTexture");
    agx_custom_glad_glColorPointer = (PFNGLCOLORPOINTERPROC) load(userptr, "glColorPointer");
    agx_custom_glad_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC) load(userptr, "glCopyTexImage1D");
    agx_custom_glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC) load(userptr, "glCopyTexImage2D");
    agx_custom_glad_glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC) load(userptr, "glCopyTexSubImage1D");
    agx_custom_glad_glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC) load(userptr, "glCopyTexSubImage2D");
    agx_custom_glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC) load(userptr, "glDeleteTextures");
    agx_custom_glad_glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC) load(userptr, "glDisableClientState");
    agx_custom_glad_glDrawArrays = (PFNGLDRAWARRAYSPROC) load(userptr, "glDrawArrays");
    agx_custom_glad_glDrawElements = (PFNGLDRAWELEMENTSPROC) load(userptr, "glDrawElements");
    agx_custom_glad_glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC) load(userptr, "glEdgeFlagPointer");
    agx_custom_glad_glEnableClientState = (PFNGLENABLECLIENTSTATEPROC) load(userptr, "glEnableClientState");
    agx_custom_glad_glGenTextures = (PFNGLGENTEXTURESPROC) load(userptr, "glGenTextures");
    agx_custom_glad_glGetPointerv = (PFNGLGETPOINTERVPROC) load(userptr, "glGetPointerv");
    agx_custom_glad_glIndexPointer = (PFNGLINDEXPOINTERPROC) load(userptr, "glIndexPointer");
    agx_custom_glad_glIndexub = (PFNGLINDEXUBPROC) load(userptr, "glIndexub");
    agx_custom_glad_glIndexubv = (PFNGLINDEXUBVPROC) load(userptr, "glIndexubv");
    agx_custom_glad_glInterleavedArrays = (PFNGLINTERLEAVEDARRAYSPROC) load(userptr, "glInterleavedArrays");
    agx_custom_glad_glIsTexture = (PFNGLISTEXTUREPROC) load(userptr, "glIsTexture");
    agx_custom_glad_glNormalPointer = (PFNGLNORMALPOINTERPROC) load(userptr, "glNormalPointer");
    agx_custom_glad_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC) load(userptr, "glPolygonOffset");
    agx_custom_glad_glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC) load(userptr, "glPopClientAttrib");
    agx_custom_glad_glPrioritizeTextures = (PFNGLPRIORITIZETEXTURESPROC) load(userptr, "glPrioritizeTextures");
    agx_custom_glad_glPushClientAttrib = (PFNGLPUSHCLIENTATTRIBPROC) load(userptr, "glPushClientAttrib");
    agx_custom_glad_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC) load(userptr, "glTexCoordPointer");
    agx_custom_glad_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC) load(userptr, "glTexSubImage1D");
    agx_custom_glad_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC) load(userptr, "glTexSubImage2D");
    agx_custom_glad_glVertexPointer = (PFNGLVERTEXPOINTERPROC) load(userptr, "glVertexPointer");
}
static void agx_custom_glad_gl_load_GL_VERSION_1_2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_2) return;
    agx_custom_glad_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC) load(userptr, "glCopyTexSubImage3D");
    agx_custom_glad_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC) load(userptr, "glDrawRangeElements");
    agx_custom_glad_glTexImage3D = (PFNGLTEXIMAGE3DPROC) load(userptr, "glTexImage3D");
    agx_custom_glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC) load(userptr, "glTexSubImage3D");
}
static void agx_custom_glad_gl_load_GL_VERSION_1_3( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_3) return;
    agx_custom_glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC) load(userptr, "glActiveTexture");
    agx_custom_glad_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC) load(userptr, "glClientActiveTexture");
    agx_custom_glad_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC) load(userptr, "glCompressedTexImage1D");
    agx_custom_glad_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC) load(userptr, "glCompressedTexImage2D");
    agx_custom_glad_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC) load(userptr, "glCompressedTexImage3D");
    agx_custom_glad_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) load(userptr, "glCompressedTexSubImage1D");
    agx_custom_glad_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) load(userptr, "glCompressedTexSubImage2D");
    agx_custom_glad_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) load(userptr, "glCompressedTexSubImage3D");
    agx_custom_glad_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC) load(userptr, "glGetCompressedTexImage");
    agx_custom_glad_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC) load(userptr, "glLoadTransposeMatrixd");
    agx_custom_glad_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC) load(userptr, "glLoadTransposeMatrixf");
    agx_custom_glad_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC) load(userptr, "glMultTransposeMatrixd");
    agx_custom_glad_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC) load(userptr, "glMultTransposeMatrixf");
    agx_custom_glad_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC) load(userptr, "glMultiTexCoord1d");
    agx_custom_glad_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC) load(userptr, "glMultiTexCoord1dv");
    agx_custom_glad_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC) load(userptr, "glMultiTexCoord1f");
    agx_custom_glad_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC) load(userptr, "glMultiTexCoord1fv");
    agx_custom_glad_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC) load(userptr, "glMultiTexCoord1i");
    agx_custom_glad_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC) load(userptr, "glMultiTexCoord1iv");
    agx_custom_glad_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC) load(userptr, "glMultiTexCoord1s");
    agx_custom_glad_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC) load(userptr, "glMultiTexCoord1sv");
    agx_custom_glad_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC) load(userptr, "glMultiTexCoord2d");
    agx_custom_glad_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC) load(userptr, "glMultiTexCoord2dv");
    agx_custom_glad_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC) load(userptr, "glMultiTexCoord2f");
    agx_custom_glad_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC) load(userptr, "glMultiTexCoord2fv");
    agx_custom_glad_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC) load(userptr, "glMultiTexCoord2i");
    agx_custom_glad_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC) load(userptr, "glMultiTexCoord2iv");
    agx_custom_glad_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC) load(userptr, "glMultiTexCoord2s");
    agx_custom_glad_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC) load(userptr, "glMultiTexCoord2sv");
    agx_custom_glad_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC) load(userptr, "glMultiTexCoord3d");
    agx_custom_glad_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC) load(userptr, "glMultiTexCoord3dv");
    agx_custom_glad_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC) load(userptr, "glMultiTexCoord3f");
    agx_custom_glad_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC) load(userptr, "glMultiTexCoord3fv");
    agx_custom_glad_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC) load(userptr, "glMultiTexCoord3i");
    agx_custom_glad_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC) load(userptr, "glMultiTexCoord3iv");
    agx_custom_glad_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC) load(userptr, "glMultiTexCoord3s");
    agx_custom_glad_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC) load(userptr, "glMultiTexCoord3sv");
    agx_custom_glad_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC) load(userptr, "glMultiTexCoord4d");
    agx_custom_glad_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC) load(userptr, "glMultiTexCoord4dv");
    agx_custom_glad_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC) load(userptr, "glMultiTexCoord4f");
    agx_custom_glad_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC) load(userptr, "glMultiTexCoord4fv");
    agx_custom_glad_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC) load(userptr, "glMultiTexCoord4i");
    agx_custom_glad_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC) load(userptr, "glMultiTexCoord4iv");
    agx_custom_glad_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC) load(userptr, "glMultiTexCoord4s");
    agx_custom_glad_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC) load(userptr, "glMultiTexCoord4sv");
    agx_custom_glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC) load(userptr, "glSampleCoverage");
}
static void agx_custom_glad_gl_load_GL_VERSION_1_4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_4) return;
    agx_custom_glad_glBlendColor = (PFNGLBLENDCOLORPROC) load(userptr, "glBlendColor");
    agx_custom_glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC) load(userptr, "glBlendEquation");
    agx_custom_glad_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC) load(userptr, "glBlendFuncSeparate");
    agx_custom_glad_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC) load(userptr, "glFogCoordPointer");
    agx_custom_glad_glFogCoordd = (PFNGLFOGCOORDDPROC) load(userptr, "glFogCoordd");
    agx_custom_glad_glFogCoorddv = (PFNGLFOGCOORDDVPROC) load(userptr, "glFogCoorddv");
    agx_custom_glad_glFogCoordf = (PFNGLFOGCOORDFPROC) load(userptr, "glFogCoordf");
    agx_custom_glad_glFogCoordfv = (PFNGLFOGCOORDFVPROC) load(userptr, "glFogCoordfv");
    agx_custom_glad_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC) load(userptr, "glMultiDrawArrays");
    agx_custom_glad_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC) load(userptr, "glMultiDrawElements");
    agx_custom_glad_glPointParameterf = (PFNGLPOINTPARAMETERFPROC) load(userptr, "glPointParameterf");
    agx_custom_glad_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC) load(userptr, "glPointParameterfv");
    agx_custom_glad_glPointParameteri = (PFNGLPOINTPARAMETERIPROC) load(userptr, "glPointParameteri");
    agx_custom_glad_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC) load(userptr, "glPointParameteriv");
    agx_custom_glad_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC) load(userptr, "glSecondaryColor3b");
    agx_custom_glad_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC) load(userptr, "glSecondaryColor3bv");
    agx_custom_glad_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC) load(userptr, "glSecondaryColor3d");
    agx_custom_glad_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC) load(userptr, "glSecondaryColor3dv");
    agx_custom_glad_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC) load(userptr, "glSecondaryColor3f");
    agx_custom_glad_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC) load(userptr, "glSecondaryColor3fv");
    agx_custom_glad_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC) load(userptr, "glSecondaryColor3i");
    agx_custom_glad_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC) load(userptr, "glSecondaryColor3iv");
    agx_custom_glad_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC) load(userptr, "glSecondaryColor3s");
    agx_custom_glad_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC) load(userptr, "glSecondaryColor3sv");
    agx_custom_glad_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC) load(userptr, "glSecondaryColor3ub");
    agx_custom_glad_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC) load(userptr, "glSecondaryColor3ubv");
    agx_custom_glad_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC) load(userptr, "glSecondaryColor3ui");
    agx_custom_glad_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC) load(userptr, "glSecondaryColor3uiv");
    agx_custom_glad_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC) load(userptr, "glSecondaryColor3us");
    agx_custom_glad_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC) load(userptr, "glSecondaryColor3usv");
    agx_custom_glad_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC) load(userptr, "glSecondaryColorPointer");
    agx_custom_glad_glWindowPos2d = (PFNGLWINDOWPOS2DPROC) load(userptr, "glWindowPos2d");
    agx_custom_glad_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC) load(userptr, "glWindowPos2dv");
    agx_custom_glad_glWindowPos2f = (PFNGLWINDOWPOS2FPROC) load(userptr, "glWindowPos2f");
    agx_custom_glad_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC) load(userptr, "glWindowPos2fv");
    agx_custom_glad_glWindowPos2i = (PFNGLWINDOWPOS2IPROC) load(userptr, "glWindowPos2i");
    agx_custom_glad_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC) load(userptr, "glWindowPos2iv");
    agx_custom_glad_glWindowPos2s = (PFNGLWINDOWPOS2SPROC) load(userptr, "glWindowPos2s");
    agx_custom_glad_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC) load(userptr, "glWindowPos2sv");
    agx_custom_glad_glWindowPos3d = (PFNGLWINDOWPOS3DPROC) load(userptr, "glWindowPos3d");
    agx_custom_glad_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC) load(userptr, "glWindowPos3dv");
    agx_custom_glad_glWindowPos3f = (PFNGLWINDOWPOS3FPROC) load(userptr, "glWindowPos3f");
    agx_custom_glad_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC) load(userptr, "glWindowPos3fv");
    agx_custom_glad_glWindowPos3i = (PFNGLWINDOWPOS3IPROC) load(userptr, "glWindowPos3i");
    agx_custom_glad_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC) load(userptr, "glWindowPos3iv");
    agx_custom_glad_glWindowPos3s = (PFNGLWINDOWPOS3SPROC) load(userptr, "glWindowPos3s");
    agx_custom_glad_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC) load(userptr, "glWindowPos3sv");
}
static void agx_custom_glad_gl_load_GL_VERSION_1_5( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_1_5) return;
    agx_custom_glad_glBeginQuery = (PFNGLBEGINQUERYPROC) load(userptr, "glBeginQuery");
    agx_custom_glad_glBindBuffer = (PFNGLBINDBUFFERPROC) load(userptr, "glBindBuffer");
    agx_custom_glad_glBufferData = (PFNGLBUFFERDATAPROC) load(userptr, "glBufferData");
    agx_custom_glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC) load(userptr, "glBufferSubData");
    agx_custom_glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC) load(userptr, "glDeleteBuffers");
    agx_custom_glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC) load(userptr, "glDeleteQueries");
    agx_custom_glad_glEndQuery = (PFNGLENDQUERYPROC) load(userptr, "glEndQuery");
    agx_custom_glad_glGenBuffers = (PFNGLGENBUFFERSPROC) load(userptr, "glGenBuffers");
    agx_custom_glad_glGenQueries = (PFNGLGENQUERIESPROC) load(userptr, "glGenQueries");
    agx_custom_glad_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC) load(userptr, "glGetBufferParameteriv");
    agx_custom_glad_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC) load(userptr, "glGetBufferPointerv");
    agx_custom_glad_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC) load(userptr, "glGetBufferSubData");
    agx_custom_glad_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC) load(userptr, "glGetQueryObjectiv");
    agx_custom_glad_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC) load(userptr, "glGetQueryObjectuiv");
    agx_custom_glad_glGetQueryiv = (PFNGLGETQUERYIVPROC) load(userptr, "glGetQueryiv");
    agx_custom_glad_glIsBuffer = (PFNGLISBUFFERPROC) load(userptr, "glIsBuffer");
    agx_custom_glad_glIsQuery = (PFNGLISQUERYPROC) load(userptr, "glIsQuery");
    agx_custom_glad_glMapBuffer = (PFNGLMAPBUFFERPROC) load(userptr, "glMapBuffer");
    agx_custom_glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC) load(userptr, "glUnmapBuffer");
}
static void agx_custom_glad_gl_load_GL_VERSION_2_0( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_2_0) return;
    agx_custom_glad_glAttachShader = (PFNGLATTACHSHADERPROC) load(userptr, "glAttachShader");
    agx_custom_glad_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC) load(userptr, "glBindAttribLocation");
    agx_custom_glad_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC) load(userptr, "glBlendEquationSeparate");
    agx_custom_glad_glCompileShader = (PFNGLCOMPILESHADERPROC) load(userptr, "glCompileShader");
    agx_custom_glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC) load(userptr, "glCreateProgram");
    agx_custom_glad_glCreateShader = (PFNGLCREATESHADERPROC) load(userptr, "glCreateShader");
    agx_custom_glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC) load(userptr, "glDeleteProgram");
    agx_custom_glad_glDeleteShader = (PFNGLDELETESHADERPROC) load(userptr, "glDeleteShader");
    agx_custom_glad_glDetachShader = (PFNGLDETACHSHADERPROC) load(userptr, "glDetachShader");
    agx_custom_glad_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC) load(userptr, "glDisableVertexAttribArray");
    agx_custom_glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC) load(userptr, "glDrawBuffers");
    agx_custom_glad_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC) load(userptr, "glEnableVertexAttribArray");
    agx_custom_glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC) load(userptr, "glGetActiveAttrib");
    agx_custom_glad_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC) load(userptr, "glGetActiveUniform");
    agx_custom_glad_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC) load(userptr, "glGetAttachedShaders");
    agx_custom_glad_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC) load(userptr, "glGetAttribLocation");
    agx_custom_glad_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC) load(userptr, "glGetProgramInfoLog");
    agx_custom_glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC) load(userptr, "glGetProgramiv");
    agx_custom_glad_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC) load(userptr, "glGetShaderInfoLog");
    agx_custom_glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC) load(userptr, "glGetShaderSource");
    agx_custom_glad_glGetShaderiv = (PFNGLGETSHADERIVPROC) load(userptr, "glGetShaderiv");
    agx_custom_glad_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC) load(userptr, "glGetUniformLocation");
    agx_custom_glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC) load(userptr, "glGetUniformfv");
    agx_custom_glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC) load(userptr, "glGetUniformiv");
    agx_custom_glad_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC) load(userptr, "glGetVertexAttribPointerv");
    agx_custom_glad_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC) load(userptr, "glGetVertexAttribdv");
    agx_custom_glad_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC) load(userptr, "glGetVertexAttribfv");
    agx_custom_glad_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC) load(userptr, "glGetVertexAttribiv");
    agx_custom_glad_glIsProgram = (PFNGLISPROGRAMPROC) load(userptr, "glIsProgram");
    agx_custom_glad_glIsShader = (PFNGLISSHADERPROC) load(userptr, "glIsShader");
    agx_custom_glad_glLinkProgram = (PFNGLLINKPROGRAMPROC) load(userptr, "glLinkProgram");
    agx_custom_glad_glShaderSource = (PFNGLSHADERSOURCEPROC) load(userptr, "glShaderSource");
    agx_custom_glad_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC) load(userptr, "glStencilFuncSeparate");
    agx_custom_glad_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC) load(userptr, "glStencilMaskSeparate");
    agx_custom_glad_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC) load(userptr, "glStencilOpSeparate");
    agx_custom_glad_glUniform1f = (PFNGLUNIFORM1FPROC) load(userptr, "glUniform1f");
    agx_custom_glad_glUniform1fv = (PFNGLUNIFORM1FVPROC) load(userptr, "glUniform1fv");
    agx_custom_glad_glUniform1i = (PFNGLUNIFORM1IPROC) load(userptr, "glUniform1i");
    agx_custom_glad_glUniform1iv = (PFNGLUNIFORM1IVPROC) load(userptr, "glUniform1iv");
    agx_custom_glad_glUniform2f = (PFNGLUNIFORM2FPROC) load(userptr, "glUniform2f");
    agx_custom_glad_glUniform2fv = (PFNGLUNIFORM2FVPROC) load(userptr, "glUniform2fv");
    agx_custom_glad_glUniform2i = (PFNGLUNIFORM2IPROC) load(userptr, "glUniform2i");
    agx_custom_glad_glUniform2iv = (PFNGLUNIFORM2IVPROC) load(userptr, "glUniform2iv");
    agx_custom_glad_glUniform3f = (PFNGLUNIFORM3FPROC) load(userptr, "glUniform3f");
    agx_custom_glad_glUniform3fv = (PFNGLUNIFORM3FVPROC) load(userptr, "glUniform3fv");
    agx_custom_glad_glUniform3i = (PFNGLUNIFORM3IPROC) load(userptr, "glUniform3i");
    agx_custom_glad_glUniform3iv = (PFNGLUNIFORM3IVPROC) load(userptr, "glUniform3iv");
    agx_custom_glad_glUniform4f = (PFNGLUNIFORM4FPROC) load(userptr, "glUniform4f");
    agx_custom_glad_glUniform4fv = (PFNGLUNIFORM4FVPROC) load(userptr, "glUniform4fv");
    agx_custom_glad_glUniform4i = (PFNGLUNIFORM4IPROC) load(userptr, "glUniform4i");
    agx_custom_glad_glUniform4iv = (PFNGLUNIFORM4IVPROC) load(userptr, "glUniform4iv");
    agx_custom_glad_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC) load(userptr, "glUniformMatrix2fv");
    agx_custom_glad_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC) load(userptr, "glUniformMatrix3fv");
    agx_custom_glad_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC) load(userptr, "glUniformMatrix4fv");
    agx_custom_glad_glUseProgram = (PFNGLUSEPROGRAMPROC) load(userptr, "glUseProgram");
    agx_custom_glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC) load(userptr, "glValidateProgram");
    agx_custom_glad_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC) load(userptr, "glVertexAttrib1d");
    agx_custom_glad_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC) load(userptr, "glVertexAttrib1dv");
    agx_custom_glad_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC) load(userptr, "glVertexAttrib1f");
    agx_custom_glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC) load(userptr, "glVertexAttrib1fv");
    agx_custom_glad_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC) load(userptr, "glVertexAttrib1s");
    agx_custom_glad_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC) load(userptr, "glVertexAttrib1sv");
    agx_custom_glad_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC) load(userptr, "glVertexAttrib2d");
    agx_custom_glad_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC) load(userptr, "glVertexAttrib2dv");
    agx_custom_glad_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC) load(userptr, "glVertexAttrib2f");
    agx_custom_glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC) load(userptr, "glVertexAttrib2fv");
    agx_custom_glad_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC) load(userptr, "glVertexAttrib2s");
    agx_custom_glad_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC) load(userptr, "glVertexAttrib2sv");
    agx_custom_glad_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC) load(userptr, "glVertexAttrib3d");
    agx_custom_glad_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC) load(userptr, "glVertexAttrib3dv");
    agx_custom_glad_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC) load(userptr, "glVertexAttrib3f");
    agx_custom_glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC) load(userptr, "glVertexAttrib3fv");
    agx_custom_glad_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC) load(userptr, "glVertexAttrib3s");
    agx_custom_glad_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC) load(userptr, "glVertexAttrib3sv");
    agx_custom_glad_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC) load(userptr, "glVertexAttrib4Nbv");
    agx_custom_glad_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC) load(userptr, "glVertexAttrib4Niv");
    agx_custom_glad_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC) load(userptr, "glVertexAttrib4Nsv");
    agx_custom_glad_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC) load(userptr, "glVertexAttrib4Nub");
    agx_custom_glad_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC) load(userptr, "glVertexAttrib4Nubv");
    agx_custom_glad_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC) load(userptr, "glVertexAttrib4Nuiv");
    agx_custom_glad_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC) load(userptr, "glVertexAttrib4Nusv");
    agx_custom_glad_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC) load(userptr, "glVertexAttrib4bv");
    agx_custom_glad_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC) load(userptr, "glVertexAttrib4d");
    agx_custom_glad_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC) load(userptr, "glVertexAttrib4dv");
    agx_custom_glad_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC) load(userptr, "glVertexAttrib4f");
    agx_custom_glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC) load(userptr, "glVertexAttrib4fv");
    agx_custom_glad_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC) load(userptr, "glVertexAttrib4iv");
    agx_custom_glad_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC) load(userptr, "glVertexAttrib4s");
    agx_custom_glad_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC) load(userptr, "glVertexAttrib4sv");
    agx_custom_glad_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC) load(userptr, "glVertexAttrib4ubv");
    agx_custom_glad_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC) load(userptr, "glVertexAttrib4uiv");
    agx_custom_glad_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC) load(userptr, "glVertexAttrib4usv");
    agx_custom_glad_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC) load(userptr, "glVertexAttribPointer");
}
static void agx_custom_glad_gl_load_GL_VERSION_2_1( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_2_1) return;
    agx_custom_glad_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC) load(userptr, "glUniformMatrix2x3fv");
    agx_custom_glad_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC) load(userptr, "glUniformMatrix2x4fv");
    agx_custom_glad_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC) load(userptr, "glUniformMatrix3x2fv");
    agx_custom_glad_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC) load(userptr, "glUniformMatrix3x4fv");
    agx_custom_glad_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC) load(userptr, "glUniformMatrix4x2fv");
    agx_custom_glad_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC) load(userptr, "glUniformMatrix4x3fv");
}
static void agx_custom_glad_gl_load_GL_VERSION_3_0( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_3_0) return;
    agx_custom_glad_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC) load(userptr, "glBeginConditionalRender");
    agx_custom_glad_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC) load(userptr, "glBeginTransformFeedback");
    agx_custom_glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC) load(userptr, "glBindBufferBase");
    agx_custom_glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) load(userptr, "glBindBufferRange");
    agx_custom_glad_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC) load(userptr, "glBindFragDataLocation");
    agx_custom_glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC) load(userptr, "glBindFramebuffer");
    agx_custom_glad_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC) load(userptr, "glBindRenderbuffer");
    agx_custom_glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC) load(userptr, "glBindVertexArray");
    agx_custom_glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC) load(userptr, "glBlitFramebuffer");
    agx_custom_glad_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC) load(userptr, "glCheckFramebufferStatus");
    agx_custom_glad_glClampColor = (PFNGLCLAMPCOLORPROC) load(userptr, "glClampColor");
    agx_custom_glad_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC) load(userptr, "glClearBufferfi");
    agx_custom_glad_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC) load(userptr, "glClearBufferfv");
    agx_custom_glad_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC) load(userptr, "glClearBufferiv");
    agx_custom_glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC) load(userptr, "glClearBufferuiv");
    agx_custom_glad_glColorMaski = (PFNGLCOLORMASKIPROC) load(userptr, "glColorMaski");
    agx_custom_glad_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC) load(userptr, "glDeleteFramebuffers");
    agx_custom_glad_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC) load(userptr, "glDeleteRenderbuffers");
    agx_custom_glad_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC) load(userptr, "glDeleteVertexArrays");
    agx_custom_glad_glDisablei = (PFNGLDISABLEIPROC) load(userptr, "glDisablei");
    agx_custom_glad_glEnablei = (PFNGLENABLEIPROC) load(userptr, "glEnablei");
    agx_custom_glad_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC) load(userptr, "glEndConditionalRender");
    agx_custom_glad_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC) load(userptr, "glEndTransformFeedback");
    agx_custom_glad_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) load(userptr, "glFlushMappedBufferRange");
    agx_custom_glad_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC) load(userptr, "glFramebufferRenderbuffer");
    agx_custom_glad_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC) load(userptr, "glFramebufferTexture1D");
    agx_custom_glad_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC) load(userptr, "glFramebufferTexture2D");
    agx_custom_glad_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC) load(userptr, "glFramebufferTexture3D");
    agx_custom_glad_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) load(userptr, "glFramebufferTextureLayer");
    agx_custom_glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC) load(userptr, "glGenFramebuffers");
    agx_custom_glad_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC) load(userptr, "glGenRenderbuffers");
    agx_custom_glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC) load(userptr, "glGenVertexArrays");
    agx_custom_glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC) load(userptr, "glGenerateMipmap");
    agx_custom_glad_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC) load(userptr, "glGetBooleani_v");
    agx_custom_glad_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC) load(userptr, "glGetFragDataLocation");
    agx_custom_glad_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) load(userptr, "glGetFramebufferAttachmentParameteriv");
    agx_custom_glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) load(userptr, "glGetIntegeri_v");
    agx_custom_glad_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC) load(userptr, "glGetRenderbufferParameteriv");
    agx_custom_glad_glGetStringi = (PFNGLGETSTRINGIPROC) load(userptr, "glGetStringi");
    agx_custom_glad_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC) load(userptr, "glGetTexParameterIiv");
    agx_custom_glad_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC) load(userptr, "glGetTexParameterIuiv");
    agx_custom_glad_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) load(userptr, "glGetTransformFeedbackVarying");
    agx_custom_glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC) load(userptr, "glGetUniformuiv");
    agx_custom_glad_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC) load(userptr, "glGetVertexAttribIiv");
    agx_custom_glad_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC) load(userptr, "glGetVertexAttribIuiv");
    agx_custom_glad_glIsEnabledi = (PFNGLISENABLEDIPROC) load(userptr, "glIsEnabledi");
    agx_custom_glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC) load(userptr, "glIsFramebuffer");
    agx_custom_glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC) load(userptr, "glIsRenderbuffer");
    agx_custom_glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC) load(userptr, "glIsVertexArray");
    agx_custom_glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC) load(userptr, "glMapBufferRange");
    agx_custom_glad_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC) load(userptr, "glRenderbufferStorage");
    agx_custom_glad_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) load(userptr, "glRenderbufferStorageMultisample");
    agx_custom_glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC) load(userptr, "glTexParameterIiv");
    agx_custom_glad_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC) load(userptr, "glTexParameterIuiv");
    agx_custom_glad_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) load(userptr, "glTransformFeedbackVaryings");
    agx_custom_glad_glUniform1ui = (PFNGLUNIFORM1UIPROC) load(userptr, "glUniform1ui");
    agx_custom_glad_glUniform1uiv = (PFNGLUNIFORM1UIVPROC) load(userptr, "glUniform1uiv");
    agx_custom_glad_glUniform2ui = (PFNGLUNIFORM2UIPROC) load(userptr, "glUniform2ui");
    agx_custom_glad_glUniform2uiv = (PFNGLUNIFORM2UIVPROC) load(userptr, "glUniform2uiv");
    agx_custom_glad_glUniform3ui = (PFNGLUNIFORM3UIPROC) load(userptr, "glUniform3ui");
    agx_custom_glad_glUniform3uiv = (PFNGLUNIFORM3UIVPROC) load(userptr, "glUniform3uiv");
    agx_custom_glad_glUniform4ui = (PFNGLUNIFORM4UIPROC) load(userptr, "glUniform4ui");
    agx_custom_glad_glUniform4uiv = (PFNGLUNIFORM4UIVPROC) load(userptr, "glUniform4uiv");
    agx_custom_glad_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC) load(userptr, "glVertexAttribI1i");
    agx_custom_glad_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC) load(userptr, "glVertexAttribI1iv");
    agx_custom_glad_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC) load(userptr, "glVertexAttribI1ui");
    agx_custom_glad_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC) load(userptr, "glVertexAttribI1uiv");
    agx_custom_glad_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC) load(userptr, "glVertexAttribI2i");
    agx_custom_glad_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC) load(userptr, "glVertexAttribI2iv");
    agx_custom_glad_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC) load(userptr, "glVertexAttribI2ui");
    agx_custom_glad_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC) load(userptr, "glVertexAttribI2uiv");
    agx_custom_glad_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC) load(userptr, "glVertexAttribI3i");
    agx_custom_glad_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC) load(userptr, "glVertexAttribI3iv");
    agx_custom_glad_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC) load(userptr, "glVertexAttribI3ui");
    agx_custom_glad_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC) load(userptr, "glVertexAttribI3uiv");
    agx_custom_glad_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC) load(userptr, "glVertexAttribI4bv");
    agx_custom_glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC) load(userptr, "glVertexAttribI4i");
    agx_custom_glad_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC) load(userptr, "glVertexAttribI4iv");
    agx_custom_glad_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC) load(userptr, "glVertexAttribI4sv");
    agx_custom_glad_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC) load(userptr, "glVertexAttribI4ubv");
    agx_custom_glad_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC) load(userptr, "glVertexAttribI4ui");
    agx_custom_glad_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC) load(userptr, "glVertexAttribI4uiv");
    agx_custom_glad_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC) load(userptr, "glVertexAttribI4usv");
    agx_custom_glad_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC) load(userptr, "glVertexAttribIPointer");
}
static void agx_custom_glad_gl_load_GL_VERSION_3_1( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_3_1) return;
    agx_custom_glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC) load(userptr, "glBindBufferBase");
    agx_custom_glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) load(userptr, "glBindBufferRange");
    agx_custom_glad_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC) load(userptr, "glCopyBufferSubData");
    agx_custom_glad_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC) load(userptr, "glDrawArraysInstanced");
    agx_custom_glad_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC) load(userptr, "glDrawElementsInstanced");
    agx_custom_glad_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) load(userptr, "glGetActiveUniformBlockName");
    agx_custom_glad_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) load(userptr, "glGetActiveUniformBlockiv");
    agx_custom_glad_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC) load(userptr, "glGetActiveUniformName");
    agx_custom_glad_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC) load(userptr, "glGetActiveUniformsiv");
    agx_custom_glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) load(userptr, "glGetIntegeri_v");
    agx_custom_glad_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC) load(userptr, "glGetUniformBlockIndex");
    agx_custom_glad_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC) load(userptr, "glGetUniformIndices");
    agx_custom_glad_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC) load(userptr, "glPrimitiveRestartIndex");
    agx_custom_glad_glTexBuffer = (PFNGLTEXBUFFERPROC) load(userptr, "glTexBuffer");
    agx_custom_glad_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC) load(userptr, "glUniformBlockBinding");
}
static void agx_custom_glad_gl_load_GL_VERSION_3_2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_3_2) return;
    agx_custom_glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC) load(userptr, "glClientWaitSync");
    agx_custom_glad_glDeleteSync = (PFNGLDELETESYNCPROC) load(userptr, "glDeleteSync");
    agx_custom_glad_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC) load(userptr, "glDrawElementsBaseVertex");
    agx_custom_glad_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) load(userptr, "glDrawElementsInstancedBaseVertex");
    agx_custom_glad_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) load(userptr, "glDrawRangeElementsBaseVertex");
    agx_custom_glad_glFenceSync = (PFNGLFENCESYNCPROC) load(userptr, "glFenceSync");
    agx_custom_glad_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC) load(userptr, "glFramebufferTexture");
    agx_custom_glad_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC) load(userptr, "glGetBufferParameteri64v");
    agx_custom_glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC) load(userptr, "glGetInteger64i_v");
    agx_custom_glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC) load(userptr, "glGetInteger64v");
    agx_custom_glad_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC) load(userptr, "glGetMultisamplefv");
    agx_custom_glad_glGetSynciv = (PFNGLGETSYNCIVPROC) load(userptr, "glGetSynciv");
    agx_custom_glad_glIsSync = (PFNGLISSYNCPROC) load(userptr, "glIsSync");
    agx_custom_glad_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) load(userptr, "glMultiDrawElementsBaseVertex");
    agx_custom_glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC) load(userptr, "glProvokingVertex");
    agx_custom_glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC) load(userptr, "glSampleMaski");
    agx_custom_glad_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) load(userptr, "glTexImage2DMultisample");
    agx_custom_glad_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) load(userptr, "glTexImage3DMultisample");
    agx_custom_glad_glWaitSync = (PFNGLWAITSYNCPROC) load(userptr, "glWaitSync");
}
static void agx_custom_glad_gl_load_GL_VERSION_3_3( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_3_3) return;
    agx_custom_glad_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) load(userptr, "glBindFragDataLocationIndexed");
    agx_custom_glad_glBindSampler = (PFNGLBINDSAMPLERPROC) load(userptr, "glBindSampler");
    agx_custom_glad_glColorP3ui = (PFNGLCOLORP3UIPROC) load(userptr, "glColorP3ui");
    agx_custom_glad_glColorP3uiv = (PFNGLCOLORP3UIVPROC) load(userptr, "glColorP3uiv");
    agx_custom_glad_glColorP4ui = (PFNGLCOLORP4UIPROC) load(userptr, "glColorP4ui");
    agx_custom_glad_glColorP4uiv = (PFNGLCOLORP4UIVPROC) load(userptr, "glColorP4uiv");
    agx_custom_glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC) load(userptr, "glDeleteSamplers");
    agx_custom_glad_glGenSamplers = (PFNGLGENSAMPLERSPROC) load(userptr, "glGenSamplers");
    agx_custom_glad_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC) load(userptr, "glGetFragDataIndex");
    agx_custom_glad_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC) load(userptr, "glGetQueryObjecti64v");
    agx_custom_glad_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC) load(userptr, "glGetQueryObjectui64v");
    agx_custom_glad_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC) load(userptr, "glGetSamplerParameterIiv");
    agx_custom_glad_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC) load(userptr, "glGetSamplerParameterIuiv");
    agx_custom_glad_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC) load(userptr, "glGetSamplerParameterfv");
    agx_custom_glad_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC) load(userptr, "glGetSamplerParameteriv");
    agx_custom_glad_glIsSampler = (PFNGLISSAMPLERPROC) load(userptr, "glIsSampler");
    agx_custom_glad_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC) load(userptr, "glMultiTexCoordP1ui");
    agx_custom_glad_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC) load(userptr, "glMultiTexCoordP1uiv");
    agx_custom_glad_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC) load(userptr, "glMultiTexCoordP2ui");
    agx_custom_glad_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC) load(userptr, "glMultiTexCoordP2uiv");
    agx_custom_glad_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC) load(userptr, "glMultiTexCoordP3ui");
    agx_custom_glad_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC) load(userptr, "glMultiTexCoordP3uiv");
    agx_custom_glad_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC) load(userptr, "glMultiTexCoordP4ui");
    agx_custom_glad_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC) load(userptr, "glMultiTexCoordP4uiv");
    agx_custom_glad_glNormalP3ui = (PFNGLNORMALP3UIPROC) load(userptr, "glNormalP3ui");
    agx_custom_glad_glNormalP3uiv = (PFNGLNORMALP3UIVPROC) load(userptr, "glNormalP3uiv");
    agx_custom_glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC) load(userptr, "glQueryCounter");
    agx_custom_glad_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC) load(userptr, "glSamplerParameterIiv");
    agx_custom_glad_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC) load(userptr, "glSamplerParameterIuiv");
    agx_custom_glad_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) load(userptr, "glSamplerParameterf");
    agx_custom_glad_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) load(userptr, "glSamplerParameterfv");
    agx_custom_glad_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) load(userptr, "glSamplerParameteri");
    agx_custom_glad_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC) load(userptr, "glSamplerParameteriv");
    agx_custom_glad_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC) load(userptr, "glSecondaryColorP3ui");
    agx_custom_glad_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC) load(userptr, "glSecondaryColorP3uiv");
    agx_custom_glad_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC) load(userptr, "glTexCoordP1ui");
    agx_custom_glad_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC) load(userptr, "glTexCoordP1uiv");
    agx_custom_glad_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC) load(userptr, "glTexCoordP2ui");
    agx_custom_glad_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC) load(userptr, "glTexCoordP2uiv");
    agx_custom_glad_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC) load(userptr, "glTexCoordP3ui");
    agx_custom_glad_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC) load(userptr, "glTexCoordP3uiv");
    agx_custom_glad_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC) load(userptr, "glTexCoordP4ui");
    agx_custom_glad_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC) load(userptr, "glTexCoordP4uiv");
    agx_custom_glad_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC) load(userptr, "glVertexAttribDivisor");
    agx_custom_glad_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC) load(userptr, "glVertexAttribP1ui");
    agx_custom_glad_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC) load(userptr, "glVertexAttribP1uiv");
    agx_custom_glad_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC) load(userptr, "glVertexAttribP2ui");
    agx_custom_glad_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC) load(userptr, "glVertexAttribP2uiv");
    agx_custom_glad_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC) load(userptr, "glVertexAttribP3ui");
    agx_custom_glad_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC) load(userptr, "glVertexAttribP3uiv");
    agx_custom_glad_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC) load(userptr, "glVertexAttribP4ui");
    agx_custom_glad_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC) load(userptr, "glVertexAttribP4uiv");
    agx_custom_glad_glVertexP2ui = (PFNGLVERTEXP2UIPROC) load(userptr, "glVertexP2ui");
    agx_custom_glad_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC) load(userptr, "glVertexP2uiv");
    agx_custom_glad_glVertexP3ui = (PFNGLVERTEXP3UIPROC) load(userptr, "glVertexP3ui");
    agx_custom_glad_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC) load(userptr, "glVertexP3uiv");
    agx_custom_glad_glVertexP4ui = (PFNGLVERTEXP4UIPROC) load(userptr, "glVertexP4ui");
    agx_custom_glad_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC) load(userptr, "glVertexP4uiv");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_0( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_0) return;
    agx_custom_glad_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC) load(userptr, "glBeginQueryIndexed");
    agx_custom_glad_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC) load(userptr, "glBindTransformFeedback");
    agx_custom_glad_glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC) load(userptr, "glBlendEquationSeparatei");
    agx_custom_glad_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC) load(userptr, "glBlendEquationi");
    agx_custom_glad_glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC) load(userptr, "glBlendFuncSeparatei");
    agx_custom_glad_glBlendFunci = (PFNGLBLENDFUNCIPROC) load(userptr, "glBlendFunci");
    agx_custom_glad_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC) load(userptr, "glDeleteTransformFeedbacks");
    agx_custom_glad_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC) load(userptr, "glDrawArraysIndirect");
    agx_custom_glad_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC) load(userptr, "glDrawElementsIndirect");
    agx_custom_glad_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC) load(userptr, "glDrawTransformFeedback");
    agx_custom_glad_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) load(userptr, "glDrawTransformFeedbackStream");
    agx_custom_glad_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC) load(userptr, "glEndQueryIndexed");
    agx_custom_glad_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC) load(userptr, "glGenTransformFeedbacks");
    agx_custom_glad_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC) load(userptr, "glGetActiveSubroutineName");
    agx_custom_glad_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) load(userptr, "glGetActiveSubroutineUniformName");
    agx_custom_glad_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) load(userptr, "glGetActiveSubroutineUniformiv");
    agx_custom_glad_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC) load(userptr, "glGetProgramStageiv");
    agx_custom_glad_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC) load(userptr, "glGetQueryIndexediv");
    agx_custom_glad_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC) load(userptr, "glGetSubroutineIndex");
    agx_custom_glad_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) load(userptr, "glGetSubroutineUniformLocation");
    agx_custom_glad_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC) load(userptr, "glGetUniformSubroutineuiv");
    agx_custom_glad_glGetUniformdv = (PFNGLGETUNIFORMDVPROC) load(userptr, "glGetUniformdv");
    agx_custom_glad_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC) load(userptr, "glIsTransformFeedback");
    agx_custom_glad_glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC) load(userptr, "glMinSampleShading");
    agx_custom_glad_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC) load(userptr, "glPatchParameterfv");
    agx_custom_glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC) load(userptr, "glPatchParameteri");
    agx_custom_glad_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC) load(userptr, "glPauseTransformFeedback");
    agx_custom_glad_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC) load(userptr, "glResumeTransformFeedback");
    agx_custom_glad_glUniform1d = (PFNGLUNIFORM1DPROC) load(userptr, "glUniform1d");
    agx_custom_glad_glUniform1dv = (PFNGLUNIFORM1DVPROC) load(userptr, "glUniform1dv");
    agx_custom_glad_glUniform2d = (PFNGLUNIFORM2DPROC) load(userptr, "glUniform2d");
    agx_custom_glad_glUniform2dv = (PFNGLUNIFORM2DVPROC) load(userptr, "glUniform2dv");
    agx_custom_glad_glUniform3d = (PFNGLUNIFORM3DPROC) load(userptr, "glUniform3d");
    agx_custom_glad_glUniform3dv = (PFNGLUNIFORM3DVPROC) load(userptr, "glUniform3dv");
    agx_custom_glad_glUniform4d = (PFNGLUNIFORM4DPROC) load(userptr, "glUniform4d");
    agx_custom_glad_glUniform4dv = (PFNGLUNIFORM4DVPROC) load(userptr, "glUniform4dv");
    agx_custom_glad_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC) load(userptr, "glUniformMatrix2dv");
    agx_custom_glad_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC) load(userptr, "glUniformMatrix2x3dv");
    agx_custom_glad_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC) load(userptr, "glUniformMatrix2x4dv");
    agx_custom_glad_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC) load(userptr, "glUniformMatrix3dv");
    agx_custom_glad_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC) load(userptr, "glUniformMatrix3x2dv");
    agx_custom_glad_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC) load(userptr, "glUniformMatrix3x4dv");
    agx_custom_glad_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC) load(userptr, "glUniformMatrix4dv");
    agx_custom_glad_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC) load(userptr, "glUniformMatrix4x2dv");
    agx_custom_glad_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC) load(userptr, "glUniformMatrix4x3dv");
    agx_custom_glad_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC) load(userptr, "glUniformSubroutinesuiv");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_1( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_1) return;
    agx_custom_glad_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC) load(userptr, "glActiveShaderProgram");
    agx_custom_glad_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC) load(userptr, "glBindProgramPipeline");
    agx_custom_glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC) load(userptr, "glClearDepthf");
    agx_custom_glad_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC) load(userptr, "glCreateShaderProgramv");
    agx_custom_glad_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC) load(userptr, "glDeleteProgramPipelines");
    agx_custom_glad_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC) load(userptr, "glDepthRangeArrayv");
    agx_custom_glad_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC) load(userptr, "glDepthRangeIndexed");
    agx_custom_glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC) load(userptr, "glDepthRangef");
    agx_custom_glad_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC) load(userptr, "glGenProgramPipelines");
    agx_custom_glad_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC) load(userptr, "glGetDoublei_v");
    agx_custom_glad_glGetFloati_v = (PFNGLGETFLOATI_VPROC) load(userptr, "glGetFloati_v");
    agx_custom_glad_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC) load(userptr, "glGetProgramBinary");
    agx_custom_glad_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) load(userptr, "glGetProgramPipelineInfoLog");
    agx_custom_glad_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC) load(userptr, "glGetProgramPipelineiv");
    agx_custom_glad_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC) load(userptr, "glGetShaderPrecisionFormat");
    agx_custom_glad_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC) load(userptr, "glGetVertexAttribLdv");
    agx_custom_glad_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC) load(userptr, "glIsProgramPipeline");
    agx_custom_glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC) load(userptr, "glProgramBinary");
    agx_custom_glad_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) load(userptr, "glProgramParameteri");
    agx_custom_glad_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC) load(userptr, "glProgramUniform1d");
    agx_custom_glad_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC) load(userptr, "glProgramUniform1dv");
    agx_custom_glad_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC) load(userptr, "glProgramUniform1f");
    agx_custom_glad_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC) load(userptr, "glProgramUniform1fv");
    agx_custom_glad_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC) load(userptr, "glProgramUniform1i");
    agx_custom_glad_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC) load(userptr, "glProgramUniform1iv");
    agx_custom_glad_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC) load(userptr, "glProgramUniform1ui");
    agx_custom_glad_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC) load(userptr, "glProgramUniform1uiv");
    agx_custom_glad_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC) load(userptr, "glProgramUniform2d");
    agx_custom_glad_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC) load(userptr, "glProgramUniform2dv");
    agx_custom_glad_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC) load(userptr, "glProgramUniform2f");
    agx_custom_glad_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC) load(userptr, "glProgramUniform2fv");
    agx_custom_glad_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC) load(userptr, "glProgramUniform2i");
    agx_custom_glad_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC) load(userptr, "glProgramUniform2iv");
    agx_custom_glad_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC) load(userptr, "glProgramUniform2ui");
    agx_custom_glad_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC) load(userptr, "glProgramUniform2uiv");
    agx_custom_glad_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC) load(userptr, "glProgramUniform3d");
    agx_custom_glad_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC) load(userptr, "glProgramUniform3dv");
    agx_custom_glad_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC) load(userptr, "glProgramUniform3f");
    agx_custom_glad_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC) load(userptr, "glProgramUniform3fv");
    agx_custom_glad_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC) load(userptr, "glProgramUniform3i");
    agx_custom_glad_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC) load(userptr, "glProgramUniform3iv");
    agx_custom_glad_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC) load(userptr, "glProgramUniform3ui");
    agx_custom_glad_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC) load(userptr, "glProgramUniform3uiv");
    agx_custom_glad_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC) load(userptr, "glProgramUniform4d");
    agx_custom_glad_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC) load(userptr, "glProgramUniform4dv");
    agx_custom_glad_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC) load(userptr, "glProgramUniform4f");
    agx_custom_glad_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC) load(userptr, "glProgramUniform4fv");
    agx_custom_glad_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC) load(userptr, "glProgramUniform4i");
    agx_custom_glad_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC) load(userptr, "glProgramUniform4iv");
    agx_custom_glad_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC) load(userptr, "glProgramUniform4ui");
    agx_custom_glad_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC) load(userptr, "glProgramUniform4uiv");
    agx_custom_glad_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) load(userptr, "glProgramUniformMatrix2dv");
    agx_custom_glad_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) load(userptr, "glProgramUniformMatrix2fv");
    agx_custom_glad_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) load(userptr, "glProgramUniformMatrix2x3dv");
    agx_custom_glad_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) load(userptr, "glProgramUniformMatrix2x3fv");
    agx_custom_glad_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) load(userptr, "glProgramUniformMatrix2x4dv");
    agx_custom_glad_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) load(userptr, "glProgramUniformMatrix2x4fv");
    agx_custom_glad_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) load(userptr, "glProgramUniformMatrix3dv");
    agx_custom_glad_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) load(userptr, "glProgramUniformMatrix3fv");
    agx_custom_glad_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) load(userptr, "glProgramUniformMatrix3x2dv");
    agx_custom_glad_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) load(userptr, "glProgramUniformMatrix3x2fv");
    agx_custom_glad_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) load(userptr, "glProgramUniformMatrix3x4dv");
    agx_custom_glad_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) load(userptr, "glProgramUniformMatrix3x4fv");
    agx_custom_glad_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) load(userptr, "glProgramUniformMatrix4dv");
    agx_custom_glad_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) load(userptr, "glProgramUniformMatrix4fv");
    agx_custom_glad_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) load(userptr, "glProgramUniformMatrix4x2dv");
    agx_custom_glad_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) load(userptr, "glProgramUniformMatrix4x2fv");
    agx_custom_glad_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) load(userptr, "glProgramUniformMatrix4x3dv");
    agx_custom_glad_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) load(userptr, "glProgramUniformMatrix4x3fv");
    agx_custom_glad_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC) load(userptr, "glReleaseShaderCompiler");
    agx_custom_glad_glScissorArrayv = (PFNGLSCISSORARRAYVPROC) load(userptr, "glScissorArrayv");
    agx_custom_glad_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC) load(userptr, "glScissorIndexed");
    agx_custom_glad_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC) load(userptr, "glScissorIndexedv");
    agx_custom_glad_glShaderBinary = (PFNGLSHADERBINARYPROC) load(userptr, "glShaderBinary");
    agx_custom_glad_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC) load(userptr, "glUseProgramStages");
    agx_custom_glad_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC) load(userptr, "glValidateProgramPipeline");
    agx_custom_glad_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC) load(userptr, "glVertexAttribL1d");
    agx_custom_glad_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC) load(userptr, "glVertexAttribL1dv");
    agx_custom_glad_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC) load(userptr, "glVertexAttribL2d");
    agx_custom_glad_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC) load(userptr, "glVertexAttribL2dv");
    agx_custom_glad_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC) load(userptr, "glVertexAttribL3d");
    agx_custom_glad_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC) load(userptr, "glVertexAttribL3dv");
    agx_custom_glad_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC) load(userptr, "glVertexAttribL4d");
    agx_custom_glad_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC) load(userptr, "glVertexAttribL4dv");
    agx_custom_glad_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC) load(userptr, "glVertexAttribLPointer");
    agx_custom_glad_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC) load(userptr, "glViewportArrayv");
    agx_custom_glad_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC) load(userptr, "glViewportIndexedf");
    agx_custom_glad_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC) load(userptr, "glViewportIndexedfv");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_2) return;
    agx_custom_glad_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC) load(userptr, "glBindImageTexture");
    agx_custom_glad_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) load(userptr, "glDrawArraysInstancedBaseInstance");
    agx_custom_glad_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) load(userptr, "glDrawElementsInstancedBaseInstance");
    agx_custom_glad_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) load(userptr, "glDrawElementsInstancedBaseVertexBaseInstance");
    agx_custom_glad_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) load(userptr, "glDrawTransformFeedbackInstanced");
    agx_custom_glad_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) load(userptr, "glDrawTransformFeedbackStreamInstanced");
    agx_custom_glad_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) load(userptr, "glGetActiveAtomicCounterBufferiv");
    agx_custom_glad_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) load(userptr, "glGetInternalformativ");
    agx_custom_glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC) load(userptr, "glMemoryBarrier");
    agx_custom_glad_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC) load(userptr, "glTexStorage1D");
    agx_custom_glad_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC) load(userptr, "glTexStorage2D");
    agx_custom_glad_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC) load(userptr, "glTexStorage3D");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_3( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_3) return;
    agx_custom_glad_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC) load(userptr, "glBindVertexBuffer");
    agx_custom_glad_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC) load(userptr, "glClearBufferData");
    agx_custom_glad_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC) load(userptr, "glClearBufferSubData");
    agx_custom_glad_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC) load(userptr, "glCopyImageSubData");
    agx_custom_glad_glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC) load(userptr, "glDebugMessageCallback");
    agx_custom_glad_glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC) load(userptr, "glDebugMessageControl");
    agx_custom_glad_glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC) load(userptr, "glDebugMessageInsert");
    agx_custom_glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC) load(userptr, "glDispatchCompute");
    agx_custom_glad_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) load(userptr, "glDispatchComputeIndirect");
    agx_custom_glad_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC) load(userptr, "glFramebufferParameteri");
    agx_custom_glad_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC) load(userptr, "glGetDebugMessageLog");
    agx_custom_glad_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) load(userptr, "glGetFramebufferParameteriv");
    agx_custom_glad_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) load(userptr, "glGetInternalformati64v");
    agx_custom_glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC) load(userptr, "glGetObjectLabel");
    agx_custom_glad_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC) load(userptr, "glGetObjectPtrLabel");
    agx_custom_glad_glGetPointerv = (PFNGLGETPOINTERVPROC) load(userptr, "glGetPointerv");
    agx_custom_glad_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC) load(userptr, "glGetProgramInterfaceiv");
    agx_custom_glad_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC) load(userptr, "glGetProgramResourceIndex");
    agx_custom_glad_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) load(userptr, "glGetProgramResourceLocation");
    agx_custom_glad_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) load(userptr, "glGetProgramResourceLocationIndex");
    agx_custom_glad_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC) load(userptr, "glGetProgramResourceName");
    agx_custom_glad_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC) load(userptr, "glGetProgramResourceiv");
    agx_custom_glad_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC) load(userptr, "glInvalidateBufferData");
    agx_custom_glad_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC) load(userptr, "glInvalidateBufferSubData");
    agx_custom_glad_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC) load(userptr, "glInvalidateFramebuffer");
    agx_custom_glad_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC) load(userptr, "glInvalidateSubFramebuffer");
    agx_custom_glad_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC) load(userptr, "glInvalidateTexImage");
    agx_custom_glad_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC) load(userptr, "glInvalidateTexSubImage");
    agx_custom_glad_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) load(userptr, "glMultiDrawArraysIndirect");
    agx_custom_glad_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) load(userptr, "glMultiDrawElementsIndirect");
    agx_custom_glad_glObjectLabel = (PFNGLOBJECTLABELPROC) load(userptr, "glObjectLabel");
    agx_custom_glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC) load(userptr, "glObjectPtrLabel");
    agx_custom_glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC) load(userptr, "glPopDebugGroup");
    agx_custom_glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC) load(userptr, "glPushDebugGroup");
    agx_custom_glad_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) load(userptr, "glShaderStorageBlockBinding");
    agx_custom_glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC) load(userptr, "glTexBufferRange");
    agx_custom_glad_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) load(userptr, "glTexStorage2DMultisample");
    agx_custom_glad_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) load(userptr, "glTexStorage3DMultisample");
    agx_custom_glad_glTextureView = (PFNGLTEXTUREVIEWPROC) load(userptr, "glTextureView");
    agx_custom_glad_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC) load(userptr, "glVertexAttribBinding");
    agx_custom_glad_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC) load(userptr, "glVertexAttribFormat");
    agx_custom_glad_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC) load(userptr, "glVertexAttribIFormat");
    agx_custom_glad_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC) load(userptr, "glVertexAttribLFormat");
    agx_custom_glad_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC) load(userptr, "glVertexBindingDivisor");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_4) return;
    agx_custom_glad_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC) load(userptr, "glBindBuffersBase");
    agx_custom_glad_glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC) load(userptr, "glBindBuffersRange");
    agx_custom_glad_glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC) load(userptr, "glBindImageTextures");
    agx_custom_glad_glBindSamplers = (PFNGLBINDSAMPLERSPROC) load(userptr, "glBindSamplers");
    agx_custom_glad_glBindTextures = (PFNGLBINDTEXTURESPROC) load(userptr, "glBindTextures");
    agx_custom_glad_glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC) load(userptr, "glBindVertexBuffers");
    agx_custom_glad_glBufferStorage = (PFNGLBUFFERSTORAGEPROC) load(userptr, "glBufferStorage");
    agx_custom_glad_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC) load(userptr, "glClearTexImage");
    agx_custom_glad_glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC) load(userptr, "glClearTexSubImage");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_5( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_5) return;
    agx_custom_glad_glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC) load(userptr, "glBindTextureUnit");
    agx_custom_glad_glBlitNamedFramebuffer = (PFNGLBLITNAMEDFRAMEBUFFERPROC) load(userptr, "glBlitNamedFramebuffer");
    agx_custom_glad_glCheckNamedFramebufferStatus = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) load(userptr, "glCheckNamedFramebufferStatus");
    agx_custom_glad_glClearNamedBufferData = (PFNGLCLEARNAMEDBUFFERDATAPROC) load(userptr, "glClearNamedBufferData");
    agx_custom_glad_glClearNamedBufferSubData = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC) load(userptr, "glClearNamedBufferSubData");
    agx_custom_glad_glClearNamedFramebufferfi = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) load(userptr, "glClearNamedFramebufferfi");
    agx_custom_glad_glClearNamedFramebufferfv = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) load(userptr, "glClearNamedFramebufferfv");
    agx_custom_glad_glClearNamedFramebufferiv = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) load(userptr, "glClearNamedFramebufferiv");
    agx_custom_glad_glClearNamedFramebufferuiv = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) load(userptr, "glClearNamedFramebufferuiv");
    agx_custom_glad_glClipControl = (PFNGLCLIPCONTROLPROC) load(userptr, "glClipControl");
    agx_custom_glad_glCompressedTextureSubImage1D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) load(userptr, "glCompressedTextureSubImage1D");
    agx_custom_glad_glCompressedTextureSubImage2D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) load(userptr, "glCompressedTextureSubImage2D");
    agx_custom_glad_glCompressedTextureSubImage3D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) load(userptr, "glCompressedTextureSubImage3D");
    agx_custom_glad_glCopyNamedBufferSubData = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC) load(userptr, "glCopyNamedBufferSubData");
    agx_custom_glad_glCopyTextureSubImage1D = (PFNGLCOPYTEXTURESUBIMAGE1DPROC) load(userptr, "glCopyTextureSubImage1D");
    agx_custom_glad_glCopyTextureSubImage2D = (PFNGLCOPYTEXTURESUBIMAGE2DPROC) load(userptr, "glCopyTextureSubImage2D");
    agx_custom_glad_glCopyTextureSubImage3D = (PFNGLCOPYTEXTURESUBIMAGE3DPROC) load(userptr, "glCopyTextureSubImage3D");
    agx_custom_glad_glCreateBuffers = (PFNGLCREATEBUFFERSPROC) load(userptr, "glCreateBuffers");
    agx_custom_glad_glCreateFramebuffers = (PFNGLCREATEFRAMEBUFFERSPROC) load(userptr, "glCreateFramebuffers");
    agx_custom_glad_glCreateProgramPipelines = (PFNGLCREATEPROGRAMPIPELINESPROC) load(userptr, "glCreateProgramPipelines");
    agx_custom_glad_glCreateQueries = (PFNGLCREATEQUERIESPROC) load(userptr, "glCreateQueries");
    agx_custom_glad_glCreateRenderbuffers = (PFNGLCREATERENDERBUFFERSPROC) load(userptr, "glCreateRenderbuffers");
    agx_custom_glad_glCreateSamplers = (PFNGLCREATESAMPLERSPROC) load(userptr, "glCreateSamplers");
    agx_custom_glad_glCreateTextures = (PFNGLCREATETEXTURESPROC) load(userptr, "glCreateTextures");
    agx_custom_glad_glCreateTransformFeedbacks = (PFNGLCREATETRANSFORMFEEDBACKSPROC) load(userptr, "glCreateTransformFeedbacks");
    agx_custom_glad_glCreateVertexArrays = (PFNGLCREATEVERTEXARRAYSPROC) load(userptr, "glCreateVertexArrays");
    agx_custom_glad_glDisableVertexArrayAttrib = (PFNGLDISABLEVERTEXARRAYATTRIBPROC) load(userptr, "glDisableVertexArrayAttrib");
    agx_custom_glad_glEnableVertexArrayAttrib = (PFNGLENABLEVERTEXARRAYATTRIBPROC) load(userptr, "glEnableVertexArrayAttrib");
    agx_custom_glad_glFlushMappedNamedBufferRange = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) load(userptr, "glFlushMappedNamedBufferRange");
    agx_custom_glad_glGenerateTextureMipmap = (PFNGLGENERATETEXTUREMIPMAPPROC) load(userptr, "glGenerateTextureMipmap");
    agx_custom_glad_glGetCompressedTextureImage = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) load(userptr, "glGetCompressedTextureImage");
    agx_custom_glad_glGetCompressedTextureSubImage = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) load(userptr, "glGetCompressedTextureSubImage");
    agx_custom_glad_glGetGraphicsResetStatus = (PFNGLGETGRAPHICSRESETSTATUSPROC) load(userptr, "glGetGraphicsResetStatus");
    agx_custom_glad_glGetNamedBufferParameteri64v = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) load(userptr, "glGetNamedBufferParameteri64v");
    agx_custom_glad_glGetNamedBufferParameteriv = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedBufferParameteriv");
    agx_custom_glad_glGetNamedBufferPointerv = (PFNGLGETNAMEDBUFFERPOINTERVPROC) load(userptr, "glGetNamedBufferPointerv");
    agx_custom_glad_glGetNamedBufferSubData = (PFNGLGETNAMEDBUFFERSUBDATAPROC) load(userptr, "glGetNamedBufferSubData");
    agx_custom_glad_glGetNamedFramebufferAttachmentParameteriv = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) load(userptr, "glGetNamedFramebufferAttachmentParameteriv");
    agx_custom_glad_glGetNamedFramebufferParameteriv = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedFramebufferParameteriv");
    agx_custom_glad_glGetNamedRenderbufferParameteriv = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedRenderbufferParameteriv");
    agx_custom_glad_glGetQueryBufferObjecti64v = (PFNGLGETQUERYBUFFEROBJECTI64VPROC) load(userptr, "glGetQueryBufferObjecti64v");
    agx_custom_glad_glGetQueryBufferObjectiv = (PFNGLGETQUERYBUFFEROBJECTIVPROC) load(userptr, "glGetQueryBufferObjectiv");
    agx_custom_glad_glGetQueryBufferObjectui64v = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC) load(userptr, "glGetQueryBufferObjectui64v");
    agx_custom_glad_glGetQueryBufferObjectuiv = (PFNGLGETQUERYBUFFEROBJECTUIVPROC) load(userptr, "glGetQueryBufferObjectuiv");
    agx_custom_glad_glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC) load(userptr, "glGetTextureImage");
    agx_custom_glad_glGetTextureLevelParameterfv = (PFNGLGETTEXTURELEVELPARAMETERFVPROC) load(userptr, "glGetTextureLevelParameterfv");
    agx_custom_glad_glGetTextureLevelParameteriv = (PFNGLGETTEXTURELEVELPARAMETERIVPROC) load(userptr, "glGetTextureLevelParameteriv");
    agx_custom_glad_glGetTextureParameterIiv = (PFNGLGETTEXTUREPARAMETERIIVPROC) load(userptr, "glGetTextureParameterIiv");
    agx_custom_glad_glGetTextureParameterIuiv = (PFNGLGETTEXTUREPARAMETERIUIVPROC) load(userptr, "glGetTextureParameterIuiv");
    agx_custom_glad_glGetTextureParameterfv = (PFNGLGETTEXTUREPARAMETERFVPROC) load(userptr, "glGetTextureParameterfv");
    agx_custom_glad_glGetTextureParameteriv = (PFNGLGETTEXTUREPARAMETERIVPROC) load(userptr, "glGetTextureParameteriv");
    agx_custom_glad_glGetTextureSubImage = (PFNGLGETTEXTURESUBIMAGEPROC) load(userptr, "glGetTextureSubImage");
    agx_custom_glad_glGetTransformFeedbacki64_v = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC) load(userptr, "glGetTransformFeedbacki64_v");
    agx_custom_glad_glGetTransformFeedbacki_v = (PFNGLGETTRANSFORMFEEDBACKI_VPROC) load(userptr, "glGetTransformFeedbacki_v");
    agx_custom_glad_glGetTransformFeedbackiv = (PFNGLGETTRANSFORMFEEDBACKIVPROC) load(userptr, "glGetTransformFeedbackiv");
    agx_custom_glad_glGetVertexArrayIndexed64iv = (PFNGLGETVERTEXARRAYINDEXED64IVPROC) load(userptr, "glGetVertexArrayIndexed64iv");
    agx_custom_glad_glGetVertexArrayIndexediv = (PFNGLGETVERTEXARRAYINDEXEDIVPROC) load(userptr, "glGetVertexArrayIndexediv");
    agx_custom_glad_glGetVertexArrayiv = (PFNGLGETVERTEXARRAYIVPROC) load(userptr, "glGetVertexArrayiv");
    agx_custom_glad_glGetnColorTable = (PFNGLGETNCOLORTABLEPROC) load(userptr, "glGetnColorTable");
    agx_custom_glad_glGetnCompressedTexImage = (PFNGLGETNCOMPRESSEDTEXIMAGEPROC) load(userptr, "glGetnCompressedTexImage");
    agx_custom_glad_glGetnConvolutionFilter = (PFNGLGETNCONVOLUTIONFILTERPROC) load(userptr, "glGetnConvolutionFilter");
    agx_custom_glad_glGetnHistogram = (PFNGLGETNHISTOGRAMPROC) load(userptr, "glGetnHistogram");
    agx_custom_glad_glGetnMapdv = (PFNGLGETNMAPDVPROC) load(userptr, "glGetnMapdv");
    agx_custom_glad_glGetnMapfv = (PFNGLGETNMAPFVPROC) load(userptr, "glGetnMapfv");
    agx_custom_glad_glGetnMapiv = (PFNGLGETNMAPIVPROC) load(userptr, "glGetnMapiv");
    agx_custom_glad_glGetnMinmax = (PFNGLGETNMINMAXPROC) load(userptr, "glGetnMinmax");
    agx_custom_glad_glGetnPixelMapfv = (PFNGLGETNPIXELMAPFVPROC) load(userptr, "glGetnPixelMapfv");
    agx_custom_glad_glGetnPixelMapuiv = (PFNGLGETNPIXELMAPUIVPROC) load(userptr, "glGetnPixelMapuiv");
    agx_custom_glad_glGetnPixelMapusv = (PFNGLGETNPIXELMAPUSVPROC) load(userptr, "glGetnPixelMapusv");
    agx_custom_glad_glGetnPolygonStipple = (PFNGLGETNPOLYGONSTIPPLEPROC) load(userptr, "glGetnPolygonStipple");
    agx_custom_glad_glGetnSeparableFilter = (PFNGLGETNSEPARABLEFILTERPROC) load(userptr, "glGetnSeparableFilter");
    agx_custom_glad_glGetnTexImage = (PFNGLGETNTEXIMAGEPROC) load(userptr, "glGetnTexImage");
    agx_custom_glad_glGetnUniformdv = (PFNGLGETNUNIFORMDVPROC) load(userptr, "glGetnUniformdv");
    agx_custom_glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC) load(userptr, "glGetnUniformfv");
    agx_custom_glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC) load(userptr, "glGetnUniformiv");
    agx_custom_glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC) load(userptr, "glGetnUniformuiv");
    agx_custom_glad_glInvalidateNamedFramebufferData = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) load(userptr, "glInvalidateNamedFramebufferData");
    agx_custom_glad_glInvalidateNamedFramebufferSubData = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) load(userptr, "glInvalidateNamedFramebufferSubData");
    agx_custom_glad_glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC) load(userptr, "glMapNamedBuffer");
    agx_custom_glad_glMapNamedBufferRange = (PFNGLMAPNAMEDBUFFERRANGEPROC) load(userptr, "glMapNamedBufferRange");
    agx_custom_glad_glMemoryBarrierByRegion = (PFNGLMEMORYBARRIERBYREGIONPROC) load(userptr, "glMemoryBarrierByRegion");
    agx_custom_glad_glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC) load(userptr, "glNamedBufferData");
    agx_custom_glad_glNamedBufferStorage = (PFNGLNAMEDBUFFERSTORAGEPROC) load(userptr, "glNamedBufferStorage");
    agx_custom_glad_glNamedBufferSubData = (PFNGLNAMEDBUFFERSUBDATAPROC) load(userptr, "glNamedBufferSubData");
    agx_custom_glad_glNamedFramebufferDrawBuffer = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) load(userptr, "glNamedFramebufferDrawBuffer");
    agx_custom_glad_glNamedFramebufferDrawBuffers = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) load(userptr, "glNamedFramebufferDrawBuffers");
    agx_custom_glad_glNamedFramebufferParameteri = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) load(userptr, "glNamedFramebufferParameteri");
    agx_custom_glad_glNamedFramebufferReadBuffer = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) load(userptr, "glNamedFramebufferReadBuffer");
    agx_custom_glad_glNamedFramebufferRenderbuffer = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) load(userptr, "glNamedFramebufferRenderbuffer");
    agx_custom_glad_glNamedFramebufferTexture = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) load(userptr, "glNamedFramebufferTexture");
    agx_custom_glad_glNamedFramebufferTextureLayer = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) load(userptr, "glNamedFramebufferTextureLayer");
    agx_custom_glad_glNamedRenderbufferStorage = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC) load(userptr, "glNamedRenderbufferStorage");
    agx_custom_glad_glNamedRenderbufferStorageMultisample = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) load(userptr, "glNamedRenderbufferStorageMultisample");
    agx_custom_glad_glReadnPixels = (PFNGLREADNPIXELSPROC) load(userptr, "glReadnPixels");
    agx_custom_glad_glTextureBarrier = (PFNGLTEXTUREBARRIERPROC) load(userptr, "glTextureBarrier");
    agx_custom_glad_glTextureBuffer = (PFNGLTEXTUREBUFFERPROC) load(userptr, "glTextureBuffer");
    agx_custom_glad_glTextureBufferRange = (PFNGLTEXTUREBUFFERRANGEPROC) load(userptr, "glTextureBufferRange");
    agx_custom_glad_glTextureParameterIiv = (PFNGLTEXTUREPARAMETERIIVPROC) load(userptr, "glTextureParameterIiv");
    agx_custom_glad_glTextureParameterIuiv = (PFNGLTEXTUREPARAMETERIUIVPROC) load(userptr, "glTextureParameterIuiv");
    agx_custom_glad_glTextureParameterf = (PFNGLTEXTUREPARAMETERFPROC) load(userptr, "glTextureParameterf");
    agx_custom_glad_glTextureParameterfv = (PFNGLTEXTUREPARAMETERFVPROC) load(userptr, "glTextureParameterfv");
    agx_custom_glad_glTextureParameteri = (PFNGLTEXTUREPARAMETERIPROC) load(userptr, "glTextureParameteri");
    agx_custom_glad_glTextureParameteriv = (PFNGLTEXTUREPARAMETERIVPROC) load(userptr, "glTextureParameteriv");
    agx_custom_glad_glTextureStorage1D = (PFNGLTEXTURESTORAGE1DPROC) load(userptr, "glTextureStorage1D");
    agx_custom_glad_glTextureStorage2D = (PFNGLTEXTURESTORAGE2DPROC) load(userptr, "glTextureStorage2D");
    agx_custom_glad_glTextureStorage2DMultisample = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) load(userptr, "glTextureStorage2DMultisample");
    agx_custom_glad_glTextureStorage3D = (PFNGLTEXTURESTORAGE3DPROC) load(userptr, "glTextureStorage3D");
    agx_custom_glad_glTextureStorage3DMultisample = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) load(userptr, "glTextureStorage3DMultisample");
    agx_custom_glad_glTextureSubImage1D = (PFNGLTEXTURESUBIMAGE1DPROC) load(userptr, "glTextureSubImage1D");
    agx_custom_glad_glTextureSubImage2D = (PFNGLTEXTURESUBIMAGE2DPROC) load(userptr, "glTextureSubImage2D");
    agx_custom_glad_glTextureSubImage3D = (PFNGLTEXTURESUBIMAGE3DPROC) load(userptr, "glTextureSubImage3D");
    agx_custom_glad_glTransformFeedbackBufferBase = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) load(userptr, "glTransformFeedbackBufferBase");
    agx_custom_glad_glTransformFeedbackBufferRange = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) load(userptr, "glTransformFeedbackBufferRange");
    agx_custom_glad_glUnmapNamedBuffer = (PFNGLUNMAPNAMEDBUFFERPROC) load(userptr, "glUnmapNamedBuffer");
    agx_custom_glad_glVertexArrayAttribBinding = (PFNGLVERTEXARRAYATTRIBBINDINGPROC) load(userptr, "glVertexArrayAttribBinding");
    agx_custom_glad_glVertexArrayAttribFormat = (PFNGLVERTEXARRAYATTRIBFORMATPROC) load(userptr, "glVertexArrayAttribFormat");
    agx_custom_glad_glVertexArrayAttribIFormat = (PFNGLVERTEXARRAYATTRIBIFORMATPROC) load(userptr, "glVertexArrayAttribIFormat");
    agx_custom_glad_glVertexArrayAttribLFormat = (PFNGLVERTEXARRAYATTRIBLFORMATPROC) load(userptr, "glVertexArrayAttribLFormat");
    agx_custom_glad_glVertexArrayBindingDivisor = (PFNGLVERTEXARRAYBINDINGDIVISORPROC) load(userptr, "glVertexArrayBindingDivisor");
    agx_custom_glad_glVertexArrayElementBuffer = (PFNGLVERTEXARRAYELEMENTBUFFERPROC) load(userptr, "glVertexArrayElementBuffer");
    agx_custom_glad_glVertexArrayVertexBuffer = (PFNGLVERTEXARRAYVERTEXBUFFERPROC) load(userptr, "glVertexArrayVertexBuffer");
    agx_custom_glad_glVertexArrayVertexBuffers = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC) load(userptr, "glVertexArrayVertexBuffers");
}
static void agx_custom_glad_gl_load_GL_VERSION_4_6( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_VERSION_4_6) return;
    agx_custom_glad_glMultiDrawArraysIndirectCount = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) load(userptr, "glMultiDrawArraysIndirectCount");
    agx_custom_glad_glMultiDrawElementsIndirectCount = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) load(userptr, "glMultiDrawElementsIndirectCount");
    agx_custom_glad_glPolygonOffsetClamp = (PFNGLPOLYGONOFFSETCLAMPPROC) load(userptr, "glPolygonOffsetClamp");
    agx_custom_glad_glSpecializeShader = (PFNGLSPECIALIZESHADERPROC) load(userptr, "glSpecializeShader");
}
static void agx_custom_glad_gl_load_GL_3DFX_tbuffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_3DFX_tbuffer) return;
    agx_custom_glad_glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC) load(userptr, "glTbufferMask3DFX");
}
static void agx_custom_glad_gl_load_GL_AMD_debug_output( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_debug_output) return;
    agx_custom_glad_glDebugMessageCallbackAMD = (PFNGLDEBUGMESSAGECALLBACKAMDPROC) load(userptr, "glDebugMessageCallbackAMD");
    agx_custom_glad_glDebugMessageEnableAMD = (PFNGLDEBUGMESSAGEENABLEAMDPROC) load(userptr, "glDebugMessageEnableAMD");
    agx_custom_glad_glDebugMessageInsertAMD = (PFNGLDEBUGMESSAGEINSERTAMDPROC) load(userptr, "glDebugMessageInsertAMD");
    agx_custom_glad_glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC) load(userptr, "glGetDebugMessageLogAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_draw_buffers_blend( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_draw_buffers_blend) return;
    agx_custom_glad_glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC) load(userptr, "glBlendEquationIndexedAMD");
    agx_custom_glad_glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) load(userptr, "glBlendEquationSeparateIndexedAMD");
    agx_custom_glad_glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC) load(userptr, "glBlendFuncIndexedAMD");
    agx_custom_glad_glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) load(userptr, "glBlendFuncSeparateIndexedAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_framebuffer_multisample_advanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_framebuffer_multisample_advanced) return;
    agx_custom_glad_glNamedRenderbufferStorageMultisampleAdvancedAMD = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) load(userptr, "glNamedRenderbufferStorageMultisampleAdvancedAMD");
    agx_custom_glad_glRenderbufferStorageMultisampleAdvancedAMD = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) load(userptr, "glRenderbufferStorageMultisampleAdvancedAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_framebuffer_sample_positions( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_framebuffer_sample_positions) return;
    agx_custom_glad_glFramebufferSamplePositionsfvAMD = (PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) load(userptr, "glFramebufferSamplePositionsfvAMD");
    agx_custom_glad_glGetFramebufferParameterfvAMD = (PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) load(userptr, "glGetFramebufferParameterfvAMD");
    agx_custom_glad_glGetNamedFramebufferParameterfvAMD = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) load(userptr, "glGetNamedFramebufferParameterfvAMD");
    agx_custom_glad_glNamedFramebufferSamplePositionsfvAMD = (PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) load(userptr, "glNamedFramebufferSamplePositionsfvAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_gpu_shader_int64( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int64) return;
    agx_custom_glad_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC) load(userptr, "glGetUniformi64vNV");
    agx_custom_glad_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC) load(userptr, "glGetUniformui64vNV");
    agx_custom_glad_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC) load(userptr, "glProgramUniform1i64NV");
    agx_custom_glad_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC) load(userptr, "glProgramUniform1i64vNV");
    agx_custom_glad_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC) load(userptr, "glProgramUniform1ui64NV");
    agx_custom_glad_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC) load(userptr, "glProgramUniform1ui64vNV");
    agx_custom_glad_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC) load(userptr, "glProgramUniform2i64NV");
    agx_custom_glad_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC) load(userptr, "glProgramUniform2i64vNV");
    agx_custom_glad_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC) load(userptr, "glProgramUniform2ui64NV");
    agx_custom_glad_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC) load(userptr, "glProgramUniform2ui64vNV");
    agx_custom_glad_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC) load(userptr, "glProgramUniform3i64NV");
    agx_custom_glad_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC) load(userptr, "glProgramUniform3i64vNV");
    agx_custom_glad_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC) load(userptr, "glProgramUniform3ui64NV");
    agx_custom_glad_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC) load(userptr, "glProgramUniform3ui64vNV");
    agx_custom_glad_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC) load(userptr, "glProgramUniform4i64NV");
    agx_custom_glad_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC) load(userptr, "glProgramUniform4i64vNV");
    agx_custom_glad_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC) load(userptr, "glProgramUniform4ui64NV");
    agx_custom_glad_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC) load(userptr, "glProgramUniform4ui64vNV");
    agx_custom_glad_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC) load(userptr, "glUniform1i64NV");
    agx_custom_glad_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC) load(userptr, "glUniform1i64vNV");
    agx_custom_glad_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC) load(userptr, "glUniform1ui64NV");
    agx_custom_glad_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC) load(userptr, "glUniform1ui64vNV");
    agx_custom_glad_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC) load(userptr, "glUniform2i64NV");
    agx_custom_glad_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC) load(userptr, "glUniform2i64vNV");
    agx_custom_glad_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC) load(userptr, "glUniform2ui64NV");
    agx_custom_glad_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC) load(userptr, "glUniform2ui64vNV");
    agx_custom_glad_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC) load(userptr, "glUniform3i64NV");
    agx_custom_glad_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC) load(userptr, "glUniform3i64vNV");
    agx_custom_glad_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC) load(userptr, "glUniform3ui64NV");
    agx_custom_glad_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC) load(userptr, "glUniform3ui64vNV");
    agx_custom_glad_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC) load(userptr, "glUniform4i64NV");
    agx_custom_glad_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC) load(userptr, "glUniform4i64vNV");
    agx_custom_glad_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC) load(userptr, "glUniform4ui64NV");
    agx_custom_glad_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC) load(userptr, "glUniform4ui64vNV");
}
static void agx_custom_glad_gl_load_GL_AMD_interleaved_elements( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_interleaved_elements) return;
    agx_custom_glad_glVertexAttribParameteriAMD = (PFNGLVERTEXATTRIBPARAMETERIAMDPROC) load(userptr, "glVertexAttribParameteriAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_multi_draw_indirect( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_multi_draw_indirect) return;
    agx_custom_glad_glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) load(userptr, "glMultiDrawArraysIndirectAMD");
    agx_custom_glad_glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) load(userptr, "glMultiDrawElementsIndirectAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_name_gen_delete( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_name_gen_delete) return;
    agx_custom_glad_glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC) load(userptr, "glDeleteNamesAMD");
    agx_custom_glad_glGenNamesAMD = (PFNGLGENNAMESAMDPROC) load(userptr, "glGenNamesAMD");
    agx_custom_glad_glIsNameAMD = (PFNGLISNAMEAMDPROC) load(userptr, "glIsNameAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_occlusion_query_event( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_occlusion_query_event) return;
    agx_custom_glad_glQueryObjectParameteruiAMD = (PFNGLQUERYOBJECTPARAMETERUIAMDPROC) load(userptr, "glQueryObjectParameteruiAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_performance_monitor( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_performance_monitor) return;
    agx_custom_glad_glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC) load(userptr, "glBeginPerfMonitorAMD");
    agx_custom_glad_glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC) load(userptr, "glDeletePerfMonitorsAMD");
    agx_custom_glad_glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC) load(userptr, "glEndPerfMonitorAMD");
    agx_custom_glad_glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC) load(userptr, "glGenPerfMonitorsAMD");
    agx_custom_glad_glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) load(userptr, "glGetPerfMonitorCounterDataAMD");
    agx_custom_glad_glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) load(userptr, "glGetPerfMonitorCounterInfoAMD");
    agx_custom_glad_glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) load(userptr, "glGetPerfMonitorCounterStringAMD");
    agx_custom_glad_glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC) load(userptr, "glGetPerfMonitorCountersAMD");
    agx_custom_glad_glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) load(userptr, "glGetPerfMonitorGroupStringAMD");
    agx_custom_glad_glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC) load(userptr, "glGetPerfMonitorGroupsAMD");
    agx_custom_glad_glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) load(userptr, "glSelectPerfMonitorCountersAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_sample_positions( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_sample_positions) return;
    agx_custom_glad_glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC) load(userptr, "glSetMultisamplefvAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_sparse_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_sparse_texture) return;
    agx_custom_glad_glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC) load(userptr, "glTexStorageSparseAMD");
    agx_custom_glad_glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC) load(userptr, "glTextureStorageSparseAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_stencil_operation_extended( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_stencil_operation_extended) return;
    agx_custom_glad_glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC) load(userptr, "glStencilOpValueAMD");
}
static void agx_custom_glad_gl_load_GL_AMD_vertex_shader_tessellator( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_tessellator) return;
    agx_custom_glad_glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC) load(userptr, "glTessellationFactorAMD");
    agx_custom_glad_glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC) load(userptr, "glTessellationModeAMD");
}
static void agx_custom_glad_gl_load_GL_APPLE_element_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_element_array) return;
    agx_custom_glad_glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC) load(userptr, "glDrawElementArrayAPPLE");
    agx_custom_glad_glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) load(userptr, "glDrawRangeElementArrayAPPLE");
    agx_custom_glad_glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC) load(userptr, "glElementPointerAPPLE");
    agx_custom_glad_glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) load(userptr, "glMultiDrawElementArrayAPPLE");
    agx_custom_glad_glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) load(userptr, "glMultiDrawRangeElementArrayAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_fence( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_fence) return;
    agx_custom_glad_glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC) load(userptr, "glDeleteFencesAPPLE");
    agx_custom_glad_glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC) load(userptr, "glFinishFenceAPPLE");
    agx_custom_glad_glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC) load(userptr, "glFinishObjectAPPLE");
    agx_custom_glad_glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC) load(userptr, "glGenFencesAPPLE");
    agx_custom_glad_glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC) load(userptr, "glIsFenceAPPLE");
    agx_custom_glad_glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC) load(userptr, "glSetFenceAPPLE");
    agx_custom_glad_glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC) load(userptr, "glTestFenceAPPLE");
    agx_custom_glad_glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC) load(userptr, "glTestObjectAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_flush_buffer_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_flush_buffer_range) return;
    agx_custom_glad_glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC) load(userptr, "glBufferParameteriAPPLE");
    agx_custom_glad_glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) load(userptr, "glFlushMappedBufferRangeAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_object_purgeable( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_object_purgeable) return;
    agx_custom_glad_glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC) load(userptr, "glGetObjectParameterivAPPLE");
    agx_custom_glad_glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC) load(userptr, "glObjectPurgeableAPPLE");
    agx_custom_glad_glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC) load(userptr, "glObjectUnpurgeableAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_texture_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_texture_range) return;
    agx_custom_glad_glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) load(userptr, "glGetTexParameterPointervAPPLE");
    agx_custom_glad_glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC) load(userptr, "glTextureRangeAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_vertex_array_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_object) return;
    agx_custom_glad_glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC) load(userptr, "glBindVertexArrayAPPLE");
    agx_custom_glad_glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC) load(userptr, "glDeleteVertexArraysAPPLE");
    agx_custom_glad_glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC) load(userptr, "glGenVertexArraysAPPLE");
    agx_custom_glad_glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC) load(userptr, "glIsVertexArrayAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_vertex_array_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_range) return;
    agx_custom_glad_glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) load(userptr, "glFlushVertexArrayRangeAPPLE");
    agx_custom_glad_glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) load(userptr, "glVertexArrayParameteriAPPLE");
    agx_custom_glad_glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC) load(userptr, "glVertexArrayRangeAPPLE");
}
static void agx_custom_glad_gl_load_GL_APPLE_vertex_program_evaluators( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_APPLE_vertex_program_evaluators) return;
    agx_custom_glad_glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC) load(userptr, "glDisableVertexAttribAPPLE");
    agx_custom_glad_glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC) load(userptr, "glEnableVertexAttribAPPLE");
    agx_custom_glad_glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) load(userptr, "glIsVertexAttribEnabledAPPLE");
    agx_custom_glad_glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC) load(userptr, "glMapVertexAttrib1dAPPLE");
    agx_custom_glad_glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC) load(userptr, "glMapVertexAttrib1fAPPLE");
    agx_custom_glad_glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC) load(userptr, "glMapVertexAttrib2dAPPLE");
    agx_custom_glad_glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC) load(userptr, "glMapVertexAttrib2fAPPLE");
}
static void agx_custom_glad_gl_load_GL_ARB_ES2_compatibility( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_ES2_compatibility) return;
    agx_custom_glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC) load(userptr, "glClearDepthf");
    agx_custom_glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC) load(userptr, "glDepthRangef");
    agx_custom_glad_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC) load(userptr, "glGetShaderPrecisionFormat");
    agx_custom_glad_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC) load(userptr, "glReleaseShaderCompiler");
    agx_custom_glad_glShaderBinary = (PFNGLSHADERBINARYPROC) load(userptr, "glShaderBinary");
}
static void agx_custom_glad_gl_load_GL_ARB_ES3_1_compatibility( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_ES3_1_compatibility) return;
    agx_custom_glad_glMemoryBarrierByRegion = (PFNGLMEMORYBARRIERBYREGIONPROC) load(userptr, "glMemoryBarrierByRegion");
}
static void agx_custom_glad_gl_load_GL_ARB_ES3_2_compatibility( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_ES3_2_compatibility) return;
    agx_custom_glad_glPrimitiveBoundingBoxARB = (PFNGLPRIMITIVEBOUNDINGBOXARBPROC) load(userptr, "glPrimitiveBoundingBoxARB");
}
static void agx_custom_glad_gl_load_GL_ARB_base_instance( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_base_instance) return;
    agx_custom_glad_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) load(userptr, "glDrawArraysInstancedBaseInstance");
    agx_custom_glad_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) load(userptr, "glDrawElementsInstancedBaseInstance");
    agx_custom_glad_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) load(userptr, "glDrawElementsInstancedBaseVertexBaseInstance");
}
static void agx_custom_glad_gl_load_GL_ARB_bindless_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_bindless_texture) return;
    agx_custom_glad_glGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC) load(userptr, "glGetImageHandleARB");
    agx_custom_glad_glGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC) load(userptr, "glGetTextureHandleARB");
    agx_custom_glad_glGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC) load(userptr, "glGetTextureSamplerHandleARB");
    agx_custom_glad_glGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC) load(userptr, "glGetVertexAttribLui64vARB");
    agx_custom_glad_glIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC) load(userptr, "glIsImageHandleResidentARB");
    agx_custom_glad_glIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC) load(userptr, "glIsTextureHandleResidentARB");
    agx_custom_glad_glMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) load(userptr, "glMakeImageHandleNonResidentARB");
    agx_custom_glad_glMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) load(userptr, "glMakeImageHandleResidentARB");
    agx_custom_glad_glMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) load(userptr, "glMakeTextureHandleNonResidentARB");
    agx_custom_glad_glMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) load(userptr, "glMakeTextureHandleResidentARB");
    agx_custom_glad_glProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) load(userptr, "glProgramUniformHandleui64ARB");
    agx_custom_glad_glProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) load(userptr, "glProgramUniformHandleui64vARB");
    agx_custom_glad_glUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC) load(userptr, "glUniformHandleui64ARB");
    agx_custom_glad_glUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC) load(userptr, "glUniformHandleui64vARB");
    agx_custom_glad_glVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC) load(userptr, "glVertexAttribL1ui64ARB");
    agx_custom_glad_glVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC) load(userptr, "glVertexAttribL1ui64vARB");
}
static void agx_custom_glad_gl_load_GL_ARB_blend_func_extended( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_blend_func_extended) return;
    agx_custom_glad_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) load(userptr, "glBindFragDataLocationIndexed");
    agx_custom_glad_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC) load(userptr, "glGetFragDataIndex");
}
static void agx_custom_glad_gl_load_GL_ARB_buffer_storage( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_buffer_storage) return;
    agx_custom_glad_glBufferStorage = (PFNGLBUFFERSTORAGEPROC) load(userptr, "glBufferStorage");
}
static void agx_custom_glad_gl_load_GL_ARB_cl_event( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_cl_event) return;
    agx_custom_glad_glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC) load(userptr, "glCreateSyncFromCLeventARB");
}
static void agx_custom_glad_gl_load_GL_ARB_clear_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_clear_buffer_object) return;
    agx_custom_glad_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC) load(userptr, "glClearBufferData");
    agx_custom_glad_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC) load(userptr, "glClearBufferSubData");
}
static void agx_custom_glad_gl_load_GL_ARB_clear_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_clear_texture) return;
    agx_custom_glad_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC) load(userptr, "glClearTexImage");
    agx_custom_glad_glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC) load(userptr, "glClearTexSubImage");
}
static void agx_custom_glad_gl_load_GL_ARB_clip_control( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_clip_control) return;
    agx_custom_glad_glClipControl = (PFNGLCLIPCONTROLPROC) load(userptr, "glClipControl");
}
static void agx_custom_glad_gl_load_GL_ARB_color_buffer_float( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_color_buffer_float) return;
    agx_custom_glad_glClampColorARB = (PFNGLCLAMPCOLORARBPROC) load(userptr, "glClampColorARB");
}
static void agx_custom_glad_gl_load_GL_ARB_compute_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_compute_shader) return;
    agx_custom_glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC) load(userptr, "glDispatchCompute");
    agx_custom_glad_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) load(userptr, "glDispatchComputeIndirect");
}
static void agx_custom_glad_gl_load_GL_ARB_compute_variable_group_size( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_compute_variable_group_size) return;
    agx_custom_glad_glDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) load(userptr, "glDispatchComputeGroupSizeARB");
}
static void agx_custom_glad_gl_load_GL_ARB_copy_buffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_copy_buffer) return;
    agx_custom_glad_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC) load(userptr, "glCopyBufferSubData");
}
static void agx_custom_glad_gl_load_GL_ARB_copy_image( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_copy_image) return;
    agx_custom_glad_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC) load(userptr, "glCopyImageSubData");
}
static void agx_custom_glad_gl_load_GL_ARB_debug_output( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_debug_output) return;
    agx_custom_glad_glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC) load(userptr, "glDebugMessageCallbackARB");
    agx_custom_glad_glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC) load(userptr, "glDebugMessageControlARB");
    agx_custom_glad_glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC) load(userptr, "glDebugMessageInsertARB");
    agx_custom_glad_glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC) load(userptr, "glGetDebugMessageLogARB");
}
static void agx_custom_glad_gl_load_GL_ARB_direct_state_access( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_direct_state_access) return;
    agx_custom_glad_glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC) load(userptr, "glBindTextureUnit");
    agx_custom_glad_glBlitNamedFramebuffer = (PFNGLBLITNAMEDFRAMEBUFFERPROC) load(userptr, "glBlitNamedFramebuffer");
    agx_custom_glad_glCheckNamedFramebufferStatus = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) load(userptr, "glCheckNamedFramebufferStatus");
    agx_custom_glad_glClearNamedBufferData = (PFNGLCLEARNAMEDBUFFERDATAPROC) load(userptr, "glClearNamedBufferData");
    agx_custom_glad_glClearNamedBufferSubData = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC) load(userptr, "glClearNamedBufferSubData");
    agx_custom_glad_glClearNamedFramebufferfi = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) load(userptr, "glClearNamedFramebufferfi");
    agx_custom_glad_glClearNamedFramebufferfv = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) load(userptr, "glClearNamedFramebufferfv");
    agx_custom_glad_glClearNamedFramebufferiv = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) load(userptr, "glClearNamedFramebufferiv");
    agx_custom_glad_glClearNamedFramebufferuiv = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) load(userptr, "glClearNamedFramebufferuiv");
    agx_custom_glad_glCompressedTextureSubImage1D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) load(userptr, "glCompressedTextureSubImage1D");
    agx_custom_glad_glCompressedTextureSubImage2D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) load(userptr, "glCompressedTextureSubImage2D");
    agx_custom_glad_glCompressedTextureSubImage3D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) load(userptr, "glCompressedTextureSubImage3D");
    agx_custom_glad_glCopyNamedBufferSubData = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC) load(userptr, "glCopyNamedBufferSubData");
    agx_custom_glad_glCopyTextureSubImage1D = (PFNGLCOPYTEXTURESUBIMAGE1DPROC) load(userptr, "glCopyTextureSubImage1D");
    agx_custom_glad_glCopyTextureSubImage2D = (PFNGLCOPYTEXTURESUBIMAGE2DPROC) load(userptr, "glCopyTextureSubImage2D");
    agx_custom_glad_glCopyTextureSubImage3D = (PFNGLCOPYTEXTURESUBIMAGE3DPROC) load(userptr, "glCopyTextureSubImage3D");
    agx_custom_glad_glCreateBuffers = (PFNGLCREATEBUFFERSPROC) load(userptr, "glCreateBuffers");
    agx_custom_glad_glCreateFramebuffers = (PFNGLCREATEFRAMEBUFFERSPROC) load(userptr, "glCreateFramebuffers");
    agx_custom_glad_glCreateProgramPipelines = (PFNGLCREATEPROGRAMPIPELINESPROC) load(userptr, "glCreateProgramPipelines");
    agx_custom_glad_glCreateQueries = (PFNGLCREATEQUERIESPROC) load(userptr, "glCreateQueries");
    agx_custom_glad_glCreateRenderbuffers = (PFNGLCREATERENDERBUFFERSPROC) load(userptr, "glCreateRenderbuffers");
    agx_custom_glad_glCreateSamplers = (PFNGLCREATESAMPLERSPROC) load(userptr, "glCreateSamplers");
    agx_custom_glad_glCreateTextures = (PFNGLCREATETEXTURESPROC) load(userptr, "glCreateTextures");
    agx_custom_glad_glCreateTransformFeedbacks = (PFNGLCREATETRANSFORMFEEDBACKSPROC) load(userptr, "glCreateTransformFeedbacks");
    agx_custom_glad_glCreateVertexArrays = (PFNGLCREATEVERTEXARRAYSPROC) load(userptr, "glCreateVertexArrays");
    agx_custom_glad_glDisableVertexArrayAttrib = (PFNGLDISABLEVERTEXARRAYATTRIBPROC) load(userptr, "glDisableVertexArrayAttrib");
    agx_custom_glad_glEnableVertexArrayAttrib = (PFNGLENABLEVERTEXARRAYATTRIBPROC) load(userptr, "glEnableVertexArrayAttrib");
    agx_custom_glad_glFlushMappedNamedBufferRange = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) load(userptr, "glFlushMappedNamedBufferRange");
    agx_custom_glad_glGenerateTextureMipmap = (PFNGLGENERATETEXTUREMIPMAPPROC) load(userptr, "glGenerateTextureMipmap");
    agx_custom_glad_glGetCompressedTextureImage = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) load(userptr, "glGetCompressedTextureImage");
    agx_custom_glad_glGetNamedBufferParameteri64v = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) load(userptr, "glGetNamedBufferParameteri64v");
    agx_custom_glad_glGetNamedBufferParameteriv = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedBufferParameteriv");
    agx_custom_glad_glGetNamedBufferPointerv = (PFNGLGETNAMEDBUFFERPOINTERVPROC) load(userptr, "glGetNamedBufferPointerv");
    agx_custom_glad_glGetNamedBufferSubData = (PFNGLGETNAMEDBUFFERSUBDATAPROC) load(userptr, "glGetNamedBufferSubData");
    agx_custom_glad_glGetNamedFramebufferAttachmentParameteriv = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) load(userptr, "glGetNamedFramebufferAttachmentParameteriv");
    agx_custom_glad_glGetNamedFramebufferParameteriv = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedFramebufferParameteriv");
    agx_custom_glad_glGetNamedRenderbufferParameteriv = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) load(userptr, "glGetNamedRenderbufferParameteriv");
    agx_custom_glad_glGetQueryBufferObjecti64v = (PFNGLGETQUERYBUFFEROBJECTI64VPROC) load(userptr, "glGetQueryBufferObjecti64v");
    agx_custom_glad_glGetQueryBufferObjectiv = (PFNGLGETQUERYBUFFEROBJECTIVPROC) load(userptr, "glGetQueryBufferObjectiv");
    agx_custom_glad_glGetQueryBufferObjectui64v = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC) load(userptr, "glGetQueryBufferObjectui64v");
    agx_custom_glad_glGetQueryBufferObjectuiv = (PFNGLGETQUERYBUFFEROBJECTUIVPROC) load(userptr, "glGetQueryBufferObjectuiv");
    agx_custom_glad_glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC) load(userptr, "glGetTextureImage");
    agx_custom_glad_glGetTextureLevelParameterfv = (PFNGLGETTEXTURELEVELPARAMETERFVPROC) load(userptr, "glGetTextureLevelParameterfv");
    agx_custom_glad_glGetTextureLevelParameteriv = (PFNGLGETTEXTURELEVELPARAMETERIVPROC) load(userptr, "glGetTextureLevelParameteriv");
    agx_custom_glad_glGetTextureParameterIiv = (PFNGLGETTEXTUREPARAMETERIIVPROC) load(userptr, "glGetTextureParameterIiv");
    agx_custom_glad_glGetTextureParameterIuiv = (PFNGLGETTEXTUREPARAMETERIUIVPROC) load(userptr, "glGetTextureParameterIuiv");
    agx_custom_glad_glGetTextureParameterfv = (PFNGLGETTEXTUREPARAMETERFVPROC) load(userptr, "glGetTextureParameterfv");
    agx_custom_glad_glGetTextureParameteriv = (PFNGLGETTEXTUREPARAMETERIVPROC) load(userptr, "glGetTextureParameteriv");
    agx_custom_glad_glGetTransformFeedbacki64_v = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC) load(userptr, "glGetTransformFeedbacki64_v");
    agx_custom_glad_glGetTransformFeedbacki_v = (PFNGLGETTRANSFORMFEEDBACKI_VPROC) load(userptr, "glGetTransformFeedbacki_v");
    agx_custom_glad_glGetTransformFeedbackiv = (PFNGLGETTRANSFORMFEEDBACKIVPROC) load(userptr, "glGetTransformFeedbackiv");
    agx_custom_glad_glGetVertexArrayIndexed64iv = (PFNGLGETVERTEXARRAYINDEXED64IVPROC) load(userptr, "glGetVertexArrayIndexed64iv");
    agx_custom_glad_glGetVertexArrayIndexediv = (PFNGLGETVERTEXARRAYINDEXEDIVPROC) load(userptr, "glGetVertexArrayIndexediv");
    agx_custom_glad_glGetVertexArrayiv = (PFNGLGETVERTEXARRAYIVPROC) load(userptr, "glGetVertexArrayiv");
    agx_custom_glad_glInvalidateNamedFramebufferData = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) load(userptr, "glInvalidateNamedFramebufferData");
    agx_custom_glad_glInvalidateNamedFramebufferSubData = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) load(userptr, "glInvalidateNamedFramebufferSubData");
    agx_custom_glad_glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC) load(userptr, "glMapNamedBuffer");
    agx_custom_glad_glMapNamedBufferRange = (PFNGLMAPNAMEDBUFFERRANGEPROC) load(userptr, "glMapNamedBufferRange");
    agx_custom_glad_glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC) load(userptr, "glNamedBufferData");
    agx_custom_glad_glNamedBufferStorage = (PFNGLNAMEDBUFFERSTORAGEPROC) load(userptr, "glNamedBufferStorage");
    agx_custom_glad_glNamedBufferSubData = (PFNGLNAMEDBUFFERSUBDATAPROC) load(userptr, "glNamedBufferSubData");
    agx_custom_glad_glNamedFramebufferDrawBuffer = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) load(userptr, "glNamedFramebufferDrawBuffer");
    agx_custom_glad_glNamedFramebufferDrawBuffers = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) load(userptr, "glNamedFramebufferDrawBuffers");
    agx_custom_glad_glNamedFramebufferParameteri = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) load(userptr, "glNamedFramebufferParameteri");
    agx_custom_glad_glNamedFramebufferReadBuffer = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) load(userptr, "glNamedFramebufferReadBuffer");
    agx_custom_glad_glNamedFramebufferRenderbuffer = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) load(userptr, "glNamedFramebufferRenderbuffer");
    agx_custom_glad_glNamedFramebufferTexture = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) load(userptr, "glNamedFramebufferTexture");
    agx_custom_glad_glNamedFramebufferTextureLayer = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) load(userptr, "glNamedFramebufferTextureLayer");
    agx_custom_glad_glNamedRenderbufferStorage = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC) load(userptr, "glNamedRenderbufferStorage");
    agx_custom_glad_glNamedRenderbufferStorageMultisample = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) load(userptr, "glNamedRenderbufferStorageMultisample");
    agx_custom_glad_glTextureBuffer = (PFNGLTEXTUREBUFFERPROC) load(userptr, "glTextureBuffer");
    agx_custom_glad_glTextureBufferRange = (PFNGLTEXTUREBUFFERRANGEPROC) load(userptr, "glTextureBufferRange");
    agx_custom_glad_glTextureParameterIiv = (PFNGLTEXTUREPARAMETERIIVPROC) load(userptr, "glTextureParameterIiv");
    agx_custom_glad_glTextureParameterIuiv = (PFNGLTEXTUREPARAMETERIUIVPROC) load(userptr, "glTextureParameterIuiv");
    agx_custom_glad_glTextureParameterf = (PFNGLTEXTUREPARAMETERFPROC) load(userptr, "glTextureParameterf");
    agx_custom_glad_glTextureParameterfv = (PFNGLTEXTUREPARAMETERFVPROC) load(userptr, "glTextureParameterfv");
    agx_custom_glad_glTextureParameteri = (PFNGLTEXTUREPARAMETERIPROC) load(userptr, "glTextureParameteri");
    agx_custom_glad_glTextureParameteriv = (PFNGLTEXTUREPARAMETERIVPROC) load(userptr, "glTextureParameteriv");
    agx_custom_glad_glTextureStorage1D = (PFNGLTEXTURESTORAGE1DPROC) load(userptr, "glTextureStorage1D");
    agx_custom_glad_glTextureStorage2D = (PFNGLTEXTURESTORAGE2DPROC) load(userptr, "glTextureStorage2D");
    agx_custom_glad_glTextureStorage2DMultisample = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) load(userptr, "glTextureStorage2DMultisample");
    agx_custom_glad_glTextureStorage3D = (PFNGLTEXTURESTORAGE3DPROC) load(userptr, "glTextureStorage3D");
    agx_custom_glad_glTextureStorage3DMultisample = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) load(userptr, "glTextureStorage3DMultisample");
    agx_custom_glad_glTextureSubImage1D = (PFNGLTEXTURESUBIMAGE1DPROC) load(userptr, "glTextureSubImage1D");
    agx_custom_glad_glTextureSubImage2D = (PFNGLTEXTURESUBIMAGE2DPROC) load(userptr, "glTextureSubImage2D");
    agx_custom_glad_glTextureSubImage3D = (PFNGLTEXTURESUBIMAGE3DPROC) load(userptr, "glTextureSubImage3D");
    agx_custom_glad_glTransformFeedbackBufferBase = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) load(userptr, "glTransformFeedbackBufferBase");
    agx_custom_glad_glTransformFeedbackBufferRange = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) load(userptr, "glTransformFeedbackBufferRange");
    agx_custom_glad_glUnmapNamedBuffer = (PFNGLUNMAPNAMEDBUFFERPROC) load(userptr, "glUnmapNamedBuffer");
    agx_custom_glad_glVertexArrayAttribBinding = (PFNGLVERTEXARRAYATTRIBBINDINGPROC) load(userptr, "glVertexArrayAttribBinding");
    agx_custom_glad_glVertexArrayAttribFormat = (PFNGLVERTEXARRAYATTRIBFORMATPROC) load(userptr, "glVertexArrayAttribFormat");
    agx_custom_glad_glVertexArrayAttribIFormat = (PFNGLVERTEXARRAYATTRIBIFORMATPROC) load(userptr, "glVertexArrayAttribIFormat");
    agx_custom_glad_glVertexArrayAttribLFormat = (PFNGLVERTEXARRAYATTRIBLFORMATPROC) load(userptr, "glVertexArrayAttribLFormat");
    agx_custom_glad_glVertexArrayBindingDivisor = (PFNGLVERTEXARRAYBINDINGDIVISORPROC) load(userptr, "glVertexArrayBindingDivisor");
    agx_custom_glad_glVertexArrayElementBuffer = (PFNGLVERTEXARRAYELEMENTBUFFERPROC) load(userptr, "glVertexArrayElementBuffer");
    agx_custom_glad_glVertexArrayVertexBuffer = (PFNGLVERTEXARRAYVERTEXBUFFERPROC) load(userptr, "glVertexArrayVertexBuffer");
    agx_custom_glad_glVertexArrayVertexBuffers = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC) load(userptr, "glVertexArrayVertexBuffers");
}
static void agx_custom_glad_gl_load_GL_ARB_draw_buffers( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_draw_buffers) return;
    agx_custom_glad_glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC) load(userptr, "glDrawBuffersARB");
}
static void agx_custom_glad_gl_load_GL_ARB_draw_buffers_blend( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_draw_buffers_blend) return;
    agx_custom_glad_glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC) load(userptr, "glBlendEquationSeparateiARB");
    agx_custom_glad_glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC) load(userptr, "glBlendEquationiARB");
    agx_custom_glad_glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC) load(userptr, "glBlendFuncSeparateiARB");
    agx_custom_glad_glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC) load(userptr, "glBlendFunciARB");
}
static void agx_custom_glad_gl_load_GL_ARB_draw_elements_base_vertex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_draw_elements_base_vertex) return;
    agx_custom_glad_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC) load(userptr, "glDrawElementsBaseVertex");
    agx_custom_glad_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) load(userptr, "glDrawElementsInstancedBaseVertex");
    agx_custom_glad_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) load(userptr, "glDrawRangeElementsBaseVertex");
    agx_custom_glad_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) load(userptr, "glMultiDrawElementsBaseVertex");
}
static void agx_custom_glad_gl_load_GL_ARB_draw_indirect( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_draw_indirect) return;
    agx_custom_glad_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC) load(userptr, "glDrawArraysIndirect");
    agx_custom_glad_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC) load(userptr, "glDrawElementsIndirect");
}
static void agx_custom_glad_gl_load_GL_ARB_draw_instanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_draw_instanced) return;
    agx_custom_glad_glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC) load(userptr, "glDrawArraysInstancedARB");
    agx_custom_glad_glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC) load(userptr, "glDrawElementsInstancedARB");
}
static void agx_custom_glad_gl_load_GL_ARB_fragment_program( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_fragment_program) return;
    agx_custom_glad_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC) load(userptr, "glBindProgramARB");
    agx_custom_glad_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC) load(userptr, "glDeleteProgramsARB");
    agx_custom_glad_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC) load(userptr, "glGenProgramsARB");
    agx_custom_glad_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC) load(userptr, "glGetProgramEnvParameterdvARB");
    agx_custom_glad_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC) load(userptr, "glGetProgramEnvParameterfvARB");
    agx_custom_glad_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) load(userptr, "glGetProgramLocalParameterdvARB");
    agx_custom_glad_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) load(userptr, "glGetProgramLocalParameterfvARB");
    agx_custom_glad_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC) load(userptr, "glGetProgramStringARB");
    agx_custom_glad_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC) load(userptr, "glGetProgramivARB");
    agx_custom_glad_glIsProgramARB = (PFNGLISPROGRAMARBPROC) load(userptr, "glIsProgramARB");
    agx_custom_glad_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC) load(userptr, "glProgramEnvParameter4dARB");
    agx_custom_glad_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC) load(userptr, "glProgramEnvParameter4dvARB");
    agx_custom_glad_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC) load(userptr, "glProgramEnvParameter4fARB");
    agx_custom_glad_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC) load(userptr, "glProgramEnvParameter4fvARB");
    agx_custom_glad_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC) load(userptr, "glProgramLocalParameter4dARB");
    agx_custom_glad_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) load(userptr, "glProgramLocalParameter4dvARB");
    agx_custom_glad_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC) load(userptr, "glProgramLocalParameter4fARB");
    agx_custom_glad_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) load(userptr, "glProgramLocalParameter4fvARB");
    agx_custom_glad_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC) load(userptr, "glProgramStringARB");
}
static void agx_custom_glad_gl_load_GL_ARB_framebuffer_no_attachments( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_framebuffer_no_attachments) return;
    agx_custom_glad_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC) load(userptr, "glFramebufferParameteri");
    agx_custom_glad_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) load(userptr, "glGetFramebufferParameteriv");
}
static void agx_custom_glad_gl_load_GL_ARB_framebuffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_framebuffer_object) return;
    agx_custom_glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC) load(userptr, "glBindFramebuffer");
    agx_custom_glad_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC) load(userptr, "glBindRenderbuffer");
    agx_custom_glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC) load(userptr, "glBlitFramebuffer");
    agx_custom_glad_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC) load(userptr, "glCheckFramebufferStatus");
    agx_custom_glad_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC) load(userptr, "glDeleteFramebuffers");
    agx_custom_glad_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC) load(userptr, "glDeleteRenderbuffers");
    agx_custom_glad_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC) load(userptr, "glFramebufferRenderbuffer");
    agx_custom_glad_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC) load(userptr, "glFramebufferTexture1D");
    agx_custom_glad_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC) load(userptr, "glFramebufferTexture2D");
    agx_custom_glad_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC) load(userptr, "glFramebufferTexture3D");
    agx_custom_glad_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) load(userptr, "glFramebufferTextureLayer");
    agx_custom_glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC) load(userptr, "glGenFramebuffers");
    agx_custom_glad_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC) load(userptr, "glGenRenderbuffers");
    agx_custom_glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC) load(userptr, "glGenerateMipmap");
    agx_custom_glad_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) load(userptr, "glGetFramebufferAttachmentParameteriv");
    agx_custom_glad_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC) load(userptr, "glGetRenderbufferParameteriv");
    agx_custom_glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC) load(userptr, "glIsFramebuffer");
    agx_custom_glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC) load(userptr, "glIsRenderbuffer");
    agx_custom_glad_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC) load(userptr, "glRenderbufferStorage");
    agx_custom_glad_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) load(userptr, "glRenderbufferStorageMultisample");
}
static void agx_custom_glad_gl_load_GL_ARB_geometry_shader4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_geometry_shader4) return;
    agx_custom_glad_glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC) load(userptr, "glFramebufferTextureARB");
    agx_custom_glad_glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) load(userptr, "glFramebufferTextureFaceARB");
    agx_custom_glad_glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) load(userptr, "glFramebufferTextureLayerARB");
    agx_custom_glad_glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC) load(userptr, "glProgramParameteriARB");
}
static void agx_custom_glad_gl_load_GL_ARB_get_program_binary( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_get_program_binary) return;
    agx_custom_glad_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC) load(userptr, "glGetProgramBinary");
    agx_custom_glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC) load(userptr, "glProgramBinary");
    agx_custom_glad_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) load(userptr, "glProgramParameteri");
}
static void agx_custom_glad_gl_load_GL_ARB_get_texture_sub_image( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_get_texture_sub_image) return;
    agx_custom_glad_glGetCompressedTextureSubImage = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) load(userptr, "glGetCompressedTextureSubImage");
    agx_custom_glad_glGetTextureSubImage = (PFNGLGETTEXTURESUBIMAGEPROC) load(userptr, "glGetTextureSubImage");
}
static void agx_custom_glad_gl_load_GL_ARB_gl_spirv( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_gl_spirv) return;
    agx_custom_glad_glSpecializeShaderARB = (PFNGLSPECIALIZESHADERARBPROC) load(userptr, "glSpecializeShaderARB");
}
static void agx_custom_glad_gl_load_GL_ARB_gpu_shader_fp64( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_fp64) return;
    agx_custom_glad_glGetUniformdv = (PFNGLGETUNIFORMDVPROC) load(userptr, "glGetUniformdv");
    agx_custom_glad_glUniform1d = (PFNGLUNIFORM1DPROC) load(userptr, "glUniform1d");
    agx_custom_glad_glUniform1dv = (PFNGLUNIFORM1DVPROC) load(userptr, "glUniform1dv");
    agx_custom_glad_glUniform2d = (PFNGLUNIFORM2DPROC) load(userptr, "glUniform2d");
    agx_custom_glad_glUniform2dv = (PFNGLUNIFORM2DVPROC) load(userptr, "glUniform2dv");
    agx_custom_glad_glUniform3d = (PFNGLUNIFORM3DPROC) load(userptr, "glUniform3d");
    agx_custom_glad_glUniform3dv = (PFNGLUNIFORM3DVPROC) load(userptr, "glUniform3dv");
    agx_custom_glad_glUniform4d = (PFNGLUNIFORM4DPROC) load(userptr, "glUniform4d");
    agx_custom_glad_glUniform4dv = (PFNGLUNIFORM4DVPROC) load(userptr, "glUniform4dv");
    agx_custom_glad_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC) load(userptr, "glUniformMatrix2dv");
    agx_custom_glad_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC) load(userptr, "glUniformMatrix2x3dv");
    agx_custom_glad_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC) load(userptr, "glUniformMatrix2x4dv");
    agx_custom_glad_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC) load(userptr, "glUniformMatrix3dv");
    agx_custom_glad_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC) load(userptr, "glUniformMatrix3x2dv");
    agx_custom_glad_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC) load(userptr, "glUniformMatrix3x4dv");
    agx_custom_glad_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC) load(userptr, "glUniformMatrix4dv");
    agx_custom_glad_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC) load(userptr, "glUniformMatrix4x2dv");
    agx_custom_glad_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC) load(userptr, "glUniformMatrix4x3dv");
}
static void agx_custom_glad_gl_load_GL_ARB_gpu_shader_int64( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_int64) return;
    agx_custom_glad_glGetUniformi64vARB = (PFNGLGETUNIFORMI64VARBPROC) load(userptr, "glGetUniformi64vARB");
    agx_custom_glad_glGetUniformui64vARB = (PFNGLGETUNIFORMUI64VARBPROC) load(userptr, "glGetUniformui64vARB");
    agx_custom_glad_glGetnUniformi64vARB = (PFNGLGETNUNIFORMI64VARBPROC) load(userptr, "glGetnUniformi64vARB");
    agx_custom_glad_glGetnUniformui64vARB = (PFNGLGETNUNIFORMUI64VARBPROC) load(userptr, "glGetnUniformui64vARB");
    agx_custom_glad_glProgramUniform1i64ARB = (PFNGLPROGRAMUNIFORM1I64ARBPROC) load(userptr, "glProgramUniform1i64ARB");
    agx_custom_glad_glProgramUniform1i64vARB = (PFNGLPROGRAMUNIFORM1I64VARBPROC) load(userptr, "glProgramUniform1i64vARB");
    agx_custom_glad_glProgramUniform1ui64ARB = (PFNGLPROGRAMUNIFORM1UI64ARBPROC) load(userptr, "glProgramUniform1ui64ARB");
    agx_custom_glad_glProgramUniform1ui64vARB = (PFNGLPROGRAMUNIFORM1UI64VARBPROC) load(userptr, "glProgramUniform1ui64vARB");
    agx_custom_glad_glProgramUniform2i64ARB = (PFNGLPROGRAMUNIFORM2I64ARBPROC) load(userptr, "glProgramUniform2i64ARB");
    agx_custom_glad_glProgramUniform2i64vARB = (PFNGLPROGRAMUNIFORM2I64VARBPROC) load(userptr, "glProgramUniform2i64vARB");
    agx_custom_glad_glProgramUniform2ui64ARB = (PFNGLPROGRAMUNIFORM2UI64ARBPROC) load(userptr, "glProgramUniform2ui64ARB");
    agx_custom_glad_glProgramUniform2ui64vARB = (PFNGLPROGRAMUNIFORM2UI64VARBPROC) load(userptr, "glProgramUniform2ui64vARB");
    agx_custom_glad_glProgramUniform3i64ARB = (PFNGLPROGRAMUNIFORM3I64ARBPROC) load(userptr, "glProgramUniform3i64ARB");
    agx_custom_glad_glProgramUniform3i64vARB = (PFNGLPROGRAMUNIFORM3I64VARBPROC) load(userptr, "glProgramUniform3i64vARB");
    agx_custom_glad_glProgramUniform3ui64ARB = (PFNGLPROGRAMUNIFORM3UI64ARBPROC) load(userptr, "glProgramUniform3ui64ARB");
    agx_custom_glad_glProgramUniform3ui64vARB = (PFNGLPROGRAMUNIFORM3UI64VARBPROC) load(userptr, "glProgramUniform3ui64vARB");
    agx_custom_glad_glProgramUniform4i64ARB = (PFNGLPROGRAMUNIFORM4I64ARBPROC) load(userptr, "glProgramUniform4i64ARB");
    agx_custom_glad_glProgramUniform4i64vARB = (PFNGLPROGRAMUNIFORM4I64VARBPROC) load(userptr, "glProgramUniform4i64vARB");
    agx_custom_glad_glProgramUniform4ui64ARB = (PFNGLPROGRAMUNIFORM4UI64ARBPROC) load(userptr, "glProgramUniform4ui64ARB");
    agx_custom_glad_glProgramUniform4ui64vARB = (PFNGLPROGRAMUNIFORM4UI64VARBPROC) load(userptr, "glProgramUniform4ui64vARB");
    agx_custom_glad_glUniform1i64ARB = (PFNGLUNIFORM1I64ARBPROC) load(userptr, "glUniform1i64ARB");
    agx_custom_glad_glUniform1i64vARB = (PFNGLUNIFORM1I64VARBPROC) load(userptr, "glUniform1i64vARB");
    agx_custom_glad_glUniform1ui64ARB = (PFNGLUNIFORM1UI64ARBPROC) load(userptr, "glUniform1ui64ARB");
    agx_custom_glad_glUniform1ui64vARB = (PFNGLUNIFORM1UI64VARBPROC) load(userptr, "glUniform1ui64vARB");
    agx_custom_glad_glUniform2i64ARB = (PFNGLUNIFORM2I64ARBPROC) load(userptr, "glUniform2i64ARB");
    agx_custom_glad_glUniform2i64vARB = (PFNGLUNIFORM2I64VARBPROC) load(userptr, "glUniform2i64vARB");
    agx_custom_glad_glUniform2ui64ARB = (PFNGLUNIFORM2UI64ARBPROC) load(userptr, "glUniform2ui64ARB");
    agx_custom_glad_glUniform2ui64vARB = (PFNGLUNIFORM2UI64VARBPROC) load(userptr, "glUniform2ui64vARB");
    agx_custom_glad_glUniform3i64ARB = (PFNGLUNIFORM3I64ARBPROC) load(userptr, "glUniform3i64ARB");
    agx_custom_glad_glUniform3i64vARB = (PFNGLUNIFORM3I64VARBPROC) load(userptr, "glUniform3i64vARB");
    agx_custom_glad_glUniform3ui64ARB = (PFNGLUNIFORM3UI64ARBPROC) load(userptr, "glUniform3ui64ARB");
    agx_custom_glad_glUniform3ui64vARB = (PFNGLUNIFORM3UI64VARBPROC) load(userptr, "glUniform3ui64vARB");
    agx_custom_glad_glUniform4i64ARB = (PFNGLUNIFORM4I64ARBPROC) load(userptr, "glUniform4i64ARB");
    agx_custom_glad_glUniform4i64vARB = (PFNGLUNIFORM4I64VARBPROC) load(userptr, "glUniform4i64vARB");
    agx_custom_glad_glUniform4ui64ARB = (PFNGLUNIFORM4UI64ARBPROC) load(userptr, "glUniform4ui64ARB");
    agx_custom_glad_glUniform4ui64vARB = (PFNGLUNIFORM4UI64VARBPROC) load(userptr, "glUniform4ui64vARB");
}
static void agx_custom_glad_gl_load_GL_ARB_imaging( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_imaging) return;
    agx_custom_glad_glBlendColor = (PFNGLBLENDCOLORPROC) load(userptr, "glBlendColor");
    agx_custom_glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC) load(userptr, "glBlendEquation");
    agx_custom_glad_glColorSubTable = (PFNGLCOLORSUBTABLEPROC) load(userptr, "glColorSubTable");
    agx_custom_glad_glColorTable = (PFNGLCOLORTABLEPROC) load(userptr, "glColorTable");
    agx_custom_glad_glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC) load(userptr, "glColorTableParameterfv");
    agx_custom_glad_glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC) load(userptr, "glColorTableParameteriv");
    agx_custom_glad_glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC) load(userptr, "glConvolutionFilter1D");
    agx_custom_glad_glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC) load(userptr, "glConvolutionFilter2D");
    agx_custom_glad_glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC) load(userptr, "glConvolutionParameterf");
    agx_custom_glad_glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC) load(userptr, "glConvolutionParameterfv");
    agx_custom_glad_glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC) load(userptr, "glConvolutionParameteri");
    agx_custom_glad_glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC) load(userptr, "glConvolutionParameteriv");
    agx_custom_glad_glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC) load(userptr, "glCopyColorSubTable");
    agx_custom_glad_glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC) load(userptr, "glCopyColorTable");
    agx_custom_glad_glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC) load(userptr, "glCopyConvolutionFilter1D");
    agx_custom_glad_glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC) load(userptr, "glCopyConvolutionFilter2D");
    agx_custom_glad_glGetColorTable = (PFNGLGETCOLORTABLEPROC) load(userptr, "glGetColorTable");
    agx_custom_glad_glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC) load(userptr, "glGetColorTableParameterfv");
    agx_custom_glad_glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC) load(userptr, "glGetColorTableParameteriv");
    agx_custom_glad_glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC) load(userptr, "glGetConvolutionFilter");
    agx_custom_glad_glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC) load(userptr, "glGetConvolutionParameterfv");
    agx_custom_glad_glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC) load(userptr, "glGetConvolutionParameteriv");
    agx_custom_glad_glGetHistogram = (PFNGLGETHISTOGRAMPROC) load(userptr, "glGetHistogram");
    agx_custom_glad_glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC) load(userptr, "glGetHistogramParameterfv");
    agx_custom_glad_glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC) load(userptr, "glGetHistogramParameteriv");
    agx_custom_glad_glGetMinmax = (PFNGLGETMINMAXPROC) load(userptr, "glGetMinmax");
    agx_custom_glad_glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC) load(userptr, "glGetMinmaxParameterfv");
    agx_custom_glad_glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC) load(userptr, "glGetMinmaxParameteriv");
    agx_custom_glad_glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC) load(userptr, "glGetSeparableFilter");
    agx_custom_glad_glHistogram = (PFNGLHISTOGRAMPROC) load(userptr, "glHistogram");
    agx_custom_glad_glMinmax = (PFNGLMINMAXPROC) load(userptr, "glMinmax");
    agx_custom_glad_glResetHistogram = (PFNGLRESETHISTOGRAMPROC) load(userptr, "glResetHistogram");
    agx_custom_glad_glResetMinmax = (PFNGLRESETMINMAXPROC) load(userptr, "glResetMinmax");
    agx_custom_glad_glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC) load(userptr, "glSeparableFilter2D");
}
static void agx_custom_glad_gl_load_GL_ARB_indirect_parameters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_indirect_parameters) return;
    agx_custom_glad_glMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) load(userptr, "glMultiDrawArraysIndirectCountARB");
    agx_custom_glad_glMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) load(userptr, "glMultiDrawElementsIndirectCountARB");
}
static void agx_custom_glad_gl_load_GL_ARB_instanced_arrays( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_instanced_arrays) return;
    agx_custom_glad_glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC) load(userptr, "glVertexAttribDivisorARB");
}
static void agx_custom_glad_gl_load_GL_ARB_internalformat_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_internalformat_query) return;
    agx_custom_glad_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) load(userptr, "glGetInternalformativ");
}
static void agx_custom_glad_gl_load_GL_ARB_internalformat_query2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_internalformat_query2) return;
    agx_custom_glad_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) load(userptr, "glGetInternalformati64v");
}
static void agx_custom_glad_gl_load_GL_ARB_invalidate_subdata( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_invalidate_subdata) return;
    agx_custom_glad_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC) load(userptr, "glInvalidateBufferData");
    agx_custom_glad_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC) load(userptr, "glInvalidateBufferSubData");
    agx_custom_glad_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC) load(userptr, "glInvalidateFramebuffer");
    agx_custom_glad_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC) load(userptr, "glInvalidateSubFramebuffer");
    agx_custom_glad_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC) load(userptr, "glInvalidateTexImage");
    agx_custom_glad_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC) load(userptr, "glInvalidateTexSubImage");
}
static void agx_custom_glad_gl_load_GL_ARB_map_buffer_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_map_buffer_range) return;
    agx_custom_glad_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) load(userptr, "glFlushMappedBufferRange");
    agx_custom_glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC) load(userptr, "glMapBufferRange");
}
static void agx_custom_glad_gl_load_GL_ARB_matrix_palette( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_matrix_palette) return;
    agx_custom_glad_glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC) load(userptr, "glCurrentPaletteMatrixARB");
    agx_custom_glad_glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC) load(userptr, "glMatrixIndexPointerARB");
    agx_custom_glad_glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC) load(userptr, "glMatrixIndexubvARB");
    agx_custom_glad_glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC) load(userptr, "glMatrixIndexuivARB");
    agx_custom_glad_glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC) load(userptr, "glMatrixIndexusvARB");
}
static void agx_custom_glad_gl_load_GL_ARB_multi_bind( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_multi_bind) return;
    agx_custom_glad_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC) load(userptr, "glBindBuffersBase");
    agx_custom_glad_glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC) load(userptr, "glBindBuffersRange");
    agx_custom_glad_glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC) load(userptr, "glBindImageTextures");
    agx_custom_glad_glBindSamplers = (PFNGLBINDSAMPLERSPROC) load(userptr, "glBindSamplers");
    agx_custom_glad_glBindTextures = (PFNGLBINDTEXTURESPROC) load(userptr, "glBindTextures");
    agx_custom_glad_glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC) load(userptr, "glBindVertexBuffers");
}
static void agx_custom_glad_gl_load_GL_ARB_multi_draw_indirect( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_multi_draw_indirect) return;
    agx_custom_glad_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) load(userptr, "glMultiDrawArraysIndirect");
    agx_custom_glad_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) load(userptr, "glMultiDrawElementsIndirect");
}
static void agx_custom_glad_gl_load_GL_ARB_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_multisample) return;
    agx_custom_glad_glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC) load(userptr, "glSampleCoverageARB");
}
static void agx_custom_glad_gl_load_GL_ARB_multitexture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_multitexture) return;
    agx_custom_glad_glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC) load(userptr, "glActiveTextureARB");
    agx_custom_glad_glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC) load(userptr, "glClientActiveTextureARB");
    agx_custom_glad_glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC) load(userptr, "glMultiTexCoord1dARB");
    agx_custom_glad_glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC) load(userptr, "glMultiTexCoord1dvARB");
    agx_custom_glad_glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC) load(userptr, "glMultiTexCoord1fARB");
    agx_custom_glad_glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC) load(userptr, "glMultiTexCoord1fvARB");
    agx_custom_glad_glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC) load(userptr, "glMultiTexCoord1iARB");
    agx_custom_glad_glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC) load(userptr, "glMultiTexCoord1ivARB");
    agx_custom_glad_glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC) load(userptr, "glMultiTexCoord1sARB");
    agx_custom_glad_glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC) load(userptr, "glMultiTexCoord1svARB");
    agx_custom_glad_glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC) load(userptr, "glMultiTexCoord2dARB");
    agx_custom_glad_glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC) load(userptr, "glMultiTexCoord2dvARB");
    agx_custom_glad_glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC) load(userptr, "glMultiTexCoord2fARB");
    agx_custom_glad_glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC) load(userptr, "glMultiTexCoord2fvARB");
    agx_custom_glad_glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC) load(userptr, "glMultiTexCoord2iARB");
    agx_custom_glad_glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC) load(userptr, "glMultiTexCoord2ivARB");
    agx_custom_glad_glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC) load(userptr, "glMultiTexCoord2sARB");
    agx_custom_glad_glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC) load(userptr, "glMultiTexCoord2svARB");
    agx_custom_glad_glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC) load(userptr, "glMultiTexCoord3dARB");
    agx_custom_glad_glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC) load(userptr, "glMultiTexCoord3dvARB");
    agx_custom_glad_glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC) load(userptr, "glMultiTexCoord3fARB");
    agx_custom_glad_glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC) load(userptr, "glMultiTexCoord3fvARB");
    agx_custom_glad_glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC) load(userptr, "glMultiTexCoord3iARB");
    agx_custom_glad_glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC) load(userptr, "glMultiTexCoord3ivARB");
    agx_custom_glad_glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC) load(userptr, "glMultiTexCoord3sARB");
    agx_custom_glad_glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC) load(userptr, "glMultiTexCoord3svARB");
    agx_custom_glad_glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC) load(userptr, "glMultiTexCoord4dARB");
    agx_custom_glad_glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC) load(userptr, "glMultiTexCoord4dvARB");
    agx_custom_glad_glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC) load(userptr, "glMultiTexCoord4fARB");
    agx_custom_glad_glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC) load(userptr, "glMultiTexCoord4fvARB");
    agx_custom_glad_glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC) load(userptr, "glMultiTexCoord4iARB");
    agx_custom_glad_glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC) load(userptr, "glMultiTexCoord4ivARB");
    agx_custom_glad_glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC) load(userptr, "glMultiTexCoord4sARB");
    agx_custom_glad_glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC) load(userptr, "glMultiTexCoord4svARB");
}
static void agx_custom_glad_gl_load_GL_ARB_occlusion_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_occlusion_query) return;
    agx_custom_glad_glBeginQueryARB = (PFNGLBEGINQUERYARBPROC) load(userptr, "glBeginQueryARB");
    agx_custom_glad_glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC) load(userptr, "glDeleteQueriesARB");
    agx_custom_glad_glEndQueryARB = (PFNGLENDQUERYARBPROC) load(userptr, "glEndQueryARB");
    agx_custom_glad_glGenQueriesARB = (PFNGLGENQUERIESARBPROC) load(userptr, "glGenQueriesARB");
    agx_custom_glad_glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC) load(userptr, "glGetQueryObjectivARB");
    agx_custom_glad_glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC) load(userptr, "glGetQueryObjectuivARB");
    agx_custom_glad_glGetQueryivARB = (PFNGLGETQUERYIVARBPROC) load(userptr, "glGetQueryivARB");
    agx_custom_glad_glIsQueryARB = (PFNGLISQUERYARBPROC) load(userptr, "glIsQueryARB");
}
static void agx_custom_glad_gl_load_GL_ARB_parallel_shader_compile( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_parallel_shader_compile) return;
    agx_custom_glad_glMaxShaderCompilerThreadsARB = (PFNGLMAXSHADERCOMPILERTHREADSARBPROC) load(userptr, "glMaxShaderCompilerThreadsARB");
}
static void agx_custom_glad_gl_load_GL_ARB_point_parameters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_point_parameters) return;
    agx_custom_glad_glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC) load(userptr, "glPointParameterfARB");
    agx_custom_glad_glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC) load(userptr, "glPointParameterfvARB");
}
static void agx_custom_glad_gl_load_GL_ARB_polygon_offset_clamp( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_polygon_offset_clamp) return;
    agx_custom_glad_glPolygonOffsetClamp = (PFNGLPOLYGONOFFSETCLAMPPROC) load(userptr, "glPolygonOffsetClamp");
}
static void agx_custom_glad_gl_load_GL_ARB_program_interface_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_program_interface_query) return;
    agx_custom_glad_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC) load(userptr, "glGetProgramInterfaceiv");
    agx_custom_glad_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC) load(userptr, "glGetProgramResourceIndex");
    agx_custom_glad_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) load(userptr, "glGetProgramResourceLocation");
    agx_custom_glad_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) load(userptr, "glGetProgramResourceLocationIndex");
    agx_custom_glad_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC) load(userptr, "glGetProgramResourceName");
    agx_custom_glad_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC) load(userptr, "glGetProgramResourceiv");
}
static void agx_custom_glad_gl_load_GL_ARB_provoking_vertex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_provoking_vertex) return;
    agx_custom_glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC) load(userptr, "glProvokingVertex");
}
static void agx_custom_glad_gl_load_GL_ARB_robustness( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_robustness) return;
    agx_custom_glad_glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC) load(userptr, "glGetGraphicsResetStatusARB");
    agx_custom_glad_glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC) load(userptr, "glGetnColorTableARB");
    agx_custom_glad_glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) load(userptr, "glGetnCompressedTexImageARB");
    agx_custom_glad_glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC) load(userptr, "glGetnConvolutionFilterARB");
    agx_custom_glad_glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC) load(userptr, "glGetnHistogramARB");
    agx_custom_glad_glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC) load(userptr, "glGetnMapdvARB");
    agx_custom_glad_glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC) load(userptr, "glGetnMapfvARB");
    agx_custom_glad_glGetnMapivARB = (PFNGLGETNMAPIVARBPROC) load(userptr, "glGetnMapivARB");
    agx_custom_glad_glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC) load(userptr, "glGetnMinmaxARB");
    agx_custom_glad_glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC) load(userptr, "glGetnPixelMapfvARB");
    agx_custom_glad_glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC) load(userptr, "glGetnPixelMapuivARB");
    agx_custom_glad_glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC) load(userptr, "glGetnPixelMapusvARB");
    agx_custom_glad_glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC) load(userptr, "glGetnPolygonStippleARB");
    agx_custom_glad_glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC) load(userptr, "glGetnSeparableFilterARB");
    agx_custom_glad_glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC) load(userptr, "glGetnTexImageARB");
    agx_custom_glad_glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC) load(userptr, "glGetnUniformdvARB");
    agx_custom_glad_glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC) load(userptr, "glGetnUniformfvARB");
    agx_custom_glad_glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC) load(userptr, "glGetnUniformivARB");
    agx_custom_glad_glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC) load(userptr, "glGetnUniformuivARB");
    agx_custom_glad_glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC) load(userptr, "glReadnPixelsARB");
}
static void agx_custom_glad_gl_load_GL_ARB_sample_locations( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sample_locations) return;
    agx_custom_glad_glEvaluateDepthValuesARB = (PFNGLEVALUATEDEPTHVALUESARBPROC) load(userptr, "glEvaluateDepthValuesARB");
    agx_custom_glad_glFramebufferSampleLocationsfvARB = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) load(userptr, "glFramebufferSampleLocationsfvARB");
    agx_custom_glad_glNamedFramebufferSampleLocationsfvARB = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) load(userptr, "glNamedFramebufferSampleLocationsfvARB");
}
static void agx_custom_glad_gl_load_GL_ARB_sample_shading( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sample_shading) return;
    agx_custom_glad_glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC) load(userptr, "glMinSampleShadingARB");
}
static void agx_custom_glad_gl_load_GL_ARB_sampler_objects( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sampler_objects) return;
    agx_custom_glad_glBindSampler = (PFNGLBINDSAMPLERPROC) load(userptr, "glBindSampler");
    agx_custom_glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC) load(userptr, "glDeleteSamplers");
    agx_custom_glad_glGenSamplers = (PFNGLGENSAMPLERSPROC) load(userptr, "glGenSamplers");
    agx_custom_glad_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC) load(userptr, "glGetSamplerParameterIiv");
    agx_custom_glad_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC) load(userptr, "glGetSamplerParameterIuiv");
    agx_custom_glad_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC) load(userptr, "glGetSamplerParameterfv");
    agx_custom_glad_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC) load(userptr, "glGetSamplerParameteriv");
    agx_custom_glad_glIsSampler = (PFNGLISSAMPLERPROC) load(userptr, "glIsSampler");
    agx_custom_glad_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC) load(userptr, "glSamplerParameterIiv");
    agx_custom_glad_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC) load(userptr, "glSamplerParameterIuiv");
    agx_custom_glad_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) load(userptr, "glSamplerParameterf");
    agx_custom_glad_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) load(userptr, "glSamplerParameterfv");
    agx_custom_glad_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) load(userptr, "glSamplerParameteri");
    agx_custom_glad_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC) load(userptr, "glSamplerParameteriv");
}
static void agx_custom_glad_gl_load_GL_ARB_separate_shader_objects( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_separate_shader_objects) return;
    agx_custom_glad_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC) load(userptr, "glActiveShaderProgram");
    agx_custom_glad_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC) load(userptr, "glBindProgramPipeline");
    agx_custom_glad_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC) load(userptr, "glCreateShaderProgramv");
    agx_custom_glad_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC) load(userptr, "glDeleteProgramPipelines");
    agx_custom_glad_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC) load(userptr, "glGenProgramPipelines");
    agx_custom_glad_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) load(userptr, "glGetProgramPipelineInfoLog");
    agx_custom_glad_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC) load(userptr, "glGetProgramPipelineiv");
    agx_custom_glad_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC) load(userptr, "glIsProgramPipeline");
    agx_custom_glad_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) load(userptr, "glProgramParameteri");
    agx_custom_glad_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC) load(userptr, "glProgramUniform1d");
    agx_custom_glad_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC) load(userptr, "glProgramUniform1dv");
    agx_custom_glad_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC) load(userptr, "glProgramUniform1f");
    agx_custom_glad_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC) load(userptr, "glProgramUniform1fv");
    agx_custom_glad_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC) load(userptr, "glProgramUniform1i");
    agx_custom_glad_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC) load(userptr, "glProgramUniform1iv");
    agx_custom_glad_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC) load(userptr, "glProgramUniform1ui");
    agx_custom_glad_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC) load(userptr, "glProgramUniform1uiv");
    agx_custom_glad_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC) load(userptr, "glProgramUniform2d");
    agx_custom_glad_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC) load(userptr, "glProgramUniform2dv");
    agx_custom_glad_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC) load(userptr, "glProgramUniform2f");
    agx_custom_glad_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC) load(userptr, "glProgramUniform2fv");
    agx_custom_glad_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC) load(userptr, "glProgramUniform2i");
    agx_custom_glad_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC) load(userptr, "glProgramUniform2iv");
    agx_custom_glad_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC) load(userptr, "glProgramUniform2ui");
    agx_custom_glad_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC) load(userptr, "glProgramUniform2uiv");
    agx_custom_glad_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC) load(userptr, "glProgramUniform3d");
    agx_custom_glad_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC) load(userptr, "glProgramUniform3dv");
    agx_custom_glad_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC) load(userptr, "glProgramUniform3f");
    agx_custom_glad_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC) load(userptr, "glProgramUniform3fv");
    agx_custom_glad_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC) load(userptr, "glProgramUniform3i");
    agx_custom_glad_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC) load(userptr, "glProgramUniform3iv");
    agx_custom_glad_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC) load(userptr, "glProgramUniform3ui");
    agx_custom_glad_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC) load(userptr, "glProgramUniform3uiv");
    agx_custom_glad_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC) load(userptr, "glProgramUniform4d");
    agx_custom_glad_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC) load(userptr, "glProgramUniform4dv");
    agx_custom_glad_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC) load(userptr, "glProgramUniform4f");
    agx_custom_glad_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC) load(userptr, "glProgramUniform4fv");
    agx_custom_glad_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC) load(userptr, "glProgramUniform4i");
    agx_custom_glad_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC) load(userptr, "glProgramUniform4iv");
    agx_custom_glad_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC) load(userptr, "glProgramUniform4ui");
    agx_custom_glad_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC) load(userptr, "glProgramUniform4uiv");
    agx_custom_glad_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) load(userptr, "glProgramUniformMatrix2dv");
    agx_custom_glad_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) load(userptr, "glProgramUniformMatrix2fv");
    agx_custom_glad_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) load(userptr, "glProgramUniformMatrix2x3dv");
    agx_custom_glad_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) load(userptr, "glProgramUniformMatrix2x3fv");
    agx_custom_glad_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) load(userptr, "glProgramUniformMatrix2x4dv");
    agx_custom_glad_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) load(userptr, "glProgramUniformMatrix2x4fv");
    agx_custom_glad_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) load(userptr, "glProgramUniformMatrix3dv");
    agx_custom_glad_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) load(userptr, "glProgramUniformMatrix3fv");
    agx_custom_glad_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) load(userptr, "glProgramUniformMatrix3x2dv");
    agx_custom_glad_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) load(userptr, "glProgramUniformMatrix3x2fv");
    agx_custom_glad_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) load(userptr, "glProgramUniformMatrix3x4dv");
    agx_custom_glad_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) load(userptr, "glProgramUniformMatrix3x4fv");
    agx_custom_glad_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) load(userptr, "glProgramUniformMatrix4dv");
    agx_custom_glad_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) load(userptr, "glProgramUniformMatrix4fv");
    agx_custom_glad_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) load(userptr, "glProgramUniformMatrix4x2dv");
    agx_custom_glad_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) load(userptr, "glProgramUniformMatrix4x2fv");
    agx_custom_glad_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) load(userptr, "glProgramUniformMatrix4x3dv");
    agx_custom_glad_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) load(userptr, "glProgramUniformMatrix4x3fv");
    agx_custom_glad_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC) load(userptr, "glUseProgramStages");
    agx_custom_glad_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC) load(userptr, "glValidateProgramPipeline");
}
static void agx_custom_glad_gl_load_GL_ARB_shader_atomic_counters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counters) return;
    agx_custom_glad_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) load(userptr, "glGetActiveAtomicCounterBufferiv");
}
static void agx_custom_glad_gl_load_GL_ARB_shader_image_load_store( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shader_image_load_store) return;
    agx_custom_glad_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC) load(userptr, "glBindImageTexture");
    agx_custom_glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC) load(userptr, "glMemoryBarrier");
}
static void agx_custom_glad_gl_load_GL_ARB_shader_objects( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shader_objects) return;
    agx_custom_glad_glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC) load(userptr, "glAttachObjectARB");
    agx_custom_glad_glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC) load(userptr, "glCompileShaderARB");
    agx_custom_glad_glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC) load(userptr, "glCreateProgramObjectARB");
    agx_custom_glad_glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC) load(userptr, "glCreateShaderObjectARB");
    agx_custom_glad_glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC) load(userptr, "glDeleteObjectARB");
    agx_custom_glad_glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC) load(userptr, "glDetachObjectARB");
    agx_custom_glad_glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC) load(userptr, "glGetActiveUniformARB");
    agx_custom_glad_glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC) load(userptr, "glGetAttachedObjectsARB");
    agx_custom_glad_glGetHandleARB = (PFNGLGETHANDLEARBPROC) load(userptr, "glGetHandleARB");
    agx_custom_glad_glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC) load(userptr, "glGetInfoLogARB");
    agx_custom_glad_glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC) load(userptr, "glGetObjectParameterfvARB");
    agx_custom_glad_glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC) load(userptr, "glGetObjectParameterivARB");
    agx_custom_glad_glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC) load(userptr, "glGetShaderSourceARB");
    agx_custom_glad_glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC) load(userptr, "glGetUniformLocationARB");
    agx_custom_glad_glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC) load(userptr, "glGetUniformfvARB");
    agx_custom_glad_glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC) load(userptr, "glGetUniformivARB");
    agx_custom_glad_glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC) load(userptr, "glLinkProgramARB");
    agx_custom_glad_glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC) load(userptr, "glShaderSourceARB");
    agx_custom_glad_glUniform1fARB = (PFNGLUNIFORM1FARBPROC) load(userptr, "glUniform1fARB");
    agx_custom_glad_glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC) load(userptr, "glUniform1fvARB");
    agx_custom_glad_glUniform1iARB = (PFNGLUNIFORM1IARBPROC) load(userptr, "glUniform1iARB");
    agx_custom_glad_glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC) load(userptr, "glUniform1ivARB");
    agx_custom_glad_glUniform2fARB = (PFNGLUNIFORM2FARBPROC) load(userptr, "glUniform2fARB");
    agx_custom_glad_glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC) load(userptr, "glUniform2fvARB");
    agx_custom_glad_glUniform2iARB = (PFNGLUNIFORM2IARBPROC) load(userptr, "glUniform2iARB");
    agx_custom_glad_glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC) load(userptr, "glUniform2ivARB");
    agx_custom_glad_glUniform3fARB = (PFNGLUNIFORM3FARBPROC) load(userptr, "glUniform3fARB");
    agx_custom_glad_glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC) load(userptr, "glUniform3fvARB");
    agx_custom_glad_glUniform3iARB = (PFNGLUNIFORM3IARBPROC) load(userptr, "glUniform3iARB");
    agx_custom_glad_glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC) load(userptr, "glUniform3ivARB");
    agx_custom_glad_glUniform4fARB = (PFNGLUNIFORM4FARBPROC) load(userptr, "glUniform4fARB");
    agx_custom_glad_glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC) load(userptr, "glUniform4fvARB");
    agx_custom_glad_glUniform4iARB = (PFNGLUNIFORM4IARBPROC) load(userptr, "glUniform4iARB");
    agx_custom_glad_glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC) load(userptr, "glUniform4ivARB");
    agx_custom_glad_glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC) load(userptr, "glUniformMatrix2fvARB");
    agx_custom_glad_glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC) load(userptr, "glUniformMatrix3fvARB");
    agx_custom_glad_glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC) load(userptr, "glUniformMatrix4fvARB");
    agx_custom_glad_glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC) load(userptr, "glUseProgramObjectARB");
    agx_custom_glad_glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC) load(userptr, "glValidateProgramARB");
}
static void agx_custom_glad_gl_load_GL_ARB_shader_storage_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shader_storage_buffer_object) return;
    agx_custom_glad_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) load(userptr, "glShaderStorageBlockBinding");
}
static void agx_custom_glad_gl_load_GL_ARB_shader_subroutine( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shader_subroutine) return;
    agx_custom_glad_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC) load(userptr, "glGetActiveSubroutineName");
    agx_custom_glad_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) load(userptr, "glGetActiveSubroutineUniformName");
    agx_custom_glad_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) load(userptr, "glGetActiveSubroutineUniformiv");
    agx_custom_glad_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC) load(userptr, "glGetProgramStageiv");
    agx_custom_glad_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC) load(userptr, "glGetSubroutineIndex");
    agx_custom_glad_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) load(userptr, "glGetSubroutineUniformLocation");
    agx_custom_glad_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC) load(userptr, "glGetUniformSubroutineuiv");
    agx_custom_glad_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC) load(userptr, "glUniformSubroutinesuiv");
}
static void agx_custom_glad_gl_load_GL_ARB_shading_language_include( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_shading_language_include) return;
    agx_custom_glad_glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC) load(userptr, "glCompileShaderIncludeARB");
    agx_custom_glad_glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC) load(userptr, "glDeleteNamedStringARB");
    agx_custom_glad_glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC) load(userptr, "glGetNamedStringARB");
    agx_custom_glad_glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC) load(userptr, "glGetNamedStringivARB");
    agx_custom_glad_glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC) load(userptr, "glIsNamedStringARB");
    agx_custom_glad_glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC) load(userptr, "glNamedStringARB");
}
static void agx_custom_glad_gl_load_GL_ARB_sparse_buffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sparse_buffer) return;
    agx_custom_glad_glBufferPageCommitmentARB = (PFNGLBUFFERPAGECOMMITMENTARBPROC) load(userptr, "glBufferPageCommitmentARB");
    agx_custom_glad_glNamedBufferPageCommitmentARB = (PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) load(userptr, "glNamedBufferPageCommitmentARB");
    agx_custom_glad_glNamedBufferPageCommitmentEXT = (PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) load(userptr, "glNamedBufferPageCommitmentEXT");
}
static void agx_custom_glad_gl_load_GL_ARB_sparse_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sparse_texture) return;
    agx_custom_glad_glTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC) load(userptr, "glTexPageCommitmentARB");
}
static void agx_custom_glad_gl_load_GL_ARB_sync( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_sync) return;
    agx_custom_glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC) load(userptr, "glClientWaitSync");
    agx_custom_glad_glDeleteSync = (PFNGLDELETESYNCPROC) load(userptr, "glDeleteSync");
    agx_custom_glad_glFenceSync = (PFNGLFENCESYNCPROC) load(userptr, "glFenceSync");
    agx_custom_glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC) load(userptr, "glGetInteger64v");
    agx_custom_glad_glGetSynciv = (PFNGLGETSYNCIVPROC) load(userptr, "glGetSynciv");
    agx_custom_glad_glIsSync = (PFNGLISSYNCPROC) load(userptr, "glIsSync");
    agx_custom_glad_glWaitSync = (PFNGLWAITSYNCPROC) load(userptr, "glWaitSync");
}
static void agx_custom_glad_gl_load_GL_ARB_tessellation_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_tessellation_shader) return;
    agx_custom_glad_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC) load(userptr, "glPatchParameterfv");
    agx_custom_glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC) load(userptr, "glPatchParameteri");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_barrier( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_barrier) return;
    agx_custom_glad_glTextureBarrier = (PFNGLTEXTUREBARRIERPROC) load(userptr, "glTextureBarrier");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object) return;
    agx_custom_glad_glTexBufferARB = (PFNGLTEXBUFFERARBPROC) load(userptr, "glTexBufferARB");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_buffer_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_range) return;
    agx_custom_glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC) load(userptr, "glTexBufferRange");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_compression( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_compression) return;
    agx_custom_glad_glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) load(userptr, "glCompressedTexImage1DARB");
    agx_custom_glad_glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) load(userptr, "glCompressedTexImage2DARB");
    agx_custom_glad_glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) load(userptr, "glCompressedTexImage3DARB");
    agx_custom_glad_glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) load(userptr, "glCompressedTexSubImage1DARB");
    agx_custom_glad_glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) load(userptr, "glCompressedTexSubImage2DARB");
    agx_custom_glad_glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) load(userptr, "glCompressedTexSubImage3DARB");
    agx_custom_glad_glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) load(userptr, "glGetCompressedTexImageARB");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_multisample) return;
    agx_custom_glad_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC) load(userptr, "glGetMultisamplefv");
    agx_custom_glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC) load(userptr, "glSampleMaski");
    agx_custom_glad_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) load(userptr, "glTexImage2DMultisample");
    agx_custom_glad_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) load(userptr, "glTexImage3DMultisample");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_storage( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_storage) return;
    agx_custom_glad_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC) load(userptr, "glTexStorage1D");
    agx_custom_glad_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC) load(userptr, "glTexStorage2D");
    agx_custom_glad_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC) load(userptr, "glTexStorage3D");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_storage_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_storage_multisample) return;
    agx_custom_glad_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) load(userptr, "glTexStorage2DMultisample");
    agx_custom_glad_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) load(userptr, "glTexStorage3DMultisample");
}
static void agx_custom_glad_gl_load_GL_ARB_texture_view( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_texture_view) return;
    agx_custom_glad_glTextureView = (PFNGLTEXTUREVIEWPROC) load(userptr, "glTextureView");
}
static void agx_custom_glad_gl_load_GL_ARB_timer_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_timer_query) return;
    agx_custom_glad_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC) load(userptr, "glGetQueryObjecti64v");
    agx_custom_glad_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC) load(userptr, "glGetQueryObjectui64v");
    agx_custom_glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC) load(userptr, "glQueryCounter");
}
static void agx_custom_glad_gl_load_GL_ARB_transform_feedback2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_transform_feedback2) return;
    agx_custom_glad_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC) load(userptr, "glBindTransformFeedback");
    agx_custom_glad_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC) load(userptr, "glDeleteTransformFeedbacks");
    agx_custom_glad_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC) load(userptr, "glDrawTransformFeedback");
    agx_custom_glad_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC) load(userptr, "glGenTransformFeedbacks");
    agx_custom_glad_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC) load(userptr, "glIsTransformFeedback");
    agx_custom_glad_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC) load(userptr, "glPauseTransformFeedback");
    agx_custom_glad_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC) load(userptr, "glResumeTransformFeedback");
}
static void agx_custom_glad_gl_load_GL_ARB_transform_feedback3( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_transform_feedback3) return;
    agx_custom_glad_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC) load(userptr, "glBeginQueryIndexed");
    agx_custom_glad_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) load(userptr, "glDrawTransformFeedbackStream");
    agx_custom_glad_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC) load(userptr, "glEndQueryIndexed");
    agx_custom_glad_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC) load(userptr, "glGetQueryIndexediv");
}
static void agx_custom_glad_gl_load_GL_ARB_transform_feedback_instanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_instanced) return;
    agx_custom_glad_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) load(userptr, "glDrawTransformFeedbackInstanced");
    agx_custom_glad_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) load(userptr, "glDrawTransformFeedbackStreamInstanced");
}
static void agx_custom_glad_gl_load_GL_ARB_transpose_matrix( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_transpose_matrix) return;
    agx_custom_glad_glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC) load(userptr, "glLoadTransposeMatrixdARB");
    agx_custom_glad_glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC) load(userptr, "glLoadTransposeMatrixfARB");
    agx_custom_glad_glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC) load(userptr, "glMultTransposeMatrixdARB");
    agx_custom_glad_glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC) load(userptr, "glMultTransposeMatrixfARB");
}
static void agx_custom_glad_gl_load_GL_ARB_uniform_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_uniform_buffer_object) return;
    agx_custom_glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC) load(userptr, "glBindBufferBase");
    agx_custom_glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) load(userptr, "glBindBufferRange");
    agx_custom_glad_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) load(userptr, "glGetActiveUniformBlockName");
    agx_custom_glad_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) load(userptr, "glGetActiveUniformBlockiv");
    agx_custom_glad_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC) load(userptr, "glGetActiveUniformName");
    agx_custom_glad_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC) load(userptr, "glGetActiveUniformsiv");
    agx_custom_glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) load(userptr, "glGetIntegeri_v");
    agx_custom_glad_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC) load(userptr, "glGetUniformBlockIndex");
    agx_custom_glad_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC) load(userptr, "glGetUniformIndices");
    agx_custom_glad_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC) load(userptr, "glUniformBlockBinding");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_array_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_array_object) return;
    agx_custom_glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC) load(userptr, "glBindVertexArray");
    agx_custom_glad_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC) load(userptr, "glDeleteVertexArrays");
    agx_custom_glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC) load(userptr, "glGenVertexArrays");
    agx_custom_glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC) load(userptr, "glIsVertexArray");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_attrib_64bit( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_64bit) return;
    agx_custom_glad_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC) load(userptr, "glGetVertexAttribLdv");
    agx_custom_glad_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC) load(userptr, "glVertexAttribL1d");
    agx_custom_glad_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC) load(userptr, "glVertexAttribL1dv");
    agx_custom_glad_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC) load(userptr, "glVertexAttribL2d");
    agx_custom_glad_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC) load(userptr, "glVertexAttribL2dv");
    agx_custom_glad_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC) load(userptr, "glVertexAttribL3d");
    agx_custom_glad_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC) load(userptr, "glVertexAttribL3dv");
    agx_custom_glad_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC) load(userptr, "glVertexAttribL4d");
    agx_custom_glad_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC) load(userptr, "glVertexAttribL4dv");
    agx_custom_glad_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC) load(userptr, "glVertexAttribLPointer");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_attrib_binding( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_binding) return;
    agx_custom_glad_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC) load(userptr, "glBindVertexBuffer");
    agx_custom_glad_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC) load(userptr, "glVertexAttribBinding");
    agx_custom_glad_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC) load(userptr, "glVertexAttribFormat");
    agx_custom_glad_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC) load(userptr, "glVertexAttribIFormat");
    agx_custom_glad_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC) load(userptr, "glVertexAttribLFormat");
    agx_custom_glad_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC) load(userptr, "glVertexBindingDivisor");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_blend( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_blend) return;
    agx_custom_glad_glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC) load(userptr, "glVertexBlendARB");
    agx_custom_glad_glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC) load(userptr, "glWeightPointerARB");
    agx_custom_glad_glWeightbvARB = (PFNGLWEIGHTBVARBPROC) load(userptr, "glWeightbvARB");
    agx_custom_glad_glWeightdvARB = (PFNGLWEIGHTDVARBPROC) load(userptr, "glWeightdvARB");
    agx_custom_glad_glWeightfvARB = (PFNGLWEIGHTFVARBPROC) load(userptr, "glWeightfvARB");
    agx_custom_glad_glWeightivARB = (PFNGLWEIGHTIVARBPROC) load(userptr, "glWeightivARB");
    agx_custom_glad_glWeightsvARB = (PFNGLWEIGHTSVARBPROC) load(userptr, "glWeightsvARB");
    agx_custom_glad_glWeightubvARB = (PFNGLWEIGHTUBVARBPROC) load(userptr, "glWeightubvARB");
    agx_custom_glad_glWeightuivARB = (PFNGLWEIGHTUIVARBPROC) load(userptr, "glWeightuivARB");
    agx_custom_glad_glWeightusvARB = (PFNGLWEIGHTUSVARBPROC) load(userptr, "glWeightusvARB");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_buffer_object) return;
    agx_custom_glad_glBindBufferARB = (PFNGLBINDBUFFERARBPROC) load(userptr, "glBindBufferARB");
    agx_custom_glad_glBufferDataARB = (PFNGLBUFFERDATAARBPROC) load(userptr, "glBufferDataARB");
    agx_custom_glad_glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC) load(userptr, "glBufferSubDataARB");
    agx_custom_glad_glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC) load(userptr, "glDeleteBuffersARB");
    agx_custom_glad_glGenBuffersARB = (PFNGLGENBUFFERSARBPROC) load(userptr, "glGenBuffersARB");
    agx_custom_glad_glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC) load(userptr, "glGetBufferParameterivARB");
    agx_custom_glad_glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC) load(userptr, "glGetBufferPointervARB");
    agx_custom_glad_glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC) load(userptr, "glGetBufferSubDataARB");
    agx_custom_glad_glIsBufferARB = (PFNGLISBUFFERARBPROC) load(userptr, "glIsBufferARB");
    agx_custom_glad_glMapBufferARB = (PFNGLMAPBUFFERARBPROC) load(userptr, "glMapBufferARB");
    agx_custom_glad_glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC) load(userptr, "glUnmapBufferARB");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_program( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_program) return;
    agx_custom_glad_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC) load(userptr, "glBindProgramARB");
    agx_custom_glad_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC) load(userptr, "glDeleteProgramsARB");
    agx_custom_glad_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) load(userptr, "glDisableVertexAttribArrayARB");
    agx_custom_glad_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC) load(userptr, "glEnableVertexAttribArrayARB");
    agx_custom_glad_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC) load(userptr, "glGenProgramsARB");
    agx_custom_glad_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC) load(userptr, "glGetProgramEnvParameterdvARB");
    agx_custom_glad_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC) load(userptr, "glGetProgramEnvParameterfvARB");
    agx_custom_glad_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) load(userptr, "glGetProgramLocalParameterdvARB");
    agx_custom_glad_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) load(userptr, "glGetProgramLocalParameterfvARB");
    agx_custom_glad_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC) load(userptr, "glGetProgramStringARB");
    agx_custom_glad_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC) load(userptr, "glGetProgramivARB");
    agx_custom_glad_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC) load(userptr, "glGetVertexAttribPointervARB");
    agx_custom_glad_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC) load(userptr, "glGetVertexAttribdvARB");
    agx_custom_glad_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC) load(userptr, "glGetVertexAttribfvARB");
    agx_custom_glad_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC) load(userptr, "glGetVertexAttribivARB");
    agx_custom_glad_glIsProgramARB = (PFNGLISPROGRAMARBPROC) load(userptr, "glIsProgramARB");
    agx_custom_glad_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC) load(userptr, "glProgramEnvParameter4dARB");
    agx_custom_glad_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC) load(userptr, "glProgramEnvParameter4dvARB");
    agx_custom_glad_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC) load(userptr, "glProgramEnvParameter4fARB");
    agx_custom_glad_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC) load(userptr, "glProgramEnvParameter4fvARB");
    agx_custom_glad_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC) load(userptr, "glProgramLocalParameter4dARB");
    agx_custom_glad_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) load(userptr, "glProgramLocalParameter4dvARB");
    agx_custom_glad_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC) load(userptr, "glProgramLocalParameter4fARB");
    agx_custom_glad_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) load(userptr, "glProgramLocalParameter4fvARB");
    agx_custom_glad_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC) load(userptr, "glProgramStringARB");
    agx_custom_glad_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC) load(userptr, "glVertexAttrib1dARB");
    agx_custom_glad_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC) load(userptr, "glVertexAttrib1dvARB");
    agx_custom_glad_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC) load(userptr, "glVertexAttrib1fARB");
    agx_custom_glad_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC) load(userptr, "glVertexAttrib1fvARB");
    agx_custom_glad_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC) load(userptr, "glVertexAttrib1sARB");
    agx_custom_glad_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC) load(userptr, "glVertexAttrib1svARB");
    agx_custom_glad_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC) load(userptr, "glVertexAttrib2dARB");
    agx_custom_glad_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC) load(userptr, "glVertexAttrib2dvARB");
    agx_custom_glad_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC) load(userptr, "glVertexAttrib2fARB");
    agx_custom_glad_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC) load(userptr, "glVertexAttrib2fvARB");
    agx_custom_glad_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC) load(userptr, "glVertexAttrib2sARB");
    agx_custom_glad_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC) load(userptr, "glVertexAttrib2svARB");
    agx_custom_glad_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC) load(userptr, "glVertexAttrib3dARB");
    agx_custom_glad_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC) load(userptr, "glVertexAttrib3dvARB");
    agx_custom_glad_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC) load(userptr, "glVertexAttrib3fARB");
    agx_custom_glad_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC) load(userptr, "glVertexAttrib3fvARB");
    agx_custom_glad_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC) load(userptr, "glVertexAttrib3sARB");
    agx_custom_glad_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC) load(userptr, "glVertexAttrib3svARB");
    agx_custom_glad_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC) load(userptr, "glVertexAttrib4NbvARB");
    agx_custom_glad_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC) load(userptr, "glVertexAttrib4NivARB");
    agx_custom_glad_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC) load(userptr, "glVertexAttrib4NsvARB");
    agx_custom_glad_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC) load(userptr, "glVertexAttrib4NubARB");
    agx_custom_glad_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC) load(userptr, "glVertexAttrib4NubvARB");
    agx_custom_glad_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC) load(userptr, "glVertexAttrib4NuivARB");
    agx_custom_glad_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC) load(userptr, "glVertexAttrib4NusvARB");
    agx_custom_glad_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC) load(userptr, "glVertexAttrib4bvARB");
    agx_custom_glad_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC) load(userptr, "glVertexAttrib4dARB");
    agx_custom_glad_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC) load(userptr, "glVertexAttrib4dvARB");
    agx_custom_glad_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC) load(userptr, "glVertexAttrib4fARB");
    agx_custom_glad_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC) load(userptr, "glVertexAttrib4fvARB");
    agx_custom_glad_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC) load(userptr, "glVertexAttrib4ivARB");
    agx_custom_glad_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC) load(userptr, "glVertexAttrib4sARB");
    agx_custom_glad_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC) load(userptr, "glVertexAttrib4svARB");
    agx_custom_glad_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC) load(userptr, "glVertexAttrib4ubvARB");
    agx_custom_glad_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC) load(userptr, "glVertexAttrib4uivARB");
    agx_custom_glad_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC) load(userptr, "glVertexAttrib4usvARB");
    agx_custom_glad_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC) load(userptr, "glVertexAttribPointerARB");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_shader) return;
    agx_custom_glad_glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC) load(userptr, "glBindAttribLocationARB");
    agx_custom_glad_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) load(userptr, "glDisableVertexAttribArrayARB");
    agx_custom_glad_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC) load(userptr, "glEnableVertexAttribArrayARB");
    agx_custom_glad_glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC) load(userptr, "glGetActiveAttribARB");
    agx_custom_glad_glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC) load(userptr, "glGetAttribLocationARB");
    agx_custom_glad_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC) load(userptr, "glGetVertexAttribPointervARB");
    agx_custom_glad_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC) load(userptr, "glGetVertexAttribdvARB");
    agx_custom_glad_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC) load(userptr, "glGetVertexAttribfvARB");
    agx_custom_glad_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC) load(userptr, "glGetVertexAttribivARB");
    agx_custom_glad_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC) load(userptr, "glVertexAttrib1dARB");
    agx_custom_glad_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC) load(userptr, "glVertexAttrib1dvARB");
    agx_custom_glad_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC) load(userptr, "glVertexAttrib1fARB");
    agx_custom_glad_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC) load(userptr, "glVertexAttrib1fvARB");
    agx_custom_glad_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC) load(userptr, "glVertexAttrib1sARB");
    agx_custom_glad_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC) load(userptr, "glVertexAttrib1svARB");
    agx_custom_glad_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC) load(userptr, "glVertexAttrib2dARB");
    agx_custom_glad_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC) load(userptr, "glVertexAttrib2dvARB");
    agx_custom_glad_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC) load(userptr, "glVertexAttrib2fARB");
    agx_custom_glad_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC) load(userptr, "glVertexAttrib2fvARB");
    agx_custom_glad_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC) load(userptr, "glVertexAttrib2sARB");
    agx_custom_glad_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC) load(userptr, "glVertexAttrib2svARB");
    agx_custom_glad_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC) load(userptr, "glVertexAttrib3dARB");
    agx_custom_glad_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC) load(userptr, "glVertexAttrib3dvARB");
    agx_custom_glad_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC) load(userptr, "glVertexAttrib3fARB");
    agx_custom_glad_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC) load(userptr, "glVertexAttrib3fvARB");
    agx_custom_glad_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC) load(userptr, "glVertexAttrib3sARB");
    agx_custom_glad_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC) load(userptr, "glVertexAttrib3svARB");
    agx_custom_glad_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC) load(userptr, "glVertexAttrib4NbvARB");
    agx_custom_glad_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC) load(userptr, "glVertexAttrib4NivARB");
    agx_custom_glad_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC) load(userptr, "glVertexAttrib4NsvARB");
    agx_custom_glad_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC) load(userptr, "glVertexAttrib4NubARB");
    agx_custom_glad_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC) load(userptr, "glVertexAttrib4NubvARB");
    agx_custom_glad_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC) load(userptr, "glVertexAttrib4NuivARB");
    agx_custom_glad_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC) load(userptr, "glVertexAttrib4NusvARB");
    agx_custom_glad_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC) load(userptr, "glVertexAttrib4bvARB");
    agx_custom_glad_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC) load(userptr, "glVertexAttrib4dARB");
    agx_custom_glad_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC) load(userptr, "glVertexAttrib4dvARB");
    agx_custom_glad_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC) load(userptr, "glVertexAttrib4fARB");
    agx_custom_glad_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC) load(userptr, "glVertexAttrib4fvARB");
    agx_custom_glad_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC) load(userptr, "glVertexAttrib4ivARB");
    agx_custom_glad_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC) load(userptr, "glVertexAttrib4sARB");
    agx_custom_glad_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC) load(userptr, "glVertexAttrib4svARB");
    agx_custom_glad_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC) load(userptr, "glVertexAttrib4ubvARB");
    agx_custom_glad_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC) load(userptr, "glVertexAttrib4uivARB");
    agx_custom_glad_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC) load(userptr, "glVertexAttrib4usvARB");
    agx_custom_glad_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC) load(userptr, "glVertexAttribPointerARB");
}
static void agx_custom_glad_gl_load_GL_ARB_vertex_type_2_10_10_10_rev( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_vertex_type_2_10_10_10_rev) return;
    agx_custom_glad_glColorP3ui = (PFNGLCOLORP3UIPROC) load(userptr, "glColorP3ui");
    agx_custom_glad_glColorP3uiv = (PFNGLCOLORP3UIVPROC) load(userptr, "glColorP3uiv");
    agx_custom_glad_glColorP4ui = (PFNGLCOLORP4UIPROC) load(userptr, "glColorP4ui");
    agx_custom_glad_glColorP4uiv = (PFNGLCOLORP4UIVPROC) load(userptr, "glColorP4uiv");
    agx_custom_glad_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC) load(userptr, "glMultiTexCoordP1ui");
    agx_custom_glad_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC) load(userptr, "glMultiTexCoordP1uiv");
    agx_custom_glad_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC) load(userptr, "glMultiTexCoordP2ui");
    agx_custom_glad_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC) load(userptr, "glMultiTexCoordP2uiv");
    agx_custom_glad_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC) load(userptr, "glMultiTexCoordP3ui");
    agx_custom_glad_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC) load(userptr, "glMultiTexCoordP3uiv");
    agx_custom_glad_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC) load(userptr, "glMultiTexCoordP4ui");
    agx_custom_glad_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC) load(userptr, "glMultiTexCoordP4uiv");
    agx_custom_glad_glNormalP3ui = (PFNGLNORMALP3UIPROC) load(userptr, "glNormalP3ui");
    agx_custom_glad_glNormalP3uiv = (PFNGLNORMALP3UIVPROC) load(userptr, "glNormalP3uiv");
    agx_custom_glad_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC) load(userptr, "glSecondaryColorP3ui");
    agx_custom_glad_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC) load(userptr, "glSecondaryColorP3uiv");
    agx_custom_glad_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC) load(userptr, "glTexCoordP1ui");
    agx_custom_glad_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC) load(userptr, "glTexCoordP1uiv");
    agx_custom_glad_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC) load(userptr, "glTexCoordP2ui");
    agx_custom_glad_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC) load(userptr, "glTexCoordP2uiv");
    agx_custom_glad_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC) load(userptr, "glTexCoordP3ui");
    agx_custom_glad_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC) load(userptr, "glTexCoordP3uiv");
    agx_custom_glad_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC) load(userptr, "glTexCoordP4ui");
    agx_custom_glad_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC) load(userptr, "glTexCoordP4uiv");
    agx_custom_glad_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC) load(userptr, "glVertexAttribP1ui");
    agx_custom_glad_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC) load(userptr, "glVertexAttribP1uiv");
    agx_custom_glad_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC) load(userptr, "glVertexAttribP2ui");
    agx_custom_glad_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC) load(userptr, "glVertexAttribP2uiv");
    agx_custom_glad_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC) load(userptr, "glVertexAttribP3ui");
    agx_custom_glad_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC) load(userptr, "glVertexAttribP3uiv");
    agx_custom_glad_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC) load(userptr, "glVertexAttribP4ui");
    agx_custom_glad_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC) load(userptr, "glVertexAttribP4uiv");
    agx_custom_glad_glVertexP2ui = (PFNGLVERTEXP2UIPROC) load(userptr, "glVertexP2ui");
    agx_custom_glad_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC) load(userptr, "glVertexP2uiv");
    agx_custom_glad_glVertexP3ui = (PFNGLVERTEXP3UIPROC) load(userptr, "glVertexP3ui");
    agx_custom_glad_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC) load(userptr, "glVertexP3uiv");
    agx_custom_glad_glVertexP4ui = (PFNGLVERTEXP4UIPROC) load(userptr, "glVertexP4ui");
    agx_custom_glad_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC) load(userptr, "glVertexP4uiv");
}
static void agx_custom_glad_gl_load_GL_ARB_viewport_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_viewport_array) return;
    agx_custom_glad_glDepthRangeArraydvNV = (PFNGLDEPTHRANGEARRAYDVNVPROC) load(userptr, "glDepthRangeArraydvNV");
    agx_custom_glad_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC) load(userptr, "glDepthRangeArrayv");
    agx_custom_glad_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC) load(userptr, "glDepthRangeIndexed");
    agx_custom_glad_glDepthRangeIndexeddNV = (PFNGLDEPTHRANGEINDEXEDDNVPROC) load(userptr, "glDepthRangeIndexeddNV");
    agx_custom_glad_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC) load(userptr, "glGetDoublei_v");
    agx_custom_glad_glGetFloati_v = (PFNGLGETFLOATI_VPROC) load(userptr, "glGetFloati_v");
    agx_custom_glad_glScissorArrayv = (PFNGLSCISSORARRAYVPROC) load(userptr, "glScissorArrayv");
    agx_custom_glad_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC) load(userptr, "glScissorIndexed");
    agx_custom_glad_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC) load(userptr, "glScissorIndexedv");
    agx_custom_glad_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC) load(userptr, "glViewportArrayv");
    agx_custom_glad_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC) load(userptr, "glViewportIndexedf");
    agx_custom_glad_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC) load(userptr, "glViewportIndexedfv");
}
static void agx_custom_glad_gl_load_GL_ARB_window_pos( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ARB_window_pos) return;
    agx_custom_glad_glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC) load(userptr, "glWindowPos2dARB");
    agx_custom_glad_glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC) load(userptr, "glWindowPos2dvARB");
    agx_custom_glad_glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC) load(userptr, "glWindowPos2fARB");
    agx_custom_glad_glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC) load(userptr, "glWindowPos2fvARB");
    agx_custom_glad_glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC) load(userptr, "glWindowPos2iARB");
    agx_custom_glad_glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC) load(userptr, "glWindowPos2ivARB");
    agx_custom_glad_glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC) load(userptr, "glWindowPos2sARB");
    agx_custom_glad_glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC) load(userptr, "glWindowPos2svARB");
    agx_custom_glad_glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC) load(userptr, "glWindowPos3dARB");
    agx_custom_glad_glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC) load(userptr, "glWindowPos3dvARB");
    agx_custom_glad_glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC) load(userptr, "glWindowPos3fARB");
    agx_custom_glad_glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC) load(userptr, "glWindowPos3fvARB");
    agx_custom_glad_glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC) load(userptr, "glWindowPos3iARB");
    agx_custom_glad_glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC) load(userptr, "glWindowPos3ivARB");
    agx_custom_glad_glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC) load(userptr, "glWindowPos3sARB");
    agx_custom_glad_glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC) load(userptr, "glWindowPos3svARB");
}
static void agx_custom_glad_gl_load_GL_ATI_draw_buffers( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_draw_buffers) return;
    agx_custom_glad_glDrawBuffersATI = (PFNGLDRAWBUFFERSATIPROC) load(userptr, "glDrawBuffersATI");
}
static void agx_custom_glad_gl_load_GL_ATI_element_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_element_array) return;
    agx_custom_glad_glDrawElementArrayATI = (PFNGLDRAWELEMENTARRAYATIPROC) load(userptr, "glDrawElementArrayATI");
    agx_custom_glad_glDrawRangeElementArrayATI = (PFNGLDRAWRANGEELEMENTARRAYATIPROC) load(userptr, "glDrawRangeElementArrayATI");
    agx_custom_glad_glElementPointerATI = (PFNGLELEMENTPOINTERATIPROC) load(userptr, "glElementPointerATI");
}
static void agx_custom_glad_gl_load_GL_ATI_envmap_bumpmap( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_envmap_bumpmap) return;
    agx_custom_glad_glGetTexBumpParameterfvATI = (PFNGLGETTEXBUMPPARAMETERFVATIPROC) load(userptr, "glGetTexBumpParameterfvATI");
    agx_custom_glad_glGetTexBumpParameterivATI = (PFNGLGETTEXBUMPPARAMETERIVATIPROC) load(userptr, "glGetTexBumpParameterivATI");
    agx_custom_glad_glTexBumpParameterfvATI = (PFNGLTEXBUMPPARAMETERFVATIPROC) load(userptr, "glTexBumpParameterfvATI");
    agx_custom_glad_glTexBumpParameterivATI = (PFNGLTEXBUMPPARAMETERIVATIPROC) load(userptr, "glTexBumpParameterivATI");
}
static void agx_custom_glad_gl_load_GL_ATI_fragment_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_fragment_shader) return;
    agx_custom_glad_glAlphaFragmentOp1ATI = (PFNGLALPHAFRAGMENTOP1ATIPROC) load(userptr, "glAlphaFragmentOp1ATI");
    agx_custom_glad_glAlphaFragmentOp2ATI = (PFNGLALPHAFRAGMENTOP2ATIPROC) load(userptr, "glAlphaFragmentOp2ATI");
    agx_custom_glad_glAlphaFragmentOp3ATI = (PFNGLALPHAFRAGMENTOP3ATIPROC) load(userptr, "glAlphaFragmentOp3ATI");
    agx_custom_glad_glBeginFragmentShaderATI = (PFNGLBEGINFRAGMENTSHADERATIPROC) load(userptr, "glBeginFragmentShaderATI");
    agx_custom_glad_glBindFragmentShaderATI = (PFNGLBINDFRAGMENTSHADERATIPROC) load(userptr, "glBindFragmentShaderATI");
    agx_custom_glad_glColorFragmentOp1ATI = (PFNGLCOLORFRAGMENTOP1ATIPROC) load(userptr, "glColorFragmentOp1ATI");
    agx_custom_glad_glColorFragmentOp2ATI = (PFNGLCOLORFRAGMENTOP2ATIPROC) load(userptr, "glColorFragmentOp2ATI");
    agx_custom_glad_glColorFragmentOp3ATI = (PFNGLCOLORFRAGMENTOP3ATIPROC) load(userptr, "glColorFragmentOp3ATI");
    agx_custom_glad_glDeleteFragmentShaderATI = (PFNGLDELETEFRAGMENTSHADERATIPROC) load(userptr, "glDeleteFragmentShaderATI");
    agx_custom_glad_glEndFragmentShaderATI = (PFNGLENDFRAGMENTSHADERATIPROC) load(userptr, "glEndFragmentShaderATI");
    agx_custom_glad_glGenFragmentShadersATI = (PFNGLGENFRAGMENTSHADERSATIPROC) load(userptr, "glGenFragmentShadersATI");
    agx_custom_glad_glPassTexCoordATI = (PFNGLPASSTEXCOORDATIPROC) load(userptr, "glPassTexCoordATI");
    agx_custom_glad_glSampleMapATI = (PFNGLSAMPLEMAPATIPROC) load(userptr, "glSampleMapATI");
    agx_custom_glad_glSetFragmentShaderConstantATI = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) load(userptr, "glSetFragmentShaderConstantATI");
}
static void agx_custom_glad_gl_load_GL_ATI_map_object_buffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_map_object_buffer) return;
    agx_custom_glad_glMapObjectBufferATI = (PFNGLMAPOBJECTBUFFERATIPROC) load(userptr, "glMapObjectBufferATI");
    agx_custom_glad_glUnmapObjectBufferATI = (PFNGLUNMAPOBJECTBUFFERATIPROC) load(userptr, "glUnmapObjectBufferATI");
}
static void agx_custom_glad_gl_load_GL_ATI_pn_triangles( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_pn_triangles) return;
    agx_custom_glad_glPNTrianglesfATI = (PFNGLPNTRIANGLESFATIPROC) load(userptr, "glPNTrianglesfATI");
    agx_custom_glad_glPNTrianglesiATI = (PFNGLPNTRIANGLESIATIPROC) load(userptr, "glPNTrianglesiATI");
}
static void agx_custom_glad_gl_load_GL_ATI_separate_stencil( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_separate_stencil) return;
    agx_custom_glad_glStencilFuncSeparateATI = (PFNGLSTENCILFUNCSEPARATEATIPROC) load(userptr, "glStencilFuncSeparateATI");
    agx_custom_glad_glStencilOpSeparateATI = (PFNGLSTENCILOPSEPARATEATIPROC) load(userptr, "glStencilOpSeparateATI");
}
static void agx_custom_glad_gl_load_GL_ATI_vertex_array_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_vertex_array_object) return;
    agx_custom_glad_glArrayObjectATI = (PFNGLARRAYOBJECTATIPROC) load(userptr, "glArrayObjectATI");
    agx_custom_glad_glFreeObjectBufferATI = (PFNGLFREEOBJECTBUFFERATIPROC) load(userptr, "glFreeObjectBufferATI");
    agx_custom_glad_glGetArrayObjectfvATI = (PFNGLGETARRAYOBJECTFVATIPROC) load(userptr, "glGetArrayObjectfvATI");
    agx_custom_glad_glGetArrayObjectivATI = (PFNGLGETARRAYOBJECTIVATIPROC) load(userptr, "glGetArrayObjectivATI");
    agx_custom_glad_glGetObjectBufferfvATI = (PFNGLGETOBJECTBUFFERFVATIPROC) load(userptr, "glGetObjectBufferfvATI");
    agx_custom_glad_glGetObjectBufferivATI = (PFNGLGETOBJECTBUFFERIVATIPROC) load(userptr, "glGetObjectBufferivATI");
    agx_custom_glad_glGetVariantArrayObjectfvATI = (PFNGLGETVARIANTARRAYOBJECTFVATIPROC) load(userptr, "glGetVariantArrayObjectfvATI");
    agx_custom_glad_glGetVariantArrayObjectivATI = (PFNGLGETVARIANTARRAYOBJECTIVATIPROC) load(userptr, "glGetVariantArrayObjectivATI");
    agx_custom_glad_glIsObjectBufferATI = (PFNGLISOBJECTBUFFERATIPROC) load(userptr, "glIsObjectBufferATI");
    agx_custom_glad_glNewObjectBufferATI = (PFNGLNEWOBJECTBUFFERATIPROC) load(userptr, "glNewObjectBufferATI");
    agx_custom_glad_glUpdateObjectBufferATI = (PFNGLUPDATEOBJECTBUFFERATIPROC) load(userptr, "glUpdateObjectBufferATI");
    agx_custom_glad_glVariantArrayObjectATI = (PFNGLVARIANTARRAYOBJECTATIPROC) load(userptr, "glVariantArrayObjectATI");
}
static void agx_custom_glad_gl_load_GL_ATI_vertex_attrib_array_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_vertex_attrib_array_object) return;
    agx_custom_glad_glGetVertexAttribArrayObjectfvATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) load(userptr, "glGetVertexAttribArrayObjectfvATI");
    agx_custom_glad_glGetVertexAttribArrayObjectivATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) load(userptr, "glGetVertexAttribArrayObjectivATI");
    agx_custom_glad_glVertexAttribArrayObjectATI = (PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) load(userptr, "glVertexAttribArrayObjectATI");
}
static void agx_custom_glad_gl_load_GL_ATI_vertex_streams( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_ATI_vertex_streams) return;
    agx_custom_glad_glClientActiveVertexStreamATI = (PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) load(userptr, "glClientActiveVertexStreamATI");
    agx_custom_glad_glNormalStream3bATI = (PFNGLNORMALSTREAM3BATIPROC) load(userptr, "glNormalStream3bATI");
    agx_custom_glad_glNormalStream3bvATI = (PFNGLNORMALSTREAM3BVATIPROC) load(userptr, "glNormalStream3bvATI");
    agx_custom_glad_glNormalStream3dATI = (PFNGLNORMALSTREAM3DATIPROC) load(userptr, "glNormalStream3dATI");
    agx_custom_glad_glNormalStream3dvATI = (PFNGLNORMALSTREAM3DVATIPROC) load(userptr, "glNormalStream3dvATI");
    agx_custom_glad_glNormalStream3fATI = (PFNGLNORMALSTREAM3FATIPROC) load(userptr, "glNormalStream3fATI");
    agx_custom_glad_glNormalStream3fvATI = (PFNGLNORMALSTREAM3FVATIPROC) load(userptr, "glNormalStream3fvATI");
    agx_custom_glad_glNormalStream3iATI = (PFNGLNORMALSTREAM3IATIPROC) load(userptr, "glNormalStream3iATI");
    agx_custom_glad_glNormalStream3ivATI = (PFNGLNORMALSTREAM3IVATIPROC) load(userptr, "glNormalStream3ivATI");
    agx_custom_glad_glNormalStream3sATI = (PFNGLNORMALSTREAM3SATIPROC) load(userptr, "glNormalStream3sATI");
    agx_custom_glad_glNormalStream3svATI = (PFNGLNORMALSTREAM3SVATIPROC) load(userptr, "glNormalStream3svATI");
    agx_custom_glad_glVertexBlendEnvfATI = (PFNGLVERTEXBLENDENVFATIPROC) load(userptr, "glVertexBlendEnvfATI");
    agx_custom_glad_glVertexBlendEnviATI = (PFNGLVERTEXBLENDENVIATIPROC) load(userptr, "glVertexBlendEnviATI");
    agx_custom_glad_glVertexStream1dATI = (PFNGLVERTEXSTREAM1DATIPROC) load(userptr, "glVertexStream1dATI");
    agx_custom_glad_glVertexStream1dvATI = (PFNGLVERTEXSTREAM1DVATIPROC) load(userptr, "glVertexStream1dvATI");
    agx_custom_glad_glVertexStream1fATI = (PFNGLVERTEXSTREAM1FATIPROC) load(userptr, "glVertexStream1fATI");
    agx_custom_glad_glVertexStream1fvATI = (PFNGLVERTEXSTREAM1FVATIPROC) load(userptr, "glVertexStream1fvATI");
    agx_custom_glad_glVertexStream1iATI = (PFNGLVERTEXSTREAM1IATIPROC) load(userptr, "glVertexStream1iATI");
    agx_custom_glad_glVertexStream1ivATI = (PFNGLVERTEXSTREAM1IVATIPROC) load(userptr, "glVertexStream1ivATI");
    agx_custom_glad_glVertexStream1sATI = (PFNGLVERTEXSTREAM1SATIPROC) load(userptr, "glVertexStream1sATI");
    agx_custom_glad_glVertexStream1svATI = (PFNGLVERTEXSTREAM1SVATIPROC) load(userptr, "glVertexStream1svATI");
    agx_custom_glad_glVertexStream2dATI = (PFNGLVERTEXSTREAM2DATIPROC) load(userptr, "glVertexStream2dATI");
    agx_custom_glad_glVertexStream2dvATI = (PFNGLVERTEXSTREAM2DVATIPROC) load(userptr, "glVertexStream2dvATI");
    agx_custom_glad_glVertexStream2fATI = (PFNGLVERTEXSTREAM2FATIPROC) load(userptr, "glVertexStream2fATI");
    agx_custom_glad_glVertexStream2fvATI = (PFNGLVERTEXSTREAM2FVATIPROC) load(userptr, "glVertexStream2fvATI");
    agx_custom_glad_glVertexStream2iATI = (PFNGLVERTEXSTREAM2IATIPROC) load(userptr, "glVertexStream2iATI");
    agx_custom_glad_glVertexStream2ivATI = (PFNGLVERTEXSTREAM2IVATIPROC) load(userptr, "glVertexStream2ivATI");
    agx_custom_glad_glVertexStream2sATI = (PFNGLVERTEXSTREAM2SATIPROC) load(userptr, "glVertexStream2sATI");
    agx_custom_glad_glVertexStream2svATI = (PFNGLVERTEXSTREAM2SVATIPROC) load(userptr, "glVertexStream2svATI");
    agx_custom_glad_glVertexStream3dATI = (PFNGLVERTEXSTREAM3DATIPROC) load(userptr, "glVertexStream3dATI");
    agx_custom_glad_glVertexStream3dvATI = (PFNGLVERTEXSTREAM3DVATIPROC) load(userptr, "glVertexStream3dvATI");
    agx_custom_glad_glVertexStream3fATI = (PFNGLVERTEXSTREAM3FATIPROC) load(userptr, "glVertexStream3fATI");
    agx_custom_glad_glVertexStream3fvATI = (PFNGLVERTEXSTREAM3FVATIPROC) load(userptr, "glVertexStream3fvATI");
    agx_custom_glad_glVertexStream3iATI = (PFNGLVERTEXSTREAM3IATIPROC) load(userptr, "glVertexStream3iATI");
    agx_custom_glad_glVertexStream3ivATI = (PFNGLVERTEXSTREAM3IVATIPROC) load(userptr, "glVertexStream3ivATI");
    agx_custom_glad_glVertexStream3sATI = (PFNGLVERTEXSTREAM3SATIPROC) load(userptr, "glVertexStream3sATI");
    agx_custom_glad_glVertexStream3svATI = (PFNGLVERTEXSTREAM3SVATIPROC) load(userptr, "glVertexStream3svATI");
    agx_custom_glad_glVertexStream4dATI = (PFNGLVERTEXSTREAM4DATIPROC) load(userptr, "glVertexStream4dATI");
    agx_custom_glad_glVertexStream4dvATI = (PFNGLVERTEXSTREAM4DVATIPROC) load(userptr, "glVertexStream4dvATI");
    agx_custom_glad_glVertexStream4fATI = (PFNGLVERTEXSTREAM4FATIPROC) load(userptr, "glVertexStream4fATI");
    agx_custom_glad_glVertexStream4fvATI = (PFNGLVERTEXSTREAM4FVATIPROC) load(userptr, "glVertexStream4fvATI");
    agx_custom_glad_glVertexStream4iATI = (PFNGLVERTEXSTREAM4IATIPROC) load(userptr, "glVertexStream4iATI");
    agx_custom_glad_glVertexStream4ivATI = (PFNGLVERTEXSTREAM4IVATIPROC) load(userptr, "glVertexStream4ivATI");
    agx_custom_glad_glVertexStream4sATI = (PFNGLVERTEXSTREAM4SATIPROC) load(userptr, "glVertexStream4sATI");
    agx_custom_glad_glVertexStream4svATI = (PFNGLVERTEXSTREAM4SVATIPROC) load(userptr, "glVertexStream4svATI");
}
static void agx_custom_glad_gl_load_GL_EXT_EGL_image_storage( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_EGL_image_storage) return;
    agx_custom_glad_glEGLImageTargetTexStorageEXT = (PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) load(userptr, "glEGLImageTargetTexStorageEXT");
    agx_custom_glad_glEGLImageTargetTextureStorageEXT = (PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) load(userptr, "glEGLImageTargetTextureStorageEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_bindable_uniform( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_bindable_uniform) return;
    agx_custom_glad_glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC) load(userptr, "glGetUniformBufferSizeEXT");
    agx_custom_glad_glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC) load(userptr, "glGetUniformOffsetEXT");
    agx_custom_glad_glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC) load(userptr, "glUniformBufferEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_blend_color( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_blend_color) return;
    agx_custom_glad_glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC) load(userptr, "glBlendColorEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_blend_equation_separate( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_blend_equation_separate) return;
    agx_custom_glad_glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC) load(userptr, "glBlendEquationSeparateEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_blend_func_separate( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_blend_func_separate) return;
    agx_custom_glad_glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC) load(userptr, "glBlendFuncSeparateEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_blend_minmax( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_blend_minmax) return;
    agx_custom_glad_glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC) load(userptr, "glBlendEquationEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_color_subtable( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_color_subtable) return;
    agx_custom_glad_glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC) load(userptr, "glColorSubTableEXT");
    agx_custom_glad_glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC) load(userptr, "glCopyColorSubTableEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_compiled_vertex_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_compiled_vertex_array) return;
    agx_custom_glad_glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC) load(userptr, "glLockArraysEXT");
    agx_custom_glad_glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC) load(userptr, "glUnlockArraysEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_convolution( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_convolution) return;
    agx_custom_glad_glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC) load(userptr, "glConvolutionFilter1DEXT");
    agx_custom_glad_glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC) load(userptr, "glConvolutionFilter2DEXT");
    agx_custom_glad_glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC) load(userptr, "glConvolutionParameterfEXT");
    agx_custom_glad_glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC) load(userptr, "glConvolutionParameterfvEXT");
    agx_custom_glad_glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC) load(userptr, "glConvolutionParameteriEXT");
    agx_custom_glad_glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC) load(userptr, "glConvolutionParameterivEXT");
    agx_custom_glad_glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) load(userptr, "glCopyConvolutionFilter1DEXT");
    agx_custom_glad_glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) load(userptr, "glCopyConvolutionFilter2DEXT");
    agx_custom_glad_glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC) load(userptr, "glGetConvolutionFilterEXT");
    agx_custom_glad_glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) load(userptr, "glGetConvolutionParameterfvEXT");
    agx_custom_glad_glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) load(userptr, "glGetConvolutionParameterivEXT");
    agx_custom_glad_glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC) load(userptr, "glGetSeparableFilterEXT");
    agx_custom_glad_glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC) load(userptr, "glSeparableFilter2DEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_coordinate_frame( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_coordinate_frame) return;
    agx_custom_glad_glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC) load(userptr, "glBinormal3bEXT");
    agx_custom_glad_glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC) load(userptr, "glBinormal3bvEXT");
    agx_custom_glad_glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC) load(userptr, "glBinormal3dEXT");
    agx_custom_glad_glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC) load(userptr, "glBinormal3dvEXT");
    agx_custom_glad_glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC) load(userptr, "glBinormal3fEXT");
    agx_custom_glad_glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC) load(userptr, "glBinormal3fvEXT");
    agx_custom_glad_glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC) load(userptr, "glBinormal3iEXT");
    agx_custom_glad_glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC) load(userptr, "glBinormal3ivEXT");
    agx_custom_glad_glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC) load(userptr, "glBinormal3sEXT");
    agx_custom_glad_glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC) load(userptr, "glBinormal3svEXT");
    agx_custom_glad_glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC) load(userptr, "glBinormalPointerEXT");
    agx_custom_glad_glTangent3bEXT = (PFNGLTANGENT3BEXTPROC) load(userptr, "glTangent3bEXT");
    agx_custom_glad_glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC) load(userptr, "glTangent3bvEXT");
    agx_custom_glad_glTangent3dEXT = (PFNGLTANGENT3DEXTPROC) load(userptr, "glTangent3dEXT");
    agx_custom_glad_glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC) load(userptr, "glTangent3dvEXT");
    agx_custom_glad_glTangent3fEXT = (PFNGLTANGENT3FEXTPROC) load(userptr, "glTangent3fEXT");
    agx_custom_glad_glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC) load(userptr, "glTangent3fvEXT");
    agx_custom_glad_glTangent3iEXT = (PFNGLTANGENT3IEXTPROC) load(userptr, "glTangent3iEXT");
    agx_custom_glad_glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC) load(userptr, "glTangent3ivEXT");
    agx_custom_glad_glTangent3sEXT = (PFNGLTANGENT3SEXTPROC) load(userptr, "glTangent3sEXT");
    agx_custom_glad_glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC) load(userptr, "glTangent3svEXT");
    agx_custom_glad_glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC) load(userptr, "glTangentPointerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_copy_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_copy_texture) return;
    agx_custom_glad_glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC) load(userptr, "glCopyTexImage1DEXT");
    agx_custom_glad_glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC) load(userptr, "glCopyTexImage2DEXT");
    agx_custom_glad_glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC) load(userptr, "glCopyTexSubImage1DEXT");
    agx_custom_glad_glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC) load(userptr, "glCopyTexSubImage2DEXT");
    agx_custom_glad_glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC) load(userptr, "glCopyTexSubImage3DEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_cull_vertex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_cull_vertex) return;
    agx_custom_glad_glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC) load(userptr, "glCullParameterdvEXT");
    agx_custom_glad_glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC) load(userptr, "glCullParameterfvEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_debug_label( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_debug_label) return;
    agx_custom_glad_glGetObjectLabelEXT = (PFNGLGETOBJECTLABELEXTPROC) load(userptr, "glGetObjectLabelEXT");
    agx_custom_glad_glLabelObjectEXT = (PFNGLLABELOBJECTEXTPROC) load(userptr, "glLabelObjectEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_debug_marker( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_debug_marker) return;
    agx_custom_glad_glInsertEventMarkerEXT = (PFNGLINSERTEVENTMARKEREXTPROC) load(userptr, "glInsertEventMarkerEXT");
    agx_custom_glad_glPopGroupMarkerEXT = (PFNGLPOPGROUPMARKEREXTPROC) load(userptr, "glPopGroupMarkerEXT");
    agx_custom_glad_glPushGroupMarkerEXT = (PFNGLPUSHGROUPMARKEREXTPROC) load(userptr, "glPushGroupMarkerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_depth_bounds_test( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_depth_bounds_test) return;
    agx_custom_glad_glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC) load(userptr, "glDepthBoundsEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_direct_state_access( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_direct_state_access) return;
    agx_custom_glad_glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC) load(userptr, "glBindMultiTextureEXT");
    agx_custom_glad_glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) load(userptr, "glCheckNamedFramebufferStatusEXT");
    agx_custom_glad_glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC) load(userptr, "glClearNamedBufferDataEXT");
    agx_custom_glad_glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) load(userptr, "glClearNamedBufferSubDataEXT");
    agx_custom_glad_glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC) load(userptr, "glClientAttribDefaultEXT");
    agx_custom_glad_glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) load(userptr, "glCompressedMultiTexImage1DEXT");
    agx_custom_glad_glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) load(userptr, "glCompressedMultiTexImage2DEXT");
    agx_custom_glad_glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) load(userptr, "glCompressedMultiTexImage3DEXT");
    agx_custom_glad_glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) load(userptr, "glCompressedMultiTexSubImage1DEXT");
    agx_custom_glad_glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) load(userptr, "glCompressedMultiTexSubImage2DEXT");
    agx_custom_glad_glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) load(userptr, "glCompressedMultiTexSubImage3DEXT");
    agx_custom_glad_glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) load(userptr, "glCompressedTextureImage1DEXT");
    agx_custom_glad_glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) load(userptr, "glCompressedTextureImage2DEXT");
    agx_custom_glad_glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) load(userptr, "glCompressedTextureImage3DEXT");
    agx_custom_glad_glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) load(userptr, "glCompressedTextureSubImage1DEXT");
    agx_custom_glad_glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) load(userptr, "glCompressedTextureSubImage2DEXT");
    agx_custom_glad_glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) load(userptr, "glCompressedTextureSubImage3DEXT");
    agx_custom_glad_glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC) load(userptr, "glCopyMultiTexImage1DEXT");
    agx_custom_glad_glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC) load(userptr, "glCopyMultiTexImage2DEXT");
    agx_custom_glad_glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) load(userptr, "glCopyMultiTexSubImage1DEXT");
    agx_custom_glad_glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) load(userptr, "glCopyMultiTexSubImage2DEXT");
    agx_custom_glad_glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) load(userptr, "glCopyMultiTexSubImage3DEXT");
    agx_custom_glad_glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC) load(userptr, "glCopyTextureImage1DEXT");
    agx_custom_glad_glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC) load(userptr, "glCopyTextureImage2DEXT");
    agx_custom_glad_glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) load(userptr, "glCopyTextureSubImage1DEXT");
    agx_custom_glad_glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) load(userptr, "glCopyTextureSubImage2DEXT");
    agx_custom_glad_glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) load(userptr, "glCopyTextureSubImage3DEXT");
    agx_custom_glad_glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) load(userptr, "glDisableClientStateIndexedEXT");
    agx_custom_glad_glDisableClientStateiEXT = (PFNGLDISABLECLIENTSTATEIEXTPROC) load(userptr, "glDisableClientStateiEXT");
    agx_custom_glad_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC) load(userptr, "glDisableIndexedEXT");
    agx_custom_glad_glDisableVertexArrayAttribEXT = (PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) load(userptr, "glDisableVertexArrayAttribEXT");
    agx_custom_glad_glDisableVertexArrayEXT = (PFNGLDISABLEVERTEXARRAYEXTPROC) load(userptr, "glDisableVertexArrayEXT");
    agx_custom_glad_glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) load(userptr, "glEnableClientStateIndexedEXT");
    agx_custom_glad_glEnableClientStateiEXT = (PFNGLENABLECLIENTSTATEIEXTPROC) load(userptr, "glEnableClientStateiEXT");
    agx_custom_glad_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC) load(userptr, "glEnableIndexedEXT");
    agx_custom_glad_glEnableVertexArrayAttribEXT = (PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) load(userptr, "glEnableVertexArrayAttribEXT");
    agx_custom_glad_glEnableVertexArrayEXT = (PFNGLENABLEVERTEXARRAYEXTPROC) load(userptr, "glEnableVertexArrayEXT");
    agx_custom_glad_glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) load(userptr, "glFlushMappedNamedBufferRangeEXT");
    agx_custom_glad_glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) load(userptr, "glFramebufferDrawBufferEXT");
    agx_custom_glad_glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) load(userptr, "glFramebufferDrawBuffersEXT");
    agx_custom_glad_glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC) load(userptr, "glFramebufferReadBufferEXT");
    agx_custom_glad_glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC) load(userptr, "glGenerateMultiTexMipmapEXT");
    agx_custom_glad_glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC) load(userptr, "glGenerateTextureMipmapEXT");
    agx_custom_glad_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC) load(userptr, "glGetBooleanIndexedvEXT");
    agx_custom_glad_glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) load(userptr, "glGetCompressedMultiTexImageEXT");
    agx_custom_glad_glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) load(userptr, "glGetCompressedTextureImageEXT");
    agx_custom_glad_glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC) load(userptr, "glGetDoubleIndexedvEXT");
    agx_custom_glad_glGetDoublei_vEXT = (PFNGLGETDOUBLEI_VEXTPROC) load(userptr, "glGetDoublei_vEXT");
    agx_custom_glad_glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC) load(userptr, "glGetFloatIndexedvEXT");
    agx_custom_glad_glGetFloati_vEXT = (PFNGLGETFLOATI_VEXTPROC) load(userptr, "glGetFloati_vEXT");
    agx_custom_glad_glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) load(userptr, "glGetFramebufferParameterivEXT");
    agx_custom_glad_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC) load(userptr, "glGetIntegerIndexedvEXT");
    agx_custom_glad_glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC) load(userptr, "glGetMultiTexEnvfvEXT");
    agx_custom_glad_glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC) load(userptr, "glGetMultiTexEnvivEXT");
    agx_custom_glad_glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC) load(userptr, "glGetMultiTexGendvEXT");
    agx_custom_glad_glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC) load(userptr, "glGetMultiTexGenfvEXT");
    agx_custom_glad_glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC) load(userptr, "glGetMultiTexGenivEXT");
    agx_custom_glad_glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC) load(userptr, "glGetMultiTexImageEXT");
    agx_custom_glad_glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) load(userptr, "glGetMultiTexLevelParameterfvEXT");
    agx_custom_glad_glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) load(userptr, "glGetMultiTexLevelParameterivEXT");
    agx_custom_glad_glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC) load(userptr, "glGetMultiTexParameterIivEXT");
    agx_custom_glad_glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) load(userptr, "glGetMultiTexParameterIuivEXT");
    agx_custom_glad_glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC) load(userptr, "glGetMultiTexParameterfvEXT");
    agx_custom_glad_glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC) load(userptr, "glGetMultiTexParameterivEXT");
    agx_custom_glad_glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) load(userptr, "glGetNamedBufferParameterivEXT");
    agx_custom_glad_glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) load(userptr, "glGetNamedBufferPointervEXT");
    agx_custom_glad_glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) load(userptr, "glGetNamedBufferSubDataEXT");
    agx_custom_glad_glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) load(userptr, "glGetNamedFramebufferAttachmentParameterivEXT");
    agx_custom_glad_glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) load(userptr, "glGetNamedFramebufferParameterivEXT");
    agx_custom_glad_glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) load(userptr, "glGetNamedProgramLocalParameterIivEXT");
    agx_custom_glad_glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) load(userptr, "glGetNamedProgramLocalParameterIuivEXT");
    agx_custom_glad_glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) load(userptr, "glGetNamedProgramLocalParameterdvEXT");
    agx_custom_glad_glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) load(userptr, "glGetNamedProgramLocalParameterfvEXT");
    agx_custom_glad_glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) load(userptr, "glGetNamedProgramStringEXT");
    agx_custom_glad_glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC) load(userptr, "glGetNamedProgramivEXT");
    agx_custom_glad_glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) load(userptr, "glGetNamedRenderbufferParameterivEXT");
    agx_custom_glad_glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC) load(userptr, "glGetPointerIndexedvEXT");
    agx_custom_glad_glGetPointeri_vEXT = (PFNGLGETPOINTERI_VEXTPROC) load(userptr, "glGetPointeri_vEXT");
    agx_custom_glad_glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC) load(userptr, "glGetTextureImageEXT");
    agx_custom_glad_glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) load(userptr, "glGetTextureLevelParameterfvEXT");
    agx_custom_glad_glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) load(userptr, "glGetTextureLevelParameterivEXT");
    agx_custom_glad_glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC) load(userptr, "glGetTextureParameterIivEXT");
    agx_custom_glad_glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) load(userptr, "glGetTextureParameterIuivEXT");
    agx_custom_glad_glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC) load(userptr, "glGetTextureParameterfvEXT");
    agx_custom_glad_glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC) load(userptr, "glGetTextureParameterivEXT");
    agx_custom_glad_glGetVertexArrayIntegeri_vEXT = (PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) load(userptr, "glGetVertexArrayIntegeri_vEXT");
    agx_custom_glad_glGetVertexArrayIntegervEXT = (PFNGLGETVERTEXARRAYINTEGERVEXTPROC) load(userptr, "glGetVertexArrayIntegervEXT");
    agx_custom_glad_glGetVertexArrayPointeri_vEXT = (PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) load(userptr, "glGetVertexArrayPointeri_vEXT");
    agx_custom_glad_glGetVertexArrayPointervEXT = (PFNGLGETVERTEXARRAYPOINTERVEXTPROC) load(userptr, "glGetVertexArrayPointervEXT");
    agx_custom_glad_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC) load(userptr, "glIsEnabledIndexedEXT");
    agx_custom_glad_glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC) load(userptr, "glMapNamedBufferEXT");
    agx_custom_glad_glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC) load(userptr, "glMapNamedBufferRangeEXT");
    agx_custom_glad_glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC) load(userptr, "glMatrixFrustumEXT");
    agx_custom_glad_glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC) load(userptr, "glMatrixLoadIdentityEXT");
    agx_custom_glad_glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC) load(userptr, "glMatrixLoadTransposedEXT");
    agx_custom_glad_glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC) load(userptr, "glMatrixLoadTransposefEXT");
    agx_custom_glad_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC) load(userptr, "glMatrixLoaddEXT");
    agx_custom_glad_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC) load(userptr, "glMatrixLoadfEXT");
    agx_custom_glad_glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC) load(userptr, "glMatrixMultTransposedEXT");
    agx_custom_glad_glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC) load(userptr, "glMatrixMultTransposefEXT");
    agx_custom_glad_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC) load(userptr, "glMatrixMultdEXT");
    agx_custom_glad_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC) load(userptr, "glMatrixMultfEXT");
    agx_custom_glad_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC) load(userptr, "glMatrixOrthoEXT");
    agx_custom_glad_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC) load(userptr, "glMatrixPopEXT");
    agx_custom_glad_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC) load(userptr, "glMatrixPushEXT");
    agx_custom_glad_glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC) load(userptr, "glMatrixRotatedEXT");
    agx_custom_glad_glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC) load(userptr, "glMatrixRotatefEXT");
    agx_custom_glad_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC) load(userptr, "glMatrixScaledEXT");
    agx_custom_glad_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC) load(userptr, "glMatrixScalefEXT");
    agx_custom_glad_glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC) load(userptr, "glMatrixTranslatedEXT");
    agx_custom_glad_glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC) load(userptr, "glMatrixTranslatefEXT");
    agx_custom_glad_glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC) load(userptr, "glMultiTexBufferEXT");
    agx_custom_glad_glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC) load(userptr, "glMultiTexCoordPointerEXT");
    agx_custom_glad_glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC) load(userptr, "glMultiTexEnvfEXT");
    agx_custom_glad_glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC) load(userptr, "glMultiTexEnvfvEXT");
    agx_custom_glad_glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC) load(userptr, "glMultiTexEnviEXT");
    agx_custom_glad_glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC) load(userptr, "glMultiTexEnvivEXT");
    agx_custom_glad_glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC) load(userptr, "glMultiTexGendEXT");
    agx_custom_glad_glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC) load(userptr, "glMultiTexGendvEXT");
    agx_custom_glad_glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC) load(userptr, "glMultiTexGenfEXT");
    agx_custom_glad_glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC) load(userptr, "glMultiTexGenfvEXT");
    agx_custom_glad_glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC) load(userptr, "glMultiTexGeniEXT");
    agx_custom_glad_glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC) load(userptr, "glMultiTexGenivEXT");
    agx_custom_glad_glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC) load(userptr, "glMultiTexImage1DEXT");
    agx_custom_glad_glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC) load(userptr, "glMultiTexImage2DEXT");
    agx_custom_glad_glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC) load(userptr, "glMultiTexImage3DEXT");
    agx_custom_glad_glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC) load(userptr, "glMultiTexParameterIivEXT");
    agx_custom_glad_glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC) load(userptr, "glMultiTexParameterIuivEXT");
    agx_custom_glad_glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC) load(userptr, "glMultiTexParameterfEXT");
    agx_custom_glad_glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC) load(userptr, "glMultiTexParameterfvEXT");
    agx_custom_glad_glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC) load(userptr, "glMultiTexParameteriEXT");
    agx_custom_glad_glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC) load(userptr, "glMultiTexParameterivEXT");
    agx_custom_glad_glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC) load(userptr, "glMultiTexRenderbufferEXT");
    agx_custom_glad_glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC) load(userptr, "glMultiTexSubImage1DEXT");
    agx_custom_glad_glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC) load(userptr, "glMultiTexSubImage2DEXT");
    agx_custom_glad_glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC) load(userptr, "glMultiTexSubImage3DEXT");
    agx_custom_glad_glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC) load(userptr, "glNamedBufferDataEXT");
    agx_custom_glad_glNamedBufferStorageEXT = (PFNGLNAMEDBUFFERSTORAGEEXTPROC) load(userptr, "glNamedBufferStorageEXT");
    agx_custom_glad_glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC) load(userptr, "glNamedBufferSubDataEXT");
    agx_custom_glad_glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) load(userptr, "glNamedCopyBufferSubDataEXT");
    agx_custom_glad_glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) load(userptr, "glNamedFramebufferParameteriEXT");
    agx_custom_glad_glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) load(userptr, "glNamedFramebufferRenderbufferEXT");
    agx_custom_glad_glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) load(userptr, "glNamedFramebufferTexture1DEXT");
    agx_custom_glad_glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) load(userptr, "glNamedFramebufferTexture2DEXT");
    agx_custom_glad_glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) load(userptr, "glNamedFramebufferTexture3DEXT");
    agx_custom_glad_glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) load(userptr, "glNamedFramebufferTextureEXT");
    agx_custom_glad_glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) load(userptr, "glNamedFramebufferTextureFaceEXT");
    agx_custom_glad_glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) load(userptr, "glNamedFramebufferTextureLayerEXT");
    agx_custom_glad_glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) load(userptr, "glNamedProgramLocalParameter4dEXT");
    agx_custom_glad_glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) load(userptr, "glNamedProgramLocalParameter4dvEXT");
    agx_custom_glad_glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) load(userptr, "glNamedProgramLocalParameter4fEXT");
    agx_custom_glad_glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) load(userptr, "glNamedProgramLocalParameter4fvEXT");
    agx_custom_glad_glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) load(userptr, "glNamedProgramLocalParameterI4iEXT");
    agx_custom_glad_glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) load(userptr, "glNamedProgramLocalParameterI4ivEXT");
    agx_custom_glad_glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) load(userptr, "glNamedProgramLocalParameterI4uiEXT");
    agx_custom_glad_glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) load(userptr, "glNamedProgramLocalParameterI4uivEXT");
    agx_custom_glad_glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) load(userptr, "glNamedProgramLocalParameters4fvEXT");
    agx_custom_glad_glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) load(userptr, "glNamedProgramLocalParametersI4ivEXT");
    agx_custom_glad_glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) load(userptr, "glNamedProgramLocalParametersI4uivEXT");
    agx_custom_glad_glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC) load(userptr, "glNamedProgramStringEXT");
    agx_custom_glad_glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) load(userptr, "glNamedRenderbufferStorageEXT");
    agx_custom_glad_glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) load(userptr, "glNamedRenderbufferStorageMultisampleCoverageEXT");
    agx_custom_glad_glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) load(userptr, "glNamedRenderbufferStorageMultisampleEXT");
    agx_custom_glad_glProgramUniform1dEXT = (PFNGLPROGRAMUNIFORM1DEXTPROC) load(userptr, "glProgramUniform1dEXT");
    agx_custom_glad_glProgramUniform1dvEXT = (PFNGLPROGRAMUNIFORM1DVEXTPROC) load(userptr, "glProgramUniform1dvEXT");
    agx_custom_glad_glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC) load(userptr, "glProgramUniform1fEXT");
    agx_custom_glad_glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC) load(userptr, "glProgramUniform1fvEXT");
    agx_custom_glad_glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC) load(userptr, "glProgramUniform1iEXT");
    agx_custom_glad_glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC) load(userptr, "glProgramUniform1ivEXT");
    agx_custom_glad_glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC) load(userptr, "glProgramUniform1uiEXT");
    agx_custom_glad_glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC) load(userptr, "glProgramUniform1uivEXT");
    agx_custom_glad_glProgramUniform2dEXT = (PFNGLPROGRAMUNIFORM2DEXTPROC) load(userptr, "glProgramUniform2dEXT");
    agx_custom_glad_glProgramUniform2dvEXT = (PFNGLPROGRAMUNIFORM2DVEXTPROC) load(userptr, "glProgramUniform2dvEXT");
    agx_custom_glad_glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC) load(userptr, "glProgramUniform2fEXT");
    agx_custom_glad_glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC) load(userptr, "glProgramUniform2fvEXT");
    agx_custom_glad_glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC) load(userptr, "glProgramUniform2iEXT");
    agx_custom_glad_glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC) load(userptr, "glProgramUniform2ivEXT");
    agx_custom_glad_glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC) load(userptr, "glProgramUniform2uiEXT");
    agx_custom_glad_glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC) load(userptr, "glProgramUniform2uivEXT");
    agx_custom_glad_glProgramUniform3dEXT = (PFNGLPROGRAMUNIFORM3DEXTPROC) load(userptr, "glProgramUniform3dEXT");
    agx_custom_glad_glProgramUniform3dvEXT = (PFNGLPROGRAMUNIFORM3DVEXTPROC) load(userptr, "glProgramUniform3dvEXT");
    agx_custom_glad_glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC) load(userptr, "glProgramUniform3fEXT");
    agx_custom_glad_glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC) load(userptr, "glProgramUniform3fvEXT");
    agx_custom_glad_glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC) load(userptr, "glProgramUniform3iEXT");
    agx_custom_glad_glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC) load(userptr, "glProgramUniform3ivEXT");
    agx_custom_glad_glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC) load(userptr, "glProgramUniform3uiEXT");
    agx_custom_glad_glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC) load(userptr, "glProgramUniform3uivEXT");
    agx_custom_glad_glProgramUniform4dEXT = (PFNGLPROGRAMUNIFORM4DEXTPROC) load(userptr, "glProgramUniform4dEXT");
    agx_custom_glad_glProgramUniform4dvEXT = (PFNGLPROGRAMUNIFORM4DVEXTPROC) load(userptr, "glProgramUniform4dvEXT");
    agx_custom_glad_glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC) load(userptr, "glProgramUniform4fEXT");
    agx_custom_glad_glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC) load(userptr, "glProgramUniform4fvEXT");
    agx_custom_glad_glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC) load(userptr, "glProgramUniform4iEXT");
    agx_custom_glad_glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC) load(userptr, "glProgramUniform4ivEXT");
    agx_custom_glad_glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC) load(userptr, "glProgramUniform4uiEXT");
    agx_custom_glad_glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC) load(userptr, "glProgramUniform4uivEXT");
    agx_custom_glad_glProgramUniformMatrix2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) load(userptr, "glProgramUniformMatrix2dvEXT");
    agx_custom_glad_glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) load(userptr, "glProgramUniformMatrix2fvEXT");
    agx_custom_glad_glProgramUniformMatrix2x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) load(userptr, "glProgramUniformMatrix2x3dvEXT");
    agx_custom_glad_glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) load(userptr, "glProgramUniformMatrix2x3fvEXT");
    agx_custom_glad_glProgramUniformMatrix2x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) load(userptr, "glProgramUniformMatrix2x4dvEXT");
    agx_custom_glad_glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) load(userptr, "glProgramUniformMatrix2x4fvEXT");
    agx_custom_glad_glProgramUniformMatrix3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) load(userptr, "glProgramUniformMatrix3dvEXT");
    agx_custom_glad_glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) load(userptr, "glProgramUniformMatrix3fvEXT");
    agx_custom_glad_glProgramUniformMatrix3x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) load(userptr, "glProgramUniformMatrix3x2dvEXT");
    agx_custom_glad_glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) load(userptr, "glProgramUniformMatrix3x2fvEXT");
    agx_custom_glad_glProgramUniformMatrix3x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) load(userptr, "glProgramUniformMatrix3x4dvEXT");
    agx_custom_glad_glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) load(userptr, "glProgramUniformMatrix3x4fvEXT");
    agx_custom_glad_glProgramUniformMatrix4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) load(userptr, "glProgramUniformMatrix4dvEXT");
    agx_custom_glad_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) load(userptr, "glProgramUniformMatrix4fvEXT");
    agx_custom_glad_glProgramUniformMatrix4x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) load(userptr, "glProgramUniformMatrix4x2dvEXT");
    agx_custom_glad_glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) load(userptr, "glProgramUniformMatrix4x2fvEXT");
    agx_custom_glad_glProgramUniformMatrix4x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) load(userptr, "glProgramUniformMatrix4x3dvEXT");
    agx_custom_glad_glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) load(userptr, "glProgramUniformMatrix4x3fvEXT");
    agx_custom_glad_glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) load(userptr, "glPushClientAttribDefaultEXT");
    agx_custom_glad_glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC) load(userptr, "glTextureBufferEXT");
    agx_custom_glad_glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC) load(userptr, "glTextureBufferRangeEXT");
    agx_custom_glad_glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC) load(userptr, "glTextureImage1DEXT");
    agx_custom_glad_glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC) load(userptr, "glTextureImage2DEXT");
    agx_custom_glad_glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC) load(userptr, "glTextureImage3DEXT");
    agx_custom_glad_glTexturePageCommitmentEXT = (PFNGLTEXTUREPAGECOMMITMENTEXTPROC) load(userptr, "glTexturePageCommitmentEXT");
    agx_custom_glad_glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC) load(userptr, "glTextureParameterIivEXT");
    agx_custom_glad_glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC) load(userptr, "glTextureParameterIuivEXT");
    agx_custom_glad_glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC) load(userptr, "glTextureParameterfEXT");
    agx_custom_glad_glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC) load(userptr, "glTextureParameterfvEXT");
    agx_custom_glad_glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC) load(userptr, "glTextureParameteriEXT");
    agx_custom_glad_glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC) load(userptr, "glTextureParameterivEXT");
    agx_custom_glad_glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC) load(userptr, "glTextureRenderbufferEXT");
    agx_custom_glad_glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC) load(userptr, "glTextureStorage1DEXT");
    agx_custom_glad_glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC) load(userptr, "glTextureStorage2DEXT");
    agx_custom_glad_glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) load(userptr, "glTextureStorage2DMultisampleEXT");
    agx_custom_glad_glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC) load(userptr, "glTextureStorage3DEXT");
    agx_custom_glad_glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) load(userptr, "glTextureStorage3DMultisampleEXT");
    agx_custom_glad_glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC) load(userptr, "glTextureSubImage1DEXT");
    agx_custom_glad_glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC) load(userptr, "glTextureSubImage2DEXT");
    agx_custom_glad_glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC) load(userptr, "glTextureSubImage3DEXT");
    agx_custom_glad_glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC) load(userptr, "glUnmapNamedBufferEXT");
    agx_custom_glad_glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) load(userptr, "glVertexArrayBindVertexBufferEXT");
    agx_custom_glad_glVertexArrayColorOffsetEXT = (PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) load(userptr, "glVertexArrayColorOffsetEXT");
    agx_custom_glad_glVertexArrayEdgeFlagOffsetEXT = (PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) load(userptr, "glVertexArrayEdgeFlagOffsetEXT");
    agx_custom_glad_glVertexArrayFogCoordOffsetEXT = (PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) load(userptr, "glVertexArrayFogCoordOffsetEXT");
    agx_custom_glad_glVertexArrayIndexOffsetEXT = (PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) load(userptr, "glVertexArrayIndexOffsetEXT");
    agx_custom_glad_glVertexArrayMultiTexCoordOffsetEXT = (PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) load(userptr, "glVertexArrayMultiTexCoordOffsetEXT");
    agx_custom_glad_glVertexArrayNormalOffsetEXT = (PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) load(userptr, "glVertexArrayNormalOffsetEXT");
    agx_custom_glad_glVertexArraySecondaryColorOffsetEXT = (PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) load(userptr, "glVertexArraySecondaryColorOffsetEXT");
    agx_custom_glad_glVertexArrayTexCoordOffsetEXT = (PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) load(userptr, "glVertexArrayTexCoordOffsetEXT");
    agx_custom_glad_glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) load(userptr, "glVertexArrayVertexAttribBindingEXT");
    agx_custom_glad_glVertexArrayVertexAttribDivisorEXT = (PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) load(userptr, "glVertexArrayVertexAttribDivisorEXT");
    agx_custom_glad_glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) load(userptr, "glVertexArrayVertexAttribFormatEXT");
    agx_custom_glad_glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) load(userptr, "glVertexArrayVertexAttribIFormatEXT");
    agx_custom_glad_glVertexArrayVertexAttribIOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) load(userptr, "glVertexArrayVertexAttribIOffsetEXT");
    agx_custom_glad_glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) load(userptr, "glVertexArrayVertexAttribLFormatEXT");
    agx_custom_glad_glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) load(userptr, "glVertexArrayVertexAttribLOffsetEXT");
    agx_custom_glad_glVertexArrayVertexAttribOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) load(userptr, "glVertexArrayVertexAttribOffsetEXT");
    agx_custom_glad_glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) load(userptr, "glVertexArrayVertexBindingDivisorEXT");
    agx_custom_glad_glVertexArrayVertexOffsetEXT = (PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) load(userptr, "glVertexArrayVertexOffsetEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_draw_buffers2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_draw_buffers2) return;
    agx_custom_glad_glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC) load(userptr, "glColorMaskIndexedEXT");
    agx_custom_glad_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC) load(userptr, "glDisableIndexedEXT");
    agx_custom_glad_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC) load(userptr, "glEnableIndexedEXT");
    agx_custom_glad_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC) load(userptr, "glGetBooleanIndexedvEXT");
    agx_custom_glad_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC) load(userptr, "glGetIntegerIndexedvEXT");
    agx_custom_glad_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC) load(userptr, "glIsEnabledIndexedEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_draw_instanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_draw_instanced) return;
    agx_custom_glad_glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC) load(userptr, "glDrawArraysInstancedEXT");
    agx_custom_glad_glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC) load(userptr, "glDrawElementsInstancedEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_draw_range_elements( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_draw_range_elements) return;
    agx_custom_glad_glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC) load(userptr, "glDrawRangeElementsEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_external_buffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_external_buffer) return;
    agx_custom_glad_glBufferStorageExternalEXT = (PFNGLBUFFERSTORAGEEXTERNALEXTPROC) load(userptr, "glBufferStorageExternalEXT");
    agx_custom_glad_glNamedBufferStorageExternalEXT = (PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) load(userptr, "glNamedBufferStorageExternalEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_fog_coord( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_fog_coord) return;
    agx_custom_glad_glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC) load(userptr, "glFogCoordPointerEXT");
    agx_custom_glad_glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC) load(userptr, "glFogCoorddEXT");
    agx_custom_glad_glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC) load(userptr, "glFogCoorddvEXT");
    agx_custom_glad_glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC) load(userptr, "glFogCoordfEXT");
    agx_custom_glad_glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC) load(userptr, "glFogCoordfvEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_framebuffer_blit( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_framebuffer_blit) return;
    agx_custom_glad_glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC) load(userptr, "glBlitFramebufferEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_framebuffer_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample) return;
    agx_custom_glad_glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) load(userptr, "glRenderbufferStorageMultisampleEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_framebuffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_framebuffer_object) return;
    agx_custom_glad_glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC) load(userptr, "glBindFramebufferEXT");
    agx_custom_glad_glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC) load(userptr, "glBindRenderbufferEXT");
    agx_custom_glad_glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) load(userptr, "glCheckFramebufferStatusEXT");
    agx_custom_glad_glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC) load(userptr, "glDeleteFramebuffersEXT");
    agx_custom_glad_glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC) load(userptr, "glDeleteRenderbuffersEXT");
    agx_custom_glad_glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) load(userptr, "glFramebufferRenderbufferEXT");
    agx_custom_glad_glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) load(userptr, "glFramebufferTexture1DEXT");
    agx_custom_glad_glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) load(userptr, "glFramebufferTexture2DEXT");
    agx_custom_glad_glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) load(userptr, "glFramebufferTexture3DEXT");
    agx_custom_glad_glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC) load(userptr, "glGenFramebuffersEXT");
    agx_custom_glad_glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC) load(userptr, "glGenRenderbuffersEXT");
    agx_custom_glad_glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC) load(userptr, "glGenerateMipmapEXT");
    agx_custom_glad_glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) load(userptr, "glGetFramebufferAttachmentParameterivEXT");
    agx_custom_glad_glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) load(userptr, "glGetRenderbufferParameterivEXT");
    agx_custom_glad_glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC) load(userptr, "glIsFramebufferEXT");
    agx_custom_glad_glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC) load(userptr, "glIsRenderbufferEXT");
    agx_custom_glad_glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC) load(userptr, "glRenderbufferStorageEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_geometry_shader4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_geometry_shader4) return;
    agx_custom_glad_glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC) load(userptr, "glProgramParameteriEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_gpu_program_parameters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_gpu_program_parameters) return;
    agx_custom_glad_glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) load(userptr, "glProgramEnvParameters4fvEXT");
    agx_custom_glad_glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) load(userptr, "glProgramLocalParameters4fvEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_gpu_shader4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_gpu_shader4) return;
    agx_custom_glad_glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC) load(userptr, "glBindFragDataLocationEXT");
    agx_custom_glad_glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC) load(userptr, "glGetFragDataLocationEXT");
    agx_custom_glad_glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC) load(userptr, "glGetUniformuivEXT");
    agx_custom_glad_glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC) load(userptr, "glGetVertexAttribIivEXT");
    agx_custom_glad_glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC) load(userptr, "glGetVertexAttribIuivEXT");
    agx_custom_glad_glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC) load(userptr, "glUniform1uiEXT");
    agx_custom_glad_glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC) load(userptr, "glUniform1uivEXT");
    agx_custom_glad_glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC) load(userptr, "glUniform2uiEXT");
    agx_custom_glad_glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC) load(userptr, "glUniform2uivEXT");
    agx_custom_glad_glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC) load(userptr, "glUniform3uiEXT");
    agx_custom_glad_glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC) load(userptr, "glUniform3uivEXT");
    agx_custom_glad_glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC) load(userptr, "glUniform4uiEXT");
    agx_custom_glad_glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC) load(userptr, "glUniform4uivEXT");
    agx_custom_glad_glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC) load(userptr, "glVertexAttribI1iEXT");
    agx_custom_glad_glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC) load(userptr, "glVertexAttribI1ivEXT");
    agx_custom_glad_glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC) load(userptr, "glVertexAttribI1uiEXT");
    agx_custom_glad_glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC) load(userptr, "glVertexAttribI1uivEXT");
    agx_custom_glad_glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC) load(userptr, "glVertexAttribI2iEXT");
    agx_custom_glad_glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC) load(userptr, "glVertexAttribI2ivEXT");
    agx_custom_glad_glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC) load(userptr, "glVertexAttribI2uiEXT");
    agx_custom_glad_glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC) load(userptr, "glVertexAttribI2uivEXT");
    agx_custom_glad_glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC) load(userptr, "glVertexAttribI3iEXT");
    agx_custom_glad_glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC) load(userptr, "glVertexAttribI3ivEXT");
    agx_custom_glad_glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC) load(userptr, "glVertexAttribI3uiEXT");
    agx_custom_glad_glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC) load(userptr, "glVertexAttribI3uivEXT");
    agx_custom_glad_glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC) load(userptr, "glVertexAttribI4bvEXT");
    agx_custom_glad_glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC) load(userptr, "glVertexAttribI4iEXT");
    agx_custom_glad_glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC) load(userptr, "glVertexAttribI4ivEXT");
    agx_custom_glad_glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC) load(userptr, "glVertexAttribI4svEXT");
    agx_custom_glad_glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC) load(userptr, "glVertexAttribI4ubvEXT");
    agx_custom_glad_glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC) load(userptr, "glVertexAttribI4uiEXT");
    agx_custom_glad_glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC) load(userptr, "glVertexAttribI4uivEXT");
    agx_custom_glad_glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC) load(userptr, "glVertexAttribI4usvEXT");
    agx_custom_glad_glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC) load(userptr, "glVertexAttribIPointerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_histogram( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_histogram) return;
    agx_custom_glad_glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC) load(userptr, "glGetHistogramEXT");
    agx_custom_glad_glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) load(userptr, "glGetHistogramParameterfvEXT");
    agx_custom_glad_glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) load(userptr, "glGetHistogramParameterivEXT");
    agx_custom_glad_glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC) load(userptr, "glGetMinmaxEXT");
    agx_custom_glad_glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC) load(userptr, "glGetMinmaxParameterfvEXT");
    agx_custom_glad_glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC) load(userptr, "glGetMinmaxParameterivEXT");
    agx_custom_glad_glHistogramEXT = (PFNGLHISTOGRAMEXTPROC) load(userptr, "glHistogramEXT");
    agx_custom_glad_glMinmaxEXT = (PFNGLMINMAXEXTPROC) load(userptr, "glMinmaxEXT");
    agx_custom_glad_glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC) load(userptr, "glResetHistogramEXT");
    agx_custom_glad_glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC) load(userptr, "glResetMinmaxEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_index_func( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_index_func) return;
    agx_custom_glad_glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC) load(userptr, "glIndexFuncEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_index_material( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_index_material) return;
    agx_custom_glad_glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC) load(userptr, "glIndexMaterialEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_light_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_light_texture) return;
    agx_custom_glad_glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC) load(userptr, "glApplyTextureEXT");
    agx_custom_glad_glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC) load(userptr, "glTextureLightEXT");
    agx_custom_glad_glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC) load(userptr, "glTextureMaterialEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_memory_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_memory_object) return;
    agx_custom_glad_glBufferStorageMemEXT = (PFNGLBUFFERSTORAGEMEMEXTPROC) load(userptr, "glBufferStorageMemEXT");
    agx_custom_glad_glCreateMemoryObjectsEXT = (PFNGLCREATEMEMORYOBJECTSEXTPROC) load(userptr, "glCreateMemoryObjectsEXT");
    agx_custom_glad_glDeleteMemoryObjectsEXT = (PFNGLDELETEMEMORYOBJECTSEXTPROC) load(userptr, "glDeleteMemoryObjectsEXT");
    agx_custom_glad_glGetMemoryObjectParameterivEXT = (PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) load(userptr, "glGetMemoryObjectParameterivEXT");
    agx_custom_glad_glGetUnsignedBytei_vEXT = (PFNGLGETUNSIGNEDBYTEI_VEXTPROC) load(userptr, "glGetUnsignedBytei_vEXT");
    agx_custom_glad_glGetUnsignedBytevEXT = (PFNGLGETUNSIGNEDBYTEVEXTPROC) load(userptr, "glGetUnsignedBytevEXT");
    agx_custom_glad_glIsMemoryObjectEXT = (PFNGLISMEMORYOBJECTEXTPROC) load(userptr, "glIsMemoryObjectEXT");
    agx_custom_glad_glMemoryObjectParameterivEXT = (PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) load(userptr, "glMemoryObjectParameterivEXT");
    agx_custom_glad_glNamedBufferStorageMemEXT = (PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) load(userptr, "glNamedBufferStorageMemEXT");
    agx_custom_glad_glTexStorageMem1DEXT = (PFNGLTEXSTORAGEMEM1DEXTPROC) load(userptr, "glTexStorageMem1DEXT");
    agx_custom_glad_glTexStorageMem2DEXT = (PFNGLTEXSTORAGEMEM2DEXTPROC) load(userptr, "glTexStorageMem2DEXT");
    agx_custom_glad_glTexStorageMem2DMultisampleEXT = (PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) load(userptr, "glTexStorageMem2DMultisampleEXT");
    agx_custom_glad_glTexStorageMem3DEXT = (PFNGLTEXSTORAGEMEM3DEXTPROC) load(userptr, "glTexStorageMem3DEXT");
    agx_custom_glad_glTexStorageMem3DMultisampleEXT = (PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) load(userptr, "glTexStorageMem3DMultisampleEXT");
    agx_custom_glad_glTextureStorageMem1DEXT = (PFNGLTEXTURESTORAGEMEM1DEXTPROC) load(userptr, "glTextureStorageMem1DEXT");
    agx_custom_glad_glTextureStorageMem2DEXT = (PFNGLTEXTURESTORAGEMEM2DEXTPROC) load(userptr, "glTextureStorageMem2DEXT");
    agx_custom_glad_glTextureStorageMem2DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) load(userptr, "glTextureStorageMem2DMultisampleEXT");
    agx_custom_glad_glTextureStorageMem3DEXT = (PFNGLTEXTURESTORAGEMEM3DEXTPROC) load(userptr, "glTextureStorageMem3DEXT");
    agx_custom_glad_glTextureStorageMem3DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) load(userptr, "glTextureStorageMem3DMultisampleEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_memory_object_fd( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_memory_object_fd) return;
    agx_custom_glad_glImportMemoryFdEXT = (PFNGLIMPORTMEMORYFDEXTPROC) load(userptr, "glImportMemoryFdEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_memory_object_win32( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_memory_object_win32) return;
    agx_custom_glad_glImportMemoryWin32HandleEXT = (PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) load(userptr, "glImportMemoryWin32HandleEXT");
    agx_custom_glad_glImportMemoryWin32NameEXT = (PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) load(userptr, "glImportMemoryWin32NameEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_multi_draw_arrays( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_multi_draw_arrays) return;
    agx_custom_glad_glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC) load(userptr, "glMultiDrawArraysEXT");
    agx_custom_glad_glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC) load(userptr, "glMultiDrawElementsEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_multisample) return;
    agx_custom_glad_glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC) load(userptr, "glSampleMaskEXT");
    agx_custom_glad_glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC) load(userptr, "glSamplePatternEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_paletted_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_paletted_texture) return;
    agx_custom_glad_glColorTableEXT = (PFNGLCOLORTABLEEXTPROC) load(userptr, "glColorTableEXT");
    agx_custom_glad_glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC) load(userptr, "glGetColorTableEXT");
    agx_custom_glad_glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) load(userptr, "glGetColorTableParameterfvEXT");
    agx_custom_glad_glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) load(userptr, "glGetColorTableParameterivEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_pixel_transform( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_pixel_transform) return;
    agx_custom_glad_glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) load(userptr, "glGetPixelTransformParameterfvEXT");
    agx_custom_glad_glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) load(userptr, "glGetPixelTransformParameterivEXT");
    agx_custom_glad_glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) load(userptr, "glPixelTransformParameterfEXT");
    agx_custom_glad_glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) load(userptr, "glPixelTransformParameterfvEXT");
    agx_custom_glad_glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) load(userptr, "glPixelTransformParameteriEXT");
    agx_custom_glad_glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) load(userptr, "glPixelTransformParameterivEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_point_parameters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_point_parameters) return;
    agx_custom_glad_glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC) load(userptr, "glPointParameterfEXT");
    agx_custom_glad_glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC) load(userptr, "glPointParameterfvEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_polygon_offset( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_polygon_offset) return;
    agx_custom_glad_glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC) load(userptr, "glPolygonOffsetEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_polygon_offset_clamp( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_polygon_offset_clamp) return;
    agx_custom_glad_glPolygonOffsetClampEXT = (PFNGLPOLYGONOFFSETCLAMPEXTPROC) load(userptr, "glPolygonOffsetClampEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_provoking_vertex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_provoking_vertex) return;
    agx_custom_glad_glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC) load(userptr, "glProvokingVertexEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_raster_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_raster_multisample) return;
    agx_custom_glad_glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC) load(userptr, "glRasterSamplesEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_secondary_color( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_secondary_color) return;
    agx_custom_glad_glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC) load(userptr, "glSecondaryColor3bEXT");
    agx_custom_glad_glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC) load(userptr, "glSecondaryColor3bvEXT");
    agx_custom_glad_glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC) load(userptr, "glSecondaryColor3dEXT");
    agx_custom_glad_glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC) load(userptr, "glSecondaryColor3dvEXT");
    agx_custom_glad_glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC) load(userptr, "glSecondaryColor3fEXT");
    agx_custom_glad_glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC) load(userptr, "glSecondaryColor3fvEXT");
    agx_custom_glad_glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC) load(userptr, "glSecondaryColor3iEXT");
    agx_custom_glad_glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC) load(userptr, "glSecondaryColor3ivEXT");
    agx_custom_glad_glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC) load(userptr, "glSecondaryColor3sEXT");
    agx_custom_glad_glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC) load(userptr, "glSecondaryColor3svEXT");
    agx_custom_glad_glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC) load(userptr, "glSecondaryColor3ubEXT");
    agx_custom_glad_glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC) load(userptr, "glSecondaryColor3ubvEXT");
    agx_custom_glad_glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC) load(userptr, "glSecondaryColor3uiEXT");
    agx_custom_glad_glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC) load(userptr, "glSecondaryColor3uivEXT");
    agx_custom_glad_glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC) load(userptr, "glSecondaryColor3usEXT");
    agx_custom_glad_glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC) load(userptr, "glSecondaryColor3usvEXT");
    agx_custom_glad_glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC) load(userptr, "glSecondaryColorPointerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_semaphore( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_semaphore) return;
    agx_custom_glad_glDeleteSemaphoresEXT = (PFNGLDELETESEMAPHORESEXTPROC) load(userptr, "glDeleteSemaphoresEXT");
    agx_custom_glad_glGenSemaphoresEXT = (PFNGLGENSEMAPHORESEXTPROC) load(userptr, "glGenSemaphoresEXT");
    agx_custom_glad_glGetSemaphoreParameterui64vEXT = (PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) load(userptr, "glGetSemaphoreParameterui64vEXT");
    agx_custom_glad_glGetUnsignedBytei_vEXT = (PFNGLGETUNSIGNEDBYTEI_VEXTPROC) load(userptr, "glGetUnsignedBytei_vEXT");
    agx_custom_glad_glGetUnsignedBytevEXT = (PFNGLGETUNSIGNEDBYTEVEXTPROC) load(userptr, "glGetUnsignedBytevEXT");
    agx_custom_glad_glIsSemaphoreEXT = (PFNGLISSEMAPHOREEXTPROC) load(userptr, "glIsSemaphoreEXT");
    agx_custom_glad_glSemaphoreParameterui64vEXT = (PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) load(userptr, "glSemaphoreParameterui64vEXT");
    agx_custom_glad_glSignalSemaphoreEXT = (PFNGLSIGNALSEMAPHOREEXTPROC) load(userptr, "glSignalSemaphoreEXT");
    agx_custom_glad_glWaitSemaphoreEXT = (PFNGLWAITSEMAPHOREEXTPROC) load(userptr, "glWaitSemaphoreEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_semaphore_fd( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_semaphore_fd) return;
    agx_custom_glad_glImportSemaphoreFdEXT = (PFNGLIMPORTSEMAPHOREFDEXTPROC) load(userptr, "glImportSemaphoreFdEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_semaphore_win32( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_semaphore_win32) return;
    agx_custom_glad_glImportSemaphoreWin32HandleEXT = (PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) load(userptr, "glImportSemaphoreWin32HandleEXT");
    agx_custom_glad_glImportSemaphoreWin32NameEXT = (PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) load(userptr, "glImportSemaphoreWin32NameEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_separate_shader_objects( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_separate_shader_objects) return;
    agx_custom_glad_glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC) load(userptr, "glActiveProgramEXT");
    agx_custom_glad_glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC) load(userptr, "glCreateShaderProgramEXT");
    agx_custom_glad_glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC) load(userptr, "glUseShaderProgramEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_shader_framebuffer_fetch_non_coherent( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent) return;
    agx_custom_glad_glFramebufferFetchBarrierEXT = (PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) load(userptr, "glFramebufferFetchBarrierEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_shader_image_load_store( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_store) return;
    agx_custom_glad_glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC) load(userptr, "glBindImageTextureEXT");
    agx_custom_glad_glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC) load(userptr, "glMemoryBarrierEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_stencil_clear_tag( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_stencil_clear_tag) return;
    agx_custom_glad_glStencilClearTagEXT = (PFNGLSTENCILCLEARTAGEXTPROC) load(userptr, "glStencilClearTagEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_stencil_two_side( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_stencil_two_side) return;
    agx_custom_glad_glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC) load(userptr, "glActiveStencilFaceEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_subtexture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_subtexture) return;
    agx_custom_glad_glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC) load(userptr, "glTexSubImage1DEXT");
    agx_custom_glad_glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC) load(userptr, "glTexSubImage2DEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture3D( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture3D) return;
    agx_custom_glad_glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC) load(userptr, "glTexImage3DEXT");
    agx_custom_glad_glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC) load(userptr, "glTexSubImage3DEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture_array) return;
    agx_custom_glad_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) load(userptr, "glFramebufferTextureLayerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture_buffer_object) return;
    agx_custom_glad_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC) load(userptr, "glTexBufferEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture_integer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture_integer) return;
    agx_custom_glad_glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC) load(userptr, "glClearColorIiEXT");
    agx_custom_glad_glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC) load(userptr, "glClearColorIuiEXT");
    agx_custom_glad_glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC) load(userptr, "glGetTexParameterIivEXT");
    agx_custom_glad_glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC) load(userptr, "glGetTexParameterIuivEXT");
    agx_custom_glad_glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC) load(userptr, "glTexParameterIivEXT");
    agx_custom_glad_glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC) load(userptr, "glTexParameterIuivEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture_object) return;
    agx_custom_glad_glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC) load(userptr, "glAreTexturesResidentEXT");
    agx_custom_glad_glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC) load(userptr, "glBindTextureEXT");
    agx_custom_glad_glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC) load(userptr, "glDeleteTexturesEXT");
    agx_custom_glad_glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC) load(userptr, "glGenTexturesEXT");
    agx_custom_glad_glIsTextureEXT = (PFNGLISTEXTUREEXTPROC) load(userptr, "glIsTextureEXT");
    agx_custom_glad_glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC) load(userptr, "glPrioritizeTexturesEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_texture_perturb_normal( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_texture_perturb_normal) return;
    agx_custom_glad_glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC) load(userptr, "glTextureNormalEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_timer_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_timer_query) return;
    agx_custom_glad_glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC) load(userptr, "glGetQueryObjecti64vEXT");
    agx_custom_glad_glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC) load(userptr, "glGetQueryObjectui64vEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_transform_feedback( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_transform_feedback) return;
    agx_custom_glad_glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) load(userptr, "glBeginTransformFeedbackEXT");
    agx_custom_glad_glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC) load(userptr, "glBindBufferBaseEXT");
    agx_custom_glad_glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC) load(userptr, "glBindBufferOffsetEXT");
    agx_custom_glad_glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC) load(userptr, "glBindBufferRangeEXT");
    agx_custom_glad_glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC) load(userptr, "glEndTransformFeedbackEXT");
    agx_custom_glad_glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) load(userptr, "glGetTransformFeedbackVaryingEXT");
    agx_custom_glad_glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) load(userptr, "glTransformFeedbackVaryingsEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_vertex_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_vertex_array) return;
    agx_custom_glad_glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC) load(userptr, "glArrayElementEXT");
    agx_custom_glad_glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC) load(userptr, "glColorPointerEXT");
    agx_custom_glad_glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC) load(userptr, "glDrawArraysEXT");
    agx_custom_glad_glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC) load(userptr, "glEdgeFlagPointerEXT");
    agx_custom_glad_glGetPointervEXT = (PFNGLGETPOINTERVEXTPROC) load(userptr, "glGetPointervEXT");
    agx_custom_glad_glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC) load(userptr, "glIndexPointerEXT");
    agx_custom_glad_glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC) load(userptr, "glNormalPointerEXT");
    agx_custom_glad_glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC) load(userptr, "glTexCoordPointerEXT");
    agx_custom_glad_glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC) load(userptr, "glVertexPointerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_vertex_attrib_64bit( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_vertex_attrib_64bit) return;
    agx_custom_glad_glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC) load(userptr, "glGetVertexAttribLdvEXT");
    agx_custom_glad_glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC) load(userptr, "glVertexAttribL1dEXT");
    agx_custom_glad_glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC) load(userptr, "glVertexAttribL1dvEXT");
    agx_custom_glad_glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC) load(userptr, "glVertexAttribL2dEXT");
    agx_custom_glad_glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC) load(userptr, "glVertexAttribL2dvEXT");
    agx_custom_glad_glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC) load(userptr, "glVertexAttribL3dEXT");
    agx_custom_glad_glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC) load(userptr, "glVertexAttribL3dvEXT");
    agx_custom_glad_glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC) load(userptr, "glVertexAttribL4dEXT");
    agx_custom_glad_glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC) load(userptr, "glVertexAttribL4dvEXT");
    agx_custom_glad_glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC) load(userptr, "glVertexAttribLPointerEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_vertex_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_vertex_shader) return;
    agx_custom_glad_glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC) load(userptr, "glBeginVertexShaderEXT");
    agx_custom_glad_glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC) load(userptr, "glBindLightParameterEXT");
    agx_custom_glad_glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC) load(userptr, "glBindMaterialParameterEXT");
    agx_custom_glad_glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC) load(userptr, "glBindParameterEXT");
    agx_custom_glad_glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC) load(userptr, "glBindTexGenParameterEXT");
    agx_custom_glad_glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) load(userptr, "glBindTextureUnitParameterEXT");
    agx_custom_glad_glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC) load(userptr, "glBindVertexShaderEXT");
    agx_custom_glad_glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC) load(userptr, "glDeleteVertexShaderEXT");
    agx_custom_glad_glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) load(userptr, "glDisableVariantClientStateEXT");
    agx_custom_glad_glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) load(userptr, "glEnableVariantClientStateEXT");
    agx_custom_glad_glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC) load(userptr, "glEndVertexShaderEXT");
    agx_custom_glad_glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC) load(userptr, "glExtractComponentEXT");
    agx_custom_glad_glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC) load(userptr, "glGenSymbolsEXT");
    agx_custom_glad_glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC) load(userptr, "glGenVertexShadersEXT");
    agx_custom_glad_glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC) load(userptr, "glGetInvariantBooleanvEXT");
    agx_custom_glad_glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC) load(userptr, "glGetInvariantFloatvEXT");
    agx_custom_glad_glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC) load(userptr, "glGetInvariantIntegervEXT");
    agx_custom_glad_glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) load(userptr, "glGetLocalConstantBooleanvEXT");
    agx_custom_glad_glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC) load(userptr, "glGetLocalConstantFloatvEXT");
    agx_custom_glad_glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) load(userptr, "glGetLocalConstantIntegervEXT");
    agx_custom_glad_glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC) load(userptr, "glGetVariantBooleanvEXT");
    agx_custom_glad_glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC) load(userptr, "glGetVariantFloatvEXT");
    agx_custom_glad_glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC) load(userptr, "glGetVariantIntegervEXT");
    agx_custom_glad_glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC) load(userptr, "glGetVariantPointervEXT");
    agx_custom_glad_glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC) load(userptr, "glInsertComponentEXT");
    agx_custom_glad_glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC) load(userptr, "glIsVariantEnabledEXT");
    agx_custom_glad_glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC) load(userptr, "glSetInvariantEXT");
    agx_custom_glad_glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC) load(userptr, "glSetLocalConstantEXT");
    agx_custom_glad_glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC) load(userptr, "glShaderOp1EXT");
    agx_custom_glad_glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC) load(userptr, "glShaderOp2EXT");
    agx_custom_glad_glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC) load(userptr, "glShaderOp3EXT");
    agx_custom_glad_glSwizzleEXT = (PFNGLSWIZZLEEXTPROC) load(userptr, "glSwizzleEXT");
    agx_custom_glad_glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC) load(userptr, "glVariantPointerEXT");
    agx_custom_glad_glVariantbvEXT = (PFNGLVARIANTBVEXTPROC) load(userptr, "glVariantbvEXT");
    agx_custom_glad_glVariantdvEXT = (PFNGLVARIANTDVEXTPROC) load(userptr, "glVariantdvEXT");
    agx_custom_glad_glVariantfvEXT = (PFNGLVARIANTFVEXTPROC) load(userptr, "glVariantfvEXT");
    agx_custom_glad_glVariantivEXT = (PFNGLVARIANTIVEXTPROC) load(userptr, "glVariantivEXT");
    agx_custom_glad_glVariantsvEXT = (PFNGLVARIANTSVEXTPROC) load(userptr, "glVariantsvEXT");
    agx_custom_glad_glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC) load(userptr, "glVariantubvEXT");
    agx_custom_glad_glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC) load(userptr, "glVariantuivEXT");
    agx_custom_glad_glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC) load(userptr, "glVariantusvEXT");
    agx_custom_glad_glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC) load(userptr, "glWriteMaskEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_vertex_weighting( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_vertex_weighting) return;
    agx_custom_glad_glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC) load(userptr, "glVertexWeightPointerEXT");
    agx_custom_glad_glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC) load(userptr, "glVertexWeightfEXT");
    agx_custom_glad_glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC) load(userptr, "glVertexWeightfvEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_win32_keyed_mutex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_win32_keyed_mutex) return;
    agx_custom_glad_glAcquireKeyedMutexWin32EXT = (PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) load(userptr, "glAcquireKeyedMutexWin32EXT");
    agx_custom_glad_glReleaseKeyedMutexWin32EXT = (PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) load(userptr, "glReleaseKeyedMutexWin32EXT");
}
static void agx_custom_glad_gl_load_GL_EXT_window_rectangles( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_window_rectangles) return;
    agx_custom_glad_glWindowRectanglesEXT = (PFNGLWINDOWRECTANGLESEXTPROC) load(userptr, "glWindowRectanglesEXT");
}
static void agx_custom_glad_gl_load_GL_EXT_x11_sync_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_EXT_x11_sync_object) return;
    agx_custom_glad_glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC) load(userptr, "glImportSyncEXT");
}
static void agx_custom_glad_gl_load_GL_GREMEDY_frame_terminator( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_GREMEDY_frame_terminator) return;
    agx_custom_glad_glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC) load(userptr, "glFrameTerminatorGREMEDY");
}
static void agx_custom_glad_gl_load_GL_GREMEDY_string_marker( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_GREMEDY_string_marker) return;
    agx_custom_glad_glStringMarkerGREMEDY = (PFNGLSTRINGMARKERGREMEDYPROC) load(userptr, "glStringMarkerGREMEDY");
}
static void agx_custom_glad_gl_load_GL_HP_image_transform( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_HP_image_transform) return;
    agx_custom_glad_glGetImageTransformParameterfvHP = (PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) load(userptr, "glGetImageTransformParameterfvHP");
    agx_custom_glad_glGetImageTransformParameterivHP = (PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) load(userptr, "glGetImageTransformParameterivHP");
    agx_custom_glad_glImageTransformParameterfHP = (PFNGLIMAGETRANSFORMPARAMETERFHPPROC) load(userptr, "glImageTransformParameterfHP");
    agx_custom_glad_glImageTransformParameterfvHP = (PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) load(userptr, "glImageTransformParameterfvHP");
    agx_custom_glad_glImageTransformParameteriHP = (PFNGLIMAGETRANSFORMPARAMETERIHPPROC) load(userptr, "glImageTransformParameteriHP");
    agx_custom_glad_glImageTransformParameterivHP = (PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) load(userptr, "glImageTransformParameterivHP");
}
static void agx_custom_glad_gl_load_GL_IBM_multimode_draw_arrays( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_IBM_multimode_draw_arrays) return;
    agx_custom_glad_glMultiModeDrawArraysIBM = (PFNGLMULTIMODEDRAWARRAYSIBMPROC) load(userptr, "glMultiModeDrawArraysIBM");
    agx_custom_glad_glMultiModeDrawElementsIBM = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC) load(userptr, "glMultiModeDrawElementsIBM");
}
static void agx_custom_glad_gl_load_GL_IBM_static_data( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_IBM_static_data) return;
    agx_custom_glad_glFlushStaticDataIBM = (PFNGLFLUSHSTATICDATAIBMPROC) load(userptr, "glFlushStaticDataIBM");
}
static void agx_custom_glad_gl_load_GL_IBM_vertex_array_lists( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_IBM_vertex_array_lists) return;
    agx_custom_glad_glColorPointerListIBM = (PFNGLCOLORPOINTERLISTIBMPROC) load(userptr, "glColorPointerListIBM");
    agx_custom_glad_glEdgeFlagPointerListIBM = (PFNGLEDGEFLAGPOINTERLISTIBMPROC) load(userptr, "glEdgeFlagPointerListIBM");
    agx_custom_glad_glFogCoordPointerListIBM = (PFNGLFOGCOORDPOINTERLISTIBMPROC) load(userptr, "glFogCoordPointerListIBM");
    agx_custom_glad_glIndexPointerListIBM = (PFNGLINDEXPOINTERLISTIBMPROC) load(userptr, "glIndexPointerListIBM");
    agx_custom_glad_glNormalPointerListIBM = (PFNGLNORMALPOINTERLISTIBMPROC) load(userptr, "glNormalPointerListIBM");
    agx_custom_glad_glSecondaryColorPointerListIBM = (PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) load(userptr, "glSecondaryColorPointerListIBM");
    agx_custom_glad_glTexCoordPointerListIBM = (PFNGLTEXCOORDPOINTERLISTIBMPROC) load(userptr, "glTexCoordPointerListIBM");
    agx_custom_glad_glVertexPointerListIBM = (PFNGLVERTEXPOINTERLISTIBMPROC) load(userptr, "glVertexPointerListIBM");
}
static void agx_custom_glad_gl_load_GL_INGR_blend_func_separate( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_INGR_blend_func_separate) return;
    agx_custom_glad_glBlendFuncSeparateINGR = (PFNGLBLENDFUNCSEPARATEINGRPROC) load(userptr, "glBlendFuncSeparateINGR");
}
static void agx_custom_glad_gl_load_GL_INTEL_framebuffer_CMAA( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_INTEL_framebuffer_CMAA) return;
    agx_custom_glad_glApplyFramebufferAttachmentCMAAINTEL = (PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) load(userptr, "glApplyFramebufferAttachmentCMAAINTEL");
}
static void agx_custom_glad_gl_load_GL_INTEL_map_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_INTEL_map_texture) return;
    agx_custom_glad_glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC) load(userptr, "glMapTexture2DINTEL");
    agx_custom_glad_glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC) load(userptr, "glSyncTextureINTEL");
    agx_custom_glad_glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC) load(userptr, "glUnmapTexture2DINTEL");
}
static void agx_custom_glad_gl_load_GL_INTEL_parallel_arrays( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_INTEL_parallel_arrays) return;
    agx_custom_glad_glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC) load(userptr, "glColorPointervINTEL");
    agx_custom_glad_glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC) load(userptr, "glNormalPointervINTEL");
    agx_custom_glad_glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC) load(userptr, "glTexCoordPointervINTEL");
    agx_custom_glad_glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC) load(userptr, "glVertexPointervINTEL");
}
static void agx_custom_glad_gl_load_GL_INTEL_performance_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_INTEL_performance_query) return;
    agx_custom_glad_glBeginPerfQueryINTEL = (PFNGLBEGINPERFQUERYINTELPROC) load(userptr, "glBeginPerfQueryINTEL");
    agx_custom_glad_glCreatePerfQueryINTEL = (PFNGLCREATEPERFQUERYINTELPROC) load(userptr, "glCreatePerfQueryINTEL");
    agx_custom_glad_glDeletePerfQueryINTEL = (PFNGLDELETEPERFQUERYINTELPROC) load(userptr, "glDeletePerfQueryINTEL");
    agx_custom_glad_glEndPerfQueryINTEL = (PFNGLENDPERFQUERYINTELPROC) load(userptr, "glEndPerfQueryINTEL");
    agx_custom_glad_glGetFirstPerfQueryIdINTEL = (PFNGLGETFIRSTPERFQUERYIDINTELPROC) load(userptr, "glGetFirstPerfQueryIdINTEL");
    agx_custom_glad_glGetNextPerfQueryIdINTEL = (PFNGLGETNEXTPERFQUERYIDINTELPROC) load(userptr, "glGetNextPerfQueryIdINTEL");
    agx_custom_glad_glGetPerfCounterInfoINTEL = (PFNGLGETPERFCOUNTERINFOINTELPROC) load(userptr, "glGetPerfCounterInfoINTEL");
    agx_custom_glad_glGetPerfQueryDataINTEL = (PFNGLGETPERFQUERYDATAINTELPROC) load(userptr, "glGetPerfQueryDataINTEL");
    agx_custom_glad_glGetPerfQueryIdByNameINTEL = (PFNGLGETPERFQUERYIDBYNAMEINTELPROC) load(userptr, "glGetPerfQueryIdByNameINTEL");
    agx_custom_glad_glGetPerfQueryInfoINTEL = (PFNGLGETPERFQUERYINFOINTELPROC) load(userptr, "glGetPerfQueryInfoINTEL");
}
static void agx_custom_glad_gl_load_GL_KHR_blend_equation_advanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced) return;
    agx_custom_glad_glBlendBarrierKHR = (PFNGLBLENDBARRIERKHRPROC) load(userptr, "glBlendBarrierKHR");
}
static void agx_custom_glad_gl_load_GL_KHR_debug( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_KHR_debug) return;
    agx_custom_glad_glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC) load(userptr, "glDebugMessageCallback");
    agx_custom_glad_glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC) load(userptr, "glDebugMessageControl");
    agx_custom_glad_glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC) load(userptr, "glDebugMessageInsert");
    agx_custom_glad_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC) load(userptr, "glGetDebugMessageLog");
    agx_custom_glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC) load(userptr, "glGetObjectLabel");
    agx_custom_glad_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC) load(userptr, "glGetObjectPtrLabel");
    agx_custom_glad_glGetPointerv = (PFNGLGETPOINTERVPROC) load(userptr, "glGetPointerv");
    agx_custom_glad_glObjectLabel = (PFNGLOBJECTLABELPROC) load(userptr, "glObjectLabel");
    agx_custom_glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC) load(userptr, "glObjectPtrLabel");
    agx_custom_glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC) load(userptr, "glPopDebugGroup");
    agx_custom_glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC) load(userptr, "glPushDebugGroup");
}
static void agx_custom_glad_gl_load_GL_KHR_parallel_shader_compile( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_KHR_parallel_shader_compile) return;
    agx_custom_glad_glMaxShaderCompilerThreadsKHR = (PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) load(userptr, "glMaxShaderCompilerThreadsKHR");
}
static void agx_custom_glad_gl_load_GL_KHR_robustness( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_KHR_robustness) return;
    agx_custom_glad_glGetGraphicsResetStatus = (PFNGLGETGRAPHICSRESETSTATUSPROC) load(userptr, "glGetGraphicsResetStatus");
    agx_custom_glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC) load(userptr, "glGetnUniformfv");
    agx_custom_glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC) load(userptr, "glGetnUniformiv");
    agx_custom_glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC) load(userptr, "glGetnUniformuiv");
    agx_custom_glad_glReadnPixels = (PFNGLREADNPIXELSPROC) load(userptr, "glReadnPixels");
}
static void agx_custom_glad_gl_load_GL_MESA_framebuffer_flip_y( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_y) return;
    agx_custom_glad_glFramebufferParameteriMESA = (PFNGLFRAMEBUFFERPARAMETERIMESAPROC) load(userptr, "glFramebufferParameteriMESA");
    agx_custom_glad_glGetFramebufferParameterivMESA = (PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) load(userptr, "glGetFramebufferParameterivMESA");
}
static void agx_custom_glad_gl_load_GL_MESA_resize_buffers( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_MESA_resize_buffers) return;
    agx_custom_glad_glResizeBuffersMESA = (PFNGLRESIZEBUFFERSMESAPROC) load(userptr, "glResizeBuffersMESA");
}
static void agx_custom_glad_gl_load_GL_MESA_window_pos( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_MESA_window_pos) return;
    agx_custom_glad_glWindowPos2dMESA = (PFNGLWINDOWPOS2DMESAPROC) load(userptr, "glWindowPos2dMESA");
    agx_custom_glad_glWindowPos2dvMESA = (PFNGLWINDOWPOS2DVMESAPROC) load(userptr, "glWindowPos2dvMESA");
    agx_custom_glad_glWindowPos2fMESA = (PFNGLWINDOWPOS2FMESAPROC) load(userptr, "glWindowPos2fMESA");
    agx_custom_glad_glWindowPos2fvMESA = (PFNGLWINDOWPOS2FVMESAPROC) load(userptr, "glWindowPos2fvMESA");
    agx_custom_glad_glWindowPos2iMESA = (PFNGLWINDOWPOS2IMESAPROC) load(userptr, "glWindowPos2iMESA");
    agx_custom_glad_glWindowPos2ivMESA = (PFNGLWINDOWPOS2IVMESAPROC) load(userptr, "glWindowPos2ivMESA");
    agx_custom_glad_glWindowPos2sMESA = (PFNGLWINDOWPOS2SMESAPROC) load(userptr, "glWindowPos2sMESA");
    agx_custom_glad_glWindowPos2svMESA = (PFNGLWINDOWPOS2SVMESAPROC) load(userptr, "glWindowPos2svMESA");
    agx_custom_glad_glWindowPos3dMESA = (PFNGLWINDOWPOS3DMESAPROC) load(userptr, "glWindowPos3dMESA");
    agx_custom_glad_glWindowPos3dvMESA = (PFNGLWINDOWPOS3DVMESAPROC) load(userptr, "glWindowPos3dvMESA");
    agx_custom_glad_glWindowPos3fMESA = (PFNGLWINDOWPOS3FMESAPROC) load(userptr, "glWindowPos3fMESA");
    agx_custom_glad_glWindowPos3fvMESA = (PFNGLWINDOWPOS3FVMESAPROC) load(userptr, "glWindowPos3fvMESA");
    agx_custom_glad_glWindowPos3iMESA = (PFNGLWINDOWPOS3IMESAPROC) load(userptr, "glWindowPos3iMESA");
    agx_custom_glad_glWindowPos3ivMESA = (PFNGLWINDOWPOS3IVMESAPROC) load(userptr, "glWindowPos3ivMESA");
    agx_custom_glad_glWindowPos3sMESA = (PFNGLWINDOWPOS3SMESAPROC) load(userptr, "glWindowPos3sMESA");
    agx_custom_glad_glWindowPos3svMESA = (PFNGLWINDOWPOS3SVMESAPROC) load(userptr, "glWindowPos3svMESA");
    agx_custom_glad_glWindowPos4dMESA = (PFNGLWINDOWPOS4DMESAPROC) load(userptr, "glWindowPos4dMESA");
    agx_custom_glad_glWindowPos4dvMESA = (PFNGLWINDOWPOS4DVMESAPROC) load(userptr, "glWindowPos4dvMESA");
    agx_custom_glad_glWindowPos4fMESA = (PFNGLWINDOWPOS4FMESAPROC) load(userptr, "glWindowPos4fMESA");
    agx_custom_glad_glWindowPos4fvMESA = (PFNGLWINDOWPOS4FVMESAPROC) load(userptr, "glWindowPos4fvMESA");
    agx_custom_glad_glWindowPos4iMESA = (PFNGLWINDOWPOS4IMESAPROC) load(userptr, "glWindowPos4iMESA");
    agx_custom_glad_glWindowPos4ivMESA = (PFNGLWINDOWPOS4IVMESAPROC) load(userptr, "glWindowPos4ivMESA");
    agx_custom_glad_glWindowPos4sMESA = (PFNGLWINDOWPOS4SMESAPROC) load(userptr, "glWindowPos4sMESA");
    agx_custom_glad_glWindowPos4svMESA = (PFNGLWINDOWPOS4SVMESAPROC) load(userptr, "glWindowPos4svMESA");
}
static void agx_custom_glad_gl_load_GL_NVX_conditional_render( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NVX_conditional_render) return;
    agx_custom_glad_glBeginConditionalRenderNVX = (PFNGLBEGINCONDITIONALRENDERNVXPROC) load(userptr, "glBeginConditionalRenderNVX");
    agx_custom_glad_glEndConditionalRenderNVX = (PFNGLENDCONDITIONALRENDERNVXPROC) load(userptr, "glEndConditionalRenderNVX");
}
static void agx_custom_glad_gl_load_GL_NVX_gpu_multicast2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NVX_gpu_multicast2) return;
    agx_custom_glad_glAsyncCopyBufferSubDataNVX = (PFNGLASYNCCOPYBUFFERSUBDATANVXPROC) load(userptr, "glAsyncCopyBufferSubDataNVX");
    agx_custom_glad_glAsyncCopyImageSubDataNVX = (PFNGLASYNCCOPYIMAGESUBDATANVXPROC) load(userptr, "glAsyncCopyImageSubDataNVX");
    agx_custom_glad_glMulticastScissorArrayvNVX = (PFNGLMULTICASTSCISSORARRAYVNVXPROC) load(userptr, "glMulticastScissorArrayvNVX");
    agx_custom_glad_glMulticastViewportArrayvNVX = (PFNGLMULTICASTVIEWPORTARRAYVNVXPROC) load(userptr, "glMulticastViewportArrayvNVX");
    agx_custom_glad_glMulticastViewportPositionWScaleNVX = (PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC) load(userptr, "glMulticastViewportPositionWScaleNVX");
    agx_custom_glad_glUploadGpuMaskNVX = (PFNGLUPLOADGPUMASKNVXPROC) load(userptr, "glUploadGpuMaskNVX");
}
static void agx_custom_glad_gl_load_GL_NVX_linked_gpu_multicast( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NVX_linked_gpu_multicast) return;
    agx_custom_glad_glLGPUCopyImageSubDataNVX = (PFNGLLGPUCOPYIMAGESUBDATANVXPROC) load(userptr, "glLGPUCopyImageSubDataNVX");
    agx_custom_glad_glLGPUInterlockNVX = (PFNGLLGPUINTERLOCKNVXPROC) load(userptr, "glLGPUInterlockNVX");
    agx_custom_glad_glLGPUNamedBufferSubDataNVX = (PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC) load(userptr, "glLGPUNamedBufferSubDataNVX");
}
static void agx_custom_glad_gl_load_GL_NVX_progress_fence( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NVX_progress_fence) return;
    agx_custom_glad_glClientWaitSemaphoreui64NVX = (PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC) load(userptr, "glClientWaitSemaphoreui64NVX");
    agx_custom_glad_glCreateProgressFenceNVX = (PFNGLCREATEPROGRESSFENCENVXPROC) load(userptr, "glCreateProgressFenceNVX");
    agx_custom_glad_glSignalSemaphoreui64NVX = (PFNGLSIGNALSEMAPHOREUI64NVXPROC) load(userptr, "glSignalSemaphoreui64NVX");
    agx_custom_glad_glWaitSemaphoreui64NVX = (PFNGLWAITSEMAPHOREUI64NVXPROC) load(userptr, "glWaitSemaphoreui64NVX");
}
static void agx_custom_glad_gl_load_GL_NV_alpha_to_coverage_dither_control( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_alpha_to_coverage_dither_control) return;
    agx_custom_glad_glAlphaToCoverageDitherControlNV = (PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) load(userptr, "glAlphaToCoverageDitherControlNV");
}
static void agx_custom_glad_gl_load_GL_NV_bindless_multi_draw_indirect( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect) return;
    agx_custom_glad_glMultiDrawArraysIndirectBindlessNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) load(userptr, "glMultiDrawArraysIndirectBindlessNV");
    agx_custom_glad_glMultiDrawElementsIndirectBindlessNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) load(userptr, "glMultiDrawElementsIndirectBindlessNV");
}
static void agx_custom_glad_gl_load_GL_NV_bindless_multi_draw_indirect_count( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect_count) return;
    agx_custom_glad_glMultiDrawArraysIndirectBindlessCountNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) load(userptr, "glMultiDrawArraysIndirectBindlessCountNV");
    agx_custom_glad_glMultiDrawElementsIndirectBindlessCountNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) load(userptr, "glMultiDrawElementsIndirectBindlessCountNV");
}
static void agx_custom_glad_gl_load_GL_NV_bindless_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_bindless_texture) return;
    agx_custom_glad_glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC) load(userptr, "glGetImageHandleNV");
    agx_custom_glad_glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC) load(userptr, "glGetTextureHandleNV");
    agx_custom_glad_glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC) load(userptr, "glGetTextureSamplerHandleNV");
    agx_custom_glad_glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC) load(userptr, "glIsImageHandleResidentNV");
    agx_custom_glad_glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC) load(userptr, "glIsTextureHandleResidentNV");
    agx_custom_glad_glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) load(userptr, "glMakeImageHandleNonResidentNV");
    agx_custom_glad_glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) load(userptr, "glMakeImageHandleResidentNV");
    agx_custom_glad_glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) load(userptr, "glMakeTextureHandleNonResidentNV");
    agx_custom_glad_glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) load(userptr, "glMakeTextureHandleResidentNV");
    agx_custom_glad_glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) load(userptr, "glProgramUniformHandleui64NV");
    agx_custom_glad_glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) load(userptr, "glProgramUniformHandleui64vNV");
    agx_custom_glad_glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC) load(userptr, "glUniformHandleui64NV");
    agx_custom_glad_glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC) load(userptr, "glUniformHandleui64vNV");
}
static void agx_custom_glad_gl_load_GL_NV_blend_equation_advanced( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced) return;
    agx_custom_glad_glBlendBarrierNV = (PFNGLBLENDBARRIERNVPROC) load(userptr, "glBlendBarrierNV");
    agx_custom_glad_glBlendParameteriNV = (PFNGLBLENDPARAMETERINVPROC) load(userptr, "glBlendParameteriNV");
}
static void agx_custom_glad_gl_load_GL_NV_clip_space_w_scaling( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_clip_space_w_scaling) return;
    agx_custom_glad_glViewportPositionWScaleNV = (PFNGLVIEWPORTPOSITIONWSCALENVPROC) load(userptr, "glViewportPositionWScaleNV");
}
static void agx_custom_glad_gl_load_GL_NV_command_list( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_command_list) return;
    agx_custom_glad_glCallCommandListNV = (PFNGLCALLCOMMANDLISTNVPROC) load(userptr, "glCallCommandListNV");
    agx_custom_glad_glCommandListSegmentsNV = (PFNGLCOMMANDLISTSEGMENTSNVPROC) load(userptr, "glCommandListSegmentsNV");
    agx_custom_glad_glCompileCommandListNV = (PFNGLCOMPILECOMMANDLISTNVPROC) load(userptr, "glCompileCommandListNV");
    agx_custom_glad_glCreateCommandListsNV = (PFNGLCREATECOMMANDLISTSNVPROC) load(userptr, "glCreateCommandListsNV");
    agx_custom_glad_glCreateStatesNV = (PFNGLCREATESTATESNVPROC) load(userptr, "glCreateStatesNV");
    agx_custom_glad_glDeleteCommandListsNV = (PFNGLDELETECOMMANDLISTSNVPROC) load(userptr, "glDeleteCommandListsNV");
    agx_custom_glad_glDeleteStatesNV = (PFNGLDELETESTATESNVPROC) load(userptr, "glDeleteStatesNV");
    agx_custom_glad_glDrawCommandsAddressNV = (PFNGLDRAWCOMMANDSADDRESSNVPROC) load(userptr, "glDrawCommandsAddressNV");
    agx_custom_glad_glDrawCommandsNV = (PFNGLDRAWCOMMANDSNVPROC) load(userptr, "glDrawCommandsNV");
    agx_custom_glad_glDrawCommandsStatesAddressNV = (PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) load(userptr, "glDrawCommandsStatesAddressNV");
    agx_custom_glad_glDrawCommandsStatesNV = (PFNGLDRAWCOMMANDSSTATESNVPROC) load(userptr, "glDrawCommandsStatesNV");
    agx_custom_glad_glGetCommandHeaderNV = (PFNGLGETCOMMANDHEADERNVPROC) load(userptr, "glGetCommandHeaderNV");
    agx_custom_glad_glGetStageIndexNV = (PFNGLGETSTAGEINDEXNVPROC) load(userptr, "glGetStageIndexNV");
    agx_custom_glad_glIsCommandListNV = (PFNGLISCOMMANDLISTNVPROC) load(userptr, "glIsCommandListNV");
    agx_custom_glad_glIsStateNV = (PFNGLISSTATENVPROC) load(userptr, "glIsStateNV");
    agx_custom_glad_glListDrawCommandsStatesClientNV = (PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) load(userptr, "glListDrawCommandsStatesClientNV");
    agx_custom_glad_glStateCaptureNV = (PFNGLSTATECAPTURENVPROC) load(userptr, "glStateCaptureNV");
}
static void agx_custom_glad_gl_load_GL_NV_conditional_render( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_conditional_render) return;
    agx_custom_glad_glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC) load(userptr, "glBeginConditionalRenderNV");
    agx_custom_glad_glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC) load(userptr, "glEndConditionalRenderNV");
}
static void agx_custom_glad_gl_load_GL_NV_conservative_raster( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_conservative_raster) return;
    agx_custom_glad_glSubpixelPrecisionBiasNV = (PFNGLSUBPIXELPRECISIONBIASNVPROC) load(userptr, "glSubpixelPrecisionBiasNV");
}
static void agx_custom_glad_gl_load_GL_NV_conservative_raster_dilate( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_conservative_raster_dilate) return;
    agx_custom_glad_glConservativeRasterParameterfNV = (PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) load(userptr, "glConservativeRasterParameterfNV");
}
static void agx_custom_glad_gl_load_GL_NV_conservative_raster_pre_snap_triangles( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap_triangles) return;
    agx_custom_glad_glConservativeRasterParameteriNV = (PFNGLCONSERVATIVERASTERPARAMETERINVPROC) load(userptr, "glConservativeRasterParameteriNV");
}
static void agx_custom_glad_gl_load_GL_NV_copy_image( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_copy_image) return;
    agx_custom_glad_glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC) load(userptr, "glCopyImageSubDataNV");
}
static void agx_custom_glad_gl_load_GL_NV_depth_buffer_float( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_depth_buffer_float) return;
    agx_custom_glad_glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC) load(userptr, "glClearDepthdNV");
    agx_custom_glad_glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC) load(userptr, "glDepthBoundsdNV");
    agx_custom_glad_glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC) load(userptr, "glDepthRangedNV");
}
static void agx_custom_glad_gl_load_GL_NV_draw_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_draw_texture) return;
    agx_custom_glad_glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC) load(userptr, "glDrawTextureNV");
}
static void agx_custom_glad_gl_load_GL_NV_draw_vulkan_image( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_draw_vulkan_image) return;
    agx_custom_glad_glDrawVkImageNV = (PFNGLDRAWVKIMAGENVPROC) load(userptr, "glDrawVkImageNV");
    agx_custom_glad_glGetVkProcAddrNV = (PFNGLGETVKPROCADDRNVPROC) load(userptr, "glGetVkProcAddrNV");
    agx_custom_glad_glSignalVkFenceNV = (PFNGLSIGNALVKFENCENVPROC) load(userptr, "glSignalVkFenceNV");
    agx_custom_glad_glSignalVkSemaphoreNV = (PFNGLSIGNALVKSEMAPHORENVPROC) load(userptr, "glSignalVkSemaphoreNV");
    agx_custom_glad_glWaitVkSemaphoreNV = (PFNGLWAITVKSEMAPHORENVPROC) load(userptr, "glWaitVkSemaphoreNV");
}
static void agx_custom_glad_gl_load_GL_NV_evaluators( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_evaluators) return;
    agx_custom_glad_glEvalMapsNV = (PFNGLEVALMAPSNVPROC) load(userptr, "glEvalMapsNV");
    agx_custom_glad_glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC) load(userptr, "glGetMapAttribParameterfvNV");
    agx_custom_glad_glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC) load(userptr, "glGetMapAttribParameterivNV");
    agx_custom_glad_glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC) load(userptr, "glGetMapControlPointsNV");
    agx_custom_glad_glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC) load(userptr, "glGetMapParameterfvNV");
    agx_custom_glad_glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC) load(userptr, "glGetMapParameterivNV");
    agx_custom_glad_glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC) load(userptr, "glMapControlPointsNV");
    agx_custom_glad_glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC) load(userptr, "glMapParameterfvNV");
    agx_custom_glad_glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC) load(userptr, "glMapParameterivNV");
}
static void agx_custom_glad_gl_load_GL_NV_explicit_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_explicit_multisample) return;
    agx_custom_glad_glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC) load(userptr, "glGetMultisamplefvNV");
    agx_custom_glad_glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC) load(userptr, "glSampleMaskIndexedNV");
    agx_custom_glad_glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC) load(userptr, "glTexRenderbufferNV");
}
static void agx_custom_glad_gl_load_GL_NV_fence( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_fence) return;
    agx_custom_glad_glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC) load(userptr, "glDeleteFencesNV");
    agx_custom_glad_glFinishFenceNV = (PFNGLFINISHFENCENVPROC) load(userptr, "glFinishFenceNV");
    agx_custom_glad_glGenFencesNV = (PFNGLGENFENCESNVPROC) load(userptr, "glGenFencesNV");
    agx_custom_glad_glGetFenceivNV = (PFNGLGETFENCEIVNVPROC) load(userptr, "glGetFenceivNV");
    agx_custom_glad_glIsFenceNV = (PFNGLISFENCENVPROC) load(userptr, "glIsFenceNV");
    agx_custom_glad_glSetFenceNV = (PFNGLSETFENCENVPROC) load(userptr, "glSetFenceNV");
    agx_custom_glad_glTestFenceNV = (PFNGLTESTFENCENVPROC) load(userptr, "glTestFenceNV");
}
static void agx_custom_glad_gl_load_GL_NV_fragment_coverage_to_color( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_fragment_coverage_to_color) return;
    agx_custom_glad_glFragmentCoverageColorNV = (PFNGLFRAGMENTCOVERAGECOLORNVPROC) load(userptr, "glFragmentCoverageColorNV");
}
static void agx_custom_glad_gl_load_GL_NV_fragment_program( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_fragment_program) return;
    agx_custom_glad_glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) load(userptr, "glGetProgramNamedParameterdvNV");
    agx_custom_glad_glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) load(userptr, "glGetProgramNamedParameterfvNV");
    agx_custom_glad_glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) load(userptr, "glProgramNamedParameter4dNV");
    agx_custom_glad_glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) load(userptr, "glProgramNamedParameter4dvNV");
    agx_custom_glad_glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) load(userptr, "glProgramNamedParameter4fNV");
    agx_custom_glad_glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) load(userptr, "glProgramNamedParameter4fvNV");
}
static void agx_custom_glad_gl_load_GL_NV_framebuffer_mixed_samples( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_framebuffer_mixed_samples) return;
    agx_custom_glad_glCoverageModulationNV = (PFNGLCOVERAGEMODULATIONNVPROC) load(userptr, "glCoverageModulationNV");
    agx_custom_glad_glCoverageModulationTableNV = (PFNGLCOVERAGEMODULATIONTABLENVPROC) load(userptr, "glCoverageModulationTableNV");
    agx_custom_glad_glGetCoverageModulationTableNV = (PFNGLGETCOVERAGEMODULATIONTABLENVPROC) load(userptr, "glGetCoverageModulationTableNV");
    agx_custom_glad_glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC) load(userptr, "glRasterSamplesEXT");
}
static void agx_custom_glad_gl_load_GL_NV_framebuffer_multisample_coverage( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_framebuffer_multisample_coverage) return;
    agx_custom_glad_glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) load(userptr, "glRenderbufferStorageMultisampleCoverageNV");
}
static void agx_custom_glad_gl_load_GL_NV_geometry_program4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_geometry_program4) return;
    agx_custom_glad_glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC) load(userptr, "glFramebufferTextureEXT");
    agx_custom_glad_glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) load(userptr, "glFramebufferTextureFaceEXT");
    agx_custom_glad_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) load(userptr, "glFramebufferTextureLayerEXT");
    agx_custom_glad_glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC) load(userptr, "glProgramVertexLimitNV");
}
static void agx_custom_glad_gl_load_GL_NV_gpu_multicast( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_gpu_multicast) return;
    agx_custom_glad_glMulticastBarrierNV = (PFNGLMULTICASTBARRIERNVPROC) load(userptr, "glMulticastBarrierNV");
    agx_custom_glad_glMulticastBlitFramebufferNV = (PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) load(userptr, "glMulticastBlitFramebufferNV");
    agx_custom_glad_glMulticastBufferSubDataNV = (PFNGLMULTICASTBUFFERSUBDATANVPROC) load(userptr, "glMulticastBufferSubDataNV");
    agx_custom_glad_glMulticastCopyBufferSubDataNV = (PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) load(userptr, "glMulticastCopyBufferSubDataNV");
    agx_custom_glad_glMulticastCopyImageSubDataNV = (PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) load(userptr, "glMulticastCopyImageSubDataNV");
    agx_custom_glad_glMulticastFramebufferSampleLocationsfvNV = (PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) load(userptr, "glMulticastFramebufferSampleLocationsfvNV");
    agx_custom_glad_glMulticastGetQueryObjecti64vNV = (PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) load(userptr, "glMulticastGetQueryObjecti64vNV");
    agx_custom_glad_glMulticastGetQueryObjectivNV = (PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) load(userptr, "glMulticastGetQueryObjectivNV");
    agx_custom_glad_glMulticastGetQueryObjectui64vNV = (PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) load(userptr, "glMulticastGetQueryObjectui64vNV");
    agx_custom_glad_glMulticastGetQueryObjectuivNV = (PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) load(userptr, "glMulticastGetQueryObjectuivNV");
    agx_custom_glad_glMulticastWaitSyncNV = (PFNGLMULTICASTWAITSYNCNVPROC) load(userptr, "glMulticastWaitSyncNV");
    agx_custom_glad_glRenderGpuMaskNV = (PFNGLRENDERGPUMASKNVPROC) load(userptr, "glRenderGpuMaskNV");
}
static void agx_custom_glad_gl_load_GL_NV_gpu_program4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_gpu_program4) return;
    agx_custom_glad_glGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) load(userptr, "glGetProgramEnvParameterIivNV");
    agx_custom_glad_glGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) load(userptr, "glGetProgramEnvParameterIuivNV");
    agx_custom_glad_glGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) load(userptr, "glGetProgramLocalParameterIivNV");
    agx_custom_glad_glGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) load(userptr, "glGetProgramLocalParameterIuivNV");
    agx_custom_glad_glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC) load(userptr, "glProgramEnvParameterI4iNV");
    agx_custom_glad_glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC) load(userptr, "glProgramEnvParameterI4ivNV");
    agx_custom_glad_glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC) load(userptr, "glProgramEnvParameterI4uiNV");
    agx_custom_glad_glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) load(userptr, "glProgramEnvParameterI4uivNV");
    agx_custom_glad_glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) load(userptr, "glProgramEnvParametersI4ivNV");
    agx_custom_glad_glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) load(userptr, "glProgramEnvParametersI4uivNV");
    agx_custom_glad_glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC) load(userptr, "glProgramLocalParameterI4iNV");
    agx_custom_glad_glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) load(userptr, "glProgramLocalParameterI4ivNV");
    agx_custom_glad_glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) load(userptr, "glProgramLocalParameterI4uiNV");
    agx_custom_glad_glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) load(userptr, "glProgramLocalParameterI4uivNV");
    agx_custom_glad_glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) load(userptr, "glProgramLocalParametersI4ivNV");
    agx_custom_glad_glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) load(userptr, "glProgramLocalParametersI4uivNV");
}
static void agx_custom_glad_gl_load_GL_NV_gpu_program5( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_gpu_program5) return;
    agx_custom_glad_glGetProgramSubroutineParameteruivNV = (PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) load(userptr, "glGetProgramSubroutineParameteruivNV");
    agx_custom_glad_glProgramSubroutineParametersuivNV = (PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) load(userptr, "glProgramSubroutineParametersuivNV");
}
static void agx_custom_glad_gl_load_GL_NV_gpu_shader5( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_gpu_shader5) return;
    agx_custom_glad_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC) load(userptr, "glGetUniformi64vNV");
    agx_custom_glad_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC) load(userptr, "glProgramUniform1i64NV");
    agx_custom_glad_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC) load(userptr, "glProgramUniform1i64vNV");
    agx_custom_glad_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC) load(userptr, "glProgramUniform1ui64NV");
    agx_custom_glad_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC) load(userptr, "glProgramUniform1ui64vNV");
    agx_custom_glad_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC) load(userptr, "glProgramUniform2i64NV");
    agx_custom_glad_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC) load(userptr, "glProgramUniform2i64vNV");
    agx_custom_glad_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC) load(userptr, "glProgramUniform2ui64NV");
    agx_custom_glad_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC) load(userptr, "glProgramUniform2ui64vNV");
    agx_custom_glad_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC) load(userptr, "glProgramUniform3i64NV");
    agx_custom_glad_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC) load(userptr, "glProgramUniform3i64vNV");
    agx_custom_glad_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC) load(userptr, "glProgramUniform3ui64NV");
    agx_custom_glad_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC) load(userptr, "glProgramUniform3ui64vNV");
    agx_custom_glad_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC) load(userptr, "glProgramUniform4i64NV");
    agx_custom_glad_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC) load(userptr, "glProgramUniform4i64vNV");
    agx_custom_glad_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC) load(userptr, "glProgramUniform4ui64NV");
    agx_custom_glad_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC) load(userptr, "glProgramUniform4ui64vNV");
    agx_custom_glad_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC) load(userptr, "glUniform1i64NV");
    agx_custom_glad_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC) load(userptr, "glUniform1i64vNV");
    agx_custom_glad_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC) load(userptr, "glUniform1ui64NV");
    agx_custom_glad_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC) load(userptr, "glUniform1ui64vNV");
    agx_custom_glad_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC) load(userptr, "glUniform2i64NV");
    agx_custom_glad_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC) load(userptr, "glUniform2i64vNV");
    agx_custom_glad_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC) load(userptr, "glUniform2ui64NV");
    agx_custom_glad_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC) load(userptr, "glUniform2ui64vNV");
    agx_custom_glad_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC) load(userptr, "glUniform3i64NV");
    agx_custom_glad_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC) load(userptr, "glUniform3i64vNV");
    agx_custom_glad_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC) load(userptr, "glUniform3ui64NV");
    agx_custom_glad_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC) load(userptr, "glUniform3ui64vNV");
    agx_custom_glad_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC) load(userptr, "glUniform4i64NV");
    agx_custom_glad_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC) load(userptr, "glUniform4i64vNV");
    agx_custom_glad_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC) load(userptr, "glUniform4ui64NV");
    agx_custom_glad_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC) load(userptr, "glUniform4ui64vNV");
}
static void agx_custom_glad_gl_load_GL_NV_half_float( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_half_float) return;
    agx_custom_glad_glColor3hNV = (PFNGLCOLOR3HNVPROC) load(userptr, "glColor3hNV");
    agx_custom_glad_glColor3hvNV = (PFNGLCOLOR3HVNVPROC) load(userptr, "glColor3hvNV");
    agx_custom_glad_glColor4hNV = (PFNGLCOLOR4HNVPROC) load(userptr, "glColor4hNV");
    agx_custom_glad_glColor4hvNV = (PFNGLCOLOR4HVNVPROC) load(userptr, "glColor4hvNV");
    agx_custom_glad_glFogCoordhNV = (PFNGLFOGCOORDHNVPROC) load(userptr, "glFogCoordhNV");
    agx_custom_glad_glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC) load(userptr, "glFogCoordhvNV");
    agx_custom_glad_glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC) load(userptr, "glMultiTexCoord1hNV");
    agx_custom_glad_glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC) load(userptr, "glMultiTexCoord1hvNV");
    agx_custom_glad_glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC) load(userptr, "glMultiTexCoord2hNV");
    agx_custom_glad_glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC) load(userptr, "glMultiTexCoord2hvNV");
    agx_custom_glad_glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC) load(userptr, "glMultiTexCoord3hNV");
    agx_custom_glad_glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC) load(userptr, "glMultiTexCoord3hvNV");
    agx_custom_glad_glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC) load(userptr, "glMultiTexCoord4hNV");
    agx_custom_glad_glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC) load(userptr, "glMultiTexCoord4hvNV");
    agx_custom_glad_glNormal3hNV = (PFNGLNORMAL3HNVPROC) load(userptr, "glNormal3hNV");
    agx_custom_glad_glNormal3hvNV = (PFNGLNORMAL3HVNVPROC) load(userptr, "glNormal3hvNV");
    agx_custom_glad_glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC) load(userptr, "glSecondaryColor3hNV");
    agx_custom_glad_glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC) load(userptr, "glSecondaryColor3hvNV");
    agx_custom_glad_glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC) load(userptr, "glTexCoord1hNV");
    agx_custom_glad_glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC) load(userptr, "glTexCoord1hvNV");
    agx_custom_glad_glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC) load(userptr, "glTexCoord2hNV");
    agx_custom_glad_glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC) load(userptr, "glTexCoord2hvNV");
    agx_custom_glad_glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC) load(userptr, "glTexCoord3hNV");
    agx_custom_glad_glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC) load(userptr, "glTexCoord3hvNV");
    agx_custom_glad_glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC) load(userptr, "glTexCoord4hNV");
    agx_custom_glad_glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC) load(userptr, "glTexCoord4hvNV");
    agx_custom_glad_glVertex2hNV = (PFNGLVERTEX2HNVPROC) load(userptr, "glVertex2hNV");
    agx_custom_glad_glVertex2hvNV = (PFNGLVERTEX2HVNVPROC) load(userptr, "glVertex2hvNV");
    agx_custom_glad_glVertex3hNV = (PFNGLVERTEX3HNVPROC) load(userptr, "glVertex3hNV");
    agx_custom_glad_glVertex3hvNV = (PFNGLVERTEX3HVNVPROC) load(userptr, "glVertex3hvNV");
    agx_custom_glad_glVertex4hNV = (PFNGLVERTEX4HNVPROC) load(userptr, "glVertex4hNV");
    agx_custom_glad_glVertex4hvNV = (PFNGLVERTEX4HVNVPROC) load(userptr, "glVertex4hvNV");
    agx_custom_glad_glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC) load(userptr, "glVertexAttrib1hNV");
    agx_custom_glad_glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC) load(userptr, "glVertexAttrib1hvNV");
    agx_custom_glad_glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC) load(userptr, "glVertexAttrib2hNV");
    agx_custom_glad_glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC) load(userptr, "glVertexAttrib2hvNV");
    agx_custom_glad_glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC) load(userptr, "glVertexAttrib3hNV");
    agx_custom_glad_glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC) load(userptr, "glVertexAttrib3hvNV");
    agx_custom_glad_glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC) load(userptr, "glVertexAttrib4hNV");
    agx_custom_glad_glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC) load(userptr, "glVertexAttrib4hvNV");
    agx_custom_glad_glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC) load(userptr, "glVertexAttribs1hvNV");
    agx_custom_glad_glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC) load(userptr, "glVertexAttribs2hvNV");
    agx_custom_glad_glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC) load(userptr, "glVertexAttribs3hvNV");
    agx_custom_glad_glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC) load(userptr, "glVertexAttribs4hvNV");
    agx_custom_glad_glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC) load(userptr, "glVertexWeighthNV");
    agx_custom_glad_glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC) load(userptr, "glVertexWeighthvNV");
}
static void agx_custom_glad_gl_load_GL_NV_internalformat_sample_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_internalformat_sample_query) return;
    agx_custom_glad_glGetInternalformatSampleivNV = (PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) load(userptr, "glGetInternalformatSampleivNV");
}
static void agx_custom_glad_gl_load_GL_NV_memory_attachment( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_memory_attachment) return;
    agx_custom_glad_glBufferAttachMemoryNV = (PFNGLBUFFERATTACHMEMORYNVPROC) load(userptr, "glBufferAttachMemoryNV");
    agx_custom_glad_glGetMemoryObjectDetachedResourcesuivNV = (PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) load(userptr, "glGetMemoryObjectDetachedResourcesuivNV");
    agx_custom_glad_glNamedBufferAttachMemoryNV = (PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) load(userptr, "glNamedBufferAttachMemoryNV");
    agx_custom_glad_glResetMemoryObjectParameterNV = (PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) load(userptr, "glResetMemoryObjectParameterNV");
    agx_custom_glad_glTexAttachMemoryNV = (PFNGLTEXATTACHMEMORYNVPROC) load(userptr, "glTexAttachMemoryNV");
    agx_custom_glad_glTextureAttachMemoryNV = (PFNGLTEXTUREATTACHMEMORYNVPROC) load(userptr, "glTextureAttachMemoryNV");
}
static void agx_custom_glad_gl_load_GL_NV_memory_object_sparse( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_memory_object_sparse) return;
    agx_custom_glad_glBufferPageCommitmentMemNV = (PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) load(userptr, "glBufferPageCommitmentMemNV");
    agx_custom_glad_glNamedBufferPageCommitmentMemNV = (PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) load(userptr, "glNamedBufferPageCommitmentMemNV");
    agx_custom_glad_glTexPageCommitmentMemNV = (PFNGLTEXPAGECOMMITMENTMEMNVPROC) load(userptr, "glTexPageCommitmentMemNV");
    agx_custom_glad_glTexturePageCommitmentMemNV = (PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) load(userptr, "glTexturePageCommitmentMemNV");
}
static void agx_custom_glad_gl_load_GL_NV_mesh_shader( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_mesh_shader) return;
    agx_custom_glad_glDrawMeshTasksIndirectNV = (PFNGLDRAWMESHTASKSINDIRECTNVPROC) load(userptr, "glDrawMeshTasksIndirectNV");
    agx_custom_glad_glDrawMeshTasksNV = (PFNGLDRAWMESHTASKSNVPROC) load(userptr, "glDrawMeshTasksNV");
    agx_custom_glad_glMultiDrawMeshTasksIndirectCountNV = (PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) load(userptr, "glMultiDrawMeshTasksIndirectCountNV");
    agx_custom_glad_glMultiDrawMeshTasksIndirectNV = (PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) load(userptr, "glMultiDrawMeshTasksIndirectNV");
}
static void agx_custom_glad_gl_load_GL_NV_occlusion_query( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_occlusion_query) return;
    agx_custom_glad_glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC) load(userptr, "glBeginOcclusionQueryNV");
    agx_custom_glad_glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC) load(userptr, "glDeleteOcclusionQueriesNV");
    agx_custom_glad_glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC) load(userptr, "glEndOcclusionQueryNV");
    agx_custom_glad_glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC) load(userptr, "glGenOcclusionQueriesNV");
    agx_custom_glad_glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC) load(userptr, "glGetOcclusionQueryivNV");
    agx_custom_glad_glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC) load(userptr, "glGetOcclusionQueryuivNV");
    agx_custom_glad_glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC) load(userptr, "glIsOcclusionQueryNV");
}
static void agx_custom_glad_gl_load_GL_NV_parameter_buffer_object( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object) return;
    agx_custom_glad_glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) load(userptr, "glProgramBufferParametersIivNV");
    agx_custom_glad_glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) load(userptr, "glProgramBufferParametersIuivNV");
    agx_custom_glad_glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) load(userptr, "glProgramBufferParametersfvNV");
}
static void agx_custom_glad_gl_load_GL_NV_path_rendering( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_path_rendering) return;
    agx_custom_glad_glCopyPathNV = (PFNGLCOPYPATHNVPROC) load(userptr, "glCopyPathNV");
    agx_custom_glad_glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC) load(userptr, "glCoverFillPathInstancedNV");
    agx_custom_glad_glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC) load(userptr, "glCoverFillPathNV");
    agx_custom_glad_glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) load(userptr, "glCoverStrokePathInstancedNV");
    agx_custom_glad_glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC) load(userptr, "glCoverStrokePathNV");
    agx_custom_glad_glDeletePathsNV = (PFNGLDELETEPATHSNVPROC) load(userptr, "glDeletePathsNV");
    agx_custom_glad_glGenPathsNV = (PFNGLGENPATHSNVPROC) load(userptr, "glGenPathsNV");
    agx_custom_glad_glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC) load(userptr, "glGetPathColorGenfvNV");
    agx_custom_glad_glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC) load(userptr, "glGetPathColorGenivNV");
    agx_custom_glad_glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC) load(userptr, "glGetPathCommandsNV");
    agx_custom_glad_glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC) load(userptr, "glGetPathCoordsNV");
    agx_custom_glad_glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC) load(userptr, "glGetPathDashArrayNV");
    agx_custom_glad_glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC) load(userptr, "glGetPathLengthNV");
    agx_custom_glad_glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC) load(userptr, "glGetPathMetricRangeNV");
    agx_custom_glad_glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC) load(userptr, "glGetPathMetricsNV");
    agx_custom_glad_glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC) load(userptr, "glGetPathParameterfvNV");
    agx_custom_glad_glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC) load(userptr, "glGetPathParameterivNV");
    agx_custom_glad_glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC) load(userptr, "glGetPathSpacingNV");
    agx_custom_glad_glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC) load(userptr, "glGetPathTexGenfvNV");
    agx_custom_glad_glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC) load(userptr, "glGetPathTexGenivNV");
    agx_custom_glad_glGetProgramResourcefvNV = (PFNGLGETPROGRAMRESOURCEFVNVPROC) load(userptr, "glGetProgramResourcefvNV");
    agx_custom_glad_glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC) load(userptr, "glInterpolatePathsNV");
    agx_custom_glad_glIsPathNV = (PFNGLISPATHNVPROC) load(userptr, "glIsPathNV");
    agx_custom_glad_glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC) load(userptr, "glIsPointInFillPathNV");
    agx_custom_glad_glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC) load(userptr, "glIsPointInStrokePathNV");
    agx_custom_glad_glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC) load(userptr, "glMatrixFrustumEXT");
    agx_custom_glad_glMatrixLoad3x2fNV = (PFNGLMATRIXLOAD3X2FNVPROC) load(userptr, "glMatrixLoad3x2fNV");
    agx_custom_glad_glMatrixLoad3x3fNV = (PFNGLMATRIXLOAD3X3FNVPROC) load(userptr, "glMatrixLoad3x3fNV");
    agx_custom_glad_glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC) load(userptr, "glMatrixLoadIdentityEXT");
    agx_custom_glad_glMatrixLoadTranspose3x3fNV = (PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) load(userptr, "glMatrixLoadTranspose3x3fNV");
    agx_custom_glad_glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC) load(userptr, "glMatrixLoadTransposedEXT");
    agx_custom_glad_glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC) load(userptr, "glMatrixLoadTransposefEXT");
    agx_custom_glad_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC) load(userptr, "glMatrixLoaddEXT");
    agx_custom_glad_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC) load(userptr, "glMatrixLoadfEXT");
    agx_custom_glad_glMatrixMult3x2fNV = (PFNGLMATRIXMULT3X2FNVPROC) load(userptr, "glMatrixMult3x2fNV");
    agx_custom_glad_glMatrixMult3x3fNV = (PFNGLMATRIXMULT3X3FNVPROC) load(userptr, "glMatrixMult3x3fNV");
    agx_custom_glad_glMatrixMultTranspose3x3fNV = (PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) load(userptr, "glMatrixMultTranspose3x3fNV");
    agx_custom_glad_glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC) load(userptr, "glMatrixMultTransposedEXT");
    agx_custom_glad_glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC) load(userptr, "glMatrixMultTransposefEXT");
    agx_custom_glad_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC) load(userptr, "glMatrixMultdEXT");
    agx_custom_glad_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC) load(userptr, "glMatrixMultfEXT");
    agx_custom_glad_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC) load(userptr, "glMatrixOrthoEXT");
    agx_custom_glad_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC) load(userptr, "glMatrixPopEXT");
    agx_custom_glad_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC) load(userptr, "glMatrixPushEXT");
    agx_custom_glad_glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC) load(userptr, "glMatrixRotatedEXT");
    agx_custom_glad_glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC) load(userptr, "glMatrixRotatefEXT");
    agx_custom_glad_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC) load(userptr, "glMatrixScaledEXT");
    agx_custom_glad_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC) load(userptr, "glMatrixScalefEXT");
    agx_custom_glad_glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC) load(userptr, "glMatrixTranslatedEXT");
    agx_custom_glad_glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC) load(userptr, "glMatrixTranslatefEXT");
    agx_custom_glad_glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC) load(userptr, "glPathColorGenNV");
    agx_custom_glad_glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC) load(userptr, "glPathCommandsNV");
    agx_custom_glad_glPathCoordsNV = (PFNGLPATHCOORDSNVPROC) load(userptr, "glPathCoordsNV");
    agx_custom_glad_glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC) load(userptr, "glPathCoverDepthFuncNV");
    agx_custom_glad_glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC) load(userptr, "glPathDashArrayNV");
    agx_custom_glad_glPathFogGenNV = (PFNGLPATHFOGGENNVPROC) load(userptr, "glPathFogGenNV");
    agx_custom_glad_glPathGlyphIndexArrayNV = (PFNGLPATHGLYPHINDEXARRAYNVPROC) load(userptr, "glPathGlyphIndexArrayNV");
    agx_custom_glad_glPathGlyphIndexRangeNV = (PFNGLPATHGLYPHINDEXRANGENVPROC) load(userptr, "glPathGlyphIndexRangeNV");
    agx_custom_glad_glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC) load(userptr, "glPathGlyphRangeNV");
    agx_custom_glad_glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC) load(userptr, "glPathGlyphsNV");
    agx_custom_glad_glPathMemoryGlyphIndexArrayNV = (PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) load(userptr, "glPathMemoryGlyphIndexArrayNV");
    agx_custom_glad_glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC) load(userptr, "glPathParameterfNV");
    agx_custom_glad_glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC) load(userptr, "glPathParameterfvNV");
    agx_custom_glad_glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC) load(userptr, "glPathParameteriNV");
    agx_custom_glad_glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC) load(userptr, "glPathParameterivNV");
    agx_custom_glad_glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC) load(userptr, "glPathStencilDepthOffsetNV");
    agx_custom_glad_glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC) load(userptr, "glPathStencilFuncNV");
    agx_custom_glad_glPathStringNV = (PFNGLPATHSTRINGNVPROC) load(userptr, "glPathStringNV");
    agx_custom_glad_glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC) load(userptr, "glPathSubCommandsNV");
    agx_custom_glad_glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC) load(userptr, "glPathSubCoordsNV");
    agx_custom_glad_glPathTexGenNV = (PFNGLPATHTEXGENNVPROC) load(userptr, "glPathTexGenNV");
    agx_custom_glad_glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC) load(userptr, "glPointAlongPathNV");
    agx_custom_glad_glProgramPathFragmentInputGenNV = (PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) load(userptr, "glProgramPathFragmentInputGenNV");
    agx_custom_glad_glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC) load(userptr, "glStencilFillPathInstancedNV");
    agx_custom_glad_glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC) load(userptr, "glStencilFillPathNV");
    agx_custom_glad_glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) load(userptr, "glStencilStrokePathInstancedNV");
    agx_custom_glad_glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC) load(userptr, "glStencilStrokePathNV");
    agx_custom_glad_glStencilThenCoverFillPathInstancedNV = (PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) load(userptr, "glStencilThenCoverFillPathInstancedNV");
    agx_custom_glad_glStencilThenCoverFillPathNV = (PFNGLSTENCILTHENCOVERFILLPATHNVPROC) load(userptr, "glStencilThenCoverFillPathNV");
    agx_custom_glad_glStencilThenCoverStrokePathInstancedNV = (PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) load(userptr, "glStencilThenCoverStrokePathInstancedNV");
    agx_custom_glad_glStencilThenCoverStrokePathNV = (PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) load(userptr, "glStencilThenCoverStrokePathNV");
    agx_custom_glad_glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC) load(userptr, "glTransformPathNV");
    agx_custom_glad_glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC) load(userptr, "glWeightPathsNV");
}
static void agx_custom_glad_gl_load_GL_NV_pixel_data_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_pixel_data_range) return;
    agx_custom_glad_glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC) load(userptr, "glFlushPixelDataRangeNV");
    agx_custom_glad_glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC) load(userptr, "glPixelDataRangeNV");
}
static void agx_custom_glad_gl_load_GL_NV_point_sprite( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_point_sprite) return;
    agx_custom_glad_glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC) load(userptr, "glPointParameteriNV");
    agx_custom_glad_glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC) load(userptr, "glPointParameterivNV");
}
static void agx_custom_glad_gl_load_GL_NV_present_video( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_present_video) return;
    agx_custom_glad_glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC) load(userptr, "glGetVideoi64vNV");
    agx_custom_glad_glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC) load(userptr, "glGetVideoivNV");
    agx_custom_glad_glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC) load(userptr, "glGetVideoui64vNV");
    agx_custom_glad_glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC) load(userptr, "glGetVideouivNV");
    agx_custom_glad_glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC) load(userptr, "glPresentFrameDualFillNV");
    agx_custom_glad_glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC) load(userptr, "glPresentFrameKeyedNV");
}
static void agx_custom_glad_gl_load_GL_NV_primitive_restart( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_primitive_restart) return;
    agx_custom_glad_glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC) load(userptr, "glPrimitiveRestartIndexNV");
    agx_custom_glad_glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC) load(userptr, "glPrimitiveRestartNV");
}
static void agx_custom_glad_gl_load_GL_NV_query_resource( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_query_resource) return;
    agx_custom_glad_glQueryResourceNV = (PFNGLQUERYRESOURCENVPROC) load(userptr, "glQueryResourceNV");
}
static void agx_custom_glad_gl_load_GL_NV_query_resource_tag( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_query_resource_tag) return;
    agx_custom_glad_glDeleteQueryResourceTagNV = (PFNGLDELETEQUERYRESOURCETAGNVPROC) load(userptr, "glDeleteQueryResourceTagNV");
    agx_custom_glad_glGenQueryResourceTagNV = (PFNGLGENQUERYRESOURCETAGNVPROC) load(userptr, "glGenQueryResourceTagNV");
    agx_custom_glad_glQueryResourceTagNV = (PFNGLQUERYRESOURCETAGNVPROC) load(userptr, "glQueryResourceTagNV");
}
static void agx_custom_glad_gl_load_GL_NV_register_combiners( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_register_combiners) return;
    agx_custom_glad_glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC) load(userptr, "glCombinerInputNV");
    agx_custom_glad_glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC) load(userptr, "glCombinerOutputNV");
    agx_custom_glad_glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC) load(userptr, "glCombinerParameterfNV");
    agx_custom_glad_glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC) load(userptr, "glCombinerParameterfvNV");
    agx_custom_glad_glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC) load(userptr, "glCombinerParameteriNV");
    agx_custom_glad_glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC) load(userptr, "glCombinerParameterivNV");
    agx_custom_glad_glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC) load(userptr, "glFinalCombinerInputNV");
    agx_custom_glad_glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) load(userptr, "glGetCombinerInputParameterfvNV");
    agx_custom_glad_glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) load(userptr, "glGetCombinerInputParameterivNV");
    agx_custom_glad_glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) load(userptr, "glGetCombinerOutputParameterfvNV");
    agx_custom_glad_glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) load(userptr, "glGetCombinerOutputParameterivNV");
    agx_custom_glad_glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) load(userptr, "glGetFinalCombinerInputParameterfvNV");
    agx_custom_glad_glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) load(userptr, "glGetFinalCombinerInputParameterivNV");
}
static void agx_custom_glad_gl_load_GL_NV_register_combiners2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_register_combiners2) return;
    agx_custom_glad_glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) load(userptr, "glCombinerStageParameterfvNV");
    agx_custom_glad_glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) load(userptr, "glGetCombinerStageParameterfvNV");
}
static void agx_custom_glad_gl_load_GL_NV_sample_locations( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_sample_locations) return;
    agx_custom_glad_glFramebufferSampleLocationsfvNV = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) load(userptr, "glFramebufferSampleLocationsfvNV");
    agx_custom_glad_glNamedFramebufferSampleLocationsfvNV = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) load(userptr, "glNamedFramebufferSampleLocationsfvNV");
    agx_custom_glad_glResolveDepthValuesNV = (PFNGLRESOLVEDEPTHVALUESNVPROC) load(userptr, "glResolveDepthValuesNV");
}
static void agx_custom_glad_gl_load_GL_NV_scissor_exclusive( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_scissor_exclusive) return;
    agx_custom_glad_glScissorExclusiveArrayvNV = (PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) load(userptr, "glScissorExclusiveArrayvNV");
    agx_custom_glad_glScissorExclusiveNV = (PFNGLSCISSOREXCLUSIVENVPROC) load(userptr, "glScissorExclusiveNV");
}
static void agx_custom_glad_gl_load_GL_NV_shader_buffer_load( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_shader_buffer_load) return;
    agx_custom_glad_glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC) load(userptr, "glGetBufferParameterui64vNV");
    agx_custom_glad_glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC) load(userptr, "glGetIntegerui64vNV");
    agx_custom_glad_glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) load(userptr, "glGetNamedBufferParameterui64vNV");
    agx_custom_glad_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC) load(userptr, "glGetUniformui64vNV");
    agx_custom_glad_glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC) load(userptr, "glIsBufferResidentNV");
    agx_custom_glad_glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC) load(userptr, "glIsNamedBufferResidentNV");
    agx_custom_glad_glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC) load(userptr, "glMakeBufferNonResidentNV");
    agx_custom_glad_glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC) load(userptr, "glMakeBufferResidentNV");
    agx_custom_glad_glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) load(userptr, "glMakeNamedBufferNonResidentNV");
    agx_custom_glad_glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) load(userptr, "glMakeNamedBufferResidentNV");
    agx_custom_glad_glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC) load(userptr, "glProgramUniformui64NV");
    agx_custom_glad_glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC) load(userptr, "glProgramUniformui64vNV");
    agx_custom_glad_glUniformui64NV = (PFNGLUNIFORMUI64NVPROC) load(userptr, "glUniformui64NV");
    agx_custom_glad_glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC) load(userptr, "glUniformui64vNV");
}
static void agx_custom_glad_gl_load_GL_NV_shading_rate_image( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_shading_rate_image) return;
    agx_custom_glad_glBindShadingRateImageNV = (PFNGLBINDSHADINGRATEIMAGENVPROC) load(userptr, "glBindShadingRateImageNV");
    agx_custom_glad_glGetShadingRateImagePaletteNV = (PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) load(userptr, "glGetShadingRateImagePaletteNV");
    agx_custom_glad_glGetShadingRateSampleLocationivNV = (PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) load(userptr, "glGetShadingRateSampleLocationivNV");
    agx_custom_glad_glShadingRateImageBarrierNV = (PFNGLSHADINGRATEIMAGEBARRIERNVPROC) load(userptr, "glShadingRateImageBarrierNV");
    agx_custom_glad_glShadingRateImagePaletteNV = (PFNGLSHADINGRATEIMAGEPALETTENVPROC) load(userptr, "glShadingRateImagePaletteNV");
    agx_custom_glad_glShadingRateSampleOrderCustomNV = (PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) load(userptr, "glShadingRateSampleOrderCustomNV");
    agx_custom_glad_glShadingRateSampleOrderNV = (PFNGLSHADINGRATESAMPLEORDERNVPROC) load(userptr, "glShadingRateSampleOrderNV");
}
static void agx_custom_glad_gl_load_GL_NV_texture_barrier( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_texture_barrier) return;
    agx_custom_glad_glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC) load(userptr, "glTextureBarrierNV");
}
static void agx_custom_glad_gl_load_GL_NV_texture_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_texture_multisample) return;
    agx_custom_glad_glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) load(userptr, "glTexImage2DMultisampleCoverageNV");
    agx_custom_glad_glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) load(userptr, "glTexImage3DMultisampleCoverageNV");
    agx_custom_glad_glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) load(userptr, "glTextureImage2DMultisampleCoverageNV");
    agx_custom_glad_glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) load(userptr, "glTextureImage2DMultisampleNV");
    agx_custom_glad_glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) load(userptr, "glTextureImage3DMultisampleCoverageNV");
    agx_custom_glad_glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) load(userptr, "glTextureImage3DMultisampleNV");
}
static void agx_custom_glad_gl_load_GL_NV_timeline_semaphore( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_timeline_semaphore) return;
    agx_custom_glad_glCreateSemaphoresNV = (PFNGLCREATESEMAPHORESNVPROC) load(userptr, "glCreateSemaphoresNV");
    agx_custom_glad_glGetSemaphoreParameterivNV = (PFNGLGETSEMAPHOREPARAMETERIVNVPROC) load(userptr, "glGetSemaphoreParameterivNV");
    agx_custom_glad_glSemaphoreParameterivNV = (PFNGLSEMAPHOREPARAMETERIVNVPROC) load(userptr, "glSemaphoreParameterivNV");
}
static void agx_custom_glad_gl_load_GL_NV_transform_feedback( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_transform_feedback) return;
    agx_custom_glad_glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC) load(userptr, "glActiveVaryingNV");
    agx_custom_glad_glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC) load(userptr, "glBeginTransformFeedbackNV");
    agx_custom_glad_glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC) load(userptr, "glBindBufferBaseNV");
    agx_custom_glad_glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC) load(userptr, "glBindBufferOffsetNV");
    agx_custom_glad_glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC) load(userptr, "glBindBufferRangeNV");
    agx_custom_glad_glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC) load(userptr, "glEndTransformFeedbackNV");
    agx_custom_glad_glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC) load(userptr, "glGetActiveVaryingNV");
    agx_custom_glad_glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) load(userptr, "glGetTransformFeedbackVaryingNV");
    agx_custom_glad_glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC) load(userptr, "glGetVaryingLocationNV");
    agx_custom_glad_glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) load(userptr, "glTransformFeedbackAttribsNV");
    agx_custom_glad_glTransformFeedbackStreamAttribsNV = (PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) load(userptr, "glTransformFeedbackStreamAttribsNV");
    agx_custom_glad_glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) load(userptr, "glTransformFeedbackVaryingsNV");
}
static void agx_custom_glad_gl_load_GL_NV_transform_feedback2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_transform_feedback2) return;
    agx_custom_glad_glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC) load(userptr, "glBindTransformFeedbackNV");
    agx_custom_glad_glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC) load(userptr, "glDeleteTransformFeedbacksNV");
    agx_custom_glad_glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC) load(userptr, "glDrawTransformFeedbackNV");
    agx_custom_glad_glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC) load(userptr, "glGenTransformFeedbacksNV");
    agx_custom_glad_glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC) load(userptr, "glIsTransformFeedbackNV");
    agx_custom_glad_glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC) load(userptr, "glPauseTransformFeedbackNV");
    agx_custom_glad_glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC) load(userptr, "glResumeTransformFeedbackNV");
}
static void agx_custom_glad_gl_load_GL_NV_vdpau_interop( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vdpau_interop) return;
    agx_custom_glad_glVDPAUFiniNV = (PFNGLVDPAUFININVPROC) load(userptr, "glVDPAUFiniNV");
    agx_custom_glad_glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC) load(userptr, "glVDPAUGetSurfaceivNV");
    agx_custom_glad_glVDPAUInitNV = (PFNGLVDPAUINITNVPROC) load(userptr, "glVDPAUInitNV");
    agx_custom_glad_glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC) load(userptr, "glVDPAUIsSurfaceNV");
    agx_custom_glad_glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC) load(userptr, "glVDPAUMapSurfacesNV");
    agx_custom_glad_glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) load(userptr, "glVDPAURegisterOutputSurfaceNV");
    agx_custom_glad_glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) load(userptr, "glVDPAURegisterVideoSurfaceNV");
    agx_custom_glad_glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC) load(userptr, "glVDPAUSurfaceAccessNV");
    agx_custom_glad_glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC) load(userptr, "glVDPAUUnmapSurfacesNV");
    agx_custom_glad_glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC) load(userptr, "glVDPAUUnregisterSurfaceNV");
}
static void agx_custom_glad_gl_load_GL_NV_vdpau_interop2( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vdpau_interop2) return;
    agx_custom_glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV = (PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC) load(userptr, "glVDPAURegisterVideoSurfaceWithPictureStructureNV");
}
static void agx_custom_glad_gl_load_GL_NV_vertex_array_range( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vertex_array_range) return;
    agx_custom_glad_glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC) load(userptr, "glFlushVertexArrayRangeNV");
    agx_custom_glad_glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC) load(userptr, "glVertexArrayRangeNV");
}
static void agx_custom_glad_gl_load_GL_NV_vertex_attrib_integer_64bit( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vertex_attrib_integer_64bit) return;
    agx_custom_glad_glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC) load(userptr, "glGetVertexAttribLi64vNV");
    agx_custom_glad_glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC) load(userptr, "glGetVertexAttribLui64vNV");
    agx_custom_glad_glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC) load(userptr, "glVertexAttribL1i64NV");
    agx_custom_glad_glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC) load(userptr, "glVertexAttribL1i64vNV");
    agx_custom_glad_glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC) load(userptr, "glVertexAttribL1ui64NV");
    agx_custom_glad_glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC) load(userptr, "glVertexAttribL1ui64vNV");
    agx_custom_glad_glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC) load(userptr, "glVertexAttribL2i64NV");
    agx_custom_glad_glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC) load(userptr, "glVertexAttribL2i64vNV");
    agx_custom_glad_glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC) load(userptr, "glVertexAttribL2ui64NV");
    agx_custom_glad_glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC) load(userptr, "glVertexAttribL2ui64vNV");
    agx_custom_glad_glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC) load(userptr, "glVertexAttribL3i64NV");
    agx_custom_glad_glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC) load(userptr, "glVertexAttribL3i64vNV");
    agx_custom_glad_glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC) load(userptr, "glVertexAttribL3ui64NV");
    agx_custom_glad_glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC) load(userptr, "glVertexAttribL3ui64vNV");
    agx_custom_glad_glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC) load(userptr, "glVertexAttribL4i64NV");
    agx_custom_glad_glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC) load(userptr, "glVertexAttribL4i64vNV");
    agx_custom_glad_glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC) load(userptr, "glVertexAttribL4ui64NV");
    agx_custom_glad_glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC) load(userptr, "glVertexAttribL4ui64vNV");
    agx_custom_glad_glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC) load(userptr, "glVertexAttribLFormatNV");
}
static void agx_custom_glad_gl_load_GL_NV_vertex_buffer_unified_memory( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vertex_buffer_unified_memory) return;
    agx_custom_glad_glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC) load(userptr, "glBufferAddressRangeNV");
    agx_custom_glad_glColorFormatNV = (PFNGLCOLORFORMATNVPROC) load(userptr, "glColorFormatNV");
    agx_custom_glad_glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC) load(userptr, "glEdgeFlagFormatNV");
    agx_custom_glad_glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC) load(userptr, "glFogCoordFormatNV");
    agx_custom_glad_glGetIntegerui64i_vNV = (PFNGLGETINTEGERUI64I_VNVPROC) load(userptr, "glGetIntegerui64i_vNV");
    agx_custom_glad_glIndexFormatNV = (PFNGLINDEXFORMATNVPROC) load(userptr, "glIndexFormatNV");
    agx_custom_glad_glNormalFormatNV = (PFNGLNORMALFORMATNVPROC) load(userptr, "glNormalFormatNV");
    agx_custom_glad_glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC) load(userptr, "glSecondaryColorFormatNV");
    agx_custom_glad_glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC) load(userptr, "glTexCoordFormatNV");
    agx_custom_glad_glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC) load(userptr, "glVertexAttribFormatNV");
    agx_custom_glad_glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC) load(userptr, "glVertexAttribIFormatNV");
    agx_custom_glad_glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC) load(userptr, "glVertexFormatNV");
}
static void agx_custom_glad_gl_load_GL_NV_vertex_program( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vertex_program) return;
    agx_custom_glad_glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC) load(userptr, "glAreProgramsResidentNV");
    agx_custom_glad_glBindProgramNV = (PFNGLBINDPROGRAMNVPROC) load(userptr, "glBindProgramNV");
    agx_custom_glad_glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC) load(userptr, "glDeleteProgramsNV");
    agx_custom_glad_glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC) load(userptr, "glExecuteProgramNV");
    agx_custom_glad_glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC) load(userptr, "glGenProgramsNV");
    agx_custom_glad_glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC) load(userptr, "glGetProgramParameterdvNV");
    agx_custom_glad_glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC) load(userptr, "glGetProgramParameterfvNV");
    agx_custom_glad_glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC) load(userptr, "glGetProgramStringNV");
    agx_custom_glad_glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC) load(userptr, "glGetProgramivNV");
    agx_custom_glad_glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC) load(userptr, "glGetTrackMatrixivNV");
    agx_custom_glad_glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC) load(userptr, "glGetVertexAttribPointervNV");
    agx_custom_glad_glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC) load(userptr, "glGetVertexAttribdvNV");
    agx_custom_glad_glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC) load(userptr, "glGetVertexAttribfvNV");
    agx_custom_glad_glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC) load(userptr, "glGetVertexAttribivNV");
    agx_custom_glad_glIsProgramNV = (PFNGLISPROGRAMNVPROC) load(userptr, "glIsProgramNV");
    agx_custom_glad_glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC) load(userptr, "glLoadProgramNV");
    agx_custom_glad_glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC) load(userptr, "glProgramParameter4dNV");
    agx_custom_glad_glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC) load(userptr, "glProgramParameter4dvNV");
    agx_custom_glad_glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC) load(userptr, "glProgramParameter4fNV");
    agx_custom_glad_glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC) load(userptr, "glProgramParameter4fvNV");
    agx_custom_glad_glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC) load(userptr, "glProgramParameters4dvNV");
    agx_custom_glad_glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC) load(userptr, "glProgramParameters4fvNV");
    agx_custom_glad_glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC) load(userptr, "glRequestResidentProgramsNV");
    agx_custom_glad_glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC) load(userptr, "glTrackMatrixNV");
    agx_custom_glad_glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC) load(userptr, "glVertexAttrib1dNV");
    agx_custom_glad_glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC) load(userptr, "glVertexAttrib1dvNV");
    agx_custom_glad_glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC) load(userptr, "glVertexAttrib1fNV");
    agx_custom_glad_glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC) load(userptr, "glVertexAttrib1fvNV");
    agx_custom_glad_glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC) load(userptr, "glVertexAttrib1sNV");
    agx_custom_glad_glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC) load(userptr, "glVertexAttrib1svNV");
    agx_custom_glad_glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC) load(userptr, "glVertexAttrib2dNV");
    agx_custom_glad_glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC) load(userptr, "glVertexAttrib2dvNV");
    agx_custom_glad_glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC) load(userptr, "glVertexAttrib2fNV");
    agx_custom_glad_glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC) load(userptr, "glVertexAttrib2fvNV");
    agx_custom_glad_glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC) load(userptr, "glVertexAttrib2sNV");
    agx_custom_glad_glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC) load(userptr, "glVertexAttrib2svNV");
    agx_custom_glad_glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC) load(userptr, "glVertexAttrib3dNV");
    agx_custom_glad_glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC) load(userptr, "glVertexAttrib3dvNV");
    agx_custom_glad_glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC) load(userptr, "glVertexAttrib3fNV");
    agx_custom_glad_glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC) load(userptr, "glVertexAttrib3fvNV");
    agx_custom_glad_glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC) load(userptr, "glVertexAttrib3sNV");
    agx_custom_glad_glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC) load(userptr, "glVertexAttrib3svNV");
    agx_custom_glad_glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC) load(userptr, "glVertexAttrib4dNV");
    agx_custom_glad_glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC) load(userptr, "glVertexAttrib4dvNV");
    agx_custom_glad_glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC) load(userptr, "glVertexAttrib4fNV");
    agx_custom_glad_glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC) load(userptr, "glVertexAttrib4fvNV");
    agx_custom_glad_glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC) load(userptr, "glVertexAttrib4sNV");
    agx_custom_glad_glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC) load(userptr, "glVertexAttrib4svNV");
    agx_custom_glad_glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC) load(userptr, "glVertexAttrib4ubNV");
    agx_custom_glad_glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC) load(userptr, "glVertexAttrib4ubvNV");
    agx_custom_glad_glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC) load(userptr, "glVertexAttribPointerNV");
    agx_custom_glad_glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC) load(userptr, "glVertexAttribs1dvNV");
    agx_custom_glad_glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC) load(userptr, "glVertexAttribs1fvNV");
    agx_custom_glad_glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC) load(userptr, "glVertexAttribs1svNV");
    agx_custom_glad_glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC) load(userptr, "glVertexAttribs2dvNV");
    agx_custom_glad_glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC) load(userptr, "glVertexAttribs2fvNV");
    agx_custom_glad_glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC) load(userptr, "glVertexAttribs2svNV");
    agx_custom_glad_glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC) load(userptr, "glVertexAttribs3dvNV");
    agx_custom_glad_glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC) load(userptr, "glVertexAttribs3fvNV");
    agx_custom_glad_glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC) load(userptr, "glVertexAttribs3svNV");
    agx_custom_glad_glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC) load(userptr, "glVertexAttribs4dvNV");
    agx_custom_glad_glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC) load(userptr, "glVertexAttribs4fvNV");
    agx_custom_glad_glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC) load(userptr, "glVertexAttribs4svNV");
    agx_custom_glad_glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC) load(userptr, "glVertexAttribs4ubvNV");
}
static void agx_custom_glad_gl_load_GL_NV_vertex_program4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_vertex_program4) return;
    agx_custom_glad_glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC) load(userptr, "glGetVertexAttribIivEXT");
    agx_custom_glad_glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC) load(userptr, "glGetVertexAttribIuivEXT");
    agx_custom_glad_glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC) load(userptr, "glVertexAttribI1iEXT");
    agx_custom_glad_glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC) load(userptr, "glVertexAttribI1ivEXT");
    agx_custom_glad_glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC) load(userptr, "glVertexAttribI1uiEXT");
    agx_custom_glad_glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC) load(userptr, "glVertexAttribI1uivEXT");
    agx_custom_glad_glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC) load(userptr, "glVertexAttribI2iEXT");
    agx_custom_glad_glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC) load(userptr, "glVertexAttribI2ivEXT");
    agx_custom_glad_glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC) load(userptr, "glVertexAttribI2uiEXT");
    agx_custom_glad_glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC) load(userptr, "glVertexAttribI2uivEXT");
    agx_custom_glad_glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC) load(userptr, "glVertexAttribI3iEXT");
    agx_custom_glad_glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC) load(userptr, "glVertexAttribI3ivEXT");
    agx_custom_glad_glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC) load(userptr, "glVertexAttribI3uiEXT");
    agx_custom_glad_glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC) load(userptr, "glVertexAttribI3uivEXT");
    agx_custom_glad_glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC) load(userptr, "glVertexAttribI4bvEXT");
    agx_custom_glad_glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC) load(userptr, "glVertexAttribI4iEXT");
    agx_custom_glad_glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC) load(userptr, "glVertexAttribI4ivEXT");
    agx_custom_glad_glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC) load(userptr, "glVertexAttribI4svEXT");
    agx_custom_glad_glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC) load(userptr, "glVertexAttribI4ubvEXT");
    agx_custom_glad_glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC) load(userptr, "glVertexAttribI4uiEXT");
    agx_custom_glad_glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC) load(userptr, "glVertexAttribI4uivEXT");
    agx_custom_glad_glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC) load(userptr, "glVertexAttribI4usvEXT");
    agx_custom_glad_glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC) load(userptr, "glVertexAttribIPointerEXT");
}
static void agx_custom_glad_gl_load_GL_NV_video_capture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_video_capture) return;
    agx_custom_glad_glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC) load(userptr, "glBeginVideoCaptureNV");
    agx_custom_glad_glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) load(userptr, "glBindVideoCaptureStreamBufferNV");
    agx_custom_glad_glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) load(userptr, "glBindVideoCaptureStreamTextureNV");
    agx_custom_glad_glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC) load(userptr, "glEndVideoCaptureNV");
    agx_custom_glad_glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) load(userptr, "glGetVideoCaptureStreamdvNV");
    agx_custom_glad_glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) load(userptr, "glGetVideoCaptureStreamfvNV");
    agx_custom_glad_glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) load(userptr, "glGetVideoCaptureStreamivNV");
    agx_custom_glad_glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC) load(userptr, "glGetVideoCaptureivNV");
    agx_custom_glad_glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC) load(userptr, "glVideoCaptureNV");
    agx_custom_glad_glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) load(userptr, "glVideoCaptureStreamParameterdvNV");
    agx_custom_glad_glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) load(userptr, "glVideoCaptureStreamParameterfvNV");
    agx_custom_glad_glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) load(userptr, "glVideoCaptureStreamParameterivNV");
}
static void agx_custom_glad_gl_load_GL_NV_viewport_swizzle( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_NV_viewport_swizzle) return;
    agx_custom_glad_glViewportSwizzleNV = (PFNGLVIEWPORTSWIZZLENVPROC) load(userptr, "glViewportSwizzleNV");
}
static void agx_custom_glad_gl_load_GL_OES_byte_coordinates( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_OES_byte_coordinates) return;
    agx_custom_glad_glMultiTexCoord1bOES = (PFNGLMULTITEXCOORD1BOESPROC) load(userptr, "glMultiTexCoord1bOES");
    agx_custom_glad_glMultiTexCoord1bvOES = (PFNGLMULTITEXCOORD1BVOESPROC) load(userptr, "glMultiTexCoord1bvOES");
    agx_custom_glad_glMultiTexCoord2bOES = (PFNGLMULTITEXCOORD2BOESPROC) load(userptr, "glMultiTexCoord2bOES");
    agx_custom_glad_glMultiTexCoord2bvOES = (PFNGLMULTITEXCOORD2BVOESPROC) load(userptr, "glMultiTexCoord2bvOES");
    agx_custom_glad_glMultiTexCoord3bOES = (PFNGLMULTITEXCOORD3BOESPROC) load(userptr, "glMultiTexCoord3bOES");
    agx_custom_glad_glMultiTexCoord3bvOES = (PFNGLMULTITEXCOORD3BVOESPROC) load(userptr, "glMultiTexCoord3bvOES");
    agx_custom_glad_glMultiTexCoord4bOES = (PFNGLMULTITEXCOORD4BOESPROC) load(userptr, "glMultiTexCoord4bOES");
    agx_custom_glad_glMultiTexCoord4bvOES = (PFNGLMULTITEXCOORD4BVOESPROC) load(userptr, "glMultiTexCoord4bvOES");
    agx_custom_glad_glTexCoord1bOES = (PFNGLTEXCOORD1BOESPROC) load(userptr, "glTexCoord1bOES");
    agx_custom_glad_glTexCoord1bvOES = (PFNGLTEXCOORD1BVOESPROC) load(userptr, "glTexCoord1bvOES");
    agx_custom_glad_glTexCoord2bOES = (PFNGLTEXCOORD2BOESPROC) load(userptr, "glTexCoord2bOES");
    agx_custom_glad_glTexCoord2bvOES = (PFNGLTEXCOORD2BVOESPROC) load(userptr, "glTexCoord2bvOES");
    agx_custom_glad_glTexCoord3bOES = (PFNGLTEXCOORD3BOESPROC) load(userptr, "glTexCoord3bOES");
    agx_custom_glad_glTexCoord3bvOES = (PFNGLTEXCOORD3BVOESPROC) load(userptr, "glTexCoord3bvOES");
    agx_custom_glad_glTexCoord4bOES = (PFNGLTEXCOORD4BOESPROC) load(userptr, "glTexCoord4bOES");
    agx_custom_glad_glTexCoord4bvOES = (PFNGLTEXCOORD4BVOESPROC) load(userptr, "glTexCoord4bvOES");
    agx_custom_glad_glVertex2bOES = (PFNGLVERTEX2BOESPROC) load(userptr, "glVertex2bOES");
    agx_custom_glad_glVertex2bvOES = (PFNGLVERTEX2BVOESPROC) load(userptr, "glVertex2bvOES");
    agx_custom_glad_glVertex3bOES = (PFNGLVERTEX3BOESPROC) load(userptr, "glVertex3bOES");
    agx_custom_glad_glVertex3bvOES = (PFNGLVERTEX3BVOESPROC) load(userptr, "glVertex3bvOES");
    agx_custom_glad_glVertex4bOES = (PFNGLVERTEX4BOESPROC) load(userptr, "glVertex4bOES");
    agx_custom_glad_glVertex4bvOES = (PFNGLVERTEX4BVOESPROC) load(userptr, "glVertex4bvOES");
}
static void agx_custom_glad_gl_load_GL_OES_fixed_point( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_OES_fixed_point) return;
    agx_custom_glad_glAccumxOES = (PFNGLACCUMXOESPROC) load(userptr, "glAccumxOES");
    agx_custom_glad_glAlphaFuncxOES = (PFNGLALPHAFUNCXOESPROC) load(userptr, "glAlphaFuncxOES");
    agx_custom_glad_glBitmapxOES = (PFNGLBITMAPXOESPROC) load(userptr, "glBitmapxOES");
    agx_custom_glad_glBlendColorxOES = (PFNGLBLENDCOLORXOESPROC) load(userptr, "glBlendColorxOES");
    agx_custom_glad_glClearAccumxOES = (PFNGLCLEARACCUMXOESPROC) load(userptr, "glClearAccumxOES");
    agx_custom_glad_glClearColorxOES = (PFNGLCLEARCOLORXOESPROC) load(userptr, "glClearColorxOES");
    agx_custom_glad_glClearDepthxOES = (PFNGLCLEARDEPTHXOESPROC) load(userptr, "glClearDepthxOES");
    agx_custom_glad_glClipPlanexOES = (PFNGLCLIPPLANEXOESPROC) load(userptr, "glClipPlanexOES");
    agx_custom_glad_glColor3xOES = (PFNGLCOLOR3XOESPROC) load(userptr, "glColor3xOES");
    agx_custom_glad_glColor3xvOES = (PFNGLCOLOR3XVOESPROC) load(userptr, "glColor3xvOES");
    agx_custom_glad_glColor4xOES = (PFNGLCOLOR4XOESPROC) load(userptr, "glColor4xOES");
    agx_custom_glad_glColor4xvOES = (PFNGLCOLOR4XVOESPROC) load(userptr, "glColor4xvOES");
    agx_custom_glad_glConvolutionParameterxOES = (PFNGLCONVOLUTIONPARAMETERXOESPROC) load(userptr, "glConvolutionParameterxOES");
    agx_custom_glad_glConvolutionParameterxvOES = (PFNGLCONVOLUTIONPARAMETERXVOESPROC) load(userptr, "glConvolutionParameterxvOES");
    agx_custom_glad_glDepthRangexOES = (PFNGLDEPTHRANGEXOESPROC) load(userptr, "glDepthRangexOES");
    agx_custom_glad_glEvalCoord1xOES = (PFNGLEVALCOORD1XOESPROC) load(userptr, "glEvalCoord1xOES");
    agx_custom_glad_glEvalCoord1xvOES = (PFNGLEVALCOORD1XVOESPROC) load(userptr, "glEvalCoord1xvOES");
    agx_custom_glad_glEvalCoord2xOES = (PFNGLEVALCOORD2XOESPROC) load(userptr, "glEvalCoord2xOES");
    agx_custom_glad_glEvalCoord2xvOES = (PFNGLEVALCOORD2XVOESPROC) load(userptr, "glEvalCoord2xvOES");
    agx_custom_glad_glFeedbackBufferxOES = (PFNGLFEEDBACKBUFFERXOESPROC) load(userptr, "glFeedbackBufferxOES");
    agx_custom_glad_glFogxOES = (PFNGLFOGXOESPROC) load(userptr, "glFogxOES");
    agx_custom_glad_glFogxvOES = (PFNGLFOGXVOESPROC) load(userptr, "glFogxvOES");
    agx_custom_glad_glFrustumxOES = (PFNGLFRUSTUMXOESPROC) load(userptr, "glFrustumxOES");
    agx_custom_glad_glGetClipPlanexOES = (PFNGLGETCLIPPLANEXOESPROC) load(userptr, "glGetClipPlanexOES");
    agx_custom_glad_glGetConvolutionParameterxvOES = (PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) load(userptr, "glGetConvolutionParameterxvOES");
    agx_custom_glad_glGetFixedvOES = (PFNGLGETFIXEDVOESPROC) load(userptr, "glGetFixedvOES");
    agx_custom_glad_glGetHistogramParameterxvOES = (PFNGLGETHISTOGRAMPARAMETERXVOESPROC) load(userptr, "glGetHistogramParameterxvOES");
    agx_custom_glad_glGetLightxOES = (PFNGLGETLIGHTXOESPROC) load(userptr, "glGetLightxOES");
    agx_custom_glad_glGetMapxvOES = (PFNGLGETMAPXVOESPROC) load(userptr, "glGetMapxvOES");
    agx_custom_glad_glGetMaterialxOES = (PFNGLGETMATERIALXOESPROC) load(userptr, "glGetMaterialxOES");
    agx_custom_glad_glGetPixelMapxv = (PFNGLGETPIXELMAPXVPROC) load(userptr, "glGetPixelMapxv");
    agx_custom_glad_glGetTexEnvxvOES = (PFNGLGETTEXENVXVOESPROC) load(userptr, "glGetTexEnvxvOES");
    agx_custom_glad_glGetTexGenxvOES = (PFNGLGETTEXGENXVOESPROC) load(userptr, "glGetTexGenxvOES");
    agx_custom_glad_glGetTexLevelParameterxvOES = (PFNGLGETTEXLEVELPARAMETERXVOESPROC) load(userptr, "glGetTexLevelParameterxvOES");
    agx_custom_glad_glGetTexParameterxvOES = (PFNGLGETTEXPARAMETERXVOESPROC) load(userptr, "glGetTexParameterxvOES");
    agx_custom_glad_glIndexxOES = (PFNGLINDEXXOESPROC) load(userptr, "glIndexxOES");
    agx_custom_glad_glIndexxvOES = (PFNGLINDEXXVOESPROC) load(userptr, "glIndexxvOES");
    agx_custom_glad_glLightModelxOES = (PFNGLLIGHTMODELXOESPROC) load(userptr, "glLightModelxOES");
    agx_custom_glad_glLightModelxvOES = (PFNGLLIGHTMODELXVOESPROC) load(userptr, "glLightModelxvOES");
    agx_custom_glad_glLightxOES = (PFNGLLIGHTXOESPROC) load(userptr, "glLightxOES");
    agx_custom_glad_glLightxvOES = (PFNGLLIGHTXVOESPROC) load(userptr, "glLightxvOES");
    agx_custom_glad_glLineWidthxOES = (PFNGLLINEWIDTHXOESPROC) load(userptr, "glLineWidthxOES");
    agx_custom_glad_glLoadMatrixxOES = (PFNGLLOADMATRIXXOESPROC) load(userptr, "glLoadMatrixxOES");
    agx_custom_glad_glLoadTransposeMatrixxOES = (PFNGLLOADTRANSPOSEMATRIXXOESPROC) load(userptr, "glLoadTransposeMatrixxOES");
    agx_custom_glad_glMap1xOES = (PFNGLMAP1XOESPROC) load(userptr, "glMap1xOES");
    agx_custom_glad_glMap2xOES = (PFNGLMAP2XOESPROC) load(userptr, "glMap2xOES");
    agx_custom_glad_glMapGrid1xOES = (PFNGLMAPGRID1XOESPROC) load(userptr, "glMapGrid1xOES");
    agx_custom_glad_glMapGrid2xOES = (PFNGLMAPGRID2XOESPROC) load(userptr, "glMapGrid2xOES");
    agx_custom_glad_glMaterialxOES = (PFNGLMATERIALXOESPROC) load(userptr, "glMaterialxOES");
    agx_custom_glad_glMaterialxvOES = (PFNGLMATERIALXVOESPROC) load(userptr, "glMaterialxvOES");
    agx_custom_glad_glMultMatrixxOES = (PFNGLMULTMATRIXXOESPROC) load(userptr, "glMultMatrixxOES");
    agx_custom_glad_glMultTransposeMatrixxOES = (PFNGLMULTTRANSPOSEMATRIXXOESPROC) load(userptr, "glMultTransposeMatrixxOES");
    agx_custom_glad_glMultiTexCoord1xOES = (PFNGLMULTITEXCOORD1XOESPROC) load(userptr, "glMultiTexCoord1xOES");
    agx_custom_glad_glMultiTexCoord1xvOES = (PFNGLMULTITEXCOORD1XVOESPROC) load(userptr, "glMultiTexCoord1xvOES");
    agx_custom_glad_glMultiTexCoord2xOES = (PFNGLMULTITEXCOORD2XOESPROC) load(userptr, "glMultiTexCoord2xOES");
    agx_custom_glad_glMultiTexCoord2xvOES = (PFNGLMULTITEXCOORD2XVOESPROC) load(userptr, "glMultiTexCoord2xvOES");
    agx_custom_glad_glMultiTexCoord3xOES = (PFNGLMULTITEXCOORD3XOESPROC) load(userptr, "glMultiTexCoord3xOES");
    agx_custom_glad_glMultiTexCoord3xvOES = (PFNGLMULTITEXCOORD3XVOESPROC) load(userptr, "glMultiTexCoord3xvOES");
    agx_custom_glad_glMultiTexCoord4xOES = (PFNGLMULTITEXCOORD4XOESPROC) load(userptr, "glMultiTexCoord4xOES");
    agx_custom_glad_glMultiTexCoord4xvOES = (PFNGLMULTITEXCOORD4XVOESPROC) load(userptr, "glMultiTexCoord4xvOES");
    agx_custom_glad_glNormal3xOES = (PFNGLNORMAL3XOESPROC) load(userptr, "glNormal3xOES");
    agx_custom_glad_glNormal3xvOES = (PFNGLNORMAL3XVOESPROC) load(userptr, "glNormal3xvOES");
    agx_custom_glad_glOrthoxOES = (PFNGLORTHOXOESPROC) load(userptr, "glOrthoxOES");
    agx_custom_glad_glPassThroughxOES = (PFNGLPASSTHROUGHXOESPROC) load(userptr, "glPassThroughxOES");
    agx_custom_glad_glPixelMapx = (PFNGLPIXELMAPXPROC) load(userptr, "glPixelMapx");
    agx_custom_glad_glPixelStorex = (PFNGLPIXELSTOREXPROC) load(userptr, "glPixelStorex");
    agx_custom_glad_glPixelTransferxOES = (PFNGLPIXELTRANSFERXOESPROC) load(userptr, "glPixelTransferxOES");
    agx_custom_glad_glPixelZoomxOES = (PFNGLPIXELZOOMXOESPROC) load(userptr, "glPixelZoomxOES");
    agx_custom_glad_glPointParameterxvOES = (PFNGLPOINTPARAMETERXVOESPROC) load(userptr, "glPointParameterxvOES");
    agx_custom_glad_glPointSizexOES = (PFNGLPOINTSIZEXOESPROC) load(userptr, "glPointSizexOES");
    agx_custom_glad_glPolygonOffsetxOES = (PFNGLPOLYGONOFFSETXOESPROC) load(userptr, "glPolygonOffsetxOES");
    agx_custom_glad_glPrioritizeTexturesxOES = (PFNGLPRIORITIZETEXTURESXOESPROC) load(userptr, "glPrioritizeTexturesxOES");
    agx_custom_glad_glRasterPos2xOES = (PFNGLRASTERPOS2XOESPROC) load(userptr, "glRasterPos2xOES");
    agx_custom_glad_glRasterPos2xvOES = (PFNGLRASTERPOS2XVOESPROC) load(userptr, "glRasterPos2xvOES");
    agx_custom_glad_glRasterPos3xOES = (PFNGLRASTERPOS3XOESPROC) load(userptr, "glRasterPos3xOES");
    agx_custom_glad_glRasterPos3xvOES = (PFNGLRASTERPOS3XVOESPROC) load(userptr, "glRasterPos3xvOES");
    agx_custom_glad_glRasterPos4xOES = (PFNGLRASTERPOS4XOESPROC) load(userptr, "glRasterPos4xOES");
    agx_custom_glad_glRasterPos4xvOES = (PFNGLRASTERPOS4XVOESPROC) load(userptr, "glRasterPos4xvOES");
    agx_custom_glad_glRectxOES = (PFNGLRECTXOESPROC) load(userptr, "glRectxOES");
    agx_custom_glad_glRectxvOES = (PFNGLRECTXVOESPROC) load(userptr, "glRectxvOES");
    agx_custom_glad_glRotatexOES = (PFNGLROTATEXOESPROC) load(userptr, "glRotatexOES");
    agx_custom_glad_glScalexOES = (PFNGLSCALEXOESPROC) load(userptr, "glScalexOES");
    agx_custom_glad_glTexCoord1xOES = (PFNGLTEXCOORD1XOESPROC) load(userptr, "glTexCoord1xOES");
    agx_custom_glad_glTexCoord1xvOES = (PFNGLTEXCOORD1XVOESPROC) load(userptr, "glTexCoord1xvOES");
    agx_custom_glad_glTexCoord2xOES = (PFNGLTEXCOORD2XOESPROC) load(userptr, "glTexCoord2xOES");
    agx_custom_glad_glTexCoord2xvOES = (PFNGLTEXCOORD2XVOESPROC) load(userptr, "glTexCoord2xvOES");
    agx_custom_glad_glTexCoord3xOES = (PFNGLTEXCOORD3XOESPROC) load(userptr, "glTexCoord3xOES");
    agx_custom_glad_glTexCoord3xvOES = (PFNGLTEXCOORD3XVOESPROC) load(userptr, "glTexCoord3xvOES");
    agx_custom_glad_glTexCoord4xOES = (PFNGLTEXCOORD4XOESPROC) load(userptr, "glTexCoord4xOES");
    agx_custom_glad_glTexCoord4xvOES = (PFNGLTEXCOORD4XVOESPROC) load(userptr, "glTexCoord4xvOES");
    agx_custom_glad_glTexEnvxOES = (PFNGLTEXENVXOESPROC) load(userptr, "glTexEnvxOES");
    agx_custom_glad_glTexEnvxvOES = (PFNGLTEXENVXVOESPROC) load(userptr, "glTexEnvxvOES");
    agx_custom_glad_glTexGenxOES = (PFNGLTEXGENXOESPROC) load(userptr, "glTexGenxOES");
    agx_custom_glad_glTexGenxvOES = (PFNGLTEXGENXVOESPROC) load(userptr, "glTexGenxvOES");
    agx_custom_glad_glTexParameterxOES = (PFNGLTEXPARAMETERXOESPROC) load(userptr, "glTexParameterxOES");
    agx_custom_glad_glTexParameterxvOES = (PFNGLTEXPARAMETERXVOESPROC) load(userptr, "glTexParameterxvOES");
    agx_custom_glad_glTranslatexOES = (PFNGLTRANSLATEXOESPROC) load(userptr, "glTranslatexOES");
    agx_custom_glad_glVertex2xOES = (PFNGLVERTEX2XOESPROC) load(userptr, "glVertex2xOES");
    agx_custom_glad_glVertex2xvOES = (PFNGLVERTEX2XVOESPROC) load(userptr, "glVertex2xvOES");
    agx_custom_glad_glVertex3xOES = (PFNGLVERTEX3XOESPROC) load(userptr, "glVertex3xOES");
    agx_custom_glad_glVertex3xvOES = (PFNGLVERTEX3XVOESPROC) load(userptr, "glVertex3xvOES");
    agx_custom_glad_glVertex4xOES = (PFNGLVERTEX4XOESPROC) load(userptr, "glVertex4xOES");
    agx_custom_glad_glVertex4xvOES = (PFNGLVERTEX4XVOESPROC) load(userptr, "glVertex4xvOES");
}
static void agx_custom_glad_gl_load_GL_OES_query_matrix( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_OES_query_matrix) return;
    agx_custom_glad_glQueryMatrixxOES = (PFNGLQUERYMATRIXXOESPROC) load(userptr, "glQueryMatrixxOES");
}
static void agx_custom_glad_gl_load_GL_OES_single_precision( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_OES_single_precision) return;
    agx_custom_glad_glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC) load(userptr, "glClearDepthfOES");
    agx_custom_glad_glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC) load(userptr, "glClipPlanefOES");
    agx_custom_glad_glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC) load(userptr, "glDepthRangefOES");
    agx_custom_glad_glFrustumfOES = (PFNGLFRUSTUMFOESPROC) load(userptr, "glFrustumfOES");
    agx_custom_glad_glGetClipPlanefOES = (PFNGLGETCLIPPLANEFOESPROC) load(userptr, "glGetClipPlanefOES");
    agx_custom_glad_glOrthofOES = (PFNGLORTHOFOESPROC) load(userptr, "glOrthofOES");
}
static void agx_custom_glad_gl_load_GL_OVR_multiview( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_OVR_multiview) return;
    agx_custom_glad_glFramebufferTextureMultiviewOVR = (PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) load(userptr, "glFramebufferTextureMultiviewOVR");
}
static void agx_custom_glad_gl_load_GL_PGI_misc_hints( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_PGI_misc_hints) return;
    agx_custom_glad_glHintPGI = (PFNGLHINTPGIPROC) load(userptr, "glHintPGI");
}
static void agx_custom_glad_gl_load_GL_SGIS_detail_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_detail_texture) return;
    agx_custom_glad_glDetailTexFuncSGIS = (PFNGLDETAILTEXFUNCSGISPROC) load(userptr, "glDetailTexFuncSGIS");
    agx_custom_glad_glGetDetailTexFuncSGIS = (PFNGLGETDETAILTEXFUNCSGISPROC) load(userptr, "glGetDetailTexFuncSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_fog_function( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_fog_function) return;
    agx_custom_glad_glFogFuncSGIS = (PFNGLFOGFUNCSGISPROC) load(userptr, "glFogFuncSGIS");
    agx_custom_glad_glGetFogFuncSGIS = (PFNGLGETFOGFUNCSGISPROC) load(userptr, "glGetFogFuncSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_multisample( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_multisample) return;
    agx_custom_glad_glSampleMaskSGIS = (PFNGLSAMPLEMASKSGISPROC) load(userptr, "glSampleMaskSGIS");
    agx_custom_glad_glSamplePatternSGIS = (PFNGLSAMPLEPATTERNSGISPROC) load(userptr, "glSamplePatternSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_pixel_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_pixel_texture) return;
    agx_custom_glad_glGetPixelTexGenParameterfvSGIS = (PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) load(userptr, "glGetPixelTexGenParameterfvSGIS");
    agx_custom_glad_glGetPixelTexGenParameterivSGIS = (PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) load(userptr, "glGetPixelTexGenParameterivSGIS");
    agx_custom_glad_glPixelTexGenParameterfSGIS = (PFNGLPIXELTEXGENPARAMETERFSGISPROC) load(userptr, "glPixelTexGenParameterfSGIS");
    agx_custom_glad_glPixelTexGenParameterfvSGIS = (PFNGLPIXELTEXGENPARAMETERFVSGISPROC) load(userptr, "glPixelTexGenParameterfvSGIS");
    agx_custom_glad_glPixelTexGenParameteriSGIS = (PFNGLPIXELTEXGENPARAMETERISGISPROC) load(userptr, "glPixelTexGenParameteriSGIS");
    agx_custom_glad_glPixelTexGenParameterivSGIS = (PFNGLPIXELTEXGENPARAMETERIVSGISPROC) load(userptr, "glPixelTexGenParameterivSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_point_parameters( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_point_parameters) return;
    agx_custom_glad_glPointParameterfSGIS = (PFNGLPOINTPARAMETERFSGISPROC) load(userptr, "glPointParameterfSGIS");
    agx_custom_glad_glPointParameterfvSGIS = (PFNGLPOINTPARAMETERFVSGISPROC) load(userptr, "glPointParameterfvSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_sharpen_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_sharpen_texture) return;
    agx_custom_glad_glGetSharpenTexFuncSGIS = (PFNGLGETSHARPENTEXFUNCSGISPROC) load(userptr, "glGetSharpenTexFuncSGIS");
    agx_custom_glad_glSharpenTexFuncSGIS = (PFNGLSHARPENTEXFUNCSGISPROC) load(userptr, "glSharpenTexFuncSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_texture4D( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_texture4D) return;
    agx_custom_glad_glTexImage4DSGIS = (PFNGLTEXIMAGE4DSGISPROC) load(userptr, "glTexImage4DSGIS");
    agx_custom_glad_glTexSubImage4DSGIS = (PFNGLTEXSUBIMAGE4DSGISPROC) load(userptr, "glTexSubImage4DSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_texture_color_mask( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_texture_color_mask) return;
    agx_custom_glad_glTextureColorMaskSGIS = (PFNGLTEXTURECOLORMASKSGISPROC) load(userptr, "glTextureColorMaskSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIS_texture_filter4( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIS_texture_filter4) return;
    agx_custom_glad_glGetTexFilterFuncSGIS = (PFNGLGETTEXFILTERFUNCSGISPROC) load(userptr, "glGetTexFilterFuncSGIS");
    agx_custom_glad_glTexFilterFuncSGIS = (PFNGLTEXFILTERFUNCSGISPROC) load(userptr, "glTexFilterFuncSGIS");
}
static void agx_custom_glad_gl_load_GL_SGIX_async( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_async) return;
    agx_custom_glad_glAsyncMarkerSGIX = (PFNGLASYNCMARKERSGIXPROC) load(userptr, "glAsyncMarkerSGIX");
    agx_custom_glad_glDeleteAsyncMarkersSGIX = (PFNGLDELETEASYNCMARKERSSGIXPROC) load(userptr, "glDeleteAsyncMarkersSGIX");
    agx_custom_glad_glFinishAsyncSGIX = (PFNGLFINISHASYNCSGIXPROC) load(userptr, "glFinishAsyncSGIX");
    agx_custom_glad_glGenAsyncMarkersSGIX = (PFNGLGENASYNCMARKERSSGIXPROC) load(userptr, "glGenAsyncMarkersSGIX");
    agx_custom_glad_glIsAsyncMarkerSGIX = (PFNGLISASYNCMARKERSGIXPROC) load(userptr, "glIsAsyncMarkerSGIX");
    agx_custom_glad_glPollAsyncSGIX = (PFNGLPOLLASYNCSGIXPROC) load(userptr, "glPollAsyncSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_flush_raster( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_flush_raster) return;
    agx_custom_glad_glFlushRasterSGIX = (PFNGLFLUSHRASTERSGIXPROC) load(userptr, "glFlushRasterSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_fragment_lighting( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_fragment_lighting) return;
    agx_custom_glad_glFragmentColorMaterialSGIX = (PFNGLFRAGMENTCOLORMATERIALSGIXPROC) load(userptr, "glFragmentColorMaterialSGIX");
    agx_custom_glad_glFragmentLightModelfSGIX = (PFNGLFRAGMENTLIGHTMODELFSGIXPROC) load(userptr, "glFragmentLightModelfSGIX");
    agx_custom_glad_glFragmentLightModelfvSGIX = (PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) load(userptr, "glFragmentLightModelfvSGIX");
    agx_custom_glad_glFragmentLightModeliSGIX = (PFNGLFRAGMENTLIGHTMODELISGIXPROC) load(userptr, "glFragmentLightModeliSGIX");
    agx_custom_glad_glFragmentLightModelivSGIX = (PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) load(userptr, "glFragmentLightModelivSGIX");
    agx_custom_glad_glFragmentLightfSGIX = (PFNGLFRAGMENTLIGHTFSGIXPROC) load(userptr, "glFragmentLightfSGIX");
    agx_custom_glad_glFragmentLightfvSGIX = (PFNGLFRAGMENTLIGHTFVSGIXPROC) load(userptr, "glFragmentLightfvSGIX");
    agx_custom_glad_glFragmentLightiSGIX = (PFNGLFRAGMENTLIGHTISGIXPROC) load(userptr, "glFragmentLightiSGIX");
    agx_custom_glad_glFragmentLightivSGIX = (PFNGLFRAGMENTLIGHTIVSGIXPROC) load(userptr, "glFragmentLightivSGIX");
    agx_custom_glad_glFragmentMaterialfSGIX = (PFNGLFRAGMENTMATERIALFSGIXPROC) load(userptr, "glFragmentMaterialfSGIX");
    agx_custom_glad_glFragmentMaterialfvSGIX = (PFNGLFRAGMENTMATERIALFVSGIXPROC) load(userptr, "glFragmentMaterialfvSGIX");
    agx_custom_glad_glFragmentMaterialiSGIX = (PFNGLFRAGMENTMATERIALISGIXPROC) load(userptr, "glFragmentMaterialiSGIX");
    agx_custom_glad_glFragmentMaterialivSGIX = (PFNGLFRAGMENTMATERIALIVSGIXPROC) load(userptr, "glFragmentMaterialivSGIX");
    agx_custom_glad_glGetFragmentLightfvSGIX = (PFNGLGETFRAGMENTLIGHTFVSGIXPROC) load(userptr, "glGetFragmentLightfvSGIX");
    agx_custom_glad_glGetFragmentLightivSGIX = (PFNGLGETFRAGMENTLIGHTIVSGIXPROC) load(userptr, "glGetFragmentLightivSGIX");
    agx_custom_glad_glGetFragmentMaterialfvSGIX = (PFNGLGETFRAGMENTMATERIALFVSGIXPROC) load(userptr, "glGetFragmentMaterialfvSGIX");
    agx_custom_glad_glGetFragmentMaterialivSGIX = (PFNGLGETFRAGMENTMATERIALIVSGIXPROC) load(userptr, "glGetFragmentMaterialivSGIX");
    agx_custom_glad_glLightEnviSGIX = (PFNGLLIGHTENVISGIXPROC) load(userptr, "glLightEnviSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_framezoom( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_framezoom) return;
    agx_custom_glad_glFrameZoomSGIX = (PFNGLFRAMEZOOMSGIXPROC) load(userptr, "glFrameZoomSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_igloo_interface( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_igloo_interface) return;
    agx_custom_glad_glIglooInterfaceSGIX = (PFNGLIGLOOINTERFACESGIXPROC) load(userptr, "glIglooInterfaceSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_instruments( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_instruments) return;
    agx_custom_glad_glGetInstrumentsSGIX = (PFNGLGETINSTRUMENTSSGIXPROC) load(userptr, "glGetInstrumentsSGIX");
    agx_custom_glad_glInstrumentsBufferSGIX = (PFNGLINSTRUMENTSBUFFERSGIXPROC) load(userptr, "glInstrumentsBufferSGIX");
    agx_custom_glad_glPollInstrumentsSGIX = (PFNGLPOLLINSTRUMENTSSGIXPROC) load(userptr, "glPollInstrumentsSGIX");
    agx_custom_glad_glReadInstrumentsSGIX = (PFNGLREADINSTRUMENTSSGIXPROC) load(userptr, "glReadInstrumentsSGIX");
    agx_custom_glad_glStartInstrumentsSGIX = (PFNGLSTARTINSTRUMENTSSGIXPROC) load(userptr, "glStartInstrumentsSGIX");
    agx_custom_glad_glStopInstrumentsSGIX = (PFNGLSTOPINSTRUMENTSSGIXPROC) load(userptr, "glStopInstrumentsSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_list_priority( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_list_priority) return;
    agx_custom_glad_glGetListParameterfvSGIX = (PFNGLGETLISTPARAMETERFVSGIXPROC) load(userptr, "glGetListParameterfvSGIX");
    agx_custom_glad_glGetListParameterivSGIX = (PFNGLGETLISTPARAMETERIVSGIXPROC) load(userptr, "glGetListParameterivSGIX");
    agx_custom_glad_glListParameterfSGIX = (PFNGLLISTPARAMETERFSGIXPROC) load(userptr, "glListParameterfSGIX");
    agx_custom_glad_glListParameterfvSGIX = (PFNGLLISTPARAMETERFVSGIXPROC) load(userptr, "glListParameterfvSGIX");
    agx_custom_glad_glListParameteriSGIX = (PFNGLLISTPARAMETERISGIXPROC) load(userptr, "glListParameteriSGIX");
    agx_custom_glad_glListParameterivSGIX = (PFNGLLISTPARAMETERIVSGIXPROC) load(userptr, "glListParameterivSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_pixel_texture( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_pixel_texture) return;
    agx_custom_glad_glPixelTexGenSGIX = (PFNGLPIXELTEXGENSGIXPROC) load(userptr, "glPixelTexGenSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_polynomial_ffd( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_polynomial_ffd) return;
    agx_custom_glad_glDeformSGIX = (PFNGLDEFORMSGIXPROC) load(userptr, "glDeformSGIX");
    agx_custom_glad_glDeformationMap3dSGIX = (PFNGLDEFORMATIONMAP3DSGIXPROC) load(userptr, "glDeformationMap3dSGIX");
    agx_custom_glad_glDeformationMap3fSGIX = (PFNGLDEFORMATIONMAP3FSGIXPROC) load(userptr, "glDeformationMap3fSGIX");
    agx_custom_glad_glLoadIdentityDeformationMapSGIX = (PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) load(userptr, "glLoadIdentityDeformationMapSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_reference_plane( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_reference_plane) return;
    agx_custom_glad_glReferencePlaneSGIX = (PFNGLREFERENCEPLANESGIXPROC) load(userptr, "glReferencePlaneSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_sprite( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_sprite) return;
    agx_custom_glad_glSpriteParameterfSGIX = (PFNGLSPRITEPARAMETERFSGIXPROC) load(userptr, "glSpriteParameterfSGIX");
    agx_custom_glad_glSpriteParameterfvSGIX = (PFNGLSPRITEPARAMETERFVSGIXPROC) load(userptr, "glSpriteParameterfvSGIX");
    agx_custom_glad_glSpriteParameteriSGIX = (PFNGLSPRITEPARAMETERISGIXPROC) load(userptr, "glSpriteParameteriSGIX");
    agx_custom_glad_glSpriteParameterivSGIX = (PFNGLSPRITEPARAMETERIVSGIXPROC) load(userptr, "glSpriteParameterivSGIX");
}
static void agx_custom_glad_gl_load_GL_SGIX_tag_sample_buffer( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGIX_tag_sample_buffer) return;
    agx_custom_glad_glTagSampleBufferSGIX = (PFNGLTAGSAMPLEBUFFERSGIXPROC) load(userptr, "glTagSampleBufferSGIX");
}
static void agx_custom_glad_gl_load_GL_SGI_color_table( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SGI_color_table) return;
    agx_custom_glad_glColorTableParameterfvSGI = (PFNGLCOLORTABLEPARAMETERFVSGIPROC) load(userptr, "glColorTableParameterfvSGI");
    agx_custom_glad_glColorTableParameterivSGI = (PFNGLCOLORTABLEPARAMETERIVSGIPROC) load(userptr, "glColorTableParameterivSGI");
    agx_custom_glad_glColorTableSGI = (PFNGLCOLORTABLESGIPROC) load(userptr, "glColorTableSGI");
    agx_custom_glad_glCopyColorTableSGI = (PFNGLCOPYCOLORTABLESGIPROC) load(userptr, "glCopyColorTableSGI");
    agx_custom_glad_glGetColorTableParameterfvSGI = (PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) load(userptr, "glGetColorTableParameterfvSGI");
    agx_custom_glad_glGetColorTableParameterivSGI = (PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) load(userptr, "glGetColorTableParameterivSGI");
    agx_custom_glad_glGetColorTableSGI = (PFNGLGETCOLORTABLESGIPROC) load(userptr, "glGetColorTableSGI");
}
static void agx_custom_glad_gl_load_GL_SUNX_constant_data( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SUNX_constant_data) return;
    agx_custom_glad_glFinishTextureSUNX = (PFNGLFINISHTEXTURESUNXPROC) load(userptr, "glFinishTextureSUNX");
}
static void agx_custom_glad_gl_load_GL_SUN_global_alpha( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SUN_global_alpha) return;
    agx_custom_glad_glGlobalAlphaFactorbSUN = (PFNGLGLOBALALPHAFACTORBSUNPROC) load(userptr, "glGlobalAlphaFactorbSUN");
    agx_custom_glad_glGlobalAlphaFactordSUN = (PFNGLGLOBALALPHAFACTORDSUNPROC) load(userptr, "glGlobalAlphaFactordSUN");
    agx_custom_glad_glGlobalAlphaFactorfSUN = (PFNGLGLOBALALPHAFACTORFSUNPROC) load(userptr, "glGlobalAlphaFactorfSUN");
    agx_custom_glad_glGlobalAlphaFactoriSUN = (PFNGLGLOBALALPHAFACTORISUNPROC) load(userptr, "glGlobalAlphaFactoriSUN");
    agx_custom_glad_glGlobalAlphaFactorsSUN = (PFNGLGLOBALALPHAFACTORSSUNPROC) load(userptr, "glGlobalAlphaFactorsSUN");
    agx_custom_glad_glGlobalAlphaFactorubSUN = (PFNGLGLOBALALPHAFACTORUBSUNPROC) load(userptr, "glGlobalAlphaFactorubSUN");
    agx_custom_glad_glGlobalAlphaFactoruiSUN = (PFNGLGLOBALALPHAFACTORUISUNPROC) load(userptr, "glGlobalAlphaFactoruiSUN");
    agx_custom_glad_glGlobalAlphaFactorusSUN = (PFNGLGLOBALALPHAFACTORUSSUNPROC) load(userptr, "glGlobalAlphaFactorusSUN");
}
static void agx_custom_glad_gl_load_GL_SUN_mesh_array( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SUN_mesh_array) return;
    agx_custom_glad_glDrawMeshArraysSUN = (PFNGLDRAWMESHARRAYSSUNPROC) load(userptr, "glDrawMeshArraysSUN");
}
static void agx_custom_glad_gl_load_GL_SUN_triangle_list( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SUN_triangle_list) return;
    agx_custom_glad_glReplacementCodePointerSUN = (PFNGLREPLACEMENTCODEPOINTERSUNPROC) load(userptr, "glReplacementCodePointerSUN");
    agx_custom_glad_glReplacementCodeubSUN = (PFNGLREPLACEMENTCODEUBSUNPROC) load(userptr, "glReplacementCodeubSUN");
    agx_custom_glad_glReplacementCodeubvSUN = (PFNGLREPLACEMENTCODEUBVSUNPROC) load(userptr, "glReplacementCodeubvSUN");
    agx_custom_glad_glReplacementCodeuiSUN = (PFNGLREPLACEMENTCODEUISUNPROC) load(userptr, "glReplacementCodeuiSUN");
    agx_custom_glad_glReplacementCodeuivSUN = (PFNGLREPLACEMENTCODEUIVSUNPROC) load(userptr, "glReplacementCodeuivSUN");
    agx_custom_glad_glReplacementCodeusSUN = (PFNGLREPLACEMENTCODEUSSUNPROC) load(userptr, "glReplacementCodeusSUN");
    agx_custom_glad_glReplacementCodeusvSUN = (PFNGLREPLACEMENTCODEUSVSUNPROC) load(userptr, "glReplacementCodeusvSUN");
}
static void agx_custom_glad_gl_load_GL_SUN_vertex( AGX_CUSTOMGLADuserptrloadfunc load, void* userptr) {
    if(!AGX_CUSTOM_GLAD_GL_SUN_vertex) return;
    agx_custom_glad_glColor3fVertex3fSUN = (PFNGLCOLOR3FVERTEX3FSUNPROC) load(userptr, "glColor3fVertex3fSUN");
    agx_custom_glad_glColor3fVertex3fvSUN = (PFNGLCOLOR3FVERTEX3FVSUNPROC) load(userptr, "glColor3fVertex3fvSUN");
    agx_custom_glad_glColor4fNormal3fVertex3fSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glColor4fNormal3fVertex3fSUN");
    agx_custom_glad_glColor4fNormal3fVertex3fvSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glColor4fNormal3fVertex3fvSUN");
    agx_custom_glad_glColor4ubVertex2fSUN = (PFNGLCOLOR4UBVERTEX2FSUNPROC) load(userptr, "glColor4ubVertex2fSUN");
    agx_custom_glad_glColor4ubVertex2fvSUN = (PFNGLCOLOR4UBVERTEX2FVSUNPROC) load(userptr, "glColor4ubVertex2fvSUN");
    agx_custom_glad_glColor4ubVertex3fSUN = (PFNGLCOLOR4UBVERTEX3FSUNPROC) load(userptr, "glColor4ubVertex3fSUN");
    agx_custom_glad_glColor4ubVertex3fvSUN = (PFNGLCOLOR4UBVERTEX3FVSUNPROC) load(userptr, "glColor4ubVertex3fvSUN");
    agx_custom_glad_glNormal3fVertex3fSUN = (PFNGLNORMAL3FVERTEX3FSUNPROC) load(userptr, "glNormal3fVertex3fSUN");
    agx_custom_glad_glNormal3fVertex3fvSUN = (PFNGLNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glNormal3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiColor3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiColor3fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiColor3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiColor3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiColor4fNormal3fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiColor4ubVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiColor4ubVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiColor4ubVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiColor4ubVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiNormal3fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiNormal3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiTexCoord2fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiTexCoord2fVertex3fvSUN");
    agx_custom_glad_glReplacementCodeuiVertex3fSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) load(userptr, "glReplacementCodeuiVertex3fSUN");
    agx_custom_glad_glReplacementCodeuiVertex3fvSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) load(userptr, "glReplacementCodeuiVertex3fvSUN");
    agx_custom_glad_glTexCoord2fColor3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) load(userptr, "glTexCoord2fColor3fVertex3fSUN");
    agx_custom_glad_glTexCoord2fColor3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) load(userptr, "glTexCoord2fColor3fVertex3fvSUN");
    agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glTexCoord2fColor4fNormal3fVertex3fSUN");
    agx_custom_glad_glTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glTexCoord2fColor4fNormal3fVertex3fvSUN");
    agx_custom_glad_glTexCoord2fColor4ubVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) load(userptr, "glTexCoord2fColor4ubVertex3fSUN");
    agx_custom_glad_glTexCoord2fColor4ubVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) load(userptr, "glTexCoord2fColor4ubVertex3fvSUN");
    agx_custom_glad_glTexCoord2fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) load(userptr, "glTexCoord2fNormal3fVertex3fSUN");
    agx_custom_glad_glTexCoord2fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) load(userptr, "glTexCoord2fNormal3fVertex3fvSUN");
    agx_custom_glad_glTexCoord2fVertex3fSUN = (PFNGLTEXCOORD2FVERTEX3FSUNPROC) load(userptr, "glTexCoord2fVertex3fSUN");
    agx_custom_glad_glTexCoord2fVertex3fvSUN = (PFNGLTEXCOORD2FVERTEX3FVSUNPROC) load(userptr, "glTexCoord2fVertex3fvSUN");
    agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) load(userptr, "glTexCoord4fColor4fNormal3fVertex4fSUN");
    agx_custom_glad_glTexCoord4fColor4fNormal3fVertex4fvSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) load(userptr, "glTexCoord4fColor4fNormal3fVertex4fvSUN");
    agx_custom_glad_glTexCoord4fVertex4fSUN = (PFNGLTEXCOORD4FVERTEX4FSUNPROC) load(userptr, "glTexCoord4fVertex4fSUN");
    agx_custom_glad_glTexCoord4fVertex4fvSUN = (PFNGLTEXCOORD4FVERTEX4FVSUNPROC) load(userptr, "glTexCoord4fVertex4fvSUN");
}



#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)
#define AGX_CUSTOM_GLAD_GL_IS_SOME_NEW_VERSION 1
#else
#define AGX_CUSTOM_GLAD_GL_IS_SOME_NEW_VERSION 0
#endif

static int agx_custom_glad_gl_get_extensions( int version, const char **out_exts, unsigned int *out_num_exts_i, char ***out_exts_i) {
#if AGX_CUSTOM_GLAD_GL_IS_SOME_NEW_VERSION
    if(AGX_CUSTOM_GLAD_VERSION_MAJOR(version) < 3) {
#else
    (void) version;
    (void) out_num_exts_i;
    (void) out_exts_i;
#endif
        if (agx_custom_glad_glGetString == NULL) {
            return 0;
        }
        *out_exts = (const char *)agx_custom_glad_glGetString(GL_EXTENSIONS);
#if AGX_CUSTOM_GLAD_GL_IS_SOME_NEW_VERSION
    } else {
        unsigned int index = 0;
        unsigned int num_exts_i = 0;
        char **exts_i = NULL;
        if (agx_custom_glad_glGetStringi == NULL || agx_custom_glad_glGetIntegerv == NULL) {
            return 0;
        }
        agx_custom_glad_glGetIntegerv(GL_NUM_EXTENSIONS, (int*) &num_exts_i);
        if (num_exts_i > 0) {
            exts_i = (char **) malloc(num_exts_i * (sizeof *exts_i));
        }
        if (exts_i == NULL) {
            return 0;
        }
        for(index = 0; index < num_exts_i; index++) {
            const char *gl_str_tmp = (const char*) agx_custom_glad_glGetStringi(GL_EXTENSIONS, index);
            size_t len = strlen(gl_str_tmp) + 1;

            char *local_str = (char*) malloc(len * sizeof(char));
            if(local_str != NULL) {
                memcpy(local_str, gl_str_tmp, len * sizeof(char));
            }

            exts_i[index] = local_str;
        }

        *out_num_exts_i = num_exts_i;
        *out_exts_i = exts_i;
    }
#endif
    return 1;
}
static void agx_custom_glad_gl_free_extensions(char **exts_i, unsigned int num_exts_i) {
    if (exts_i != NULL) {
        unsigned int index;
        for(index = 0; index < num_exts_i; index++) {
            free((void *) (exts_i[index]));
        }
        free((void *)exts_i);
        exts_i = NULL;
    }
}
static int agx_custom_glad_gl_has_extension(int version, const char *exts, unsigned int num_exts_i, char **exts_i, const char *ext) {
    if(AGX_CUSTOM_GLAD_VERSION_MAJOR(version) < 3 || !AGX_CUSTOM_GLAD_GL_IS_SOME_NEW_VERSION) {
        const char *extensions;
        const char *loc;
        const char *terminator;
        extensions = exts;
        if(extensions == NULL || ext == NULL) {
            return 0;
        }
        while(1) {
            loc = strstr(extensions, ext);
            if(loc == NULL) {
                return 0;
            }
            terminator = loc + strlen(ext);
            if((loc == extensions || *(loc - 1) == ' ') &&
                (*terminator == ' ' || *terminator == '\0')) {
                return 1;
            }
            extensions = terminator;
        }
    } else {
        unsigned int index;
        for(index = 0; index < num_exts_i; index++) {
            const char *e = exts_i[index];
            if(strcmp(e, ext) == 0) {
                return 1;
            }
        }
    }
    return 0;
}

static AGX_CUSTOMGLADapiproc agx_custom_glad_gl_get_proc_from_userptr(void *userptr, const char* name) {
    return (AGX_CUSTOM_GLAD_GNUC_EXTENSION (AGX_CUSTOMGLADapiproc (*)(const char *name)) userptr)(name);
}

static int agx_custom_glad_gl_find_extensions_gl( int version) {
    const char *exts = NULL;
    unsigned int num_exts_i = 0;
    char **exts_i = NULL;
    if (!agx_custom_glad_gl_get_extensions(version, &exts, &num_exts_i, &exts_i)) return 0;

    AGX_CUSTOM_GLAD_GL_3DFX_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_3DFX_multisample");
    AGX_CUSTOM_GLAD_GL_3DFX_tbuffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_3DFX_tbuffer");
    AGX_CUSTOM_GLAD_GL_3DFX_texture_compression_FXT1 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_3DFX_texture_compression_FXT1");
    AGX_CUSTOM_GLAD_GL_AMD_blend_minmax_factor = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_blend_minmax_factor");
    AGX_CUSTOM_GLAD_GL_AMD_conservative_depth = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_conservative_depth");
    AGX_CUSTOM_GLAD_GL_AMD_debug_output = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_debug_output");
    AGX_CUSTOM_GLAD_GL_AMD_depth_clamp_separate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_depth_clamp_separate");
    AGX_CUSTOM_GLAD_GL_AMD_draw_buffers_blend = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_draw_buffers_blend");
    AGX_CUSTOM_GLAD_GL_AMD_framebuffer_multisample_advanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_framebuffer_multisample_advanced");
    AGX_CUSTOM_GLAD_GL_AMD_framebuffer_sample_positions = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_framebuffer_sample_positions");
    AGX_CUSTOM_GLAD_GL_AMD_gcn_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_gcn_shader");
    AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_half_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_gpu_shader_half_float");
    AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int16 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_gpu_shader_int16");
    AGX_CUSTOM_GLAD_GL_AMD_gpu_shader_int64 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_gpu_shader_int64");
    AGX_CUSTOM_GLAD_GL_AMD_interleaved_elements = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_interleaved_elements");
    AGX_CUSTOM_GLAD_GL_AMD_multi_draw_indirect = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_multi_draw_indirect");
    AGX_CUSTOM_GLAD_GL_AMD_name_gen_delete = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_name_gen_delete");
    AGX_CUSTOM_GLAD_GL_AMD_occlusion_query_event = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_occlusion_query_event");
    AGX_CUSTOM_GLAD_GL_AMD_performance_monitor = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_performance_monitor");
    AGX_CUSTOM_GLAD_GL_AMD_pinned_memory = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_pinned_memory");
    AGX_CUSTOM_GLAD_GL_AMD_query_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_query_buffer_object");
    AGX_CUSTOM_GLAD_GL_AMD_sample_positions = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_sample_positions");
    AGX_CUSTOM_GLAD_GL_AMD_seamless_cubemap_per_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_seamless_cubemap_per_texture");
    AGX_CUSTOM_GLAD_GL_AMD_shader_atomic_counter_ops = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_atomic_counter_ops");
    AGX_CUSTOM_GLAD_GL_AMD_shader_ballot = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_ballot");
    AGX_CUSTOM_GLAD_GL_AMD_shader_explicit_vertex_parameter = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_explicit_vertex_parameter");
    AGX_CUSTOM_GLAD_GL_AMD_shader_gpu_shader_half_float_fetch = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_gpu_shader_half_float_fetch");
    AGX_CUSTOM_GLAD_GL_AMD_shader_image_load_store_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_image_load_store_lod");
    AGX_CUSTOM_GLAD_GL_AMD_shader_stencil_export = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_stencil_export");
    AGX_CUSTOM_GLAD_GL_AMD_shader_trinary_minmax = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_shader_trinary_minmax");
    AGX_CUSTOM_GLAD_GL_AMD_sparse_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_sparse_texture");
    AGX_CUSTOM_GLAD_GL_AMD_stencil_operation_extended = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_stencil_operation_extended");
    AGX_CUSTOM_GLAD_GL_AMD_texture_gather_bias_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_texture_gather_bias_lod");
    AGX_CUSTOM_GLAD_GL_AMD_texture_texture4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_texture_texture4");
    AGX_CUSTOM_GLAD_GL_AMD_transform_feedback3_lines_triangles = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_transform_feedback3_lines_triangles");
    AGX_CUSTOM_GLAD_GL_AMD_transform_feedback4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_transform_feedback4");
    AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_layer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_vertex_shader_layer");
    AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_tessellator = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_vertex_shader_tessellator");
    AGX_CUSTOM_GLAD_GL_AMD_vertex_shader_viewport_index = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_AMD_vertex_shader_viewport_index");
    AGX_CUSTOM_GLAD_GL_APPLE_aux_depth_stencil = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_aux_depth_stencil");
    AGX_CUSTOM_GLAD_GL_APPLE_client_storage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_client_storage");
    AGX_CUSTOM_GLAD_GL_APPLE_element_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_element_array");
    AGX_CUSTOM_GLAD_GL_APPLE_fence = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_fence");
    AGX_CUSTOM_GLAD_GL_APPLE_float_pixels = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_float_pixels");
    AGX_CUSTOM_GLAD_GL_APPLE_flush_buffer_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_flush_buffer_range");
    AGX_CUSTOM_GLAD_GL_APPLE_object_purgeable = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_object_purgeable");
    AGX_CUSTOM_GLAD_GL_APPLE_rgb_422 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_rgb_422");
    AGX_CUSTOM_GLAD_GL_APPLE_row_bytes = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_row_bytes");
    AGX_CUSTOM_GLAD_GL_APPLE_specular_vector = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_specular_vector");
    AGX_CUSTOM_GLAD_GL_APPLE_texture_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_texture_range");
    AGX_CUSTOM_GLAD_GL_APPLE_transform_hint = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_transform_hint");
    AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_vertex_array_object");
    AGX_CUSTOM_GLAD_GL_APPLE_vertex_array_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_vertex_array_range");
    AGX_CUSTOM_GLAD_GL_APPLE_vertex_program_evaluators = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_vertex_program_evaluators");
    AGX_CUSTOM_GLAD_GL_APPLE_ycbcr_422 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_APPLE_ycbcr_422");
    AGX_CUSTOM_GLAD_GL_ARB_ES2_compatibility = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_ES2_compatibility");
    AGX_CUSTOM_GLAD_GL_ARB_ES3_1_compatibility = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_ES3_1_compatibility");
    AGX_CUSTOM_GLAD_GL_ARB_ES3_2_compatibility = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_ES3_2_compatibility");
    AGX_CUSTOM_GLAD_GL_ARB_ES3_compatibility = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_ES3_compatibility");
    AGX_CUSTOM_GLAD_GL_ARB_arrays_of_arrays = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_arrays_of_arrays");
    AGX_CUSTOM_GLAD_GL_ARB_base_instance = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_base_instance");
    AGX_CUSTOM_GLAD_GL_ARB_bindless_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_bindless_texture");
    AGX_CUSTOM_GLAD_GL_ARB_blend_func_extended = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_blend_func_extended");
    AGX_CUSTOM_GLAD_GL_ARB_buffer_storage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_buffer_storage");
    AGX_CUSTOM_GLAD_GL_ARB_cl_event = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_cl_event");
    AGX_CUSTOM_GLAD_GL_ARB_clear_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_clear_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_clear_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_clear_texture");
    AGX_CUSTOM_GLAD_GL_ARB_clip_control = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_clip_control");
    AGX_CUSTOM_GLAD_GL_ARB_color_buffer_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_color_buffer_float");
    AGX_CUSTOM_GLAD_GL_ARB_compatibility = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_compatibility");
    AGX_CUSTOM_GLAD_GL_ARB_compressed_texture_pixel_storage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_compressed_texture_pixel_storage");
    AGX_CUSTOM_GLAD_GL_ARB_compute_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_compute_shader");
    AGX_CUSTOM_GLAD_GL_ARB_compute_variable_group_size = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_compute_variable_group_size");
    AGX_CUSTOM_GLAD_GL_ARB_conditional_render_inverted = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_conditional_render_inverted");
    AGX_CUSTOM_GLAD_GL_ARB_conservative_depth = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_conservative_depth");
    AGX_CUSTOM_GLAD_GL_ARB_copy_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_copy_buffer");
    AGX_CUSTOM_GLAD_GL_ARB_copy_image = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_copy_image");
    AGX_CUSTOM_GLAD_GL_ARB_cull_distance = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_cull_distance");
    AGX_CUSTOM_GLAD_GL_ARB_debug_output = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_debug_output");
    AGX_CUSTOM_GLAD_GL_ARB_depth_buffer_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_depth_buffer_float");
    AGX_CUSTOM_GLAD_GL_ARB_depth_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_depth_clamp");
    AGX_CUSTOM_GLAD_GL_ARB_depth_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_depth_texture");
    AGX_CUSTOM_GLAD_GL_ARB_derivative_control = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_derivative_control");
    AGX_CUSTOM_GLAD_GL_ARB_direct_state_access = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_direct_state_access");
    AGX_CUSTOM_GLAD_GL_ARB_draw_buffers = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_draw_buffers");
    AGX_CUSTOM_GLAD_GL_ARB_draw_buffers_blend = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_draw_buffers_blend");
    AGX_CUSTOM_GLAD_GL_ARB_draw_elements_base_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_draw_elements_base_vertex");
    AGX_CUSTOM_GLAD_GL_ARB_draw_indirect = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_draw_indirect");
    AGX_CUSTOM_GLAD_GL_ARB_draw_instanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_draw_instanced");
    AGX_CUSTOM_GLAD_GL_ARB_enhanced_layouts = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_enhanced_layouts");
    AGX_CUSTOM_GLAD_GL_ARB_explicit_attrib_location = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_explicit_attrib_location");
    AGX_CUSTOM_GLAD_GL_ARB_explicit_uniform_location = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_explicit_uniform_location");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_coord_conventions = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_coord_conventions");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_layer_viewport = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_layer_viewport");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_program = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_program");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_program_shadow = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_program_shadow");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_shader");
    AGX_CUSTOM_GLAD_GL_ARB_fragment_shader_interlock = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_fragment_shader_interlock");
    AGX_CUSTOM_GLAD_GL_ARB_framebuffer_no_attachments = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_framebuffer_no_attachments");
    AGX_CUSTOM_GLAD_GL_ARB_framebuffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_framebuffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_framebuffer_sRGB = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_framebuffer_sRGB");
    AGX_CUSTOM_GLAD_GL_ARB_geometry_shader4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_geometry_shader4");
    AGX_CUSTOM_GLAD_GL_ARB_get_program_binary = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_get_program_binary");
    AGX_CUSTOM_GLAD_GL_ARB_get_texture_sub_image = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_get_texture_sub_image");
    AGX_CUSTOM_GLAD_GL_ARB_gl_spirv = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_gl_spirv");
    AGX_CUSTOM_GLAD_GL_ARB_gpu_shader5 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_gpu_shader5");
    AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_fp64 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_gpu_shader_fp64");
    AGX_CUSTOM_GLAD_GL_ARB_gpu_shader_int64 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_gpu_shader_int64");
    AGX_CUSTOM_GLAD_GL_ARB_half_float_pixel = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_half_float_pixel");
    AGX_CUSTOM_GLAD_GL_ARB_half_float_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_half_float_vertex");
    AGX_CUSTOM_GLAD_GL_ARB_imaging = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_imaging");
    AGX_CUSTOM_GLAD_GL_ARB_indirect_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_indirect_parameters");
    AGX_CUSTOM_GLAD_GL_ARB_instanced_arrays = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_instanced_arrays");
    AGX_CUSTOM_GLAD_GL_ARB_internalformat_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_internalformat_query");
    AGX_CUSTOM_GLAD_GL_ARB_internalformat_query2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_internalformat_query2");
    AGX_CUSTOM_GLAD_GL_ARB_invalidate_subdata = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_invalidate_subdata");
    AGX_CUSTOM_GLAD_GL_ARB_map_buffer_alignment = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_map_buffer_alignment");
    AGX_CUSTOM_GLAD_GL_ARB_map_buffer_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_map_buffer_range");
    AGX_CUSTOM_GLAD_GL_ARB_matrix_palette = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_matrix_palette");
    AGX_CUSTOM_GLAD_GL_ARB_multi_bind = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_multi_bind");
    AGX_CUSTOM_GLAD_GL_ARB_multi_draw_indirect = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_multi_draw_indirect");
    AGX_CUSTOM_GLAD_GL_ARB_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_multisample");
    AGX_CUSTOM_GLAD_GL_ARB_multitexture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_multitexture");
    AGX_CUSTOM_GLAD_GL_ARB_occlusion_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_occlusion_query");
    AGX_CUSTOM_GLAD_GL_ARB_occlusion_query2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_occlusion_query2");
    AGX_CUSTOM_GLAD_GL_ARB_parallel_shader_compile = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_parallel_shader_compile");
    AGX_CUSTOM_GLAD_GL_ARB_pipeline_statistics_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_pipeline_statistics_query");
    AGX_CUSTOM_GLAD_GL_ARB_pixel_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_pixel_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_point_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_point_parameters");
    AGX_CUSTOM_GLAD_GL_ARB_point_sprite = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_point_sprite");
    AGX_CUSTOM_GLAD_GL_ARB_polygon_offset_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_polygon_offset_clamp");
    AGX_CUSTOM_GLAD_GL_ARB_post_depth_coverage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_post_depth_coverage");
    AGX_CUSTOM_GLAD_GL_ARB_program_interface_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_program_interface_query");
    AGX_CUSTOM_GLAD_GL_ARB_provoking_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_provoking_vertex");
    AGX_CUSTOM_GLAD_GL_ARB_query_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_query_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_robust_buffer_access_behavior = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_robust_buffer_access_behavior");
    AGX_CUSTOM_GLAD_GL_ARB_robustness = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_robustness");
    AGX_CUSTOM_GLAD_GL_ARB_robustness_isolation = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_robustness_isolation");
    AGX_CUSTOM_GLAD_GL_ARB_sample_locations = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sample_locations");
    AGX_CUSTOM_GLAD_GL_ARB_sample_shading = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sample_shading");
    AGX_CUSTOM_GLAD_GL_ARB_sampler_objects = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sampler_objects");
    AGX_CUSTOM_GLAD_GL_ARB_seamless_cube_map = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_seamless_cube_map");
    AGX_CUSTOM_GLAD_GL_ARB_seamless_cubemap_per_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_seamless_cubemap_per_texture");
    AGX_CUSTOM_GLAD_GL_ARB_separate_shader_objects = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_separate_shader_objects");
    AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counter_ops = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_atomic_counter_ops");
    AGX_CUSTOM_GLAD_GL_ARB_shader_atomic_counters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_atomic_counters");
    AGX_CUSTOM_GLAD_GL_ARB_shader_ballot = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_ballot");
    AGX_CUSTOM_GLAD_GL_ARB_shader_bit_encoding = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_bit_encoding");
    AGX_CUSTOM_GLAD_GL_ARB_shader_clock = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_clock");
    AGX_CUSTOM_GLAD_GL_ARB_shader_draw_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_draw_parameters");
    AGX_CUSTOM_GLAD_GL_ARB_shader_group_vote = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_group_vote");
    AGX_CUSTOM_GLAD_GL_ARB_shader_image_load_store = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_image_load_store");
    AGX_CUSTOM_GLAD_GL_ARB_shader_image_size = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_image_size");
    AGX_CUSTOM_GLAD_GL_ARB_shader_objects = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_objects");
    AGX_CUSTOM_GLAD_GL_ARB_shader_precision = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_precision");
    AGX_CUSTOM_GLAD_GL_ARB_shader_stencil_export = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_stencil_export");
    AGX_CUSTOM_GLAD_GL_ARB_shader_storage_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_storage_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_shader_subroutine = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_subroutine");
    AGX_CUSTOM_GLAD_GL_ARB_shader_texture_image_samples = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_texture_image_samples");
    AGX_CUSTOM_GLAD_GL_ARB_shader_texture_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_texture_lod");
    AGX_CUSTOM_GLAD_GL_ARB_shader_viewport_layer_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shader_viewport_layer_array");
    AGX_CUSTOM_GLAD_GL_ARB_shading_language_100 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shading_language_100");
    AGX_CUSTOM_GLAD_GL_ARB_shading_language_420pack = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shading_language_420pack");
    AGX_CUSTOM_GLAD_GL_ARB_shading_language_include = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shading_language_include");
    AGX_CUSTOM_GLAD_GL_ARB_shading_language_packing = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shading_language_packing");
    AGX_CUSTOM_GLAD_GL_ARB_shadow = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shadow");
    AGX_CUSTOM_GLAD_GL_ARB_shadow_ambient = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_shadow_ambient");
    AGX_CUSTOM_GLAD_GL_ARB_sparse_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sparse_buffer");
    AGX_CUSTOM_GLAD_GL_ARB_sparse_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sparse_texture");
    AGX_CUSTOM_GLAD_GL_ARB_sparse_texture2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sparse_texture2");
    AGX_CUSTOM_GLAD_GL_ARB_sparse_texture_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sparse_texture_clamp");
    AGX_CUSTOM_GLAD_GL_ARB_spirv_extensions = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_spirv_extensions");
    AGX_CUSTOM_GLAD_GL_ARB_stencil_texturing = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_stencil_texturing");
    AGX_CUSTOM_GLAD_GL_ARB_sync = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_sync");
    AGX_CUSTOM_GLAD_GL_ARB_tessellation_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_tessellation_shader");
    AGX_CUSTOM_GLAD_GL_ARB_texture_barrier = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_barrier");
    AGX_CUSTOM_GLAD_GL_ARB_texture_border_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_border_clamp");
    AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_object_rgb32 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_buffer_object_rgb32");
    AGX_CUSTOM_GLAD_GL_ARB_texture_buffer_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_buffer_range");
    AGX_CUSTOM_GLAD_GL_ARB_texture_compression = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_compression");
    AGX_CUSTOM_GLAD_GL_ARB_texture_compression_bptc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_compression_bptc");
    AGX_CUSTOM_GLAD_GL_ARB_texture_compression_rgtc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_compression_rgtc");
    AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_cube_map");
    AGX_CUSTOM_GLAD_GL_ARB_texture_cube_map_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_cube_map_array");
    AGX_CUSTOM_GLAD_GL_ARB_texture_env_add = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_env_add");
    AGX_CUSTOM_GLAD_GL_ARB_texture_env_combine = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_env_combine");
    AGX_CUSTOM_GLAD_GL_ARB_texture_env_crossbar = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_env_crossbar");
    AGX_CUSTOM_GLAD_GL_ARB_texture_env_dot3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_env_dot3");
    AGX_CUSTOM_GLAD_GL_ARB_texture_filter_anisotropic = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_filter_anisotropic");
    AGX_CUSTOM_GLAD_GL_ARB_texture_filter_minmax = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_filter_minmax");
    AGX_CUSTOM_GLAD_GL_ARB_texture_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_float");
    AGX_CUSTOM_GLAD_GL_ARB_texture_gather = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_gather");
    AGX_CUSTOM_GLAD_GL_ARB_texture_mirror_clamp_to_edge = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_mirror_clamp_to_edge");
    AGX_CUSTOM_GLAD_GL_ARB_texture_mirrored_repeat = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_mirrored_repeat");
    AGX_CUSTOM_GLAD_GL_ARB_texture_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_multisample");
    AGX_CUSTOM_GLAD_GL_ARB_texture_non_power_of_two = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_non_power_of_two");
    AGX_CUSTOM_GLAD_GL_ARB_texture_query_levels = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_query_levels");
    AGX_CUSTOM_GLAD_GL_ARB_texture_query_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_query_lod");
    AGX_CUSTOM_GLAD_GL_ARB_texture_rectangle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_rectangle");
    AGX_CUSTOM_GLAD_GL_ARB_texture_rg = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_rg");
    AGX_CUSTOM_GLAD_GL_ARB_texture_rgb10_a2ui = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_rgb10_a2ui");
    AGX_CUSTOM_GLAD_GL_ARB_texture_stencil8 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_stencil8");
    AGX_CUSTOM_GLAD_GL_ARB_texture_storage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_storage");
    AGX_CUSTOM_GLAD_GL_ARB_texture_storage_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_storage_multisample");
    AGX_CUSTOM_GLAD_GL_ARB_texture_swizzle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_swizzle");
    AGX_CUSTOM_GLAD_GL_ARB_texture_view = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_texture_view");
    AGX_CUSTOM_GLAD_GL_ARB_timer_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_timer_query");
    AGX_CUSTOM_GLAD_GL_ARB_transform_feedback2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_transform_feedback2");
    AGX_CUSTOM_GLAD_GL_ARB_transform_feedback3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_transform_feedback3");
    AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_instanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_transform_feedback_instanced");
    AGX_CUSTOM_GLAD_GL_ARB_transform_feedback_overflow_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_transform_feedback_overflow_query");
    AGX_CUSTOM_GLAD_GL_ARB_transpose_matrix = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_transpose_matrix");
    AGX_CUSTOM_GLAD_GL_ARB_uniform_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_uniform_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_array_bgra = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_array_bgra");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_array_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_array_object");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_64bit = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_attrib_64bit");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_attrib_binding = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_attrib_binding");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_blend = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_blend");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_buffer_object");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_program = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_program");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_shader");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_type_10f_11f_11f_rev = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_type_10f_11f_11f_rev");
    AGX_CUSTOM_GLAD_GL_ARB_vertex_type_2_10_10_10_rev = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_vertex_type_2_10_10_10_rev");
    AGX_CUSTOM_GLAD_GL_ARB_viewport_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_viewport_array");
    AGX_CUSTOM_GLAD_GL_ARB_window_pos = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ARB_window_pos");
    AGX_CUSTOM_GLAD_GL_ATI_draw_buffers = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_draw_buffers");
    AGX_CUSTOM_GLAD_GL_ATI_element_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_element_array");
    AGX_CUSTOM_GLAD_GL_ATI_envmap_bumpmap = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_envmap_bumpmap");
    AGX_CUSTOM_GLAD_GL_ATI_fragment_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_fragment_shader");
    AGX_CUSTOM_GLAD_GL_ATI_map_object_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_map_object_buffer");
    AGX_CUSTOM_GLAD_GL_ATI_meminfo = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_meminfo");
    AGX_CUSTOM_GLAD_GL_ATI_pixel_format_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_pixel_format_float");
    AGX_CUSTOM_GLAD_GL_ATI_pn_triangles = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_pn_triangles");
    AGX_CUSTOM_GLAD_GL_ATI_separate_stencil = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_separate_stencil");
    AGX_CUSTOM_GLAD_GL_ATI_text_fragment_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_text_fragment_shader");
    AGX_CUSTOM_GLAD_GL_ATI_texture_env_combine3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_texture_env_combine3");
    AGX_CUSTOM_GLAD_GL_ATI_texture_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_texture_float");
    AGX_CUSTOM_GLAD_GL_ATI_texture_mirror_once = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_texture_mirror_once");
    AGX_CUSTOM_GLAD_GL_ATI_vertex_array_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_vertex_array_object");
    AGX_CUSTOM_GLAD_GL_ATI_vertex_attrib_array_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_vertex_attrib_array_object");
    AGX_CUSTOM_GLAD_GL_ATI_vertex_streams = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_ATI_vertex_streams");
    AGX_CUSTOM_GLAD_GL_EXT_422_pixels = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_422_pixels");
    AGX_CUSTOM_GLAD_GL_EXT_EGL_image_storage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_EGL_image_storage");
    AGX_CUSTOM_GLAD_GL_EXT_EGL_sync = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_EGL_sync");
    AGX_CUSTOM_GLAD_GL_EXT_abgr = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_abgr");
    AGX_CUSTOM_GLAD_GL_EXT_bgra = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_bgra");
    AGX_CUSTOM_GLAD_GL_EXT_bindable_uniform = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_bindable_uniform");
    AGX_CUSTOM_GLAD_GL_EXT_blend_color = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_color");
    AGX_CUSTOM_GLAD_GL_EXT_blend_equation_separate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_equation_separate");
    AGX_CUSTOM_GLAD_GL_EXT_blend_func_separate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_func_separate");
    AGX_CUSTOM_GLAD_GL_EXT_blend_logic_op = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_logic_op");
    AGX_CUSTOM_GLAD_GL_EXT_blend_minmax = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_minmax");
    AGX_CUSTOM_GLAD_GL_EXT_blend_subtract = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_blend_subtract");
    AGX_CUSTOM_GLAD_GL_EXT_clip_volume_hint = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_clip_volume_hint");
    AGX_CUSTOM_GLAD_GL_EXT_cmyka = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_cmyka");
    AGX_CUSTOM_GLAD_GL_EXT_color_subtable = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_color_subtable");
    AGX_CUSTOM_GLAD_GL_EXT_compiled_vertex_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_compiled_vertex_array");
    AGX_CUSTOM_GLAD_GL_EXT_convolution = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_convolution");
    AGX_CUSTOM_GLAD_GL_EXT_coordinate_frame = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_coordinate_frame");
    AGX_CUSTOM_GLAD_GL_EXT_copy_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_copy_texture");
    AGX_CUSTOM_GLAD_GL_EXT_cull_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_cull_vertex");
    AGX_CUSTOM_GLAD_GL_EXT_debug_label = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_debug_label");
    AGX_CUSTOM_GLAD_GL_EXT_debug_marker = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_debug_marker");
    AGX_CUSTOM_GLAD_GL_EXT_depth_bounds_test = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_depth_bounds_test");
    AGX_CUSTOM_GLAD_GL_EXT_direct_state_access = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_direct_state_access");
    AGX_CUSTOM_GLAD_GL_EXT_draw_buffers2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_draw_buffers2");
    AGX_CUSTOM_GLAD_GL_EXT_draw_instanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_draw_instanced");
    AGX_CUSTOM_GLAD_GL_EXT_draw_range_elements = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_draw_range_elements");
    AGX_CUSTOM_GLAD_GL_EXT_external_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_external_buffer");
    AGX_CUSTOM_GLAD_GL_EXT_fog_coord = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_fog_coord");
    AGX_CUSTOM_GLAD_GL_EXT_framebuffer_blit = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_framebuffer_blit");
    AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_framebuffer_multisample");
    AGX_CUSTOM_GLAD_GL_EXT_framebuffer_multisample_blit_scaled = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_framebuffer_multisample_blit_scaled");
    AGX_CUSTOM_GLAD_GL_EXT_framebuffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_framebuffer_object");
    AGX_CUSTOM_GLAD_GL_EXT_framebuffer_sRGB = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_framebuffer_sRGB");
    AGX_CUSTOM_GLAD_GL_EXT_geometry_shader4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_geometry_shader4");
    AGX_CUSTOM_GLAD_GL_EXT_gpu_program_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_gpu_program_parameters");
    AGX_CUSTOM_GLAD_GL_EXT_gpu_shader4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_gpu_shader4");
    AGX_CUSTOM_GLAD_GL_EXT_histogram = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_histogram");
    AGX_CUSTOM_GLAD_GL_EXT_index_array_formats = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_index_array_formats");
    AGX_CUSTOM_GLAD_GL_EXT_index_func = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_index_func");
    AGX_CUSTOM_GLAD_GL_EXT_index_material = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_index_material");
    AGX_CUSTOM_GLAD_GL_EXT_index_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_index_texture");
    AGX_CUSTOM_GLAD_GL_EXT_light_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_light_texture");
    AGX_CUSTOM_GLAD_GL_EXT_memory_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_memory_object");
    AGX_CUSTOM_GLAD_GL_EXT_memory_object_fd = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_memory_object_fd");
    AGX_CUSTOM_GLAD_GL_EXT_memory_object_win32 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_memory_object_win32");
    AGX_CUSTOM_GLAD_GL_EXT_misc_attribute = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_misc_attribute");
    AGX_CUSTOM_GLAD_GL_EXT_multi_draw_arrays = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_multi_draw_arrays");
    AGX_CUSTOM_GLAD_GL_EXT_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_multisample");
    AGX_CUSTOM_GLAD_GL_EXT_multiview_tessellation_geometry_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_multiview_tessellation_geometry_shader");
    AGX_CUSTOM_GLAD_GL_EXT_multiview_texture_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_multiview_texture_multisample");
    AGX_CUSTOM_GLAD_GL_EXT_multiview_timer_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_multiview_timer_query");
    AGX_CUSTOM_GLAD_GL_EXT_packed_depth_stencil = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_packed_depth_stencil");
    AGX_CUSTOM_GLAD_GL_EXT_packed_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_packed_float");
    AGX_CUSTOM_GLAD_GL_EXT_packed_pixels = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_packed_pixels");
    AGX_CUSTOM_GLAD_GL_EXT_paletted_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_paletted_texture");
    AGX_CUSTOM_GLAD_GL_EXT_pixel_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_pixel_buffer_object");
    AGX_CUSTOM_GLAD_GL_EXT_pixel_transform = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_pixel_transform");
    AGX_CUSTOM_GLAD_GL_EXT_pixel_transform_color_table = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_pixel_transform_color_table");
    AGX_CUSTOM_GLAD_GL_EXT_point_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_point_parameters");
    AGX_CUSTOM_GLAD_GL_EXT_polygon_offset = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_polygon_offset");
    AGX_CUSTOM_GLAD_GL_EXT_polygon_offset_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_polygon_offset_clamp");
    AGX_CUSTOM_GLAD_GL_EXT_post_depth_coverage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_post_depth_coverage");
    AGX_CUSTOM_GLAD_GL_EXT_provoking_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_provoking_vertex");
    AGX_CUSTOM_GLAD_GL_EXT_raster_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_raster_multisample");
    AGX_CUSTOM_GLAD_GL_EXT_rescale_normal = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_rescale_normal");
    AGX_CUSTOM_GLAD_GL_EXT_secondary_color = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_secondary_color");
    AGX_CUSTOM_GLAD_GL_EXT_semaphore = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_semaphore");
    AGX_CUSTOM_GLAD_GL_EXT_semaphore_fd = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_semaphore_fd");
    AGX_CUSTOM_GLAD_GL_EXT_semaphore_win32 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_semaphore_win32");
    AGX_CUSTOM_GLAD_GL_EXT_separate_shader_objects = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_separate_shader_objects");
    AGX_CUSTOM_GLAD_GL_EXT_separate_specular_color = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_separate_specular_color");
    AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shader_framebuffer_fetch");
    AGX_CUSTOM_GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shader_framebuffer_fetch_non_coherent");
    AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_formatted = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shader_image_load_formatted");
    AGX_CUSTOM_GLAD_GL_EXT_shader_image_load_store = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shader_image_load_store");
    AGX_CUSTOM_GLAD_GL_EXT_shader_integer_mix = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shader_integer_mix");
    AGX_CUSTOM_GLAD_GL_EXT_shadow_funcs = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shadow_funcs");
    AGX_CUSTOM_GLAD_GL_EXT_shared_texture_palette = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_shared_texture_palette");
    AGX_CUSTOM_GLAD_GL_EXT_sparse_texture2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_sparse_texture2");
    AGX_CUSTOM_GLAD_GL_EXT_stencil_clear_tag = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_stencil_clear_tag");
    AGX_CUSTOM_GLAD_GL_EXT_stencil_two_side = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_stencil_two_side");
    AGX_CUSTOM_GLAD_GL_EXT_stencil_wrap = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_stencil_wrap");
    AGX_CUSTOM_GLAD_GL_EXT_subtexture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_subtexture");
    AGX_CUSTOM_GLAD_GL_EXT_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture");
    AGX_CUSTOM_GLAD_GL_EXT_texture3D = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture3D");
    AGX_CUSTOM_GLAD_GL_EXT_texture_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_array");
    AGX_CUSTOM_GLAD_GL_EXT_texture_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_buffer_object");
    AGX_CUSTOM_GLAD_GL_EXT_texture_compression_latc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_compression_latc");
    AGX_CUSTOM_GLAD_GL_EXT_texture_compression_rgtc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_compression_rgtc");
    AGX_CUSTOM_GLAD_GL_EXT_texture_compression_s3tc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_compression_s3tc");
    AGX_CUSTOM_GLAD_GL_EXT_texture_cube_map = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_cube_map");
    AGX_CUSTOM_GLAD_GL_EXT_texture_env_add = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_env_add");
    AGX_CUSTOM_GLAD_GL_EXT_texture_env_combine = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_env_combine");
    AGX_CUSTOM_GLAD_GL_EXT_texture_env_dot3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_env_dot3");
    AGX_CUSTOM_GLAD_GL_EXT_texture_filter_anisotropic = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_filter_anisotropic");
    AGX_CUSTOM_GLAD_GL_EXT_texture_filter_minmax = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_filter_minmax");
    AGX_CUSTOM_GLAD_GL_EXT_texture_integer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_integer");
    AGX_CUSTOM_GLAD_GL_EXT_texture_lod_bias = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_lod_bias");
    AGX_CUSTOM_GLAD_GL_EXT_texture_mirror_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_mirror_clamp");
    AGX_CUSTOM_GLAD_GL_EXT_texture_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_object");
    AGX_CUSTOM_GLAD_GL_EXT_texture_perturb_normal = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_perturb_normal");
    AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_sRGB");
    AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_R8 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_sRGB_R8");
    AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_RG8 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_sRGB_RG8");
    AGX_CUSTOM_GLAD_GL_EXT_texture_sRGB_decode = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_sRGB_decode");
    AGX_CUSTOM_GLAD_GL_EXT_texture_shadow_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_shadow_lod");
    AGX_CUSTOM_GLAD_GL_EXT_texture_shared_exponent = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_shared_exponent");
    AGX_CUSTOM_GLAD_GL_EXT_texture_snorm = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_snorm");
    AGX_CUSTOM_GLAD_GL_EXT_texture_swizzle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_texture_swizzle");
    AGX_CUSTOM_GLAD_GL_EXT_timer_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_timer_query");
    AGX_CUSTOM_GLAD_GL_EXT_transform_feedback = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_transform_feedback");
    AGX_CUSTOM_GLAD_GL_EXT_vertex_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_vertex_array");
    AGX_CUSTOM_GLAD_GL_EXT_vertex_array_bgra = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_vertex_array_bgra");
    AGX_CUSTOM_GLAD_GL_EXT_vertex_attrib_64bit = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_vertex_attrib_64bit");
    AGX_CUSTOM_GLAD_GL_EXT_vertex_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_vertex_shader");
    AGX_CUSTOM_GLAD_GL_EXT_vertex_weighting = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_vertex_weighting");
    AGX_CUSTOM_GLAD_GL_EXT_win32_keyed_mutex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_win32_keyed_mutex");
    AGX_CUSTOM_GLAD_GL_EXT_window_rectangles = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_window_rectangles");
    AGX_CUSTOM_GLAD_GL_EXT_x11_sync_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_EXT_x11_sync_object");
    AGX_CUSTOM_GLAD_GL_GREMEDY_frame_terminator = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_GREMEDY_frame_terminator");
    AGX_CUSTOM_GLAD_GL_GREMEDY_string_marker = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_GREMEDY_string_marker");
    AGX_CUSTOM_GLAD_GL_HP_convolution_border_modes = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_HP_convolution_border_modes");
    AGX_CUSTOM_GLAD_GL_HP_image_transform = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_HP_image_transform");
    AGX_CUSTOM_GLAD_GL_HP_occlusion_test = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_HP_occlusion_test");
    AGX_CUSTOM_GLAD_GL_HP_texture_lighting = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_HP_texture_lighting");
    AGX_CUSTOM_GLAD_GL_IBM_cull_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_cull_vertex");
    AGX_CUSTOM_GLAD_GL_IBM_multimode_draw_arrays = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_multimode_draw_arrays");
    AGX_CUSTOM_GLAD_GL_IBM_rasterpos_clip = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_rasterpos_clip");
    AGX_CUSTOM_GLAD_GL_IBM_static_data = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_static_data");
    AGX_CUSTOM_GLAD_GL_IBM_texture_mirrored_repeat = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_texture_mirrored_repeat");
    AGX_CUSTOM_GLAD_GL_IBM_vertex_array_lists = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_IBM_vertex_array_lists");
    AGX_CUSTOM_GLAD_GL_INGR_blend_func_separate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INGR_blend_func_separate");
    AGX_CUSTOM_GLAD_GL_INGR_color_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INGR_color_clamp");
    AGX_CUSTOM_GLAD_GL_INGR_interlace_read = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INGR_interlace_read");
    AGX_CUSTOM_GLAD_GL_INTEL_blackhole_render = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_blackhole_render");
    AGX_CUSTOM_GLAD_GL_INTEL_conservative_rasterization = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_conservative_rasterization");
    AGX_CUSTOM_GLAD_GL_INTEL_fragment_shader_ordering = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_fragment_shader_ordering");
    AGX_CUSTOM_GLAD_GL_INTEL_framebuffer_CMAA = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_framebuffer_CMAA");
    AGX_CUSTOM_GLAD_GL_INTEL_map_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_map_texture");
    AGX_CUSTOM_GLAD_GL_INTEL_parallel_arrays = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_parallel_arrays");
    AGX_CUSTOM_GLAD_GL_INTEL_performance_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_INTEL_performance_query");
    AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_blend_equation_advanced");
    AGX_CUSTOM_GLAD_GL_KHR_blend_equation_advanced_coherent = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_blend_equation_advanced_coherent");
    AGX_CUSTOM_GLAD_GL_KHR_context_flush_control = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_context_flush_control");
    AGX_CUSTOM_GLAD_GL_KHR_debug = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_debug");
    AGX_CUSTOM_GLAD_GL_KHR_no_error = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_no_error");
    AGX_CUSTOM_GLAD_GL_KHR_parallel_shader_compile = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_parallel_shader_compile");
    AGX_CUSTOM_GLAD_GL_KHR_robust_buffer_access_behavior = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_robust_buffer_access_behavior");
    AGX_CUSTOM_GLAD_GL_KHR_robustness = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_robustness");
    AGX_CUSTOM_GLAD_GL_KHR_shader_subgroup = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_shader_subgroup");
    AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_hdr = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_texture_compression_astc_hdr");
    AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_ldr = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_texture_compression_astc_ldr");
    AGX_CUSTOM_GLAD_GL_KHR_texture_compression_astc_sliced_3d = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_KHR_texture_compression_astc_sliced_3d");
    AGX_CUSTOM_GLAD_GL_MESAX_texture_stack = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESAX_texture_stack");
    AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_x = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_framebuffer_flip_x");
    AGX_CUSTOM_GLAD_GL_MESA_framebuffer_flip_y = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_framebuffer_flip_y");
    AGX_CUSTOM_GLAD_GL_MESA_framebuffer_swap_xy = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_framebuffer_swap_xy");
    AGX_CUSTOM_GLAD_GL_MESA_pack_invert = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_pack_invert");
    AGX_CUSTOM_GLAD_GL_MESA_program_binary_formats = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_program_binary_formats");
    AGX_CUSTOM_GLAD_GL_MESA_resize_buffers = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_resize_buffers");
    AGX_CUSTOM_GLAD_GL_MESA_shader_integer_functions = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_shader_integer_functions");
    AGX_CUSTOM_GLAD_GL_MESA_tile_raster_order = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_tile_raster_order");
    AGX_CUSTOM_GLAD_GL_MESA_window_pos = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_window_pos");
    AGX_CUSTOM_GLAD_GL_MESA_ycbcr_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_MESA_ycbcr_texture");
    AGX_CUSTOM_GLAD_GL_NVX_blend_equation_advanced_multi_draw_buffers = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_blend_equation_advanced_multi_draw_buffers");
    AGX_CUSTOM_GLAD_GL_NVX_conditional_render = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_conditional_render");
    AGX_CUSTOM_GLAD_GL_NVX_gpu_memory_info = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_gpu_memory_info");
    AGX_CUSTOM_GLAD_GL_NVX_gpu_multicast2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_gpu_multicast2");
    AGX_CUSTOM_GLAD_GL_NVX_linked_gpu_multicast = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_linked_gpu_multicast");
    AGX_CUSTOM_GLAD_GL_NVX_progress_fence = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NVX_progress_fence");
    AGX_CUSTOM_GLAD_GL_NV_alpha_to_coverage_dither_control = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_alpha_to_coverage_dither_control");
    AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_bindless_multi_draw_indirect");
    AGX_CUSTOM_GLAD_GL_NV_bindless_multi_draw_indirect_count = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_bindless_multi_draw_indirect_count");
    AGX_CUSTOM_GLAD_GL_NV_bindless_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_bindless_texture");
    AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_blend_equation_advanced");
    AGX_CUSTOM_GLAD_GL_NV_blend_equation_advanced_coherent = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_blend_equation_advanced_coherent");
    AGX_CUSTOM_GLAD_GL_NV_blend_minmax_factor = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_blend_minmax_factor");
    AGX_CUSTOM_GLAD_GL_NV_blend_square = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_blend_square");
    AGX_CUSTOM_GLAD_GL_NV_clip_space_w_scaling = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_clip_space_w_scaling");
    AGX_CUSTOM_GLAD_GL_NV_command_list = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_command_list");
    AGX_CUSTOM_GLAD_GL_NV_compute_program5 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_compute_program5");
    AGX_CUSTOM_GLAD_GL_NV_compute_shader_derivatives = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_compute_shader_derivatives");
    AGX_CUSTOM_GLAD_GL_NV_conditional_render = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conditional_render");
    AGX_CUSTOM_GLAD_GL_NV_conservative_raster = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conservative_raster");
    AGX_CUSTOM_GLAD_GL_NV_conservative_raster_dilate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conservative_raster_dilate");
    AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conservative_raster_pre_snap");
    AGX_CUSTOM_GLAD_GL_NV_conservative_raster_pre_snap_triangles = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conservative_raster_pre_snap_triangles");
    AGX_CUSTOM_GLAD_GL_NV_conservative_raster_underestimation = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_conservative_raster_underestimation");
    AGX_CUSTOM_GLAD_GL_NV_copy_depth_to_color = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_copy_depth_to_color");
    AGX_CUSTOM_GLAD_GL_NV_copy_image = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_copy_image");
    AGX_CUSTOM_GLAD_GL_NV_deep_texture3D = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_deep_texture3D");
    AGX_CUSTOM_GLAD_GL_NV_depth_buffer_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_depth_buffer_float");
    AGX_CUSTOM_GLAD_GL_NV_depth_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_depth_clamp");
    AGX_CUSTOM_GLAD_GL_NV_draw_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_draw_texture");
    AGX_CUSTOM_GLAD_GL_NV_draw_vulkan_image = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_draw_vulkan_image");
    AGX_CUSTOM_GLAD_GL_NV_evaluators = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_evaluators");
    AGX_CUSTOM_GLAD_GL_NV_explicit_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_explicit_multisample");
    AGX_CUSTOM_GLAD_GL_NV_fence = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fence");
    AGX_CUSTOM_GLAD_GL_NV_fill_rectangle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fill_rectangle");
    AGX_CUSTOM_GLAD_GL_NV_float_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_float_buffer");
    AGX_CUSTOM_GLAD_GL_NV_fog_distance = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fog_distance");
    AGX_CUSTOM_GLAD_GL_NV_fragment_coverage_to_color = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_coverage_to_color");
    AGX_CUSTOM_GLAD_GL_NV_fragment_program = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_program");
    AGX_CUSTOM_GLAD_GL_NV_fragment_program2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_program2");
    AGX_CUSTOM_GLAD_GL_NV_fragment_program4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_program4");
    AGX_CUSTOM_GLAD_GL_NV_fragment_program_option = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_program_option");
    AGX_CUSTOM_GLAD_GL_NV_fragment_shader_barycentric = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_shader_barycentric");
    AGX_CUSTOM_GLAD_GL_NV_fragment_shader_interlock = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_fragment_shader_interlock");
    AGX_CUSTOM_GLAD_GL_NV_framebuffer_mixed_samples = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_framebuffer_mixed_samples");
    AGX_CUSTOM_GLAD_GL_NV_framebuffer_multisample_coverage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_framebuffer_multisample_coverage");
    AGX_CUSTOM_GLAD_GL_NV_geometry_program4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_geometry_program4");
    AGX_CUSTOM_GLAD_GL_NV_geometry_shader4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_geometry_shader4");
    AGX_CUSTOM_GLAD_GL_NV_geometry_shader_passthrough = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_geometry_shader_passthrough");
    AGX_CUSTOM_GLAD_GL_NV_gpu_multicast = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_gpu_multicast");
    AGX_CUSTOM_GLAD_GL_NV_gpu_program4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_gpu_program4");
    AGX_CUSTOM_GLAD_GL_NV_gpu_program5 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_gpu_program5");
    AGX_CUSTOM_GLAD_GL_NV_gpu_program5_mem_extended = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_gpu_program5_mem_extended");
    AGX_CUSTOM_GLAD_GL_NV_gpu_shader5 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_gpu_shader5");
    AGX_CUSTOM_GLAD_GL_NV_half_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_half_float");
    AGX_CUSTOM_GLAD_GL_NV_internalformat_sample_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_internalformat_sample_query");
    AGX_CUSTOM_GLAD_GL_NV_light_max_exponent = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_light_max_exponent");
    AGX_CUSTOM_GLAD_GL_NV_memory_attachment = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_memory_attachment");
    AGX_CUSTOM_GLAD_GL_NV_memory_object_sparse = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_memory_object_sparse");
    AGX_CUSTOM_GLAD_GL_NV_mesh_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_mesh_shader");
    AGX_CUSTOM_GLAD_GL_NV_multisample_coverage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_multisample_coverage");
    AGX_CUSTOM_GLAD_GL_NV_multisample_filter_hint = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_multisample_filter_hint");
    AGX_CUSTOM_GLAD_GL_NV_occlusion_query = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_occlusion_query");
    AGX_CUSTOM_GLAD_GL_NV_packed_depth_stencil = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_packed_depth_stencil");
    AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_parameter_buffer_object");
    AGX_CUSTOM_GLAD_GL_NV_parameter_buffer_object2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_parameter_buffer_object2");
    AGX_CUSTOM_GLAD_GL_NV_path_rendering = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_path_rendering");
    AGX_CUSTOM_GLAD_GL_NV_path_rendering_shared_edge = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_path_rendering_shared_edge");
    AGX_CUSTOM_GLAD_GL_NV_pixel_data_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_pixel_data_range");
    AGX_CUSTOM_GLAD_GL_NV_point_sprite = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_point_sprite");
    AGX_CUSTOM_GLAD_GL_NV_present_video = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_present_video");
    AGX_CUSTOM_GLAD_GL_NV_primitive_restart = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_primitive_restart");
    AGX_CUSTOM_GLAD_GL_NV_primitive_shading_rate = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_primitive_shading_rate");
    AGX_CUSTOM_GLAD_GL_NV_query_resource = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_query_resource");
    AGX_CUSTOM_GLAD_GL_NV_query_resource_tag = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_query_resource_tag");
    AGX_CUSTOM_GLAD_GL_NV_register_combiners = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_register_combiners");
    AGX_CUSTOM_GLAD_GL_NV_register_combiners2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_register_combiners2");
    AGX_CUSTOM_GLAD_GL_NV_representative_fragment_test = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_representative_fragment_test");
    AGX_CUSTOM_GLAD_GL_NV_robustness_video_memory_purge = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_robustness_video_memory_purge");
    AGX_CUSTOM_GLAD_GL_NV_sample_locations = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_sample_locations");
    AGX_CUSTOM_GLAD_GL_NV_sample_mask_override_coverage = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_sample_mask_override_coverage");
    AGX_CUSTOM_GLAD_GL_NV_scissor_exclusive = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_scissor_exclusive");
    AGX_CUSTOM_GLAD_GL_NV_shader_atomic_counters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_atomic_counters");
    AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_atomic_float");
    AGX_CUSTOM_GLAD_GL_NV_shader_atomic_float64 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_atomic_float64");
    AGX_CUSTOM_GLAD_GL_NV_shader_atomic_fp16_vector = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_atomic_fp16_vector");
    AGX_CUSTOM_GLAD_GL_NV_shader_atomic_int64 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_atomic_int64");
    AGX_CUSTOM_GLAD_GL_NV_shader_buffer_load = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_buffer_load");
    AGX_CUSTOM_GLAD_GL_NV_shader_buffer_store = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_buffer_store");
    AGX_CUSTOM_GLAD_GL_NV_shader_storage_buffer_object = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_storage_buffer_object");
    AGX_CUSTOM_GLAD_GL_NV_shader_subgroup_partitioned = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_subgroup_partitioned");
    AGX_CUSTOM_GLAD_GL_NV_shader_texture_footprint = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_texture_footprint");
    AGX_CUSTOM_GLAD_GL_NV_shader_thread_group = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_thread_group");
    AGX_CUSTOM_GLAD_GL_NV_shader_thread_shuffle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shader_thread_shuffle");
    AGX_CUSTOM_GLAD_GL_NV_shading_rate_image = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_shading_rate_image");
    AGX_CUSTOM_GLAD_GL_NV_stereo_view_rendering = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_stereo_view_rendering");
    AGX_CUSTOM_GLAD_GL_NV_tessellation_program5 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_tessellation_program5");
    AGX_CUSTOM_GLAD_GL_NV_texgen_emboss = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texgen_emboss");
    AGX_CUSTOM_GLAD_GL_NV_texgen_reflection = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texgen_reflection");
    AGX_CUSTOM_GLAD_GL_NV_texture_barrier = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_barrier");
    AGX_CUSTOM_GLAD_GL_NV_texture_compression_vtc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_compression_vtc");
    AGX_CUSTOM_GLAD_GL_NV_texture_env_combine4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_env_combine4");
    AGX_CUSTOM_GLAD_GL_NV_texture_expand_normal = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_expand_normal");
    AGX_CUSTOM_GLAD_GL_NV_texture_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_multisample");
    AGX_CUSTOM_GLAD_GL_NV_texture_rectangle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_rectangle");
    AGX_CUSTOM_GLAD_GL_NV_texture_rectangle_compressed = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_rectangle_compressed");
    AGX_CUSTOM_GLAD_GL_NV_texture_shader = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_shader");
    AGX_CUSTOM_GLAD_GL_NV_texture_shader2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_shader2");
    AGX_CUSTOM_GLAD_GL_NV_texture_shader3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_texture_shader3");
    AGX_CUSTOM_GLAD_GL_NV_timeline_semaphore = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_timeline_semaphore");
    AGX_CUSTOM_GLAD_GL_NV_transform_feedback = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_transform_feedback");
    AGX_CUSTOM_GLAD_GL_NV_transform_feedback2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_transform_feedback2");
    AGX_CUSTOM_GLAD_GL_NV_uniform_buffer_unified_memory = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_uniform_buffer_unified_memory");
    AGX_CUSTOM_GLAD_GL_NV_vdpau_interop = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vdpau_interop");
    AGX_CUSTOM_GLAD_GL_NV_vdpau_interop2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vdpau_interop2");
    AGX_CUSTOM_GLAD_GL_NV_vertex_array_range = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_array_range");
    AGX_CUSTOM_GLAD_GL_NV_vertex_array_range2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_array_range2");
    AGX_CUSTOM_GLAD_GL_NV_vertex_attrib_integer_64bit = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_attrib_integer_64bit");
    AGX_CUSTOM_GLAD_GL_NV_vertex_buffer_unified_memory = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_buffer_unified_memory");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program1_1 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program1_1");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program2");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program2_option = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program2_option");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program3 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program3");
    AGX_CUSTOM_GLAD_GL_NV_vertex_program4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_vertex_program4");
    AGX_CUSTOM_GLAD_GL_NV_video_capture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_video_capture");
    AGX_CUSTOM_GLAD_GL_NV_viewport_array2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_viewport_array2");
    AGX_CUSTOM_GLAD_GL_NV_viewport_swizzle = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_NV_viewport_swizzle");
    AGX_CUSTOM_GLAD_GL_OES_byte_coordinates = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_byte_coordinates");
    AGX_CUSTOM_GLAD_GL_OES_compressed_paletted_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_compressed_paletted_texture");
    AGX_CUSTOM_GLAD_GL_OES_fixed_point = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_fixed_point");
    AGX_CUSTOM_GLAD_GL_OES_query_matrix = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_query_matrix");
    AGX_CUSTOM_GLAD_GL_OES_read_format = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_read_format");
    AGX_CUSTOM_GLAD_GL_OES_single_precision = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OES_single_precision");
    AGX_CUSTOM_GLAD_GL_OML_interlace = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OML_interlace");
    AGX_CUSTOM_GLAD_GL_OML_resample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OML_resample");
    AGX_CUSTOM_GLAD_GL_OML_subsample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OML_subsample");
    AGX_CUSTOM_GLAD_GL_OVR_multiview = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OVR_multiview");
    AGX_CUSTOM_GLAD_GL_OVR_multiview2 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_OVR_multiview2");
    AGX_CUSTOM_GLAD_GL_PGI_misc_hints = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_PGI_misc_hints");
    AGX_CUSTOM_GLAD_GL_PGI_vertex_hints = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_PGI_vertex_hints");
    AGX_CUSTOM_GLAD_GL_REND_screen_coordinates = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_REND_screen_coordinates");
    AGX_CUSTOM_GLAD_GL_S3_s3tc = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_S3_s3tc");
    AGX_CUSTOM_GLAD_GL_SGIS_detail_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_detail_texture");
    AGX_CUSTOM_GLAD_GL_SGIS_fog_function = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_fog_function");
    AGX_CUSTOM_GLAD_GL_SGIS_generate_mipmap = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_generate_mipmap");
    AGX_CUSTOM_GLAD_GL_SGIS_multisample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_multisample");
    AGX_CUSTOM_GLAD_GL_SGIS_pixel_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_pixel_texture");
    AGX_CUSTOM_GLAD_GL_SGIS_point_line_texgen = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_point_line_texgen");
    AGX_CUSTOM_GLAD_GL_SGIS_point_parameters = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_point_parameters");
    AGX_CUSTOM_GLAD_GL_SGIS_sharpen_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_sharpen_texture");
    AGX_CUSTOM_GLAD_GL_SGIS_texture4D = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture4D");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_border_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_border_clamp");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_color_mask = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_color_mask");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_edge_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_edge_clamp");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_filter4 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_filter4");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_lod = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_lod");
    AGX_CUSTOM_GLAD_GL_SGIS_texture_select = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIS_texture_select");
    AGX_CUSTOM_GLAD_GL_SGIX_async = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_async");
    AGX_CUSTOM_GLAD_GL_SGIX_async_histogram = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_async_histogram");
    AGX_CUSTOM_GLAD_GL_SGIX_async_pixel = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_async_pixel");
    AGX_CUSTOM_GLAD_GL_SGIX_blend_alpha_minmax = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_blend_alpha_minmax");
    AGX_CUSTOM_GLAD_GL_SGIX_calligraphic_fragment = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_calligraphic_fragment");
    AGX_CUSTOM_GLAD_GL_SGIX_clipmap = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_clipmap");
    AGX_CUSTOM_GLAD_GL_SGIX_convolution_accuracy = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_convolution_accuracy");
    AGX_CUSTOM_GLAD_GL_SGIX_depth_pass_instrument = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_depth_pass_instrument");
    AGX_CUSTOM_GLAD_GL_SGIX_depth_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_depth_texture");
    AGX_CUSTOM_GLAD_GL_SGIX_flush_raster = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_flush_raster");
    AGX_CUSTOM_GLAD_GL_SGIX_fog_offset = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_fog_offset");
    AGX_CUSTOM_GLAD_GL_SGIX_fragment_lighting = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_fragment_lighting");
    AGX_CUSTOM_GLAD_GL_SGIX_framezoom = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_framezoom");
    AGX_CUSTOM_GLAD_GL_SGIX_igloo_interface = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_igloo_interface");
    AGX_CUSTOM_GLAD_GL_SGIX_instruments = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_instruments");
    AGX_CUSTOM_GLAD_GL_SGIX_interlace = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_interlace");
    AGX_CUSTOM_GLAD_GL_SGIX_ir_instrument1 = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_ir_instrument1");
    AGX_CUSTOM_GLAD_GL_SGIX_list_priority = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_list_priority");
    AGX_CUSTOM_GLAD_GL_SGIX_pixel_texture = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_pixel_texture");
    AGX_CUSTOM_GLAD_GL_SGIX_pixel_tiles = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_pixel_tiles");
    AGX_CUSTOM_GLAD_GL_SGIX_polynomial_ffd = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_polynomial_ffd");
    AGX_CUSTOM_GLAD_GL_SGIX_reference_plane = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_reference_plane");
    AGX_CUSTOM_GLAD_GL_SGIX_resample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_resample");
    AGX_CUSTOM_GLAD_GL_SGIX_scalebias_hint = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_scalebias_hint");
    AGX_CUSTOM_GLAD_GL_SGIX_shadow = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_shadow");
    AGX_CUSTOM_GLAD_GL_SGIX_shadow_ambient = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_shadow_ambient");
    AGX_CUSTOM_GLAD_GL_SGIX_sprite = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_sprite");
    AGX_CUSTOM_GLAD_GL_SGIX_subsample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_subsample");
    AGX_CUSTOM_GLAD_GL_SGIX_tag_sample_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_tag_sample_buffer");
    AGX_CUSTOM_GLAD_GL_SGIX_texture_add_env = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_texture_add_env");
    AGX_CUSTOM_GLAD_GL_SGIX_texture_coordinate_clamp = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_texture_coordinate_clamp");
    AGX_CUSTOM_GLAD_GL_SGIX_texture_lod_bias = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_texture_lod_bias");
    AGX_CUSTOM_GLAD_GL_SGIX_texture_multi_buffer = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_texture_multi_buffer");
    AGX_CUSTOM_GLAD_GL_SGIX_texture_scale_bias = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_texture_scale_bias");
    AGX_CUSTOM_GLAD_GL_SGIX_vertex_preclip = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_vertex_preclip");
    AGX_CUSTOM_GLAD_GL_SGIX_ycrcb = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_ycrcb");
    AGX_CUSTOM_GLAD_GL_SGIX_ycrcb_subsample = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_ycrcb_subsample");
    AGX_CUSTOM_GLAD_GL_SGIX_ycrcba = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGIX_ycrcba");
    AGX_CUSTOM_GLAD_GL_SGI_color_matrix = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGI_color_matrix");
    AGX_CUSTOM_GLAD_GL_SGI_color_table = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGI_color_table");
    AGX_CUSTOM_GLAD_GL_SGI_texture_color_table = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SGI_texture_color_table");
    AGX_CUSTOM_GLAD_GL_SUNX_constant_data = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUNX_constant_data");
    AGX_CUSTOM_GLAD_GL_SUN_convolution_border_modes = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_convolution_border_modes");
    AGX_CUSTOM_GLAD_GL_SUN_global_alpha = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_global_alpha");
    AGX_CUSTOM_GLAD_GL_SUN_mesh_array = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_mesh_array");
    AGX_CUSTOM_GLAD_GL_SUN_slice_accum = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_slice_accum");
    AGX_CUSTOM_GLAD_GL_SUN_triangle_list = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_triangle_list");
    AGX_CUSTOM_GLAD_GL_SUN_vertex = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_SUN_vertex");
    AGX_CUSTOM_GLAD_GL_WIN_phong_shading = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_WIN_phong_shading");
    AGX_CUSTOM_GLAD_GL_WIN_specular_fog = agx_custom_glad_gl_has_extension(version, exts, num_exts_i, exts_i, "GL_WIN_specular_fog");

    agx_custom_glad_gl_free_extensions(exts_i, num_exts_i);

    return 1;
}

static int agx_custom_glad_gl_find_core_gl(void) {
    int i, major, minor;
    const char* version;
    const char* prefixes[] = {
        "OpenGL ES-CM ",
        "OpenGL ES-CL ",
        "OpenGL ES ",
        NULL
    };
    version = (const char*) agx_custom_glad_glGetString(GL_VERSION);
    if (!version) return 0;
    for (i = 0;  prefixes[i];  i++) {
        const size_t length = strlen(prefixes[i]);
        if (strncmp(version, prefixes[i], length) == 0) {
            version += length;
            break;
        }
    }

    AGX_CUSTOM_GLAD_IMPL_UTIL_SSCANF(version, "%d.%d", &major, &minor);

    AGX_CUSTOM_GLAD_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;
    AGX_CUSTOM_GLAD_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
    AGX_CUSTOM_GLAD_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;
    AGX_CUSTOM_GLAD_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
    AGX_CUSTOM_GLAD_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
    AGX_CUSTOM_GLAD_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
    AGX_CUSTOM_GLAD_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;
    AGX_CUSTOM_GLAD_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_4 = (major == 4 && minor >= 4) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_5 = (major == 4 && minor >= 5) || major > 4;
    AGX_CUSTOM_GLAD_GL_VERSION_4_6 = (major == 4 && minor >= 6) || major > 4;

    return AGX_CUSTOM_GLAD_MAKE_VERSION(major, minor);
}

int agx_customGladLoadGLUserPtr( AGX_CUSTOMGLADuserptrloadfunc load, void *userptr) {
    int version;

    agx_custom_glad_glGetString = (PFNGLGETSTRINGPROC) load(userptr, "glGetString");
    if(agx_custom_glad_glGetString == NULL) return 0;
    if(agx_custom_glad_glGetString(GL_VERSION) == NULL) return 0;
    version = agx_custom_glad_gl_find_core_gl();

    agx_custom_glad_gl_load_GL_VERSION_1_0(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_1_1(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_1_2(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_1_3(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_1_4(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_1_5(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_2_0(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_2_1(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_3_0(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_3_1(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_3_2(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_3_3(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_0(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_1(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_2(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_3(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_4(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_5(load, userptr);
    agx_custom_glad_gl_load_GL_VERSION_4_6(load, userptr);

    if (!agx_custom_glad_gl_find_extensions_gl(version)) return 0;
    agx_custom_glad_gl_load_GL_3DFX_tbuffer(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_debug_output(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_draw_buffers_blend(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_framebuffer_multisample_advanced(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_framebuffer_sample_positions(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_gpu_shader_int64(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_interleaved_elements(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_multi_draw_indirect(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_name_gen_delete(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_occlusion_query_event(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_performance_monitor(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_sample_positions(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_sparse_texture(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_stencil_operation_extended(load, userptr);
    agx_custom_glad_gl_load_GL_AMD_vertex_shader_tessellator(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_element_array(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_fence(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_flush_buffer_range(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_object_purgeable(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_texture_range(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_vertex_array_object(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_vertex_array_range(load, userptr);
    agx_custom_glad_gl_load_GL_APPLE_vertex_program_evaluators(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_ES2_compatibility(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_ES3_1_compatibility(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_ES3_2_compatibility(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_base_instance(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_bindless_texture(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_blend_func_extended(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_buffer_storage(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_cl_event(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_clear_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_clear_texture(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_clip_control(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_color_buffer_float(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_compute_shader(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_compute_variable_group_size(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_copy_buffer(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_copy_image(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_debug_output(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_direct_state_access(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_draw_buffers(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_draw_buffers_blend(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_draw_elements_base_vertex(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_draw_indirect(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_draw_instanced(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_fragment_program(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_framebuffer_no_attachments(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_framebuffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_geometry_shader4(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_get_program_binary(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_get_texture_sub_image(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_gl_spirv(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_gpu_shader_fp64(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_gpu_shader_int64(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_imaging(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_indirect_parameters(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_instanced_arrays(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_internalformat_query(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_internalformat_query2(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_invalidate_subdata(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_map_buffer_range(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_matrix_palette(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_multi_bind(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_multi_draw_indirect(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_multitexture(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_occlusion_query(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_parallel_shader_compile(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_point_parameters(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_polygon_offset_clamp(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_program_interface_query(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_provoking_vertex(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_robustness(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sample_locations(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sample_shading(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sampler_objects(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_separate_shader_objects(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shader_atomic_counters(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shader_image_load_store(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shader_objects(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shader_storage_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shader_subroutine(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_shading_language_include(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sparse_buffer(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sparse_texture(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_sync(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_tessellation_shader(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_barrier(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_buffer_range(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_compression(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_storage(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_storage_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_texture_view(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_timer_query(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_transform_feedback2(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_transform_feedback3(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_transform_feedback_instanced(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_transpose_matrix(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_uniform_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_array_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_attrib_64bit(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_attrib_binding(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_blend(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_program(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_shader(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_vertex_type_2_10_10_10_rev(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_viewport_array(load, userptr);
    agx_custom_glad_gl_load_GL_ARB_window_pos(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_draw_buffers(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_element_array(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_envmap_bumpmap(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_fragment_shader(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_map_object_buffer(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_pn_triangles(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_separate_stencil(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_vertex_array_object(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_vertex_attrib_array_object(load, userptr);
    agx_custom_glad_gl_load_GL_ATI_vertex_streams(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_EGL_image_storage(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_bindable_uniform(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_blend_color(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_blend_equation_separate(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_blend_func_separate(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_blend_minmax(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_color_subtable(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_compiled_vertex_array(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_convolution(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_coordinate_frame(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_copy_texture(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_cull_vertex(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_debug_label(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_debug_marker(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_depth_bounds_test(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_direct_state_access(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_draw_buffers2(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_draw_instanced(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_draw_range_elements(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_external_buffer(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_fog_coord(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_framebuffer_blit(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_framebuffer_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_framebuffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_geometry_shader4(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_gpu_program_parameters(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_gpu_shader4(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_histogram(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_index_func(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_index_material(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_light_texture(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_memory_object(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_memory_object_fd(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_memory_object_win32(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_multi_draw_arrays(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_paletted_texture(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_pixel_transform(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_point_parameters(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_polygon_offset(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_polygon_offset_clamp(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_provoking_vertex(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_raster_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_secondary_color(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_semaphore(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_semaphore_fd(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_semaphore_win32(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_separate_shader_objects(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_shader_framebuffer_fetch_non_coherent(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_shader_image_load_store(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_stencil_clear_tag(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_stencil_two_side(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_subtexture(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture3D(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture_array(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture_integer(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture_object(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_texture_perturb_normal(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_timer_query(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_transform_feedback(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_vertex_array(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_vertex_attrib_64bit(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_vertex_shader(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_vertex_weighting(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_win32_keyed_mutex(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_window_rectangles(load, userptr);
    agx_custom_glad_gl_load_GL_EXT_x11_sync_object(load, userptr);
    agx_custom_glad_gl_load_GL_GREMEDY_frame_terminator(load, userptr);
    agx_custom_glad_gl_load_GL_GREMEDY_string_marker(load, userptr);
    agx_custom_glad_gl_load_GL_HP_image_transform(load, userptr);
    agx_custom_glad_gl_load_GL_IBM_multimode_draw_arrays(load, userptr);
    agx_custom_glad_gl_load_GL_IBM_static_data(load, userptr);
    agx_custom_glad_gl_load_GL_IBM_vertex_array_lists(load, userptr);
    agx_custom_glad_gl_load_GL_INGR_blend_func_separate(load, userptr);
    agx_custom_glad_gl_load_GL_INTEL_framebuffer_CMAA(load, userptr);
    agx_custom_glad_gl_load_GL_INTEL_map_texture(load, userptr);
    agx_custom_glad_gl_load_GL_INTEL_parallel_arrays(load, userptr);
    agx_custom_glad_gl_load_GL_INTEL_performance_query(load, userptr);
    agx_custom_glad_gl_load_GL_KHR_blend_equation_advanced(load, userptr);
    agx_custom_glad_gl_load_GL_KHR_debug(load, userptr);
    agx_custom_glad_gl_load_GL_KHR_parallel_shader_compile(load, userptr);
    agx_custom_glad_gl_load_GL_KHR_robustness(load, userptr);
    agx_custom_glad_gl_load_GL_MESA_framebuffer_flip_y(load, userptr);
    agx_custom_glad_gl_load_GL_MESA_resize_buffers(load, userptr);
    agx_custom_glad_gl_load_GL_MESA_window_pos(load, userptr);
    agx_custom_glad_gl_load_GL_NVX_conditional_render(load, userptr);
    agx_custom_glad_gl_load_GL_NVX_gpu_multicast2(load, userptr);
    agx_custom_glad_gl_load_GL_NVX_linked_gpu_multicast(load, userptr);
    agx_custom_glad_gl_load_GL_NVX_progress_fence(load, userptr);
    agx_custom_glad_gl_load_GL_NV_alpha_to_coverage_dither_control(load, userptr);
    agx_custom_glad_gl_load_GL_NV_bindless_multi_draw_indirect(load, userptr);
    agx_custom_glad_gl_load_GL_NV_bindless_multi_draw_indirect_count(load, userptr);
    agx_custom_glad_gl_load_GL_NV_bindless_texture(load, userptr);
    agx_custom_glad_gl_load_GL_NV_blend_equation_advanced(load, userptr);
    agx_custom_glad_gl_load_GL_NV_clip_space_w_scaling(load, userptr);
    agx_custom_glad_gl_load_GL_NV_command_list(load, userptr);
    agx_custom_glad_gl_load_GL_NV_conditional_render(load, userptr);
    agx_custom_glad_gl_load_GL_NV_conservative_raster(load, userptr);
    agx_custom_glad_gl_load_GL_NV_conservative_raster_dilate(load, userptr);
    agx_custom_glad_gl_load_GL_NV_conservative_raster_pre_snap_triangles(load, userptr);
    agx_custom_glad_gl_load_GL_NV_copy_image(load, userptr);
    agx_custom_glad_gl_load_GL_NV_depth_buffer_float(load, userptr);
    agx_custom_glad_gl_load_GL_NV_draw_texture(load, userptr);
    agx_custom_glad_gl_load_GL_NV_draw_vulkan_image(load, userptr);
    agx_custom_glad_gl_load_GL_NV_evaluators(load, userptr);
    agx_custom_glad_gl_load_GL_NV_explicit_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_NV_fence(load, userptr);
    agx_custom_glad_gl_load_GL_NV_fragment_coverage_to_color(load, userptr);
    agx_custom_glad_gl_load_GL_NV_fragment_program(load, userptr);
    agx_custom_glad_gl_load_GL_NV_framebuffer_mixed_samples(load, userptr);
    agx_custom_glad_gl_load_GL_NV_framebuffer_multisample_coverage(load, userptr);
    agx_custom_glad_gl_load_GL_NV_geometry_program4(load, userptr);
    agx_custom_glad_gl_load_GL_NV_gpu_multicast(load, userptr);
    agx_custom_glad_gl_load_GL_NV_gpu_program4(load, userptr);
    agx_custom_glad_gl_load_GL_NV_gpu_program5(load, userptr);
    agx_custom_glad_gl_load_GL_NV_gpu_shader5(load, userptr);
    agx_custom_glad_gl_load_GL_NV_half_float(load, userptr);
    agx_custom_glad_gl_load_GL_NV_internalformat_sample_query(load, userptr);
    agx_custom_glad_gl_load_GL_NV_memory_attachment(load, userptr);
    agx_custom_glad_gl_load_GL_NV_memory_object_sparse(load, userptr);
    agx_custom_glad_gl_load_GL_NV_mesh_shader(load, userptr);
    agx_custom_glad_gl_load_GL_NV_occlusion_query(load, userptr);
    agx_custom_glad_gl_load_GL_NV_parameter_buffer_object(load, userptr);
    agx_custom_glad_gl_load_GL_NV_path_rendering(load, userptr);
    agx_custom_glad_gl_load_GL_NV_pixel_data_range(load, userptr);
    agx_custom_glad_gl_load_GL_NV_point_sprite(load, userptr);
    agx_custom_glad_gl_load_GL_NV_present_video(load, userptr);
    agx_custom_glad_gl_load_GL_NV_primitive_restart(load, userptr);
    agx_custom_glad_gl_load_GL_NV_query_resource(load, userptr);
    agx_custom_glad_gl_load_GL_NV_query_resource_tag(load, userptr);
    agx_custom_glad_gl_load_GL_NV_register_combiners(load, userptr);
    agx_custom_glad_gl_load_GL_NV_register_combiners2(load, userptr);
    agx_custom_glad_gl_load_GL_NV_sample_locations(load, userptr);
    agx_custom_glad_gl_load_GL_NV_scissor_exclusive(load, userptr);
    agx_custom_glad_gl_load_GL_NV_shader_buffer_load(load, userptr);
    agx_custom_glad_gl_load_GL_NV_shading_rate_image(load, userptr);
    agx_custom_glad_gl_load_GL_NV_texture_barrier(load, userptr);
    agx_custom_glad_gl_load_GL_NV_texture_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_NV_timeline_semaphore(load, userptr);
    agx_custom_glad_gl_load_GL_NV_transform_feedback(load, userptr);
    agx_custom_glad_gl_load_GL_NV_transform_feedback2(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vdpau_interop(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vdpau_interop2(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vertex_array_range(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vertex_attrib_integer_64bit(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vertex_buffer_unified_memory(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vertex_program(load, userptr);
    agx_custom_glad_gl_load_GL_NV_vertex_program4(load, userptr);
    agx_custom_glad_gl_load_GL_NV_video_capture(load, userptr);
    agx_custom_glad_gl_load_GL_NV_viewport_swizzle(load, userptr);
    agx_custom_glad_gl_load_GL_OES_byte_coordinates(load, userptr);
    agx_custom_glad_gl_load_GL_OES_fixed_point(load, userptr);
    agx_custom_glad_gl_load_GL_OES_query_matrix(load, userptr);
    agx_custom_glad_gl_load_GL_OES_single_precision(load, userptr);
    agx_custom_glad_gl_load_GL_OVR_multiview(load, userptr);
    agx_custom_glad_gl_load_GL_PGI_misc_hints(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_detail_texture(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_fog_function(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_multisample(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_pixel_texture(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_point_parameters(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_sharpen_texture(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_texture4D(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_texture_color_mask(load, userptr);
    agx_custom_glad_gl_load_GL_SGIS_texture_filter4(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_async(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_flush_raster(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_fragment_lighting(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_framezoom(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_igloo_interface(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_instruments(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_list_priority(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_pixel_texture(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_polynomial_ffd(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_reference_plane(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_sprite(load, userptr);
    agx_custom_glad_gl_load_GL_SGIX_tag_sample_buffer(load, userptr);
    agx_custom_glad_gl_load_GL_SGI_color_table(load, userptr);
    agx_custom_glad_gl_load_GL_SUNX_constant_data(load, userptr);
    agx_custom_glad_gl_load_GL_SUN_global_alpha(load, userptr);
    agx_custom_glad_gl_load_GL_SUN_mesh_array(load, userptr);
    agx_custom_glad_gl_load_GL_SUN_triangle_list(load, userptr);
    agx_custom_glad_gl_load_GL_SUN_vertex(load, userptr);



    return version;
}


int agx_customGladLoadGL( AGX_CUSTOMGLADloadfunc load) {
    return agx_customGladLoadGLUserPtr( agx_custom_glad_gl_get_proc_from_userptr, AGX_CUSTOM_GLAD_GNUC_EXTENSION (void*) load);
}






#ifdef __cplusplus
}
#endif

#endif /* AGX_CUSTOM_GLAD_GL_IMPLEMENTATION */

